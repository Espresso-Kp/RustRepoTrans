<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType" kind="class" language="Java" prot="package">
    <compoundname>org::apache::iceberg::spark::SparkTypeToType</compoundname>
    <basecompoundref prot="public" virt="non-virtual">org::apache::iceberg::spark::SparkTypeVisitor&lt; Type &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a1227ecfa1241d3b8eff3bcdcf2bbf0ff" prot="private" static="no" mutable="no">
        <type>final StructType</type>
        <definition>final StructType org.apache.iceberg.spark.SparkTypeToType::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="46" column="28" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a65cd4179b01e9ef7e3d88f9ffd10a74a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.iceberg.spark.SparkTypeToType::nextId</definition>
        <argsstring></argsstring>
        <name>nextId</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="47" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a4f79c666ab792dba4df09fc652054b24" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkTypeToType.SparkTypeToType</definition>
        <argsstring>()</argsstring>
        <name>SparkTypeToType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="49" column="3" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1ace765f88774c438d9d07e04d28a750d6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkTypeToType.SparkTypeToType</definition>
        <argsstring>(StructType root)</argsstring>
        <name>SparkTypeToType</name>
        <param>
          <type>StructType</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="53" column="3" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a4f79c666ab792dba4df09fc652054b24" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkTypeToType.SparkTypeToType</definition>
        <argsstring>()</argsstring>
        <name>SparkTypeToType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="50" column="3" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1ace765f88774c438d9d07e04d28a750d6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkTypeToType.SparkTypeToType</definition>
        <argsstring>(StructType root)</argsstring>
        <name>SparkTypeToType</name>
        <param>
          <type>StructType</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="54" column="3" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a4f79c666ab792dba4df09fc652054b24" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkTypeToType.SparkTypeToType</definition>
        <argsstring>()</argsstring>
        <name>SparkTypeToType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="50" column="3" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1ace765f88774c438d9d07e04d28a750d6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkTypeToType.SparkTypeToType</definition>
        <argsstring>(StructType root)</argsstring>
        <name>SparkTypeToType</name>
        <param>
          <type>StructType</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="54" column="3" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1aca9d82852ee1426a761fbb07e808d103" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.iceberg.spark.SparkTypeToType.getNextId</definition>
        <argsstring>()</argsstring>
        <name>getNextId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="59" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1aca9d82852ee1426a761fbb07e808d103" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.iceberg.spark.SparkTypeToType.getNextId</definition>
        <argsstring>()</argsstring>
        <name>getNextId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="60" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1aca9d82852ee1426a761fbb07e808d103" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.iceberg.spark.SparkTypeToType.getNextId</definition>
        <argsstring>()</argsstring>
        <name>getNextId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="60" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="60" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a74fcfa0eb99697779e81a3eb313281cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.struct</definition>
        <argsstring>(StructType struct, List&lt; Type &gt; types)</argsstring>
        <name>struct</name>
        <param>
          <type>StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="67" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="67" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a14f7e71f261e59407d2821bd20f31e69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.field</definition>
        <argsstring>(StructField field, Type typeResult)</argsstring>
        <name>field</name>
        <param>
          <type>StructField</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>typeResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="96" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a5e2f6ff7a88f6455eecdd36fc4dc0e20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.array</definition>
        <argsstring>(ArrayType array, Type elementType)</argsstring>
        <name>array</name>
        <param>
          <type>ArrayType</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>elementType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="101" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="101" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a3ca193853ab9fd0124ea895e38263784" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.map</definition>
        <argsstring>(MapType map, Type keyType, Type valueType)</argsstring>
        <name>map</name>
        <param>
          <type>MapType</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>keyType</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>valueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="110" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a06d7b846b568d70a5db9c3a2590833bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.atomic</definition>
        <argsstring>(DataType atomic)</argsstring>
        <name>atomic</name>
        <param>
          <type>DataType</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="120" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="120" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a74fcfa0eb99697779e81a3eb313281cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.struct</definition>
        <argsstring>(StructType struct, List&lt; Type &gt; types)</argsstring>
        <name>struct</name>
        <param>
          <type>StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="68" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="68" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a14f7e71f261e59407d2821bd20f31e69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.field</definition>
        <argsstring>(StructField field, Type typeResult)</argsstring>
        <name>field</name>
        <param>
          <type>StructField</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>typeResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="97" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a5e2f6ff7a88f6455eecdd36fc4dc0e20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.array</definition>
        <argsstring>(ArrayType array, Type elementType)</argsstring>
        <name>array</name>
        <param>
          <type>ArrayType</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>elementType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="102" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a3ca193853ab9fd0124ea895e38263784" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.map</definition>
        <argsstring>(MapType map, Type keyType, Type valueType)</argsstring>
        <name>map</name>
        <param>
          <type>MapType</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>keyType</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>valueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="111" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a06d7b846b568d70a5db9c3a2590833bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.atomic</definition>
        <argsstring>(DataType atomic)</argsstring>
        <name>atomic</name>
        <param>
          <type>DataType</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="121" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="121" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a74fcfa0eb99697779e81a3eb313281cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.struct</definition>
        <argsstring>(StructType struct, List&lt; Type &gt; types)</argsstring>
        <name>struct</name>
        <param>
          <type>StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="68" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="68" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a14f7e71f261e59407d2821bd20f31e69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.field</definition>
        <argsstring>(StructField field, Type typeResult)</argsstring>
        <name>field</name>
        <param>
          <type>StructField</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>typeResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="97" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a5e2f6ff7a88f6455eecdd36fc4dc0e20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.array</definition>
        <argsstring>(ArrayType array, Type elementType)</argsstring>
        <name>array</name>
        <param>
          <type>ArrayType</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>elementType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="102" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a3ca193853ab9fd0124ea895e38263784" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.map</definition>
        <argsstring>(MapType map, Type keyType, Type valueType)</argsstring>
        <name>map</name>
        <param>
          <type>MapType</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>keyType</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>valueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="111" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a06d7b846b568d70a5db9c3a2590833bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.spark.SparkTypeToType.atomic</definition>
        <argsstring>(DataType atomic)</argsstring>
        <name>atomic</name>
        <param>
          <type>DataType</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="121" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="121" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.spark.SparkTypeToType</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org::apache::iceberg::spark::SparkTypeVisitor&lt; Type &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>StructType</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.SparkTypeToType</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>org::apache::iceberg::spark::SparkTypeVisitor&lt; Type &gt;</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" line="45" column="40" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/SparkTypeToType.java" bodystart="45" bodyend="158"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a5e2f6ff7a88f6455eecdd36fc4dc0e20" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>array</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a5e2f6ff7a88f6455eecdd36fc4dc0e20" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>array</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a5e2f6ff7a88f6455eecdd36fc4dc0e20" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>array</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a06d7b846b568d70a5db9c3a2590833bd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>atomic</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a06d7b846b568d70a5db9c3a2590833bd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>atomic</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a06d7b846b568d70a5db9c3a2590833bd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>atomic</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a14f7e71f261e59407d2821bd20f31e69" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>field</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a14f7e71f261e59407d2821bd20f31e69" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>field</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a14f7e71f261e59407d2821bd20f31e69" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>field</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1aca9d82852ee1426a761fbb07e808d103" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>getNextId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1aca9d82852ee1426a761fbb07e808d103" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>getNextId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1aca9d82852ee1426a761fbb07e808d103" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>getNextId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a3ca193853ab9fd0124ea895e38263784" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>map</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a3ca193853ab9fd0124ea895e38263784" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>map</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a3ca193853ab9fd0124ea895e38263784" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>map</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a65cd4179b01e9ef7e3d88f9ffd10a74a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>nextId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a1227ecfa1241d3b8eff3bcdcf2bbf0ff" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>root</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a4f79c666ab792dba4df09fc652054b24" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>SparkTypeToType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1ace765f88774c438d9d07e04d28a750d6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>SparkTypeToType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a4f79c666ab792dba4df09fc652054b24" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>SparkTypeToType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1ace765f88774c438d9d07e04d28a750d6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>SparkTypeToType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a4f79c666ab792dba4df09fc652054b24" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>SparkTypeToType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1ace765f88774c438d9d07e04d28a750d6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>SparkTypeToType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a74fcfa0eb99697779e81a3eb313281cc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>struct</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a74fcfa0eb99697779e81a3eb313281cc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>struct</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTypeToType_1a74fcfa0eb99697779e81a3eb313281cc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkTypeToType</scope><name>struct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
