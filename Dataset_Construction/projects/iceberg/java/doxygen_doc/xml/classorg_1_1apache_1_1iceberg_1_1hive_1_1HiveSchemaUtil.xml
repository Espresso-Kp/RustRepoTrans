<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::hive::HiveSchemaUtil</compoundname>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a39e7f16e7ab31da7a6734bee8fb2d25b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.hive.HiveSchemaUtil.HiveSchemaUtil</definition>
        <argsstring>()</argsstring>
        <name>HiveSchemaUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="34" column="11" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a9ab76201568ea261557ef0aab4199ebb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; FieldSchema &gt;</type>
        <definition>static List&lt;FieldSchema&gt; org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the Iceberg schema to a Hive schema (list of FieldSchema objects).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The original Iceberg schema to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Hive column list generated from the Iceberg schema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="42" column="22" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a218cc89d4b373e7a36f67e68825ff53d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(List&lt; FieldSchema &gt; fieldSchemas)</argsstring>
        <name>convert</name>
        <param>
          <type>List&lt; FieldSchema &gt;</type>
          <declname>fieldSchemas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a Hive schema (list of FieldSchema objects) to an Iceberg schema. If some of the types are not convertible then exception is thrown.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldSchemas</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the columns </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An equivalent Iceberg <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="55" column="24" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a365bb2dc498b6d6de60aab7d5fc35a0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(List&lt; FieldSchema &gt; fieldSchemas, boolean autoConvert)</argsstring>
        <name>convert</name>
        <param>
          <type>List&lt; FieldSchema &gt;</type>
          <declname>fieldSchemas</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>autoConvert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a Hive schema (list of FieldSchema objects) to an Iceberg schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldSchemas</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the columns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>autoConvert</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> then TINYINT and SMALLINT is converted to INTEGER and VARCHAR and CHAR is converted to STRING. Otherwise if these types are used in the Hive schema then exception is thrown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An equivalent Iceberg <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="68" column="24" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1ace65e8581951c7e91295a92db67679d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
        <definition>static PartitionSpec org.apache.iceberg.hive.HiveSchemaUtil.spec</definition>
        <argsstring>(Schema schema, List&lt; FieldSchema &gt; fieldSchemas)</argsstring>
        <name>spec</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>List&lt; FieldSchema &gt;</type>
          <declname>fieldSchemas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the Hive partition columns to Iceberg identity partition specification.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The Iceberg schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldSchemas</parametername>
</parameternamelist>
<parameterdescription>
<para>The partition column specification </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Iceberg partition specification </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="88" column="31" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a70951748e792cff05db0b8f535d0ea7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(List&lt; String &gt; names, List&lt; TypeInfo &gt; types, List&lt; String &gt; comments)</argsstring>
        <name>convert</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>names</declname>
        </param>
        <param>
          <type>List&lt; TypeInfo &gt;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the Hive list of column names and column types to an Iceberg schema. If some of the types are not convertible then exception is thrown.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the Hive column names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>types</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the Hive column types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the Hive column comments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Iceberg schema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="103" column="24" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1adbc5faf859a0a01d3ddf4ca057d6fd63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(List&lt; String &gt; names, List&lt; TypeInfo &gt; types, List&lt; String &gt; comments, boolean autoConvert)</argsstring>
        <name>convert</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>names</declname>
        </param>
        <param>
          <type>List&lt; TypeInfo &gt;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>comments</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>autoConvert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts the Hive list of column names and column types to an Iceberg schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the Hive column names </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>types</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the Hive column types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the Hive column comments, can be null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>autoConvert</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> then TINYINT and SMALLINT is converted to INTEGER and VARCHAR and CHAR is converted to STRING. Otherwise if these types are used in the Hive schema then exception is thrown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Iceberg schema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="118" column="24" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a62387254d8532c5ba996efd85cbc6c4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TypeInfo</type>
        <definition>static TypeInfo org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(Type type)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts an Iceberg type to a Hive TypeInfo object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The Iceberg type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Hive type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="129" column="26" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a5a1ad1ad1b83729286e5ee3bb18d2f8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.hive.HiveSchemaUtil.convert</definition>
        <argsstring>(TypeInfo typeInfo)</argsstring>
        <name>convert</name>
        <param>
          <type>TypeInfo</type>
          <declname>typeInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a Hive typeInfo object to an Iceberg type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The Hive type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Iceberg type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="139" column="22" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="139" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1ae2167240114100b4c4747b73a62740cd" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String org.apache.iceberg.hive.HiveSchemaUtil.convertToTypeString</definition>
        <argsstring>(Type type)</argsstring>
        <name>convertToTypeString</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="143" column="25" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="143" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" line="32" column="34" bodyfile="hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaUtil.java" bodystart="32" bodyend="191"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a9ab76201568ea261557ef0aab4199ebb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a218cc89d4b373e7a36f67e68825ff53d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a365bb2dc498b6d6de60aab7d5fc35a0f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a70951748e792cff05db0b8f535d0ea7a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1adbc5faf859a0a01d3ddf4ca057d6fd63" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a62387254d8532c5ba996efd85cbc6c4c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a5a1ad1ad1b83729286e5ee3bb18d2f8c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1ae2167240114100b4c4747b73a62740cd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>convertToTypeString</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1a39e7f16e7ab31da7a6734bee8fb2d25b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>HiveSchemaUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveSchemaUtil_1ace65e8581951c7e91295a92db67679d3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hive::HiveSchemaUtil</scope><name>spec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
