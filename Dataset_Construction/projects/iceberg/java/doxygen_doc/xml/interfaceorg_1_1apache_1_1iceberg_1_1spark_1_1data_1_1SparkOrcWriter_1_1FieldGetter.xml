<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kind="interface" language="Java" prot="package">
    <compoundname>org::apache::iceberg::spark::data::SparkOrcWriter::FieldGetter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter_1ab5376791b5b6b270f5c9e18dca9f3fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T org.apache.iceberg.spark.data.SparkOrcWriter.FieldGetter&lt; T &gt;.getFieldOrNull</definition>
        <argsstring>(SpecializedGetters row, int ordinal)</argsstring>
        <name>getFieldOrNull</name>
        <param>
          <type>SpecializedGetters</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ordinal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value from a complex Spark data holder such ArrayData, InternalRow, etc... Calls the appropriate getter for the expected data type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Spark&apos;s data representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ordinal</parametername>
</parameternamelist>
<parameterdescription>
<para>index in the data structure (e.g. column index for InterRow, list index in ArrayData, etc..) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>field value at ordinal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java" line="234" column="7"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter_1ab5376791b5b6b270f5c9e18dca9f3fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T org.apache.iceberg.spark.data.SparkOrcWriter.FieldGetter&lt; T &gt;.getFieldOrNull</definition>
        <argsstring>(SpecializedGetters row, int ordinal)</argsstring>
        <name>getFieldOrNull</name>
        <param>
          <type>SpecializedGetters</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ordinal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value from a complex Spark data holder such ArrayData, InternalRow, etc... Calls the appropriate getter for the expected data type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Spark&apos;s data representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ordinal</parametername>
</parameternamelist>
<parameterdescription>
<para>index in the data structure (e.g. column index for InterRow, list index in ArrayData, etc..) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>field value at ordinal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java" line="234" column="7"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter_1ab5376791b5b6b270f5c9e18dca9f3fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T org.apache.iceberg.spark.data.SparkOrcWriter.FieldGetter&lt; T &gt;.getFieldOrNull</definition>
        <argsstring>(SpecializedGetters row, int ordinal)</argsstring>
        <name>getFieldOrNull</name>
        <param>
          <type>SpecializedGetters</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ordinal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a value from a complex Spark data holder such ArrayData, InternalRow, etc... Calls the appropriate getter for the expected data type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Spark&apos;s data representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ordinal</parametername>
</parameternamelist>
<parameterdescription>
<para>index in the data structure (e.g. column index for InterRow, list index in ArrayData, etc..) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>field value at ordinal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java" line="234" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.data.SparkOrcWriter.FieldGetter&lt; T &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.data.SparkOrcWriter.FieldGetter&lt; T &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java" line="222" column="38" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcWriter.java" bodystart="222" bodyend="235"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter_1ab5376791b5b6b270f5c9e18dca9f3fb9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkOrcWriter::FieldGetter</scope><name>getFieldOrNull</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter_1ab5376791b5b6b270f5c9e18dca9f3fb9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkOrcWriter::FieldGetter</scope><name>getFieldOrNull</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter_1ab5376791b5b6b270f5c9e18dca9f3fb9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkOrcWriter::FieldGetter</scope><name>getFieldOrNull</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
