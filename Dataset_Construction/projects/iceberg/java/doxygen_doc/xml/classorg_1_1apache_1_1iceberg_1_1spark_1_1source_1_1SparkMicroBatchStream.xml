<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::spark::source::SparkMicroBatchStream</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MicroBatchStream</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">SupportsAdmissionControl</basecompoundref>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore" prot="private">org::apache::iceberg::spark::source::SparkMicroBatchStream::InitialOffsetStore</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a868461ceefb4608e9082c5e4a5786c07" prot="private" static="yes" mutable="no">
        <type>final Joiner</type>
        <definition>static final Joiner org.apache.iceberg.spark.source.SparkMicroBatchStream::SLASH</definition>
        <argsstring></argsstring>
        <name>SLASH</name>
        <initializer>= Joiner.on(&quot;/&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="71" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3e91e242568317521ceb1d6420d46950" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>static final Logger org.apache.iceberg.spark.source.SparkMicroBatchStream::LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(SparkMicroBatchStream.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="72" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8401b655957e24ea79ba7a9f1449c85d" prot="private" static="yes" mutable="no">
        <type>final Types.StructType</type>
        <definition>static final Types StructType org.apache.iceberg.spark.source.SparkMicroBatchStream::EMPTY_GROUPING_KEY_TYPE</definition>
        <argsstring></argsstring>
        <name>EMPTY_GROUPING_KEY_TYPE</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType_1a153512b804412f71f0cf9b804d9ff525" kindref="member">Types.StructType.of</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="73" column="40" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" prot="private" static="no" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>final Table org.apache.iceberg.spark.source.SparkMicroBatchStream::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="75" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8d467d153024b4fe1ea5b72389d23347" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkMicroBatchStream::branch</definition>
        <argsstring></argsstring>
        <name>branch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="76" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af378fab31f3f896bfcb5c661859dd864" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkMicroBatchStream::caseSensitive</definition>
        <argsstring></argsstring>
        <name>caseSensitive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="77" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a54ef559f7b902fc57486f45f8db0e34e" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkMicroBatchStream::expectedSchema</definition>
        <argsstring></argsstring>
        <name>expectedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="78" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1afc2f2662f87da6e373bfd13984b6a5cf" prot="private" static="no" mutable="no">
        <type>final Broadcast&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> &gt;</type>
        <definition>final Broadcast&lt; Table &gt; org.apache.iceberg.spark.source.SparkMicroBatchStream::tableBroadcast</definition>
        <argsstring></argsstring>
        <name>tableBroadcast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="79" column="27" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3278f49937333aa41f9721ee77d63d83" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.source.SparkMicroBatchStream::splitSize</definition>
        <argsstring></argsstring>
        <name>splitSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="80" column="22" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2b9824394645a4848565666cc81219b6" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.spark.source.SparkMicroBatchStream::splitLookback</definition>
        <argsstring></argsstring>
        <name>splitLookback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="81" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ac236843028cb419f47dbade8a90f1608" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.source.SparkMicroBatchStream::splitOpenFileCost</definition>
        <argsstring></argsstring>
        <name>splitOpenFileCost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="82" column="22" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ae6e90a8eb945e6cf26940254b5e67fb4" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkMicroBatchStream::localityPreferred</definition>
        <argsstring></argsstring>
        <name>localityPreferred</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="83" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a199ae2b6bbe6f6208c0ac0c1a05bebbb" prot="private" static="no" mutable="no">
        <type>final StreamingOffset</type>
        <definition>final StreamingOffset org.apache.iceberg.spark.source.SparkMicroBatchStream::initialOffset</definition>
        <argsstring></argsstring>
        <name>initialOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="84" column="33" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7da349a6c858e739f776f8a3e1fee7e4" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkMicroBatchStream::skipDelete</definition>
        <argsstring></argsstring>
        <name>skipDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="85" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a6d2f773655aba265a1f5625956400e16" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkMicroBatchStream::skipOverwrite</definition>
        <argsstring></argsstring>
        <name>skipOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="86" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.source.SparkMicroBatchStream::fromTimestamp</definition>
        <argsstring></argsstring>
        <name>fromTimestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="87" column="22" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.spark.source.SparkMicroBatchStream::maxFilesPerMicroBatch</definition>
        <argsstring></argsstring>
        <name>maxFilesPerMicroBatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="88" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.spark.source.SparkMicroBatchStream::maxRecordsPerMicroBatch</definition>
        <argsstring></argsstring>
        <name>maxRecordsPerMicroBatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="89" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a4630a8bf873a0e832d3a736bd81344a7" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkMicroBatchStream.SparkMicroBatchStream</definition>
        <argsstring>(JavaSparkContext sparkContext, Table table, SparkReadConf readConf, Schema expectedSchema, String checkpointLocation)</argsstring>
        <name>SparkMicroBatchStream</name>
        <param>
          <type>JavaSparkContext</type>
          <declname>sparkContext</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadConf" kindref="compound">SparkReadConf</ref></type>
          <declname>readConf</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>expectedSchema</declname>
        </param>
        <param>
          <type>String</type>
          <declname>checkpointLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="91" column="3" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="91" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a4630a8bf873a0e832d3a736bd81344a7" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkMicroBatchStream.SparkMicroBatchStream</definition>
        <argsstring>(JavaSparkContext sparkContext, Table table, SparkReadConf readConf, Schema expectedSchema, String checkpointLocation)</argsstring>
        <name>SparkMicroBatchStream</name>
        <param>
          <type>JavaSparkContext</type>
          <declname>sparkContext</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadConf" kindref="compound">SparkReadConf</ref></type>
          <declname>readConf</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>expectedSchema</declname>
        </param>
        <param>
          <type>String</type>
          <declname>checkpointLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="89" column="3" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="89" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a4630a8bf873a0e832d3a736bd81344a7" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkMicroBatchStream.SparkMicroBatchStream</definition>
        <argsstring>(JavaSparkContext sparkContext, Table table, SparkReadConf readConf, Schema expectedSchema, String checkpointLocation)</argsstring>
        <name>SparkMicroBatchStream</name>
        <param>
          <type>JavaSparkContext</type>
          <declname>sparkContext</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadConf" kindref="compound">SparkReadConf</ref></type>
          <declname>readConf</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>expectedSchema</declname>
        </param>
        <param>
          <type>String</type>
          <declname>checkpointLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="89" column="3" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="89" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.latestOffset</definition>
        <argsstring>()</argsstring>
        <name>latestOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="119" column="17" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="119" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InputPartition[]</type>
        <definition>InputPartition [] org.apache.iceberg.spark.source.SparkMicroBatchStream.planInputPartitions</definition>
        <argsstring>(Offset start, Offset end)</argsstring>
        <name>planInputPartitions</name>
        <param>
          <type>Offset</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Offset</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="135" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="135" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PartitionReaderFactory</type>
        <definition>PartitionReaderFactory org.apache.iceberg.spark.source.SparkMicroBatchStream.createReaderFactory</definition>
        <argsstring>()</argsstring>
        <name>createReaderFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="179" column="33" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.initialOffset</definition>
        <argsstring>()</argsstring>
        <name>initialOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="184" column="17" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.deserializeOffset</definition>
        <argsstring>(String json)</argsstring>
        <name>deserializeOffset</name>
        <param>
          <type>String</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="189" column="17" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.commit</definition>
        <argsstring>(Offset end)</argsstring>
        <name>commit</name>
        <param>
          <type>Offset</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="194" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="197" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.latestOffset</definition>
        <argsstring>(Offset startOffset, ReadLimit limit)</argsstring>
        <name>latestOffset</name>
        <param>
          <type>Offset</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>ReadLimit</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="314" column="17" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="314" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ReadLimit</type>
        <definition>ReadLimit org.apache.iceberg.spark.source.SparkMicroBatchStream.getDefaultReadLimit</definition>
        <argsstring>()</argsstring>
        <name>getDefaultReadLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="429" column="20" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="429" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.latestOffset</definition>
        <argsstring>()</argsstring>
        <name>latestOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="117" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="117" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InputPartition[]</type>
        <definition>InputPartition [] org.apache.iceberg.spark.source.SparkMicroBatchStream.planInputPartitions</definition>
        <argsstring>(Offset start, Offset end)</argsstring>
        <name>planInputPartitions</name>
        <param>
          <type>Offset</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Offset</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="133" column="25" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="133" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PartitionReaderFactory</type>
        <definition>PartitionReaderFactory org.apache.iceberg.spark.source.SparkMicroBatchStream.createReaderFactory</definition>
        <argsstring>()</argsstring>
        <name>createReaderFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="179" column="33" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.initialOffset</definition>
        <argsstring>()</argsstring>
        <name>initialOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="184" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.deserializeOffset</definition>
        <argsstring>(String json)</argsstring>
        <name>deserializeOffset</name>
        <param>
          <type>String</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="189" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.commit</definition>
        <argsstring>(Offset end)</argsstring>
        <name>commit</name>
        <param>
          <type>Offset</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="194" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="197" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.latestOffset</definition>
        <argsstring>(Offset startOffset, ReadLimit limit)</argsstring>
        <name>latestOffset</name>
        <param>
          <type>Offset</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>ReadLimit</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="314" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="314" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ReadLimit</type>
        <definition>ReadLimit org.apache.iceberg.spark.source.SparkMicroBatchStream.getDefaultReadLimit</definition>
        <argsstring>()</argsstring>
        <name>getDefaultReadLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="429" column="20" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="429" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.latestOffset</definition>
        <argsstring>()</argsstring>
        <name>latestOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="117" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="117" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InputPartition[]</type>
        <definition>InputPartition [] org.apache.iceberg.spark.source.SparkMicroBatchStream.planInputPartitions</definition>
        <argsstring>(Offset start, Offset end)</argsstring>
        <name>planInputPartitions</name>
        <param>
          <type>Offset</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Offset</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="133" column="25" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="133" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PartitionReaderFactory</type>
        <definition>PartitionReaderFactory org.apache.iceberg.spark.source.SparkMicroBatchStream.createReaderFactory</definition>
        <argsstring>()</argsstring>
        <name>createReaderFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="179" column="33" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.initialOffset</definition>
        <argsstring>()</argsstring>
        <name>initialOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="184" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.deserializeOffset</definition>
        <argsstring>(String json)</argsstring>
        <name>deserializeOffset</name>
        <param>
          <type>String</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="189" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.commit</definition>
        <argsstring>(Offset end)</argsstring>
        <name>commit</name>
        <param>
          <type>Offset</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="194" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="197" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Offset</type>
        <definition>Offset org.apache.iceberg.spark.source.SparkMicroBatchStream.latestOffset</definition>
        <argsstring>(Offset startOffset, ReadLimit limit)</argsstring>
        <name>latestOffset</name>
        <param>
          <type>Offset</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>ReadLimit</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="314" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="314" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ReadLimit</type>
        <definition>ReadLimit org.apache.iceberg.spark.source.SparkMicroBatchStream.getDefaultReadLimit</definition>
        <argsstring>()</argsstring>
        <name>getDefaultReadLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="457" column="20" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="457" bodyend="471"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1FileScanTask" kindref="compound">FileScanTask</ref> &gt;</type>
        <definition>List&lt;FileScanTask&gt; org.apache.iceberg.spark.source.SparkMicroBatchStream.planFiles</definition>
        <argsstring>(StreamingOffset startOffset, StreamingOffset endOffset)</argsstring>
        <name>planFiles</name>
        <param>
          <type>StreamingOffset</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>StreamingOffset</type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="199" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="199" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.SparkMicroBatchStream.shouldProcess</definition>
        <argsstring>(Snapshot snapshot)</argsstring>
        <name>shouldProcess</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="256" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="256" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SparkMicroBatchStream.addedFilesCount</definition>
        <argsstring>(Snapshot snapshot)</argsstring>
        <name>addedFilesCount</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="409" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="409" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.validateCurrentSnapshotExists</definition>
        <argsstring>(Snapshot snapshot, StreamingOffset currentOffset)</argsstring>
        <name>validateCurrentSnapshotExists</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <param>
          <type>StreamingOffset</type>
          <declname>currentOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="419" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="419" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String[][]</type>
        <definition>String [][] org.apache.iceberg.spark.source.SparkMicroBatchStream.computePreferredLocations</definition>
        <argsstring>(List&lt; CombinedScanTask &gt; taskGroups)</argsstring>
        <name>computePreferredLocations</name>
        <param>
          <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1CombinedScanTask" kindref="compound">CombinedScanTask</ref> &gt;</type>
          <declname>taskGroups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="174" column="18" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1FileScanTask" kindref="compound">FileScanTask</ref> &gt;</type>
        <definition>List&lt;FileScanTask&gt; org.apache.iceberg.spark.source.SparkMicroBatchStream.planFiles</definition>
        <argsstring>(StreamingOffset startOffset, StreamingOffset endOffset)</argsstring>
        <name>planFiles</name>
        <param>
          <type>StreamingOffset</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>StreamingOffset</type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="199" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="199" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.SparkMicroBatchStream.shouldProcess</definition>
        <argsstring>(Snapshot snapshot)</argsstring>
        <name>shouldProcess</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="256" column="19" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="256" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SparkMicroBatchStream.addedFilesCount</definition>
        <argsstring>(Snapshot snapshot)</argsstring>
        <name>addedFilesCount</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="409" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="409" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.validateCurrentSnapshotExists</definition>
        <argsstring>(Snapshot snapshot, StreamingOffset currentOffset)</argsstring>
        <name>validateCurrentSnapshotExists</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <param>
          <type>StreamingOffset</type>
          <declname>currentOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="419" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="419" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String[][]</type>
        <definition>String [][] org.apache.iceberg.spark.source.SparkMicroBatchStream.computePreferredLocations</definition>
        <argsstring>(List&lt; CombinedScanTask &gt; taskGroups)</argsstring>
        <name>computePreferredLocations</name>
        <param>
          <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1CombinedScanTask" kindref="compound">CombinedScanTask</ref> &gt;</type>
          <declname>taskGroups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="174" column="18" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1FileScanTask" kindref="compound">FileScanTask</ref> &gt;</type>
        <definition>List&lt;FileScanTask&gt; org.apache.iceberg.spark.source.SparkMicroBatchStream.planFiles</definition>
        <argsstring>(StreamingOffset startOffset, StreamingOffset endOffset)</argsstring>
        <name>planFiles</name>
        <param>
          <type>StreamingOffset</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>StreamingOffset</type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="199" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="199" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.SparkMicroBatchStream.shouldProcess</definition>
        <argsstring>(Snapshot snapshot)</argsstring>
        <name>shouldProcess</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="256" column="19" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="256" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ad5f956d08bbf3ce0988e9eea3d143977" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
        <definition>Snapshot org.apache.iceberg.spark.source.SparkMicroBatchStream.nextValidSnapshot</definition>
        <argsstring>(Snapshot curSnapshot)</argsstring>
        <name>nextValidSnapshot</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>curSnapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next snapshot skiping over rewrite and delete snapshots.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>curSnapshot</parametername>
</parameternamelist>
<parameterdescription>
<para>the current snapshot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next valid snapshot (not a rewrite or delete snapshot), returns null if all remaining snapshots should be skipped. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="423" column="20" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="423" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SparkMicroBatchStream.addedFilesCount</definition>
        <argsstring>(Snapshot snapshot)</argsstring>
        <name>addedFilesCount</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="437" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="437" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkMicroBatchStream.validateCurrentSnapshotExists</definition>
        <argsstring>(Snapshot snapshot, StreamingOffset currentOffset)</argsstring>
        <name>validateCurrentSnapshotExists</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></type>
          <declname>snapshot</declname>
        </param>
        <param>
          <type>StreamingOffset</type>
          <declname>currentOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="447" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="447" bodyend="454"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingOffset</type>
        <definition>static StreamingOffset org.apache.iceberg.spark.source.SparkMicroBatchStream.determineStartingOffset</definition>
        <argsstring>(Table table, Long fromTimestamp)</argsstring>
        <name>determineStartingOffset</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>fromTimestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="285" column="34" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="285" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingOffset</type>
        <definition>static StreamingOffset org.apache.iceberg.spark.source.SparkMicroBatchStream.determineStartingOffset</definition>
        <argsstring>(Table table, Long fromTimestamp)</argsstring>
        <name>determineStartingOffset</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>fromTimestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="285" column="34" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="285" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingOffset</type>
        <definition>static StreamingOffset org.apache.iceberg.spark.source.SparkMicroBatchStream.determineStartingOffset</definition>
        <argsstring>(Table table, Long fromTimestamp)</argsstring>
        <name>determineStartingOffset</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>fromTimestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="285" column="34" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="285" bodyend="310"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SupportsAdmissionControl</label>
      </node>
      <node id="2">
        <label>MicroBatchStream</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SparkMicroBatchStream</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>org.apache.iceberg.Table</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Table"/>
      </node>
      <node id="8">
        <label>org.apache.iceberg.spark.source.StreamingOffset</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>START_OFFSET</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>org.apache.iceberg.types.Types</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types"/>
        <childnode refid="11" relation="usage">
          <edgelabel>TYPES</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>DECIMAL</edgelabel>
          <edgelabel>FIXED</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>SupportsAdmissionControl</label>
      </node>
      <node id="12">
        <label>Pattern</label>
      </node>
      <node id="5">
        <label>Logger</label>
      </node>
      <node id="11">
        <label>ImmutableMap&lt; String, org.apache.iceberg.types.Type.PrimitiveType &gt;</label>
      </node>
      <node id="9">
        <label>Offset</label>
      </node>
      <node id="7">
        <label>Broadcast&lt; org.apache.iceberg.Table &gt;</label>
      </node>
      <node id="2">
        <label>MicroBatchStream</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SparkMicroBatchStream</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>SLASH</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>table</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>tableBroadcast</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>initialOffset</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>EMPTY_GROUPING_KEY_TYPE</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Joiner</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" line="70" column="78" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java" bodystart="70" bodyend="494"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>addedFilesCount</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>addedFilesCount</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>addedFilesCount</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8d467d153024b4fe1ea5b72389d23347" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>branch</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af378fab31f3f896bfcb5c661859dd864" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>caseSensitive</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>commit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>commit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>commit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>computePreferredLocations</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>computePreferredLocations</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>createReaderFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>createReaderFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>createReaderFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>deserializeOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>deserializeOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>deserializeOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>determineStartingOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>determineStartingOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>determineStartingOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8401b655957e24ea79ba7a9f1449c85d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>EMPTY_GROUPING_KEY_TYPE</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a54ef559f7b902fc57486f45f8db0e34e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>expectedSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>fromTimestamp</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>getDefaultReadLimit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>getDefaultReadLimit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>getDefaultReadLimit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a199ae2b6bbe6f6208c0ac0c1a05bebbb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>initialOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>initialOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>initialOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>initialOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>latestOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>latestOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>latestOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>latestOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>latestOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>latestOffset</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ae6e90a8eb945e6cf26940254b5e67fb4" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>localityPreferred</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3e91e242568317521ceb1d6420d46950" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>maxFilesPerMicroBatch</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>maxRecordsPerMicroBatch</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ad5f956d08bbf3ce0988e9eea3d143977" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>nextValidSnapshot</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>planFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>planFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>planFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>planInputPartitions</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>planInputPartitions</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>planInputPartitions</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>shouldProcess</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>shouldProcess</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>shouldProcess</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7da349a6c858e739f776f8a3e1fee7e4" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>skipDelete</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a6d2f773655aba265a1f5625956400e16" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>skipOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a868461ceefb4608e9082c5e4a5786c07" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>SLASH</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a4630a8bf873a0e832d3a736bd81344a7" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>SparkMicroBatchStream</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a4630a8bf873a0e832d3a736bd81344a7" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>SparkMicroBatchStream</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a4630a8bf873a0e832d3a736bd81344a7" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>SparkMicroBatchStream</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2b9824394645a4848565666cc81219b6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>splitLookback</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ac236843028cb419f47dbade8a90f1608" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>splitOpenFileCost</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3278f49937333aa41f9721ee77d63d83" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>splitSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>stop</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>stop</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>stop</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>table</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1afc2f2662f87da6e373bfd13984b6a5cf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>tableBroadcast</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>validateCurrentSnapshotExists</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>validateCurrentSnapshotExists</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkMicroBatchStream</scope><name>validateCurrentSnapshotExists</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
