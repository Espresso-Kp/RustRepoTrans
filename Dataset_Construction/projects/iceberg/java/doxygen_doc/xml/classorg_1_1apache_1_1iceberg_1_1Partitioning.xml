<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1Partitioning" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::Partitioning</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1_1SpecToOrderVisitor" prot="private">org::apache::iceberg::Partitioning::SpecToOrderVisitor</innerclass>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1ab738f72a6058ae0dc9af411f16e00d35" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.Partitioning.Partitioning</definition>
        <argsstring>()</argsstring>
        <name>Partitioning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="42" column="11" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1afaa585933072a136f22bb2f1f1b3f6d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.iceberg.Partitioning.hasBucketField</definition>
        <argsstring>(PartitionSpec spec)</argsstring>
        <name>hasBucketField</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the spec contains a bucketed partition field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the spec has field with a bucket transform </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="50" column="25" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="50" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a6b308278406b3729262017da18d6c4e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref></type>
        <definition>static SortOrder org.apache.iceberg.Partitioning.sortOrderFor</definition>
        <argsstring>(PartitionSpec spec)</argsstring>
        <name>sortOrderFor</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a sort order that will group data for a partition spec.</para>
<para>If the partition spec contains bucket columns, the sort order will also have a field to sort by a column that is bucketed in the spec. The column is selected by the highest number of buckets in the transform.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a sort order that will cluster data for the spec </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="115" column="27" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="115" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a7067b16f5682429f87a102cae01c042b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
        <definition>static StructType org.apache.iceberg.Partitioning.groupingKeyType</definition>
        <argsstring>(Schema schema, Collection&lt; PartitionSpec &gt; specs)</argsstring>
        <name>groupingKeyType</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref> &gt;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a grouping key type considering the provided schema and specs.</para>
<para>A grouping key defines how data is split between files and consists of partition fields with non-void transforms that are present in each provided spec. Iceberg guarantees that records with different values for the grouping key are disjoint and are stored in separate files.</para>
<para>If there is only one spec, the grouping key will include all partition fields with non-void transforms from that spec. Whenever there are multiple specs, the grouping key will represent an intersection of all partition fields with non-void transforms. If a partition field is present only in a subset of specs, Iceberg cannot guarantee data distribution on that field. That&apos;s why it will not be part of the grouping key. Unpartitioned tables or tables with non-overlapping specs have empty grouping keys.</para>
<para>When partition fields are dropped in v1 tables, they are replaced with new partition fields that have the same field ID but use a void transform under the hood. Such fields cannot be part of the grouping key as void transforms always return null.</para>
<para>If the provided schema is not null, this method will only take into account partition fields on top of columns present in the schema. Otherwise, all partition fields will be considered.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema specifying a set of source columns to consider (null to consider all) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specs</parametername>
</parameternamelist>
<parameterdescription>
<para>one or many specs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the constructed grouping key type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="225" column="28" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a6c1a745b7366afe318cfb751c49f1508" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
        <definition>static StructType org.apache.iceberg.Partitioning.partitionType</definition>
        <argsstring>(Table table)</argsstring>
        <name>partitionType</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a unified partition type considering all specs in a table.</para>
<para>If there is only one spec, the partition type is that spec&apos;s partition type. Whenever there are multiple specs, the partition type is a struct containing all fields that have ever been a part of any spec in the table. In other words, the struct fields represent a union of all known partition fields.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>a table with one or many specs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the constructed unified partition type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="240" column="28" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="240" bodyend="243"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1af54b9429204219f266db37b833841c80" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
        <definition>static StructType org.apache.iceberg.Partitioning.buildPartitionProjectionType</definition>
        <argsstring>(String typeName, Collection&lt; PartitionSpec &gt; specs, Set&lt; Integer &gt; projectedFieldIds)</argsstring>
        <name>buildPartitionProjectionType</name>
        <param>
          <type>String</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref> &gt;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>projectedFieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="245" column="29" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="245" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a324e76ab55affe279c88be2b9d23845f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.iceberg.Partitioning.isVoidTransform</definition>
        <argsstring>(PartitionField field)</argsstring>
        <name>isVoidTransform</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionField" kindref="compound">PartitionField</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="309" column="26" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1ab5bfc1a18cf1e896a2bd6ef8644dc368" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform" kindref="compound">Transform</ref>&lt;?, ?&gt; &gt;</type>
        <definition>static List&lt;Transform&lt;?, ?&gt; &gt; org.apache.iceberg.Partitioning.collectUnknownTransforms</definition>
        <argsstring>(Collection&lt; PartitionSpec &gt; specs)</argsstring>
        <name>collectUnknownTransforms</name>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref> &gt;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="313" column="23" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="313" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a59b19efdec0316fe62139f70f32f8452" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.iceberg.Partitioning.equivalentIgnoringNames</definition>
        <argsstring>(PartitionField field, PartitionField anotherField)</argsstring>
        <name>equivalentIgnoringNames</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionField" kindref="compound">PartitionField</ref></type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionField" kindref="compound">PartitionField</ref></type>
          <declname>anotherField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="326" column="26" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="326" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1adb4f2026d3807cb4999ea64a22a990af" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.iceberg.Partitioning.compatibleTransforms</definition>
        <argsstring>(Transform&lt;?, ?&gt; t1, Transform&lt;?, ?&gt; t2)</argsstring>
        <name>compatibleTransforms</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform" kindref="compound">Transform</ref>&lt;?, ?&gt;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform" kindref="compound">Transform</ref>&lt;?, ?&gt;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="333" column="26" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a9a96516640bc6a87bbfd9d15af5be699" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Integer &gt;</type>
        <definition>static Set&lt;Integer&gt; org.apache.iceberg.Partitioning.allFieldIds</definition>
        <argsstring>(Collection&lt; PartitionSpec &gt; specs)</argsstring>
        <name>allFieldIds</name>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref> &gt;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="340" column="22" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a64aed0f62276cd04ca23ca16970c75b3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Integer &gt;</type>
        <definition>static Set&lt;Integer&gt; org.apache.iceberg.Partitioning.commonActiveFieldIds</definition>
        <argsstring>(Schema schema, Collection&lt; PartitionSpec &gt; specs)</argsstring>
        <name>commonActiveFieldIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref> &gt;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="348" column="22" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="348" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a79f38cb8fbdb32557c526d22cd72768c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; Integer &gt;</type>
        <definition>static List&lt;Integer&gt; org.apache.iceberg.Partitioning.activeFieldIds</definition>
        <argsstring>(Schema schema, PartitionSpec spec)</argsstring>
        <name>activeFieldIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="365" column="23" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="365" bodyend="371"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="core/src/main/java/org/apache/iceberg/Partitioning.java" line="41" column="26" bodyfile="core/src/main/java/org/apache/iceberg/Partitioning.java" bodystart="41" bodyend="372"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a79f38cb8fbdb32557c526d22cd72768c" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>activeFieldIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a9a96516640bc6a87bbfd9d15af5be699" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>allFieldIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1af54b9429204219f266db37b833841c80" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>buildPartitionProjectionType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1ab5bfc1a18cf1e896a2bd6ef8644dc368" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>collectUnknownTransforms</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a64aed0f62276cd04ca23ca16970c75b3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>commonActiveFieldIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1adb4f2026d3807cb4999ea64a22a990af" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>compatibleTransforms</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a59b19efdec0316fe62139f70f32f8452" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>equivalentIgnoringNames</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a7067b16f5682429f87a102cae01c042b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>groupingKeyType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1afaa585933072a136f22bb2f1f1b3f6d3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>hasBucketField</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a324e76ab55affe279c88be2b9d23845f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>isVoidTransform</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1ab738f72a6058ae0dc9af411f16e00d35" prot="private" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>Partitioning</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a6c1a745b7366afe318cfb751c49f1508" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>partitionType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1Partitioning_1a6b308278406b3729262017da18d6c4e7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Partitioning</scope><name>sortOrderFor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
