<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::snowflake::SnowflakeCatalog</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog" prot="public" virt="non-virtual">org.apache.iceberg.BaseMetastoreCatalog</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces" prot="public" virt="non-virtual">org.apache.iceberg.catalog.SupportsNamespaces</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable" prot="public" virt="non-virtual">org::apache::iceberg::hadoop::Configurable&lt; Object &gt;</basecompoundref>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1_1FileIOFactory" prot="package">org::apache::iceberg::snowflake::SnowflakeCatalog::FileIOFactory</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a16726740016162c638db78d7ea5cc28d" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.snowflake.SnowflakeCatalog.DEFAULT_CATALOG_NAME</definition>
        <argsstring></argsstring>
        <name>DEFAULT_CATALOG_NAME</name>
        <initializer>= &quot;snowflake_catalog&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="48" column="31" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5551224116d19bea68ab5e4f854b3314" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.snowflake.SnowflakeCatalog.DEFAULT_FILE_IO_IMPL</definition>
        <argsstring></argsstring>
        <name>DEFAULT_FILE_IO_IMPL</name>
        <initializer>= &quot;org.apache.iceberg.io.ResolvingFileIO&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="49" column="31" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a85a59e828e402394604cd58b26a7d8df" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.snowflake.SnowflakeCatalog.JDBC_APPLICATION_PROPERTY</definition>
        <argsstring></argsstring>
        <name>JDBC_APPLICATION_PROPERTY</name>
        <initializer>= &quot;application&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="52" column="31" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a1e62dfe98ac98fa4cc29c741e7d3706f" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.snowflake.SnowflakeCatalog.JDBC_USER_AGENT_SUFFIX_PROPERTY</definition>
        <argsstring></argsstring>
        <name>JDBC_USER_AGENT_SUFFIX_PROPERTY</name>
        <initializer>= &quot;user_agent_suffix&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="54" column="31" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a7a458569f31932d1be7acad7f08b7dfe" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.snowflake.SnowflakeCatalog.APP_IDENTIFIER</definition>
        <argsstring></argsstring>
        <name>APP_IDENTIFIER</name>
        <initializer>= &quot;iceberg-snowflake-catalog&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="55" column="31" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a38458c808f7a737e35a16e3d51771dcd" prot="private" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.snowflake.SnowflakeCatalog.UNIQUE_ID_LENGTH</definition>
        <argsstring></argsstring>
        <name>UNIQUE_ID_LENGTH</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="57" column="28" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ab5fb318889f75dec021235e7be85ba47" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>final Logger org.apache.iceberg.snowflake.SnowflakeCatalog.LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(SnowflakeCatalog.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="65" column="31" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ae725eacdaed62591de5daae98f3b55c6" prot="private" static="no" mutable="no">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1CloseableGroup" kindref="compound">CloseableGroup</ref></type>
        <definition>CloseableGroup org.apache.iceberg.snowflake.SnowflakeCatalog.closeableGroup</definition>
        <argsstring></argsstring>
        <name>closeableGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="67" column="26" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1acc396e8ec0529851ae20a15adf31a907" prot="private" static="no" mutable="no">
        <type>Object</type>
        <definition>Object org.apache.iceberg.snowflake.SnowflakeCatalog.conf</definition>
        <argsstring></argsstring>
        <name>conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="68" column="18" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1af99d4332e46fb7ef2d1a5089d7d84ebf" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.snowflake.SnowflakeCatalog.catalogName</definition>
        <argsstring></argsstring>
        <name>catalogName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="69" column="18" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a905d2b34316e38c6863ebae1eb8982fd" prot="private" static="no" mutable="no">
        <type>Map&lt; String, String &gt;</type>
        <definition>Map&lt;String, String&gt; org.apache.iceberg.snowflake.SnowflakeCatalog.catalogProperties</definition>
        <argsstring></argsstring>
        <name>catalogProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="70" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ab6350a02514b41a3a84460fb4fe1e3a6" prot="private" static="no" mutable="no">
        <type>FileIOFactory</type>
        <definition>FileIOFactory org.apache.iceberg.snowflake.SnowflakeCatalog.fileIOFactory</definition>
        <argsstring></argsstring>
        <name>fileIOFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="71" column="25" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a8cefbdcf332cfedc84c290c35144467f" prot="private" static="no" mutable="no">
        <type>SnowflakeClient</type>
        <definition>SnowflakeClient org.apache.iceberg.snowflake.SnowflakeCatalog.snowflakeClient</definition>
        <argsstring></argsstring>
        <name>snowflakeClient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="72" column="27" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a98d7b842c56a9e1a70ed4129316f4752" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.snowflake.SnowflakeCatalog.SnowflakeCatalog</definition>
        <argsstring>()</argsstring>
        <name>SnowflakeCatalog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="74" column="10" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5a039eac5a83ccabb6f6c97a134a1835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref> &gt;</type>
        <definition>List&lt;TableIdentifier&gt; org.apache.iceberg.snowflake.SnowflakeCatalog.listTables</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>listTables</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a7789d56c7b96208d4d3e064979862a19">listTables</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return all the identifiers under this namespace.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of identifiers for tables </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the namespace is not found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="77" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="77" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a7c2c79af62d9f9778dc4abcb2cb175cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.snowflake.SnowflakeCatalog.dropTable</definition>
        <argsstring>(TableIdentifier identifier, boolean purge)</argsstring>
        <name>dropTable</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aebc37cb952146e50e3c43abc3c386dd9">dropTable</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>purge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a table; optionally delete data and metadata files.</para>
<para>If purge is set to true the implementation should delete all data and metadata files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>purge</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, delete all data and metadata files in the table </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table was dropped, false if the table did not exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="93" column="18" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a20d6f25b62a8c2fbba3ad123b7d3dfd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.snowflake.SnowflakeCatalog.renameTable</definition>
        <argsstring>(TableIdentifier from, TableIdentifier to)</argsstring>
        <name>renameTable</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a65b9a525b88f6e743dbfa652d1c27cab">renameTable</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>identifier of the table to rename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>new table name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the from table does not exist </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the to table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="99" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a96fbe3622b347b6d58d2839601a02e82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.snowflake.SnowflakeCatalog.initialize</definition>
        <argsstring>(String name, Map&lt; String, String &gt; properties)</argsstring>
        <name>initialize</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a346e8e360ab496ede7684abaab13ea02">initialize</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a catalog given a custom name and a map of catalog properties.</para>
<para>A custom Catalog implementation must have a no-arg constructor. A compute engine like Spark or Flink will first initialize the catalog without any arguments, and then call this method to complete catalog initialization with properties passed into the engine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>a custom name for the catalog </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>catalog properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="105" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="105" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a1612a09af3fe8192d47a926c20985f45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.snowflake.SnowflakeCatalog.close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1abda52e8ea4b78b45385564cb55b8be1e">close</reimplements>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="164" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ac50d5563488ccb56ea9a22e92002906c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.snowflake.SnowflakeCatalog.createNamespace</definition>
        <argsstring>(Namespace namespace, Map&lt; String, String &gt; metadata)</argsstring>
        <name>createNamespace</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a0384b0f5cbc9d88eddc25e6a38c2218e">createNamespace</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a namespace in the catalog.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a multi-part namespace </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>a string Map of properties for the given namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace already exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If create is not a supported operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="171" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ad0d21ef26bfb342aa4a1494e93a220b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> &gt;</type>
        <definition>List&lt;Namespace&gt; org.apache.iceberg.snowflake.SnowflakeCatalog.listNamespaces</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>listNamespaces</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a2b9b9478bd0cbf14d1e68d563c091dcb">listNamespaces</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List child namespaces from the namespace.</para>
<para>For two existing tables named &apos;a.b.c.table&apos; and &apos;a.b.d.table&apos;, this method returns:</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.empty()<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
</itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
</itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;c&quot;)<sp/></highlight></codeline>
</programlisting> and<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;d&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
</itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;c&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns: empty list, because there are no child namespaces </para>
</listitem>
</itemizedlist>
</para>
<para><simplesect kind="return"><para>a List of child <ref refid="" kindref="compound">Namespace</ref> names from the given namespace </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="177" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="177" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a05cf1940f6697c4bc17658a2c9290c76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; String, String &gt;</type>
        <definition>Map&lt;String, String&gt; org.apache.iceberg.snowflake.SnowflakeCatalog.loadNamespaceMetadata</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>loadNamespaceMetadata</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a68f05b7949ffed7561de0b847530088a">loadNamespaceMetadata</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchNamespaceException" kindref="compound">NoSuchNamespaceException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load metadata properties for a namespace.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string map of properties for the given namespace </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="198" column="14" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="198" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ad1754eb4f1ba8434179f55e6d236a4ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.snowflake.SnowflakeCatalog.dropNamespace</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>dropNamespace</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1acf63db9574b2e049feb8b3f336199580">dropNamespace</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a namespace. If the namespace exists and was dropped, this will return true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the namespace was dropped, false otherwise. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NamespaceNotEmptyException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace is not empty </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="224" column="18" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1af0a2cfc5a7ac8f68d7e218e52e08eb31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.snowflake.SnowflakeCatalog.setProperties</definition>
        <argsstring>(Namespace namespace, Map&lt; String, String &gt; properties)</argsstring>
        <name>setProperties</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a8869570cea0555c5f8d125ebafb11865">setProperties</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a collection of properties on a namespace in the catalog.</para>
<para>Properties that are not in the given map are not modified or removed by this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a collection of metadata to apply to the namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If namespace properties are not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="230" column="18" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a0f8877d5da6f3072c977baaacc2c0d46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.snowflake.SnowflakeCatalog.removeProperties</definition>
        <argsstring>(Namespace namespace, Set&lt; String &gt; properties)</argsstring>
        <name>removeProperties</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a0cde285e5da773dd910fbe08d36c3d80">removeProperties</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <param>
          <type>Set&lt; String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a set of property keys from a namespace in the catalog.</para>
<para>Properties that are not in the given set are not modified or removed by this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a collection of metadata to apply to the namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If namespace properties are not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="236" column="18" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5990e2b2bb1e4e97431ae18ef92b1897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.snowflake.SnowflakeCatalog.setConf</definition>
        <argsstring>(Object conf)</argsstring>
        <name>setConf</name>
        <param>
          <type>Object</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="266" column="15" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="266" bodyend="268"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a6e57260874dc3d44b3bec0dda670bdba" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.snowflake.SnowflakeCatalog.initialize</definition>
        <argsstring>(String name, SnowflakeClient snowflakeClient, FileIOFactory fileIOFactory, Map&lt; String, String &gt; properties)</argsstring>
        <name>initialize</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>SnowflakeClient</type>
          <declname>snowflakeClient</declname>
        </param>
        <param>
          <type>FileIOFactory</type>
          <declname>fileIOFactory</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize using caller-supplied SnowflakeClient and FileIO.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the catalog, defaults to &quot;snowflake_catalog&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>snowflakeClient</parametername>
</parameternamelist>
<parameterdescription>
<para>The client encapsulating network communication with Snowflake </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileIOFactory</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="" kindref="compound">FileIOFactory</ref> to use to instantiate a new FileIO for each new table operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>The catalog options to use and propagate to dependencies </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="146" column="8" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="146" bodyend="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1aa4acd09184f033aeacbff77cfe5088bd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref></type>
        <definition>TableOperations org.apache.iceberg.snowflake.SnowflakeCatalog.newTableOps</definition>
        <argsstring>(TableIdentifier tableIdentifier)</argsstring>
        <name>newTableOps</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a2e4e1cb32468d25215d3c490a9945dae">newTableOps</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>tableIdentifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="242" column="29" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="242" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a74fc640b1ed6600accf670a4aceedc05" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.snowflake.SnowflakeCatalog.defaultWarehouseLocation</definition>
        <argsstring>(TableIdentifier tableIdentifier)</argsstring>
        <name>defaultWarehouseLocation</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1aa64754d6dffb3dfe476eff81526e2284">defaultWarehouseLocation</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>tableIdentifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="260" column="20" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="260" bodyend="263"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>org.apache.iceberg.catalog.SupportsNamespaces</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.snowflake.SnowflakeCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.catalog.Catalog</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog"/>
      </node>
      <node id="2">
        <label>org.apache.iceberg.BaseMetastoreCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org::apache::iceberg::hadoop::Configurable&lt; Object &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable"/>
      </node>
      <node id="4">
        <label>Closeable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>org.apache.iceberg.catalog.SupportsNamespaces</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.snowflake.SnowflakeCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>snowflakeClient</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>fileIOFactory</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>catalogProperties</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>closeableGroup</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Map&lt; String, String &gt;</label>
      </node>
      <node id="10">
        <label>org.apache.iceberg.snowflake.SnowflakeCatalog.FileIOFactory</label>
      </node>
      <node id="3">
        <label>org.apache.iceberg.catalog.Catalog</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog"/>
      </node>
      <node id="12">
        <label>org.apache.iceberg.io.CloseableGroup</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1io_1_1CloseableGroup"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>closeables</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Logger</label>
      </node>
      <node id="13">
        <label>Deque&lt; AutoCloseable &gt;</label>
      </node>
      <node id="6">
        <label>org.apache.iceberg.metrics.MetricsReporter</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1metrics_1_1MetricsReporter"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>org.apache.iceberg.snowflake.SnowflakeClient</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.BaseMetastoreCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>metricsReporter</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>org::apache::iceberg::hadoop::Configurable&lt; Object &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable"/>
      </node>
      <node id="4">
        <label>Closeable</label>
      </node>
    </collaborationgraph>
    <location file="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" line="47" column="49" bodyfile="snowflake/src/main/java/org/apache/iceberg/snowflake/SnowflakeCatalog.java" bodystart="46" bodyend="269"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a7a458569f31932d1be7acad7f08b7dfe" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>APP_IDENTIFIER</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a7c40e5ddce4c6520f65b07663c57b1ba" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>buildTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1af99d4332e46fb7ef2d1a5089d7d84ebf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>catalogName</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a905d2b34316e38c6863ebae1eb8982fd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>catalogProperties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a1612a09af3fe8192d47a926c20985f45" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>close</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ae725eacdaed62591de5daae98f3b55c6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>closeableGroup</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1acc396e8ec0529851ae20a15adf31a907" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>conf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ac50d5563488ccb56ea9a22e92002906c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>createNamespace</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1acc80b7da14b90a65d39e97e05479ea33" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::catalog::SupportsNamespaces."><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>createNamespace</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aea32d4b815e8eb8618888eb827451bbc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a73f6a6c06823e5d7ad4353ac1c65caf2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a5746e73c8f380ac0b85f89f0cda93979" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ae258d93320592d2af6c3ae13add82e45" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>createTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a16726740016162c638db78d7ea5cc28d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>DEFAULT_CATALOG_NAME</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5551224116d19bea68ab5e4f854b3314" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>DEFAULT_FILE_IO_IMPL</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a74fc640b1ed6600accf670a4aceedc05" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>defaultWarehouseLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ad1754eb4f1ba8434179f55e6d236a4ee" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>dropNamespace</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a7c2c79af62d9f9778dc4abcb2cb175cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>dropTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ad42e74e5b4ab4b2f59d75a00426eafb7" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::BaseMetastoreCatalog."><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>dropTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ab6350a02514b41a3a84460fb4fe1e3a6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>fileIOFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a9bb64acb7a7e408e84d7154279a03b1e" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>fullTableName</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a96fbe3622b347b6d58d2839601a02e82" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>initialize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a6e57260874dc3d44b3bec0dda670bdba" prot="package" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>initialize</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a114c5529e87135758ede702633d85b12" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>invalidateTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1ae399707e2b14ef0d3e5127cbef205c5f" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>isValidIdentifier</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a27a30fe49c61ecf4b7fbf510fc2d5843" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>isValidMetadataIdentifier</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a85a59e828e402394604cd58b26a7d8df" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>JDBC_APPLICATION_PROPERTY</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a1e62dfe98ac98fa4cc29c741e7d3706f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>JDBC_USER_AGENT_SUFFIX_PROPERTY</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ad0d21ef26bfb342aa4a1494e93a220b8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>listNamespaces</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1afeb1dc59ff0b25cfde224eda3f3f9906" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::catalog::SupportsNamespaces."><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>listNamespaces</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5a039eac5a83ccabb6f6c97a134a1835" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>listTables</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1ae7653f2c60b6f83221cec49826315136" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>loadMetadataTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a05cf1940f6697c4bc17658a2c9290c76" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>loadNamespaceMetadata</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>loadTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ab5fb318889f75dec021235e7be85ba47" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a483177c0805ea0363b81a7a59e33dc91" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>metricsReporter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a898ff11f2af8043acb43b81035b5dfbc" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>metricsReporter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a4fdbd0ddec7d7827d9bbfe19842c6cb5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>name</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1aa1bb39594115028cb61a785fd4b8052b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>namespaceExists</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1af0bab969f8a8e02ecfe62658d4d2466c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aee3e8fb4bc990c89185c52c82ecfceac" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a988b98707e3a9aa0b19852ed82db1847" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aff739fd6878a26f713ad704930e1b3e0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aa9a6ce4f5cc841b7c334ce39f2f2c717" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a385713b058a4578259102ae031b154fa" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a7c0db2a10f6c755113270bc28f0f2b0f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2d524ee8f75f3c520b4075f3cba566d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1aa4acd09184f033aeacbff77cfe5088bd" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>newTableOps</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a255631c42029083877a89a751718223b" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>properties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a9ab61d90a39c54a2a36501c84a963442" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>registerTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a0f8877d5da6f3072c977baaacc2c0d46" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>removeProperties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a20d6f25b62a8c2fbba3ad123b7d3dfd9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>renameTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5990e2b2bb1e4e97431ae18ef92b1897" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>setConf</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable_1a4db86e314a80fd0e4522d83cb1b6c6c8" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::hadoop::Configurable."><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>setConf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1af0a2cfc5a7ac8f68d7e218e52e08eb31" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>setProperties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a98d7b842c56a9e1a70ed4129316f4752" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>SnowflakeCatalog</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a8cefbdcf332cfedc84c290c35144467f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>snowflakeClient</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a8b4b9fdc68d8862f4fdc349bd7383a40" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>tableExists</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a21000be5a9110dee0ec5fe19b92bc1b6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>toString</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a38458c808f7a737e35a16e3d51771dcd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::snowflake::SnowflakeCatalog</scope><name>UNIQUE_ID_LENGTH</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
