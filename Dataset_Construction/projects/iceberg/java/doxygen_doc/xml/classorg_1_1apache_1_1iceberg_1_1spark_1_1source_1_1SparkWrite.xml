<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite" kind="class" language="Java" prot="package" abstract="yes">
    <compoundname>org::apache::iceberg::spark::source::SparkWrite</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Write</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">RequiresDistributionAndOrdering</basecompoundref>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1BaseBatchWrite" prot="private">org::apache::iceberg::spark::source::SparkWrite::BaseBatchWrite</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1BaseStreamingWrite" prot="private">org::apache::iceberg::spark::source::SparkWrite::BaseStreamingWrite</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1BatchAppend" prot="private">org::apache::iceberg::spark::source::SparkWrite::BatchAppend</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1CopyOnWriteOperation" prot="private">org::apache::iceberg::spark::source::SparkWrite::CopyOnWriteOperation</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1DynamicOverwrite" prot="private">org::apache::iceberg::spark::source::SparkWrite::DynamicOverwrite</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1OverwriteByFilter" prot="private">org::apache::iceberg::spark::source::SparkWrite::OverwriteByFilter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1PartitionedDataWriter" prot="private">org::apache::iceberg::spark::source::SparkWrite::PartitionedDataWriter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1RewriteFiles" prot="private">org::apache::iceberg::spark::source::SparkWrite::RewriteFiles</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1StreamingAppend" prot="private">org::apache::iceberg::spark::source::SparkWrite::StreamingAppend</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1StreamingOverwrite" prot="private">org::apache::iceberg::spark::source::SparkWrite::StreamingOverwrite</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1TaskCommit" prot="public">org::apache::iceberg::spark::source::SparkWrite::TaskCommit</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1UnpartitionedDataWriter" prot="private">org::apache::iceberg::spark::source::SparkWrite::UnpartitionedDataWriter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory" prot="private">org::apache::iceberg::spark::source::SparkWrite::WriterFactory</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a04ad2f1049c69fd9a18e147c1fe32ce1" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>static final Logger org.apache.iceberg.spark.source.SparkWrite::LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(SparkWrite.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="84" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a9c74f0326830fce1da3ee57b162c5b5f" prot="private" static="no" mutable="no">
        <type>final JavaSparkContext</type>
        <definition>final JavaSparkContext org.apache.iceberg.spark.source.SparkWrite::sparkContext</definition>
        <argsstring></argsstring>
        <name>sparkContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="86" column="34" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1abb6764153c87877897a467fcba07ce0e" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteConf" kindref="compound">SparkWriteConf</ref></type>
        <definition>final SparkWriteConf org.apache.iceberg.spark.source.SparkWrite::writeConf</definition>
        <argsstring></argsstring>
        <name>writeConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="87" column="32" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae185eef7f8836f7ab0b104c740de2e24" prot="private" static="no" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>final Table org.apache.iceberg.spark.source.SparkWrite::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="88" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ab4f9636acf0a8336e52cb1ee60078cab" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkWrite::queryId</definition>
        <argsstring></argsstring>
        <name>queryId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="89" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a072d52703384d32774a23be49a385fb3" prot="private" static="no" mutable="no">
        <type>final <ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref></type>
        <definition>final FileFormat org.apache.iceberg.spark.source.SparkWrite::format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="90" column="28" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a49fcc5b95f91c530750686409aa8574e" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkWrite::applicationId</definition>
        <argsstring></argsstring>
        <name>applicationId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="91" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a17a0364cd99e8b674a347a94b04e4251" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkWrite::wapEnabled</definition>
        <argsstring></argsstring>
        <name>wapEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="92" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aba30ef10b91c4a8a6c4559c4e64907bc" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkWrite::wapId</definition>
        <argsstring></argsstring>
        <name>wapId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="93" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a35fa43803cde74dd13b0a6095b138e61" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.spark.source.SparkWrite::outputSpecId</definition>
        <argsstring></argsstring>
        <name>outputSpecId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="94" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aa9a56d16c21b637f064a9a03e205261d" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkWrite::branch</definition>
        <argsstring></argsstring>
        <name>branch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="95" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a54e217e25f1c1401636f45549101db92" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.source.SparkWrite::targetFileSize</definition>
        <argsstring></argsstring>
        <name>targetFileSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="96" column="22" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a66a8d9b1c1ce6a7a2035260551aa63ac" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>final Schema org.apache.iceberg.spark.source.SparkWrite::writeSchema</definition>
        <argsstring></argsstring>
        <name>writeSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="97" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a48bfc0b14ec30ef26d58d4d4c7be2fdd" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
        <definition>final StructType org.apache.iceberg.spark.source.SparkWrite::dsSchema</definition>
        <argsstring></argsstring>
        <name>dsSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="98" column="28" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aaa198335285e9cb24fdb37fbd549f6cf" prot="private" static="no" mutable="no">
        <type>final Map&lt; String, String &gt;</type>
        <definition>final Map&lt; String, String &gt; org.apache.iceberg.spark.source.SparkWrite::extraSnapshotMetadata</definition>
        <argsstring></argsstring>
        <name>extraSnapshotMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="99" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4de879cbcaec2f0aec6eb919a09ae9c3" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkWrite::partitionedFanoutEnabled</definition>
        <argsstring></argsstring>
        <name>partitionedFanoutEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="100" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac14380b273280ed2e218f0691355cb17" prot="private" static="no" mutable="no">
        <type>final Distribution</type>
        <definition>final Distribution org.apache.iceberg.spark.source.SparkWrite.requiredDistribution</definition>
        <argsstring></argsstring>
        <name>requiredDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="101" column="30" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1abe350b1446186c82d2a55c36382829dd" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref>[]</type>
        <definition>final SortOrder [] org.apache.iceberg.spark.source.SparkWrite.requiredOrdering</definition>
        <argsstring></argsstring>
        <name>requiredOrdering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="102" column="27" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aeb7eaa314905effbaa4cab812e833a68" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.SparkWrite::cleanupOnAbort</definition>
        <argsstring></argsstring>
        <name>cleanupOnAbort</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="104" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a83b3b95e6b7c3aa5f15a412f05a77935" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>final SparkWriteRequirements org.apache.iceberg.spark.source.SparkWrite::writeRequirements</definition>
        <argsstring></argsstring>
        <name>writeRequirements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="102" column="40" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ab9c8769220433f234d4caa18b9e7e8af" prot="private" static="no" mutable="no">
        <type>final Map&lt; String, String &gt;</type>
        <definition>final Map&lt; String, String &gt; org.apache.iceberg.spark.source.SparkWrite::writeProperties</definition>
        <argsstring></argsstring>
        <name>writeProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="103" column="21" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a5f4db6639ed419318e5c9cee2c13888d" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkWrite.useFanoutWriter</definition>
        <argsstring></argsstring>
        <name>useFanoutWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="101" column="25" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a1cb4de523a90c935d527d37e1128d832" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkWrite.SparkWrite</definition>
        <argsstring>(SparkSession spark, Table table, SparkWriteConf writeConf, LogicalWriteInfo writeInfo, String applicationId, Schema writeSchema, StructType dsSchema, Distribution requiredDistribution, SortOrder[] requiredOrdering)</argsstring>
        <name>SparkWrite</name>
        <param>
          <type>SparkSession</type>
          <declname>spark</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteConf" kindref="compound">SparkWriteConf</ref></type>
          <declname>writeConf</declname>
        </param>
        <param>
          <type>LogicalWriteInfo</type>
          <declname>writeInfo</declname>
        </param>
        <param>
          <type>String</type>
          <declname>applicationId</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
          <declname>dsSchema</declname>
        </param>
        <param>
          <type>Distribution</type>
          <declname>requiredDistribution</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref>[]</type>
          <declname>requiredOrdering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="106" column="3" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="106" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae8faad7e057321c2d59392dd197b49d6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asBatchAppend</definition>
        <argsstring>()</argsstring>
        <name>asBatchAppend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="145" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6fd0b0cf74b583b9c25cecaec8ff6210" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asDynamicOverwrite</definition>
        <argsstring>()</argsstring>
        <name>asDynamicOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="149" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac6b0f6f8a3643f6fb75818bfe79b4572" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asOverwriteByFilter</definition>
        <argsstring>(Expression overwriteExpr)</argsstring>
        <name>asOverwriteByFilter</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>overwriteExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="153" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a78fc12a0ca61568cbe4a0d2b420a6d74" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asCopyOnWriteOperation</definition>
        <argsstring>(SparkCopyOnWriteScan scan, IsolationLevel isolationLevel)</argsstring>
        <name>asCopyOnWriteOperation</name>
        <param>
          <type>SparkCopyOnWriteScan</type>
          <declname>scan</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1IsolationLevel" kindref="compound">IsolationLevel</ref></type>
          <declname>isolationLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="157" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a8df64caa146267bccc7497a9c7e54184" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asRewrite</definition>
        <argsstring>(String fileSetID)</argsstring>
        <name>asRewrite</name>
        <param>
          <type>String</type>
          <declname>fileSetID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="161" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4989664d499c716c77e8735d3d9fbef1" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingWrite</type>
        <definition>StreamingWrite org.apache.iceberg.spark.source.SparkWrite.asStreamingAppend</definition>
        <argsstring>()</argsstring>
        <name>asStreamingAppend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="165" column="18" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a94e792c37aed4fcbaa209cf6abc2a269" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingWrite</type>
        <definition>StreamingWrite org.apache.iceberg.spark.source.SparkWrite.asStreamingOverwrite</definition>
        <argsstring>()</argsstring>
        <name>asStreamingOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="169" column="18" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a47d82aa7d9f2f10ed4244ddaf59aedde" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkWrite.SparkWrite</definition>
        <argsstring>(SparkSession spark, Table table, SparkWriteConf writeConf, LogicalWriteInfo writeInfo, String applicationId, Schema writeSchema, StructType dsSchema, SparkWriteRequirements writeRequirements)</argsstring>
        <name>SparkWrite</name>
        <param>
          <type>SparkSession</type>
          <declname>spark</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteConf" kindref="compound">SparkWriteConf</ref></type>
          <declname>writeConf</declname>
        </param>
        <param>
          <type>LogicalWriteInfo</type>
          <declname>writeInfo</declname>
        </param>
        <param>
          <type>String</type>
          <declname>applicationId</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
          <declname>dsSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
          <declname>writeRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="107" column="3" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="107" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae8faad7e057321c2d59392dd197b49d6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asBatchAppend</definition>
        <argsstring>()</argsstring>
        <name>asBatchAppend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="150" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6fd0b0cf74b583b9c25cecaec8ff6210" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asDynamicOverwrite</definition>
        <argsstring>()</argsstring>
        <name>asDynamicOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="154" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac6b0f6f8a3643f6fb75818bfe79b4572" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asOverwriteByFilter</definition>
        <argsstring>(Expression overwriteExpr)</argsstring>
        <name>asOverwriteByFilter</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>overwriteExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="158" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a78fc12a0ca61568cbe4a0d2b420a6d74" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asCopyOnWriteOperation</definition>
        <argsstring>(SparkCopyOnWriteScan scan, IsolationLevel isolationLevel)</argsstring>
        <name>asCopyOnWriteOperation</name>
        <param>
          <type>SparkCopyOnWriteScan</type>
          <declname>scan</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1IsolationLevel" kindref="compound">IsolationLevel</ref></type>
          <declname>isolationLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="162" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a8df64caa146267bccc7497a9c7e54184" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asRewrite</definition>
        <argsstring>(String fileSetID)</argsstring>
        <name>asRewrite</name>
        <param>
          <type>String</type>
          <declname>fileSetID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="166" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4989664d499c716c77e8735d3d9fbef1" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingWrite</type>
        <definition>StreamingWrite org.apache.iceberg.spark.source.SparkWrite.asStreamingAppend</definition>
        <argsstring>()</argsstring>
        <name>asStreamingAppend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="170" column="18" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a94e792c37aed4fcbaa209cf6abc2a269" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingWrite</type>
        <definition>StreamingWrite org.apache.iceberg.spark.source.SparkWrite.asStreamingOverwrite</definition>
        <argsstring>()</argsstring>
        <name>asStreamingOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="174" column="18" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a47d82aa7d9f2f10ed4244ddaf59aedde" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkWrite.SparkWrite</definition>
        <argsstring>(SparkSession spark, Table table, SparkWriteConf writeConf, LogicalWriteInfo writeInfo, String applicationId, Schema writeSchema, StructType dsSchema, SparkWriteRequirements writeRequirements)</argsstring>
        <name>SparkWrite</name>
        <param>
          <type>SparkSession</type>
          <declname>spark</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteConf" kindref="compound">SparkWriteConf</ref></type>
          <declname>writeConf</declname>
        </param>
        <param>
          <type>LogicalWriteInfo</type>
          <declname>writeInfo</declname>
        </param>
        <param>
          <type>String</type>
          <declname>applicationId</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
          <declname>dsSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
          <declname>writeRequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="107" column="3" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="107" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae8faad7e057321c2d59392dd197b49d6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asBatchAppend</definition>
        <argsstring>()</argsstring>
        <name>asBatchAppend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="161" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6fd0b0cf74b583b9c25cecaec8ff6210" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asDynamicOverwrite</definition>
        <argsstring>()</argsstring>
        <name>asDynamicOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="165" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac6b0f6f8a3643f6fb75818bfe79b4572" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asOverwriteByFilter</definition>
        <argsstring>(Expression overwriteExpr)</argsstring>
        <name>asOverwriteByFilter</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>overwriteExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="169" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a78fc12a0ca61568cbe4a0d2b420a6d74" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asCopyOnWriteOperation</definition>
        <argsstring>(SparkCopyOnWriteScan scan, IsolationLevel isolationLevel)</argsstring>
        <name>asCopyOnWriteOperation</name>
        <param>
          <type>SparkCopyOnWriteScan</type>
          <declname>scan</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1IsolationLevel" kindref="compound">IsolationLevel</ref></type>
          <declname>isolationLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="173" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a8df64caa146267bccc7497a9c7e54184" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BatchWrite</type>
        <definition>BatchWrite org.apache.iceberg.spark.source.SparkWrite.asRewrite</definition>
        <argsstring>(String fileSetID)</argsstring>
        <name>asRewrite</name>
        <param>
          <type>String</type>
          <declname>fileSetID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="177" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4989664d499c716c77e8735d3d9fbef1" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingWrite</type>
        <definition>StreamingWrite org.apache.iceberg.spark.source.SparkWrite.asStreamingAppend</definition>
        <argsstring>()</argsstring>
        <name>asStreamingAppend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="181" column="18" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a94e792c37aed4fcbaa209cf6abc2a269" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StreamingWrite</type>
        <definition>StreamingWrite org.apache.iceberg.spark.source.SparkWrite.asStreamingOverwrite</definition>
        <argsstring>()</argsstring>
        <name>asStreamingOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="185" column="18" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="185" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a268d477f514b0bcef3d32b6fdd6cbec8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>Distribution org.apache.iceberg.spark.source.SparkWrite.requiredDistribution</definition>
        <argsstring>()</argsstring>
        <name>requiredDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="136" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a25d1e385ac2cfff5a76fec93403a353f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref>[]</type>
        <definition>SortOrder [] org.apache.iceberg.spark.source.SparkWrite.requiredOrdering</definition>
        <argsstring>()</argsstring>
        <name>requiredOrdering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="141" column="20" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a67c1fcb81af2552b45eb7319c10ef5ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.spark.source.SparkWrite.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="247" column="17" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a268d477f514b0bcef3d32b6fdd6cbec8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>Distribution org.apache.iceberg.spark.source.SparkWrite.requiredDistribution</definition>
        <argsstring>()</argsstring>
        <name>requiredDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="136" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6b9d2b52c1dfd74be1e9529b930c10de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.SparkWrite.distributionStrictlyRequired</definition>
        <argsstring>()</argsstring>
        <name>distributionStrictlyRequired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="141" column="18" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a25d1e385ac2cfff5a76fec93403a353f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref>[]</type>
        <definition>SortOrder [] org.apache.iceberg.spark.source.SparkWrite.requiredOrdering</definition>
        <argsstring>()</argsstring>
        <name>requiredOrdering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="146" column="20" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a67c1fcb81af2552b45eb7319c10ef5ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.spark.source.SparkWrite.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="253" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a268d477f514b0bcef3d32b6fdd6cbec8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>Distribution org.apache.iceberg.spark.source.SparkWrite.requiredDistribution</definition>
        <argsstring>()</argsstring>
        <name>requiredDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="136" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6b9d2b52c1dfd74be1e9529b930c10de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.SparkWrite.distributionStrictlyRequired</definition>
        <argsstring>()</argsstring>
        <name>distributionStrictlyRequired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="143" column="18" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a25d1e385ac2cfff5a76fec93403a353f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref>[]</type>
        <definition>SortOrder [] org.apache.iceberg.spark.source.SparkWrite.requiredOrdering</definition>
        <argsstring>()</argsstring>
        <name>requiredOrdering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="148" column="20" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a10c038fc9ba3530e8c044de1df68f7b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SparkWrite.advisoryPartitionSizeInBytes</definition>
        <argsstring>()</argsstring>
        <name>advisoryPartitionSizeInBytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="155" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a67c1fcb81af2552b45eb7319c10ef5ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.spark.source.SparkWrite.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="264" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="264" bodyend="266"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a7b749ad92f5b1a2d949ffe9c59e8b9df" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory" kindref="compound">WriterFactory</ref></type>
        <definition>WriterFactory org.apache.iceberg.spark.source.SparkWrite.createWriterFactory</definition>
        <argsstring>()</argsstring>
        <name>createWriterFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="174" column="25" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="174" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6470aed65b5ae32fef05ddf9b748a202" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkWrite.commitOperation</definition>
        <argsstring>(SnapshotUpdate&lt;?&gt; operation, String description)</argsstring>
        <name>commitOperation</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate" kindref="compound">SnapshotUpdate</ref>&lt;?&gt;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>String</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="189" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="189" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a06baa42232e8958534e474a8764748f4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkWrite.abort</definition>
        <argsstring>(WriterCommitMessage[] messages)</argsstring>
        <name>abort</name>
        <param>
          <type>WriterCommitMessage[]</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="225" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a95a48aacb74e4f0843741a2c5feb3ff8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref> &gt;</type>
        <definition>List&lt;DataFile&gt; org.apache.iceberg.spark.source.SparkWrite.files</definition>
        <argsstring>(WriterCommitMessage[] messages)</argsstring>
        <name>files</name>
        <param>
          <type>WriterCommitMessage[]</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="233" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="233" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a7b749ad92f5b1a2d949ffe9c59e8b9df" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory" kindref="compound">WriterFactory</ref></type>
        <definition>WriterFactory org.apache.iceberg.spark.source.SparkWrite.createWriterFactory</definition>
        <argsstring>()</argsstring>
        <name>createWriterFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="179" column="25" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="179" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6470aed65b5ae32fef05ddf9b748a202" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkWrite.commitOperation</definition>
        <argsstring>(SnapshotUpdate&lt;?&gt; operation, String description)</argsstring>
        <name>commitOperation</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate" kindref="compound">SnapshotUpdate</ref>&lt;?&gt;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>String</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="195" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="195" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a06baa42232e8958534e474a8764748f4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkWrite.abort</definition>
        <argsstring>(WriterCommitMessage[] messages)</argsstring>
        <name>abort</name>
        <param>
          <type>WriterCommitMessage[]</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="231" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="231" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a95a48aacb74e4f0843741a2c5feb3ff8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref> &gt;</type>
        <definition>List&lt;DataFile&gt; org.apache.iceberg.spark.source.SparkWrite.files</definition>
        <argsstring>(WriterCommitMessage[] messages)</argsstring>
        <name>files</name>
        <param>
          <type>WriterCommitMessage[]</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="239" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="239" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a7b749ad92f5b1a2d949ffe9c59e8b9df" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory" kindref="compound">WriterFactory</ref></type>
        <definition>WriterFactory org.apache.iceberg.spark.source.SparkWrite.createWriterFactory</definition>
        <argsstring>()</argsstring>
        <name>createWriterFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="190" column="25" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="190" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6470aed65b5ae32fef05ddf9b748a202" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkWrite.commitOperation</definition>
        <argsstring>(SnapshotUpdate&lt;?&gt; operation, String description)</argsstring>
        <name>commitOperation</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate" kindref="compound">SnapshotUpdate</ref>&lt;?&gt;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>String</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="206" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="206" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a06baa42232e8958534e474a8764748f4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SparkWrite.abort</definition>
        <argsstring>(WriterCommitMessage[] messages)</argsstring>
        <name>abort</name>
        <param>
          <type>WriterCommitMessage[]</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="242" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="242" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a95a48aacb74e4f0843741a2c5feb3ff8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref> &gt;</type>
        <definition>List&lt;DataFile&gt; org.apache.iceberg.spark.source.SparkWrite.files</definition>
        <argsstring>(WriterCommitMessage[] messages)</argsstring>
        <name>files</name>
        <param>
          <type>WriterCommitMessage[]</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="250" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="250" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Write</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SparkWrite</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RequiresDistributionAndOrdering</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="28">
        <label>org.apache.iceberg.Table</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Table"/>
      </node>
      <node id="21">
        <label>List&lt; org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="23">
        <label>Map&lt; String, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="37">
        <label>org.apache.iceberg.spark.SparkWriteRequirements</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements"/>
        <childnode refid="26" relation="usage">
          <edgelabel>distribution</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>ordering</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>EMPTY</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>Map&lt; String, String &gt;</label>
      </node>
      <node id="2">
        <label>Write</label>
      </node>
      <node id="9">
        <label>org.apache.iceberg.NullOrder</label>
        <link refid="enumorg_1_1apache_1_1iceberg_1_1NullOrder"/>
      </node>
      <node id="17">
        <label>Map&lt; String, Integer &gt;</label>
      </node>
      <node id="10">
        <label>org.apache.iceberg.Schema</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1Schema"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>NEWLINE</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>aliasToId</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>identifierFieldIdSet</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>idToAccessor</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>idToName</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>idToField</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>nameToId</edgelabel>
          <edgelabel>lowerCaseNameToId</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>struct</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>idsToReassigned</edgelabel>
          <edgelabel>idsToOriginal</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>org.apache.iceberg.types.Types.StructType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>fieldList</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>FIELD_SEP</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fieldsById</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>fieldsByLowerCaseName</edgelabel>
          <edgelabel>fieldsByName</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>org.apache.iceberg.spark.SparkWriteConf</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteConf"/>
        <childnode refid="27" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>table</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>confParser</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>sessionConf</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>writeOptions</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>spark</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SparkWrite</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>requiredOrdering</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>requiredDistribution</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>table</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>format</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>writeConf</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>writeSchema</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>writeProperties</edgelabel>
          <edgelabel>extraSnapshotMetadata</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>dsSchema</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>sparkContext</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>writeRequirements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>RequiresDistributionAndOrdering</label>
      </node>
      <node id="16">
        <label>Map&lt; Integer, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="33">
        <label>RuntimeConfig</label>
      </node>
      <node id="7">
        <label>org.apache.iceberg.SortDirection</label>
        <link refid="enumorg_1_1apache_1_1iceberg_1_1SortDirection"/>
      </node>
      <node id="32">
        <label>CaseInsensitiveStringMap</label>
      </node>
      <node id="31">
        <label>org.apache.iceberg.spark.SparkConfParser</label>
        <childnode refid="32" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>sessionConf</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>options</edgelabel>
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Set&lt; Integer &gt;</label>
      </node>
      <node id="6">
        <label>org.apache.iceberg.SortField</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1SortField"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>direction</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>nullOrder</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>SparkSession</label>
      </node>
      <node id="24">
        <label>Map&lt; Integer, Integer &gt;</label>
      </node>
      <node id="27">
        <label>Logger</label>
      </node>
      <node id="12">
        <label>BiMap&lt; String, Integer &gt;</label>
      </node>
      <node id="26">
        <label>Distribution</label>
      </node>
      <node id="19">
        <label>org.apache.iceberg.types.Type.NestedType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1NestedType"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.SortOrder</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1SortOrder"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>UNSORTED_ORDER</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>fieldList</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>org.apache.iceberg.types.Types.NestedField</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>JavaSparkContext</label>
      </node>
      <node id="29">
        <label>org.apache.iceberg.FileFormat</label>
        <link refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat"/>
        <childnode refid="29" relation="usage">
          <edgelabel>VALUES</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>org.apache.iceberg.types.Type</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>SortOrder</label>
      </node>
      <node id="15">
        <label>Map&lt; Integer, String &gt;</label>
      </node>
      <node id="25">
        <label>List&lt; org.apache.iceberg.SortField &gt;</label>
      </node>
      <node id="8">
        <label>org.apache.iceberg.transforms.Transform&lt;?, ?&gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform"/>
      </node>
      <node id="14">
        <label>Map&lt; Integer, org.apache.iceberg.Accessor&lt; org.apache.iceberg.StructLike &gt; &gt;</label>
      </node>
      <node id="11">
        <label>Joiner</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="83" column="65" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="83" bodyend="776"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a06baa42232e8958534e474a8764748f4" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>abort</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a06baa42232e8958534e474a8764748f4" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>abort</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a06baa42232e8958534e474a8764748f4" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>abort</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a10c038fc9ba3530e8c044de1df68f7b5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>advisoryPartitionSizeInBytes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a49fcc5b95f91c530750686409aa8574e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>applicationId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae8faad7e057321c2d59392dd197b49d6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asBatchAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae8faad7e057321c2d59392dd197b49d6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asBatchAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae8faad7e057321c2d59392dd197b49d6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asBatchAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a78fc12a0ca61568cbe4a0d2b420a6d74" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asCopyOnWriteOperation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a78fc12a0ca61568cbe4a0d2b420a6d74" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asCopyOnWriteOperation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a78fc12a0ca61568cbe4a0d2b420a6d74" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asCopyOnWriteOperation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6fd0b0cf74b583b9c25cecaec8ff6210" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asDynamicOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6fd0b0cf74b583b9c25cecaec8ff6210" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asDynamicOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6fd0b0cf74b583b9c25cecaec8ff6210" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asDynamicOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac6b0f6f8a3643f6fb75818bfe79b4572" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asOverwriteByFilter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac6b0f6f8a3643f6fb75818bfe79b4572" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asOverwriteByFilter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac6b0f6f8a3643f6fb75818bfe79b4572" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asOverwriteByFilter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a8df64caa146267bccc7497a9c7e54184" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a8df64caa146267bccc7497a9c7e54184" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a8df64caa146267bccc7497a9c7e54184" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4989664d499c716c77e8735d3d9fbef1" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asStreamingAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4989664d499c716c77e8735d3d9fbef1" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asStreamingAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4989664d499c716c77e8735d3d9fbef1" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asStreamingAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a94e792c37aed4fcbaa209cf6abc2a269" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asStreamingOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a94e792c37aed4fcbaa209cf6abc2a269" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asStreamingOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a94e792c37aed4fcbaa209cf6abc2a269" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>asStreamingOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aa9a56d16c21b637f064a9a03e205261d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>branch</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aeb7eaa314905effbaa4cab812e833a68" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>cleanupOnAbort</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6470aed65b5ae32fef05ddf9b748a202" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>commitOperation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6470aed65b5ae32fef05ddf9b748a202" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>commitOperation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6470aed65b5ae32fef05ddf9b748a202" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>commitOperation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a7b749ad92f5b1a2d949ffe9c59e8b9df" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>createWriterFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a7b749ad92f5b1a2d949ffe9c59e8b9df" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>createWriterFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a7b749ad92f5b1a2d949ffe9c59e8b9df" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>createWriterFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6b9d2b52c1dfd74be1e9529b930c10de" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>distributionStrictlyRequired</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a6b9d2b52c1dfd74be1e9529b930c10de" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>distributionStrictlyRequired</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a48bfc0b14ec30ef26d58d4d4c7be2fdd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>dsSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aaa198335285e9cb24fdb37fbd549f6cf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>extraSnapshotMetadata</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a95a48aacb74e4f0843741a2c5feb3ff8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>files</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a95a48aacb74e4f0843741a2c5feb3ff8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>files</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a95a48aacb74e4f0843741a2c5feb3ff8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>files</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a072d52703384d32774a23be49a385fb3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>format</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a04ad2f1049c69fd9a18e147c1fe32ce1" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a35fa43803cde74dd13b0a6095b138e61" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>outputSpecId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a4de879cbcaec2f0aec6eb919a09ae9c3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>partitionedFanoutEnabled</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ab4f9636acf0a8336e52cb1ee60078cab" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>queryId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ac14380b273280ed2e218f0691355cb17" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a268d477f514b0bcef3d32b6fdd6cbec8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a268d477f514b0bcef3d32b6fdd6cbec8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a268d477f514b0bcef3d32b6fdd6cbec8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1abe350b1446186c82d2a55c36382829dd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a25d1e385ac2cfff5a76fec93403a353f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a25d1e385ac2cfff5a76fec93403a353f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a25d1e385ac2cfff5a76fec93403a353f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>requiredOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a9c74f0326830fce1da3ee57b162c5b5f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>sparkContext</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a1cb4de523a90c935d527d37e1128d832" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>SparkWrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a47d82aa7d9f2f10ed4244ddaf59aedde" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>SparkWrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a47d82aa7d9f2f10ed4244ddaf59aedde" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>SparkWrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ae185eef7f8836f7ab0b104c740de2e24" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>table</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a54e217e25f1c1401636f45549101db92" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>targetFileSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a67c1fcb81af2552b45eb7319c10ef5ed" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>toString</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a67c1fcb81af2552b45eb7319c10ef5ed" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>toString</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a67c1fcb81af2552b45eb7319c10ef5ed" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>toString</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a5f4db6639ed419318e5c9cee2c13888d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>useFanoutWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a17a0364cd99e8b674a347a94b04e4251" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>wapEnabled</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1aba30ef10b91c4a8a6c4559c4e64907bc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>wapId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1abb6764153c87877897a467fcba07ce0e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>writeConf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1ab9c8769220433f234d4caa18b9e7e8af" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>writeProperties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a83b3b95e6b7c3aa5f15a412f05a77935" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>writeRequirements</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1a66a8d9b1c1ce6a7a2035260551aa63ac" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite</scope><name>writeSchema</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
