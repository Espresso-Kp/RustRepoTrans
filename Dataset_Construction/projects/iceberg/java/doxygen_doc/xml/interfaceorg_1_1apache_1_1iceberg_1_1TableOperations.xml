<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::TableOperations</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations" prot="public" virt="non-virtual">org.apache.iceberg.BaseMetastoreTableOperations</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations" prot="public" virt="non-virtual">org.apache.iceberg.BaseTransaction.TransactionTableOperations</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations" prot="public" virt="non-virtual">org.apache.iceberg.hadoop.HadoopTableOperations</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTTableOperations" prot="public" virt="non-virtual">org.apache.iceberg.rest.RESTTableOperations</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations" prot="public" virt="non-virtual">org.apache.iceberg.StaticTableOperations</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a96a251e76611125a2903eb608c97aa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
        <definition>TableMetadata org.apache.iceberg.TableOperations.current</definition>
        <argsstring>()</argsstring>
        <name>current</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations_1a790272ddcf38bbee75d8e5290090b7af">current</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1a9ae5bf62991130e76d2605591f6b1de3">current</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1a75f4d1406dedd8a41c29a459b81de474">current</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a8a268fe8cf4a41e81183672415aadcc0">current</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the currently loaded table metadata, without checking for updates.</para>
<para><simplesect kind="return"><para>table metadata </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="35" column="17"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a7de2e0057f40bc6432f2febc6d041fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
        <definition>TableMetadata org.apache.iceberg.TableOperations.refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations_1a866ff7f23d7cd4f565acf9ae3744533f">refresh</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1ae49cc352bccc8a533a24d66f601f0774">refresh</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1afdb5c6b49b3398530cc18679d48c21c6">refresh</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a3c0b3d8c7d80aa1a9cc7afb1814c9573">refresh</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the current table metadata after checking for updates.</para>
<para><simplesect kind="return"><para>table metadata </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="42" column="17"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1ad8497b710d8b0f0363af5759543d7aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.TableOperations.commit</definition>
        <argsstring>(TableMetadata base, TableMetadata metadata)</argsstring>
        <name>commit</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations_1a70c5a73ba512ac82f082ce23b78bb5cf">commit</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1ad8b3bc17454a9956d5991152448a61f6">commit</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1abc00048cdf2f3b123c492df5c406e9b9">commit</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1aca10c14454dc5f4ee9461104e4ff6d99">commit</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace the base table metadata with a new version.</para>
<para>This method should implement and document atomicity guarantees.</para>
<para>Implementations must check that the base metadata is current to avoid overwriting updates. Once the atomic commit operation succeeds, implementations must not perform any operations that may fail because failure in this method cannot be distinguished from commit failure.</para>
<para>Implementations must throw a {<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitStateUnknownException" kindref="compound">} in cases where it cannot be determined if the commit succeeded or failed. For example if a network partition causes the confirmation of the commit to be lost, the implementation should throw a CommitStateUnknownException. This is important because downstream users of this API need to know whether they can clean up the commit or not, if the state is unknown then it is not safe to remove any files. All other exceptions will be treated as if the commit has failed.  base table metadata on which changes were based  metadata new table metadata with updates </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="64" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a837621125cb806c9fe18fa8695d57e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref></type>
        <definition>FileIO org.apache.iceberg.TableOperations.io</definition>
        <argsstring>()</argsstring>
        <name>io</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsTableOperations_1a1981d511c5beaaf8b360ee9dfdbc72e3">io</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations_1a31f24114ece9c5e77a9b0781762e9d0f">io</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveTableOperations_1a74ac9350eb92a9a8f267bcbc050e55cc">io</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieTableOperations_1aae7d519f9f0040ecc48d295932d46400">io</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1af9616f5bbf26e2341c6e2b3cd96d18a4">io</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1_1InMemoryTableOperations_1a1972ec8b54067920e5f2b39b98a3b270">io</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1ac580aa5d28313bddf29de19cafa47ca0">io</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="" kindref="compound">FileIO</ref> to read and write table data and metadata files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1af8c45bfe2d92ccfb8bd85002c53424be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1encryption_1_1EncryptionManager" kindref="compound">EncryptionManager</ref></type>
        <definition>default EncryptionManager org.apache.iceberg.TableOperations.encryption</definition>
        <argsstring>()</argsstring>
        <name>encryption</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a6129443e878f4f548de01f858bec201f">encryption</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1encryption_1_1EncryptionManager" kindref="compound">org.apache.iceberg.encryption.EncryptionManager</ref> to encrypt and decrypt data files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="73" column="29" bodyfile="core/src/main/java/org/apache/iceberg/TableOperations.java" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a69cfcd6cd1bd9c9206e84bab3c00178a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.TableOperations.metadataFileLocation</definition>
        <argsstring>(String fileName)</argsstring>
        <name>metadataFileLocation</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations_1a92c493fe709b237cd571c594391bd8f3">metadataFileLocation</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1ac8f490239333631cd74e5c8b7563628c">metadataFileLocation</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1aec9c90df81c3d9fd03e173540976fc90">metadataFileLocation</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a657b01f780fa1585da721a26409092a0">metadataFileLocation</reimplementedby>
        <param>
          <type>String</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given the name of a metadata file, obtain the full path of that file using an appropriate base location of the implementation&apos;s choosing.</para>
<para>The file may not exist yet, in which case the path should be returned as if it were to be created by e.g. <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO_1a2088493983fbb8c7f26bef51d3fa93de" kindref="member">FileIO#newOutputFile(String)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a25bdac1888a151998df892de84c6028c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1LocationProvider" kindref="compound">LocationProvider</ref></type>
        <definition>LocationProvider org.apache.iceberg.TableOperations.locationProvider</definition>
        <argsstring>()</argsstring>
        <name>locationProvider</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations_1a14d5abb7b81fceefb6e6e7d86287aea8">locationProvider</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1a0b470d569e3e94cc77af15dd76573675">locationProvider</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1aa7e42d5b80a1584f5220c2811c7e18cf">locationProvider</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a5e22387f11857038b52df9aec479cd08">locationProvider</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="" kindref="compound">LocationProvider</ref> that supplies locations for new new data files.</para>
<para><simplesect kind="return"><para>a location provider configured for the current table state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="91" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a9e9a8c6707333cdbc8e36a3e0f422bc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref></type>
        <definition>default TableOperations org.apache.iceberg.TableOperations.temp</definition>
        <argsstring>(TableMetadata uncommittedMetadata)</argsstring>
        <name>temp</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations_1af13037495173bffb6ee9bf5ce9fa4219">temp</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1a03397d35d7540ad6dbc393f8178ef14a">temp</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>uncommittedMetadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a temporary <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref> instance that uses configuration from uncommitted metadata.</para>
<para>This is called by transactions when uncommitted table metadata should be used; for example, to create a metadata file location based on metadata in the transaction that has not been committed.</para>
<para><ref refid="classorg_1_1apache_1_1iceberg_1_1Transactions" kindref="compound">Transactions</ref> will not call <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a7de2e0057f40bc6432f2febc6d041fa6" kindref="member">refresh()</ref> or <ref refid="" kindref="compound">TableMetadata)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uncommittedMetadata</parametername>
</parameternamelist>
<parameterdescription>
<para>uncommitted table metadata </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a temporary table operations that behaves like the uncommitted metadata is current </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="107" column="27" bodyfile="core/src/main/java/org/apache/iceberg/TableOperations.java" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a1da78707a4d5726cfd0d6fc09a5e1899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default long</type>
        <definition>default long org.apache.iceberg.TableOperations.newSnapshotId</definition>
        <argsstring>()</argsstring>
        <name>newSnapshotId</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1af5809ab99efabc8c1d570c8ab00bb8ce">newSnapshotId</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new ID for a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></para>
<para><simplesect kind="return"><para>a long snapshot ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="116" column="16" bodyfile="core/src/main/java/org/apache/iceberg/TableOperations.java" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1ad929c931bb52ee6da72c476fdae6752d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.TableOperations.requireStrictCleanup</definition>
        <argsstring>()</argsstring>
        <name>requireStrictCleanup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether to clean up uncommitted metadata files only when a commit fails with a {<ref refid="" kindref="compound">} exception. </ref>This defaults to true: cleanup will only occur for exceptions marked as {<ref refid="" kindref="compound">} </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="127" column="19" bodyfile="core/src/main/java/org/apache/iceberg/TableOperations.java" bodystart="127" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>SPI interface to abstract table metadata access and updates. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.apache.iceberg.aws.dynamodb.DynamoDbTableOperations</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.TableOperations</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations"/>
      </node>
      <node id="10">
        <label>org.apache.iceberg.snowflake.SnowflakeTableOperations</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.BaseMetastoreTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>org.apache.iceberg.jdbc.JdbcTableOperations</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.aws.glue.GlueTableOperations</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>org.apache.iceberg.dell.ecs.EcsTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsTableOperations"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>org.apache.iceberg.StaticTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1StaticTableOperations"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>org.apache.iceberg.hadoop.HadoopTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTableOperations"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org.apache.iceberg.hive.HiveTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveTableOperations"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>org.apache.iceberg.nessie.NessieTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieTableOperations"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>org.apache.iceberg.inmemory.InMemoryCatalog.InMemoryTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1_1InMemoryTableOperations"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>org.apache.iceberg.BaseTransaction.TransactionTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>org.apache.iceberg.rest.RESTTableOperations</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="core/src/main/java/org/apache/iceberg/TableOperations.java" line="28" column="33" bodyfile="core/src/main/java/org/apache/iceberg/TableOperations.java" bodystart="28" bodyend="130"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1ad8497b710d8b0f0363af5759543d7aca" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>commit</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a96a251e76611125a2903eb608c97aa67" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>current</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1af8c45bfe2d92ccfb8bd85002c53424be" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>encryption</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a837621125cb806c9fe18fa8695d57e5a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>io</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a25bdac1888a151998df892de84c6028c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>locationProvider</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a69cfcd6cd1bd9c9206e84bab3c00178a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>metadataFileLocation</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a1da78707a4d5726cfd0d6fc09a5e1899" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>newSnapshotId</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a7de2e0057f40bc6432f2febc6d041fa6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>refresh</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1ad929c931bb52ee6da72c476fdae6752d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>requireStrictCleanup</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a9e9a8c6707333cdbc8e36a3e0f422bc3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::TableOperations</scope><name>temp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
