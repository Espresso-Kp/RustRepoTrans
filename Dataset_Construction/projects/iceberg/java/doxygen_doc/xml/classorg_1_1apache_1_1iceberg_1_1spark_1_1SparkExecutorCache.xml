<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::spark::SparkExecutorCache</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1_1CacheValue" prot="package">org::apache::iceberg::spark::SparkExecutorCache::CacheValue</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1_1Conf" prot="package">org::apache::iceberg::spark::SparkExecutorCache::Conf</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a41983447a8e1a4fe239c81b0780e42d0" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>static final Logger org.apache.iceberg.spark.SparkExecutorCache::LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(SparkExecutorCache.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="53" column="31" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a056b296bf0de53d0abf0bf767efa31e3" prot="private" static="yes" mutable="no">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kindref="compound">SparkExecutorCache</ref></type>
        <definition>static volatile SparkExecutorCache org.apache.iceberg.spark.SparkExecutorCache::instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="55" column="46" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1aec8297bfafe15c5d3effbea025cdd2ac" prot="private" static="no" mutable="no">
        <type>final Duration</type>
        <definition>final Duration org.apache.iceberg.spark.SparkExecutorCache::timeout</definition>
        <argsstring></argsstring>
        <name>timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="57" column="26" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a9a5be5619bc0b90f70e47a49266f667e" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.SparkExecutorCache::maxEntrySize</definition>
        <argsstring></argsstring>
        <name>maxEntrySize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="58" column="22" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a7b0cd87df94d63f5b361753cea7cae50" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.SparkExecutorCache::maxTotalSize</definition>
        <argsstring></argsstring>
        <name>maxTotalSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="59" column="22" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1abe49b306ee5c2a64130d93a2ca9bc8c5" prot="private" static="no" mutable="no">
        <type>Cache&lt; String, CacheValue &gt;</type>
        <definition>volatile Cache&lt; String, CacheValue &gt; org.apache.iceberg.spark.SparkExecutorCache::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="60" column="26" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a7e328a6f3a8e1d53c5ec4f1832532be3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkExecutorCache.SparkExecutorCache</definition>
        <argsstring>(Conf conf)</argsstring>
        <name>SparkExecutorCache</name>
        <param>
          <type>Conf</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="62" column="11" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a18f5d591f1b901903b5d54a385d941bb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; String &gt;</type>
        <definition>List&lt;String&gt; org.apache.iceberg.spark.SparkExecutorCache.findInternalKeys</definition>
        <argsstring>(String group)</argsstring>
        <name>findInternalKeys</name>
        <param>
          <type>String</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="143" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1abff703c5987ca4141314f1594779628b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Cache&lt; String, CacheValue &gt;</type>
        <definition>Cache&lt;String, CacheValue&gt; org.apache.iceberg.spark.SparkExecutorCache.state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="149" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ada0d14b4c5a3f6e06ea8075327c23a45" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Cache&lt; String, CacheValue &gt;</type>
        <definition>Cache&lt;String, CacheValue&gt; org.apache.iceberg.spark.SparkExecutorCache.initState</definition>
        <argsstring>()</argsstring>
        <name>initState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="162" column="17" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a7e328a6f3a8e1d53c5ec4f1832532be3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkExecutorCache.SparkExecutorCache</definition>
        <argsstring>(Conf conf)</argsstring>
        <name>SparkExecutorCache</name>
        <param>
          <type>Conf</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="62" column="11" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a18f5d591f1b901903b5d54a385d941bb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; String &gt;</type>
        <definition>List&lt;String&gt; org.apache.iceberg.spark.SparkExecutorCache.findInternalKeys</definition>
        <argsstring>(String group)</argsstring>
        <name>findInternalKeys</name>
        <param>
          <type>String</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="143" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1abff703c5987ca4141314f1594779628b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Cache&lt; String, CacheValue &gt;</type>
        <definition>Cache&lt;String, CacheValue&gt; org.apache.iceberg.spark.SparkExecutorCache.state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="149" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ada0d14b4c5a3f6e06ea8075327c23a45" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Cache&lt; String, CacheValue &gt;</type>
        <definition>Cache&lt;String, CacheValue&gt; org.apache.iceberg.spark.SparkExecutorCache.initState</definition>
        <argsstring>()</argsstring>
        <name>initState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="162" column="17" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="162" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afff85393a7d6e82822f27989be4c3bf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kindref="compound">SparkExecutorCache</ref></type>
        <definition>static SparkExecutorCache org.apache.iceberg.spark.SparkExecutorCache.getOrCreate</definition>
        <argsstring>()</argsstring>
        <name>getOrCreate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the cache if created or creates and returns it.</para>
<para>Note this method returns null if caching is disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="73" column="36" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afc8a418fcb40da7f8eaac39eda3ebe2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kindref="compound">SparkExecutorCache</ref></type>
        <definition>static SparkExecutorCache org.apache.iceberg.spark.SparkExecutorCache.get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the cache if already created or null otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="89" column="36" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afff85393a7d6e82822f27989be4c3bf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kindref="compound">SparkExecutorCache</ref></type>
        <definition>static SparkExecutorCache org.apache.iceberg.spark.SparkExecutorCache.getOrCreate</definition>
        <argsstring>()</argsstring>
        <name>getOrCreate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the cache if created or creates and returns it.</para>
<para>Note this method returns null if caching is disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="73" column="36" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afc8a418fcb40da7f8eaac39eda3ebe2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kindref="compound">SparkExecutorCache</ref></type>
        <definition>static SparkExecutorCache org.apache.iceberg.spark.SparkExecutorCache.get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the cache if already created or null otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="89" column="36" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="89" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a66fba79dd1846f005294d469e20b813d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.SparkExecutorCache.maxEntrySize</definition>
        <argsstring>()</argsstring>
        <name>maxEntrySize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the max entry size in bytes that will be considered for caching. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="94" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ad9c558541b1d7811d3d7eb0b414ff1f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.SparkExecutorCache.invalidate</definition>
        <argsstring>(String group)</argsstring>
        <name>invalidate</name>
        <param>
          <type>String</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalidates all keys associated with the given group ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>a group ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="134" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="134" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a66fba79dd1846f005294d469e20b813d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.SparkExecutorCache.maxEntrySize</definition>
        <argsstring>()</argsstring>
        <name>maxEntrySize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the max entry size in bytes that will be considered for caching. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="94" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ad9c558541b1d7811d3d7eb0b414ff1f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.SparkExecutorCache.invalidate</definition>
        <argsstring>(String group)</argsstring>
        <name>invalidate</name>
        <param>
          <type>String</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalidates all keys associated with the given group ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>a group ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="134" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="134" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afa0fea459d40a89e33676ced78ea3117" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; V &gt; V</type>
        <definition>public&lt;V&gt; V org.apache.iceberg.spark.SparkExecutorCache.getOrLoad</definition>
        <argsstring>(String group, String key, Supplier&lt; V &gt; valueSupplier, long valueSize)</argsstring>
        <name>getOrLoad</name>
        <param>
          <type>String</type>
          <declname>group</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Supplier&lt; V &gt;</type>
          <declname>valueSupplier</declname>
        </param>
        <param>
          <type>long</type>
          <declname>valueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the cached value for the key or populates the cache with a new mapping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>a group ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>a cache key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueSupplier</parametername>
</parameternamelist>
<parameterdescription>
<para>a supplier to compute the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueSize</parametername>
</parameternamelist>
<parameterdescription>
<para>an estimated memory size of the value in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the cached or computed value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="107" column="13" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1af6195611604a7568e4ed64e65f400912" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>private&lt; V &gt; Function&lt; String, CacheValue &gt;</type>
        <definition>private&lt;V&gt; Function&lt;String, CacheValue&gt; org.apache.iceberg.spark.SparkExecutorCache.loadFunc</definition>
        <argsstring>(Supplier&lt; V &gt; valueSupplier, long valueSize)</argsstring>
        <name>loadFunc</name>
        <param>
          <type>Supplier&lt; V &gt;</type>
          <declname>valueSupplier</declname>
        </param>
        <param>
          <type>long</type>
          <declname>valueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="119" column="21" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="119" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afa0fea459d40a89e33676ced78ea3117" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; V &gt; V</type>
        <definition>public&lt;V&gt; V org.apache.iceberg.spark.SparkExecutorCache.getOrLoad</definition>
        <argsstring>(String group, String key, Supplier&lt; V &gt; valueSupplier, long valueSize)</argsstring>
        <name>getOrLoad</name>
        <param>
          <type>String</type>
          <declname>group</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Supplier&lt; V &gt;</type>
          <declname>valueSupplier</declname>
        </param>
        <param>
          <type>long</type>
          <declname>valueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the cached value for the key or populates the cache with a new mapping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>a group ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>a cache key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueSupplier</parametername>
</parameternamelist>
<parameterdescription>
<para>a supplier to compute the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueSize</parametername>
</parameternamelist>
<parameterdescription>
<para>an estimated memory size of the value in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the cached or computed value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="107" column="13" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1af6195611604a7568e4ed64e65f400912" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>private&lt; V &gt; Function&lt; String, CacheValue &gt;</type>
        <definition>private&lt;V&gt; Function&lt;String, CacheValue&gt; org.apache.iceberg.spark.SparkExecutorCache.loadFunc</definition>
        <argsstring>(Supplier&lt; V &gt; valueSupplier, long valueSize)</argsstring>
        <name>loadFunc</name>
        <param>
          <type>Supplier&lt; V &gt;</type>
          <declname>valueSupplier</declname>
        </param>
        <param>
          <type>long</type>
          <declname>valueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="119" column="21" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="119" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An executor cache for reducing the computation and IO overhead in tasks.</para>
<para>The cache is configured and controlled through Spark SQL properties. It supports both limits on the total cache size and maximum size for individual entries. Additionally, it implements automatic eviction of entries after a specified duration of inactivity. The cache will respect the SQL configuration valid at the time of initialization. All subsequent changes to the configuration will have no effect.</para>
<para>The cache is accessed and populated via <ref refid="" kindref="compound">getOrLoad(String, String, Supplier, long)</ref>. If the value is not present in the cache, it is computed using the provided supplier and stored in the cache, subject to the defined size constraints. When a key is added, it must be associated with a particular group ID. Once the group is no longer needed, it is recommended to explicitly invalidate its state by calling <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ad9c558541b1d7811d3d7eb0b414ff1f3" kindref="member">invalidate(String)</ref> instead of relying on automatic eviction.</para>
<para>Note that this class employs the singleton pattern to ensure only one cache exists per JVM. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Cache&lt; String, CacheValue &gt;</label>
      </node>
      <node id="4">
        <label>Duration</label>
      </node>
      <node id="3">
        <label>Logger</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.SparkExecutorCache</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache"/>
        <childnode refid="2" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" line="51" column="32" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkExecutorCache.java" bodystart="51" bodyend="228"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a18f5d591f1b901903b5d54a385d941bb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>findInternalKeys</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a18f5d591f1b901903b5d54a385d941bb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>findInternalKeys</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afc8a418fcb40da7f8eaac39eda3ebe2a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>get</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afc8a418fcb40da7f8eaac39eda3ebe2a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>get</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afff85393a7d6e82822f27989be4c3bf7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>getOrCreate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afff85393a7d6e82822f27989be4c3bf7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>getOrCreate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afa0fea459d40a89e33676ced78ea3117" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>getOrLoad</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1afa0fea459d40a89e33676ced78ea3117" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>getOrLoad</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ada0d14b4c5a3f6e06ea8075327c23a45" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>initState</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ada0d14b4c5a3f6e06ea8075327c23a45" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>initState</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a056b296bf0de53d0abf0bf767efa31e3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>instance</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ad9c558541b1d7811d3d7eb0b414ff1f3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>invalidate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1ad9c558541b1d7811d3d7eb0b414ff1f3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>invalidate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1af6195611604a7568e4ed64e65f400912" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>loadFunc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1af6195611604a7568e4ed64e65f400912" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>loadFunc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a41983447a8e1a4fe239c81b0780e42d0" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a9a5be5619bc0b90f70e47a49266f667e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>maxEntrySize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a66fba79dd1846f005294d469e20b813d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>maxEntrySize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a66fba79dd1846f005294d469e20b813d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>maxEntrySize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a7b0cd87df94d63f5b361753cea7cae50" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>maxTotalSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a7e328a6f3a8e1d53c5ec4f1832532be3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>SparkExecutorCache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1a7e328a6f3a8e1d53c5ec4f1832532be3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>SparkExecutorCache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1abe49b306ee5c2a64130d93a2ca9bc8c5" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>state</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1abff703c5987ca4141314f1594779628b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>state</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1abff703c5987ca4141314f1594779628b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>state</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache_1aec8297bfafe15c5d3effbea025cdd2ac" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkExecutorCache</scope><name>timeout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
