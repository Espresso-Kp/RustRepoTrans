<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::expressions::Projections</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1BaseProjectionEvaluator" prot="private">org::apache::iceberg::expressions::Projections::BaseProjectionEvaluator</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1InclusiveProjection" prot="private">org::apache::iceberg::expressions::Projections::InclusiveProjection</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1ProjectionEvaluator" prot="public">org::apache::iceberg::expressions::Projections::ProjectionEvaluator</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1StrictProjection" prot="private">org::apache::iceberg::expressions::Projections::StrictProjection</innerclass>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1a0b9851891ee73dc74f71f6bb3afe4175" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.expressions.Projections.Projections</definition>
        <argsstring>()</argsstring>
        <name>Projections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Projections.java" line="29" column="11" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Projections.java" bodystart="29" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1aae3c73f75f21cd7b41bd264894734b2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1ProjectionEvaluator" kindref="compound">ProjectionEvaluator</ref></type>
        <definition>static ProjectionEvaluator org.apache.iceberg.expressions.Projections.inclusive</definition>
        <argsstring>(PartitionSpec spec)</argsstring>
        <name>inclusive</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an inclusive<programlisting><codeline><highlight class="normal">ProjectionEvaluator<sp/></highlight></codeline>
</programlisting> for the <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">spec</ref>, defaulting to case sensitive mode.</para>
<para>An evaluator is used to project expressions for a table&apos;s data rows into expressions on the table&apos;s partition values. The evaluator returned by this function is inclusive and will build expressions with the following guarantee: if the original expression matches a row, then the projected expression will match that row&apos;s partition.</para>
<para>Each predicate in the expression is projected using <ref refid="" kindref="compound">BoundPredicate)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an inclusive projection evaluator for the partition spec </para>
</simplesect>
<simplesect kind="see"><para>Transform::project(String, BoundPredicate) Inclusive transform used for each predicate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Projections.java" line="69" column="37" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Projections.java" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1aaa7ba6bf85021622618df39f9795e194" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1ProjectionEvaluator" kindref="compound">ProjectionEvaluator</ref></type>
        <definition>static ProjectionEvaluator org.apache.iceberg.expressions.Projections.inclusive</definition>
        <argsstring>(PartitionSpec spec, boolean caseSensitive)</argsstring>
        <name>inclusive</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an inclusive<programlisting><codeline><highlight class="normal">ProjectionEvaluator<sp/></highlight></codeline>
</programlisting> for the <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">spec</ref>.</para>
<para>An evaluator is used to project expressions for a table&apos;s data rows into expressions on the table&apos;s partition values. The evaluator returned by this function is inclusive and will build expressions with the following guarantee: if the original expression matches a row, then the projected expression will match that row&apos;s partition.</para>
<para>Each predicate in the expression is projected using <ref refid="" kindref="compound">BoundPredicate)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the Projection should consider case sensitivity on column names or not. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an inclusive projection evaluator for the partition spec </para>
</simplesect>
<simplesect kind="see"><para>Transform::project(String, BoundPredicate) Inclusive transform used for each predicate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Projections.java" line="90" column="37" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Projections.java" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1a2338ef2ec6efc6cd90eb6509d654a796" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1ProjectionEvaluator" kindref="compound">ProjectionEvaluator</ref></type>
        <definition>static ProjectionEvaluator org.apache.iceberg.expressions.Projections.strict</definition>
        <argsstring>(PartitionSpec spec)</argsstring>
        <name>strict</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a strict<programlisting><codeline><highlight class="normal">ProjectionEvaluator<sp/></highlight></codeline>
</programlisting> for the <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">spec</ref>, defaulting to case sensitive mode.</para>
<para>An evaluator is used to project expressions for a table&apos;s data rows into expressions on the table&apos;s partition values. The evaluator returned by this function is strict and will build expressions with the following guarantee: if the projected expression matches a partition, then the original expression will match all rows in that partition.</para>
<para>Each predicate in the expression is projected using <ref refid="" kindref="compound">BoundPredicate)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a strict projection evaluator for the partition spec </para>
</simplesect>
<simplesect kind="see"><para>Transform::projectStrict(String, BoundPredicate) Strict transform used for each predicate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Projections.java" line="110" column="37" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Projections.java" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1a09f43200fc268f81e452205b32aca793" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1_1ProjectionEvaluator" kindref="compound">ProjectionEvaluator</ref></type>
        <definition>static ProjectionEvaluator org.apache.iceberg.expressions.Projections.strict</definition>
        <argsstring>(PartitionSpec spec, boolean caseSensitive)</argsstring>
        <name>strict</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a strict<programlisting><codeline><highlight class="normal">ProjectionEvaluator<sp/></highlight></codeline>
</programlisting> for the <ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">spec</ref>.</para>
<para>An evaluator is used to project expressions for a table&apos;s data rows into expressions on the table&apos;s partition values. The evaluator returned by this function is strict and will build expressions with the following guarantee: if the projected expression matches a partition, then the original expression will match all rows in that partition.</para>
<para>Each predicate in the expression is projected using <ref refid="" kindref="compound">BoundPredicate)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the Projection should consider case sensitivity on column names or not. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a strict projection evaluator for the partition spec </para>
</simplesect>
<simplesect kind="see"><para>Transform::projectStrict(String, BoundPredicate) Strict transform used for each predicate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Projections.java" line="131" column="37" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Projections.java" bodystart="131" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Utils to project expressions on rows to expressions on partitions. </para>
    </detaileddescription>
    <location file="api/src/main/java/org/apache/iceberg/expressions/Projections.java" line="28" column="25" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Projections.java" bodystart="28" bodyend="264"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1aae3c73f75f21cd7b41bd264894734b2e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Projections</scope><name>inclusive</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1aaa7ba6bf85021622618df39f9795e194" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Projections</scope><name>inclusive</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1a0b9851891ee73dc74f71f6bb3afe4175" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::Projections</scope><name>Projections</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1a2338ef2ec6efc6cd90eb6509d654a796" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Projections</scope><name>strict</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Projections_1a09f43200fc268f81e452205b32aca793" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Projections</scope><name>strict</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
