<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">OutputCommitter</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ab0bd2b8a1ef7ad788476bdf79f00e186" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.FOR_COMMIT_EXTENSION</definition>
        <argsstring></argsstring>
        <name>FOR_COMMIT_EXTENSION</name>
        <initializer>= &quot;.forCommit&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="64" column="31" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1afd343f4c36b4cb42a403819b572d2fcc" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>final Logger org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(HiveIcebergOutputCommitter.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="66" column="31" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a9eba0da1f7a9f350356457c4e62fc670" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.setupJob</definition>
        <argsstring>(JobContext jobContext)</argsstring>
        <name>setupJob</name>
        <param>
          <type>JobContext</type>
          <declname>jobContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="69" column="15" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a16a042a09c6685317c11e1a0f65ef6ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.setupTask</definition>
        <argsstring>(TaskAttemptContext taskAttemptContext)</argsstring>
        <name>setupTask</name>
        <param>
          <type>TaskAttemptContext</type>
          <declname>taskAttemptContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="74" column="15" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1aaffa7516cb9fd6258885314553f508e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.needsTaskCommit</definition>
        <argsstring>(TaskAttemptContext context)</argsstring>
        <name>needsTaskCommit</name>
        <param>
          <type>TaskAttemptContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="79" column="18" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a8c0fa53c19205d44ff94952d62f669a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.commitTask</definition>
        <argsstring>(TaskAttemptContext originalContext)</argsstring>
        <name>commitTask</name>
        <param>
          <type>TaskAttemptContext</type>
          <declname>originalContext</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Collects the generated data files and creates a commit file storing the data file list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originalContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The task attempt context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is an error writing the commit file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="92" column="15" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="92" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1aa2c29d5670ab0a74deabab1cf0e4828d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.abortTask</definition>
        <argsstring>(TaskAttemptContext originalContext)</argsstring>
        <name>abortTask</name>
        <param>
          <type>TaskAttemptContext</type>
          <declname>originalContext</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes files generated by this task.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originalContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The task attempt context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is an error closing the writer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="166" column="15" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="166" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a251b416b68425f99e27b0cf29e483283" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.commitJob</definition>
        <argsstring>(JobContext originalContext)</argsstring>
        <name>commitJob</name>
        <param>
          <type>JobContext</type>
          <declname>originalContext</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the commit files stored in the temp directories and collects the generated committed data files. Appends the data files to the tables. At the end removes the temporary directories.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originalContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The job context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a failure accessing the files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="189" column="15" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="189" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a0a8e70f433d2ad804bfa277373ecdee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.abortJob</definition>
        <argsstring>(JobContext originalContext, int status)</argsstring>
        <name>abortJob</name>
        <param>
          <type>JobContext</type>
          <declname>originalContext</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the generated data files if there is a commit file already generated for them. The cleanup at the end removes the temporary directories as well.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originalContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The job context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The status of the job </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a failure deleting the files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="246" column="15" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="246" bodyend="294"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1aad4c39f890610f126497ce48c2fe35ee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.commitTable</definition>
        <argsstring>(FileIO io, ExecutorService executor, JobContext jobContext, String name, String location, String catalogName)</argsstring>
        <name>commitTable</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref></type>
          <declname>io</declname>
        </param>
        <param>
          <type>ExecutorService</type>
          <declname>executor</declname>
        </param>
        <param>
          <type>JobContext</type>
          <declname>jobContext</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>String</type>
          <declname>catalogName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Collects the additions to a single table and adds/commits the new files to the Iceberg table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>io</parametername>
</parameternamelist>
<parameterdescription>
<para>The io to read the forCommit files </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>executor</parametername>
</parameternamelist>
<parameterdescription>
<para>The executor used to read the forCommit files </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The job context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the table used for loading from the catalog </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the table used for loading from the catalog </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catalogName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the catalog that contains the table </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="306" column="16" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="306" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1af56dd07dc11da235531be6c5d5e6d554" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.cleanup</definition>
        <argsstring>(JobContext jobContext, Collection&lt; String &gt; jobLocations)</argsstring>
        <name>cleanup</name>
        <param>
          <type>JobContext</type>
          <declname>jobContext</declname>
        </param>
        <param>
          <type>Collection&lt; String &gt;</type>
          <declname>jobLocations</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleans up the jobs temporary locations. For every target table there is a temp dir to clean up.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jobContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The job context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobLocations</parametername>
</parameternamelist>
<parameterdescription>
<para>The locations to clean up </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a failure deleting the files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="356" column="16" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="356" bodyend="378"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a72e8c36f841c0d196f31d3446be6df38" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExecutorService</type>
        <definition>static ExecutorService org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.fileExecutor</definition>
        <argsstring>(Configuration conf)</argsstring>
        <name>fileExecutor</name>
        <param>
          <type>Configuration</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executor service for parallel handling of file reads. Should be shared when committing multiple tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration containing the pool size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The generated executor service </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="387" column="34" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="387" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ad553b0129803aa1033485c52aeb33d99" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExecutorService</type>
        <definition>static ExecutorService org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.tableExecutor</definition>
        <argsstring>(Configuration conf, int maxThreadNum)</argsstring>
        <name>tableExecutor</name>
        <param>
          <type>Configuration</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxThreadNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executor service for parallel handling of table manipulation. Could return null, if no parallelism is possible.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration containing the pool size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxThreadNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of requests we want to handle (might be decreased further by configuration) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The generated executor service, or null if executor is not needed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="410" column="34" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="410" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a0b32cac3468be5c75b1c6ead4b73fbde" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Collection&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref> &gt;</type>
        <definition>static Collection&lt;DataFile&gt; org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.dataFiles</definition>
        <argsstring>(ExecutorService executor, String location, JobContext jobContext, FileIO io, boolean throwOnFailure)</argsstring>
        <name>dataFiles</name>
        <param>
          <type>ExecutorService</type>
          <declname>executor</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>JobContext</type>
          <declname>jobContext</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref></type>
          <declname>io</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>throwOnFailure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the committed data files for this table and job.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executor</parametername>
</parameternamelist>
<parameterdescription>
<para>The executor used for reading the forCommit files parallel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobContext</parametername>
</parameternamelist>
<parameterdescription>
<para>The job context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>io</parametername>
</parameternamelist>
<parameterdescription>
<para>The FileIO used for reading a files generated for commit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>throwOnFailure</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> then it throws an exception on failure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The list of the committed data files </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="439" column="29" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="439" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ae218d8d9cf4df4af9f64099125601b5b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.generateFileForCommitLocation</definition>
        <argsstring>(String location, Configuration conf, JobID jobId, int taskId)</argsstring>
        <name>generateFileForCommitLocation</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>Configuration</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>JobID</type>
          <declname>jobId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taskId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates file location based on the task configuration and a specific task id. This file will be used to store the data required to generate the Iceberg commit. Currently it uses TABLE_LOCATION/temp/QUERY_ID-jobId/task-[0..numTasks).forCommit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>The job&apos;s configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobId</parametername>
</parameternamelist>
<parameterdescription>
<para>The jobId for the task </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taskId</parametername>
</parameternamelist>
<parameterdescription>
<para>The taskId for the commit file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file to store the results </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="496" column="25" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a98585b4953eea6dc9d198185d0b790e8" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.createFileForCommit</definition>
        <argsstring>(DataFile[] closedFiles, String location, FileIO io)</argsstring>
        <name>createFileForCommit</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>[]</type>
          <declname>closedFiles</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref></type>
          <declname>io</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="501" column="23" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="501" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a9fb50133bd1b8528603e7c3910e8b80b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>[]</type>
        <definition>static DataFile [] org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.readFileForCommit</definition>
        <argsstring>(String fileForCommitLocation, FileIO io)</argsstring>
        <name>readFileForCommit</name>
        <param>
          <type>String</type>
          <declname>fileForCommitLocation</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref></type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="511" column="27" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="511" bodyend="519"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ae52bbcba3bd32586aecaa2bce6fd5a06" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter.generateJobLocation</definition>
        <argsstring>(String location, Configuration conf, JobID jobId)</argsstring>
        <name>generateJobLocation</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>Configuration</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>JobID</type>
          <declname>jobId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates the job temp location based on the job configuration. Currently it uses TABLE_LOCATION/temp/QUERY_ID-jobId.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>The job&apos;s configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobId</parametername>
</parameternamelist>
<parameterdescription>
<para>The JobID for the task </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file to store the results </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="480" column="17" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="480" bodyend="483"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An Iceberg table committer for adding data files to the Iceberg tables. Currently independent of the Hive ACID transactions. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OutputCommitter</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.mr.hive.HiveIcebergOutputCommitter</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Logger</label>
      </node>
      <node id="2">
        <label>OutputCommitter</label>
      </node>
    </collaborationgraph>
    <location file="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" line="63" column="56" bodyfile="mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergOutputCommitter.java" bodystart="63" bodyend="520"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a0a8e70f433d2ad804bfa277373ecdee9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>abortJob</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1aa2c29d5670ab0a74deabab1cf0e4828d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>abortTask</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1af56dd07dc11da235531be6c5d5e6d554" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>cleanup</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a251b416b68425f99e27b0cf29e483283" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>commitJob</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1aad4c39f890610f126497ce48c2fe35ee" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>commitTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a8c0fa53c19205d44ff94952d62f669a3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>commitTask</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a98585b4953eea6dc9d198185d0b790e8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>createFileForCommit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a0b32cac3468be5c75b1c6ead4b73fbde" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>dataFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a72e8c36f841c0d196f31d3446be6df38" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>fileExecutor</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ab0bd2b8a1ef7ad788476bdf79f00e186" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>FOR_COMMIT_EXTENSION</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ae218d8d9cf4df4af9f64099125601b5b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>generateFileForCommitLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ae52bbcba3bd32586aecaa2bce6fd5a06" prot="package" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>generateJobLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1afd343f4c36b4cb42a403819b572d2fcc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1aaffa7516cb9fd6258885314553f508e1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>needsTaskCommit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a9fb50133bd1b8528603e7c3910e8b80b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>readFileForCommit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a9eba0da1f7a9f350356457c4e62fc670" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>setupJob</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1a16a042a09c6685317c11e1a0f65ef6ee" prot="public" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>setupTask</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1HiveIcebergOutputCommitter_1ad553b0129803aa1033485c52aeb33d99" prot="private" virt="non-virtual"><scope>org::apache::iceberg::mr::hive::HiveIcebergOutputCommitter</scope><name>tableExecutor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
