<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::actions::DeleteOrphanFiles</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action" prot="public" virt="non-virtual">org.apache.iceberg.actions.Action&lt; DeleteOrphanFiles, DeleteOrphanFiles.Result &gt;</basecompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1BaseDeleteOrphanFiles" prot="public" virt="non-virtual">org.apache.iceberg.actions.BaseDeleteOrphanFiles</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction" prot="public" virt="non-virtual">org.apache.iceberg.spark.actions.DeleteOrphanFilesSparkAction</derivedcompoundref>
    <innerclass refid="enumorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1_1PrefixMismatchMode" prot="public">org::apache::iceberg::actions::DeleteOrphanFiles::PrefixMismatchMode</innerclass>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1_1Result" prot="public">org::apache::iceberg::actions::DeleteOrphanFiles::Result</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1aca76e5bf6b03871aaa72509f026170a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.location</definition>
        <argsstring>(String location)</argsstring>
        <name>location</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a8f2e31d4e5c8740d0222e3fa0aa1f0a7">location</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a8f2e31d4e5c8740d0222e3fa0aa1f0a7">location</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a8f2e31d4e5c8740d0222e3fa0aa1f0a7">location</reimplementedby>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes a location which should be scanned for orphan files.</para>
<para>If not set, the root table location will be scanned potentially removing both orphan data and metadata files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>the location where to look for orphan files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="44" column="21"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a7ba1887c8668eccf6fe6d9f10faaeb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.olderThan</definition>
        <argsstring>(long olderThanTimestamp)</argsstring>
        <name>olderThan</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a57b0104b9804c3acda3de18486b20012">olderThan</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a57b0104b9804c3acda3de18486b20012">olderThan</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a57b0104b9804c3acda3de18486b20012">olderThan</reimplementedby>
        <param>
          <type>long</type>
          <declname>olderThanTimestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes orphan files only if they are older than the given timestamp.</para>
<para>This is a safety measure to avoid removing files that are being added to the table. For example, there may be a concurrent operation adding new files while this action searches for orphan files. New files may not be referenced by the metadata yet but they are not orphan.</para>
<para>If not set, defaults to a timestamp 3 days ago.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>olderThanTimestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>a long timestamp, as returned by <ref refid="" kindref="compound">System#currentTimeMillis()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="58" column="21"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a16b4eb79ce99c620f05930cb524554f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.deleteWith</definition>
        <argsstring>(Consumer&lt; String &gt; deleteFunc)</argsstring>
        <name>deleteWith</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a72fc861930be8ce0b2c956b26955c4f6">deleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a72fc861930be8ce0b2c956b26955c4f6">deleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a72fc861930be8ce0b2c956b26955c4f6">deleteWith</reimplementedby>
        <param>
          <type>Consumer&lt; String &gt;</type>
          <declname>deleteFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative delete implementation that will be used for orphan files.</para>
<para>This method allows users to customize the delete function. For example, one may set a custom delete func and collect all orphan files into a set instead of physically removing them.</para>
<para>If not set, defaults to using the table&apos;s <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">io</ref> implementation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deleteFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called to delete files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="72" column="21"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a81065d92fc378af9b3a26265165a1306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.executeDeleteWith</definition>
        <argsstring>(ExecutorService executorService)</argsstring>
        <name>executeDeleteWith</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1abb6e5e66ce372cdf605726f1afbaafb6">executeDeleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1abb6e5e66ce372cdf605726f1afbaafb6">executeDeleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1abb6e5e66ce372cdf605726f1afbaafb6">executeDeleteWith</reimplementedby>
        <param>
          <type>ExecutorService</type>
          <declname>executorService</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative executor service that will be used for removing orphaned files. This service will only be used if a custom delete function is provided by {<ref refid="" kindref="compound">} or if the FileIO does not  SupportsBulkOperations support bulk deletes}. Otherwise, parallelism should be controlled by the IO specific { SupportsBulkOperations#deleteFiles(Iterable) deleteFiles} method. </ref>If this method is not called and bulk deletes are not supported, orphaned manifests and data files will still be deleted in the current thread.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executorService</parametername>
</parameternamelist>
<parameterdescription>
<para>the service to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="87" column="21"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1ad50116cac9c8cd2fc40ea3defa6526ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>default DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.prefixMismatchMode</definition>
        <argsstring>(PrefixMismatchMode newPrefixMismatchMode)</argsstring>
        <name>prefixMismatchMode</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a526d84e22911a00c710f476d872d9f9d">prefixMismatchMode</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a526d84e22911a00c710f476d872d9f9d">prefixMismatchMode</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a526d84e22911a00c710f476d872d9f9d">prefixMismatchMode</reimplementedby>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1_1PrefixMismatchMode" kindref="compound">PrefixMismatchMode</ref></type>
          <declname>newPrefixMismatchMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes a prefix mismatch mode that determines how this action should handle situations when the metadata references files that match listed/provided files except for authority/scheme.</para>
<para>Possible values are &quot;ERROR&quot;, &quot;IGNORE&quot;, &quot;DELETE&quot;. The default mismatch mode is &quot;ERROR&quot;, which means an exception is thrown whenever there is a mismatch in authority/scheme. It&apos;s the recommended mismatch mode and should be changed only in some rare circumstances. If there is a mismatch, use <ref refid="" kindref="compound">equalSchemes(Map)</ref> and <ref refid="" kindref="compound">equalAuthorities(Map)</ref> to resolve conflicts by providing equivalent schemes and authorities. If it is impossible to determine whether the conflicting authorities/schemes are equal, set the prefix mismatch mode to &quot;IGNORE&quot; to skip files with mismatches. If you have manually inspected all conflicting authorities/schemes, provided equivalent schemes/authorities and are absolutely confident the remaining ones are different, set the prefix mismatch mode to &quot;DELETE&quot; to consider files with mismatches as orphan. It will be impossible to recover files after deletion, so the &quot;DELETE&quot; prefix mismatch mode must be used with extreme caution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPrefixMismatchMode</parametername>
</parameternamelist>
<parameterdescription>
<para>mode for handling prefix mismatches </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="108" column="29" bodyfile="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a70b03e65f98718983d249f1cc45b8454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>default DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.equalSchemes</definition>
        <argsstring>(Map&lt; String, String &gt; newEqualSchemes)</argsstring>
        <name>equalSchemes</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1af0555dc50318bd056fae6f0efc501fe3">equalSchemes</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1af0555dc50318bd056fae6f0efc501fe3">equalSchemes</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1af0555dc50318bd056fae6f0efc501fe3">equalSchemes</reimplementedby>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>newEqualSchemes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes schemes that should be considered equal.</para>
<para>The key may include a comma-separated list of schemes. For instance, Map(&quot;s3a,s3,s3n&quot;, &quot;s3&quot;).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newEqualSchemes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of equal schemes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="122" column="29" bodyfile="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a86fc17bb25fdcbe4608e33e44b1cab84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles" kindref="compound">DeleteOrphanFiles</ref></type>
        <definition>default DeleteOrphanFiles org.apache.iceberg.actions.DeleteOrphanFiles.equalAuthorities</definition>
        <argsstring>(Map&lt; String, String &gt; newEqualAuthorities)</argsstring>
        <name>equalAuthorities</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a4f21c929cf7a2db2f78509eef5969cdc">equalAuthorities</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a4f21c929cf7a2db2f78509eef5969cdc">equalAuthorities</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction_1a4f21c929cf7a2db2f78509eef5969cdc">equalAuthorities</reimplementedby>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>newEqualAuthorities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes authorities that should be considered equal.</para>
<para>The key may include a comma-separate list of authorities. For instance, Map(&quot;s1name,s2name&quot;, &quot;servicename&quot;).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newEqualAuthorities</parametername>
</parameternamelist>
<parameterdescription>
<para>list of equal authorities </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="136" column="29" bodyfile="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" bodystart="136" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An action that deletes orphan metadata, data and delete files in a table.</para>
<para>A file is considered orphan if it is not reachable by any valid snapshot. The set of actual files is built by listing the underlying storage which makes this operation expensive. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.actions.DeleteOrphanFiles</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.spark.actions.DeleteOrphanFilesSparkAction</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1DeleteOrphanFilesSparkAction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.actions.Action&lt; DeleteOrphanFiles, DeleteOrphanFiles.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action"/>
      </node>
      <node id="3">
        <label>org.apache.iceberg.actions.BaseDeleteOrphanFiles</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.actions.DeleteOrphanFiles</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.actions.Action&lt; DeleteOrphanFiles, DeleteOrphanFiles.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action"/>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" line="34" column="44" bodyfile="api/src/main/java/org/apache/iceberg/actions/DeleteOrphanFiles.java" bodystart="34" bodyend="167"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a16b4eb79ce99c620f05930cb524554f8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>deleteWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a86fc17bb25fdcbe4608e33e44b1cab84" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>equalAuthorities</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a70b03e65f98718983d249f1cc45b8454" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>equalSchemes</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1ad2b991f8193b21534f7f1b647ced0757" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>execute</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a81065d92fc378af9b3a26265165a1306" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>executeDeleteWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1aca76e5bf6b03871aaa72509f026170a0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>location</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1a7ba1887c8668eccf6fe6d9f10faaeb0e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>olderThan</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1a7f4cee506b8657f0091d7ac57eed767f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>option</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1aedb3c8e8e03088ee8ec151db15474d9c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>options</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1DeleteOrphanFiles_1ad50116cac9c8cd2fc40ea3defa6526ee" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::DeleteOrphanFiles</scope><name>prefixMismatchMode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
