<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::transforms::Transform</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform" prot="public" virt="non-virtual">org.apache.iceberg.transforms.UnknownTransform&lt; S, T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>S</type>
      </param>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a66e0eaf482b30c064e7b39089444240e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default T</type>
        <definition>default T org.apache.iceberg.transforms.Transform&lt; S, T &gt;.apply</definition>
        <argsstring>(S value)</argsstring>
        <name>apply</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform_1ae1d6bf46f669f54dd21ecf919dc9d09b">apply</reimplementedby>
        <param>
          <type>S</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1Transforms" kindref="compound">Transforms</ref> a value to its corresponding partition value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>a source value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a transformed partition value </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000013"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1acc62b7e635feade156287342878950b9" kindref="member">bind(Type)</ref> instead; will be removed in 2.0.0 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="48" column="13" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1acc62b7e635feade156287342878950b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1util_1_1SerializableFunction" kindref="compound">SerializableFunction</ref>&lt; S, T &gt;</type>
        <definition>default SerializableFunction&lt;S, T&gt; org.apache.iceberg.transforms.Transform&lt; S, T &gt;.bind</definition>
        <argsstring>(Type type)</argsstring>
        <name>bind</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform_1aea1b3a0cd71219194ab8426f72896f93">bind</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a function that applies this transform to values of the given <ref refid="" kindref="compound">type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>an Iceberg <ref refid="" kindref="compound">Type</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="" kindref="compound">Function</ref> that applies this transform to values of the given type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="59" column="32" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a6f8b7e633d8cd7e379142db8eb29bb8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.transforms.Transform&lt; S, T &gt;.canTransform</definition>
        <argsstring>(Type type)</argsstring>
        <name>canTransform</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform_1a96c73317371f9f713e00051af013c4ac">canTransform</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether this function can be applied to the given <ref refid="" kindref="compound">Type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if this transform can be applied to the type, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="69" column="11"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1abf15a8eb90311deddc720d1f9781d7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type org.apache.iceberg.transforms.Transform&lt; S, T &gt;.getResultType</definition>
        <argsstring>(Type sourceType)</argsstring>
        <name>getResultType</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform_1aba6ba6fe3f5fcf1a6eb427a9ea0fd41b">getResultType</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>sourceType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="" kindref="compound">Type</ref> produced by this transform given a source type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sourceType</parametername>
</parameternamelist>
<parameterdescription>
<para>a type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result type created by the apply method for the given type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="77" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a0c24fa40b7fefa987423cb69bcdf7af6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.transforms.Transform&lt; S, T &gt;.preservesOrder</definition>
        <argsstring>()</argsstring>
        <name>preservesOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the transform preserves the order of values (is monotonic).</para>
<para>A transform preserves order for values when for any given a and b, if a &lt; b then apply(a) &lt;= apply(b).</para>
<para><simplesect kind="return"><para>true if the transform preserves the order of values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="87" column="19" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a6d4654d8d2ccb9976596ce4c2bf26119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.transforms.Transform&lt; S, T &gt;.satisfiesOrderOf</definition>
        <argsstring>(Transform&lt;?, ?&gt; other)</argsstring>
        <name>satisfiesOrderOf</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform" kindref="compound">Transform</ref>&lt;?, ?&gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether ordering by this transform&apos;s result satisfies the ordering of another transform&apos;s result.</para>
<para>For example, sorting by day(ts) will produce an ordering that is also by month(ts) or year(ts). However, sorting by day(ts) will not satisfy the order of hour(ts) or identity(ts).</para>
<para><simplesect kind="return"><para>true if ordering by this transform is equivalent to ordering by the other transform </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="100" column="19" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1aff0e4c12bbea5735268d62fcba5e903c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1UnboundPredicate" kindref="compound">UnboundPredicate</ref>&lt; T &gt;</type>
        <definition>UnboundPredicate&lt;T&gt; org.apache.iceberg.transforms.Transform&lt; S, T &gt;.project</definition>
        <argsstring>(String name, BoundPredicate&lt; S &gt; predicate)</argsstring>
        <name>project</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform_1a55285ed26e5097bd77e037040dfb0afe">project</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate" kindref="compound">BoundPredicate</ref>&lt; S &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1Transforms" kindref="compound">Transforms</ref> a <ref refid="" kindref="compound">predicate</ref> to an inclusive predicate on the partition values produced by the transform.</para>
<para>This inclusive transform guarantees that if pred(v) is true, then projected(apply(v)) is true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the field name for partition values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>predicate</parametername>
</parameternamelist>
<parameterdescription>
<para>a predicate for source values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an inclusive predicate on partition values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="115" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1af3d713ed9fb86faea2181d8b62500cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1UnboundPredicate" kindref="compound">UnboundPredicate</ref>&lt; T &gt;</type>
        <definition>UnboundPredicate&lt;T&gt; org.apache.iceberg.transforms.Transform&lt; S, T &gt;.projectStrict</definition>
        <argsstring>(String name, BoundPredicate&lt; S &gt; predicate)</argsstring>
        <name>projectStrict</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform_1a65ed5408e0ee42efb51b9f75f17341d2">projectStrict</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate" kindref="compound">BoundPredicate</ref>&lt; S &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1Transforms" kindref="compound">Transforms</ref> a <ref refid="" kindref="compound">predicate</ref> to a strict predicate on the partition values produced by the transform.</para>
<para>This strict transform guarantees that if strict(apply(v)) is true, then pred(v) is also true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the field name for partition values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>predicate</parametername>
</parameternamelist>
<parameterdescription>
<para>a predicate for source values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an inclusive predicate on partition values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="128" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a3df21d15054b99e348f83887ea69a092" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.transforms.Transform&lt; S, T &gt;.isIdentity</definition>
        <argsstring>()</argsstring>
        <name>isIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether this transform is the identity transform.</para>
<para><simplesect kind="return"><para>true if this is an identity transform, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="135" column="19" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1aeb976db53e1e4878b4efc3d9fcba9a99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.transforms.Transform&lt; S, T &gt;.isVoid</definition>
        <argsstring>()</argsstring>
        <name>isVoid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether this transform is the void transform.</para>
<para><simplesect kind="return"><para>true if this is a void transform, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="144" column="19" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a0d760e53e012dd78f21a5f8fcf090685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default String</type>
        <definition>default String org.apache.iceberg.transforms.Transform&lt; S, T &gt;.toHumanString</definition>
        <argsstring>(T value)</argsstring>
        <name>toHumanString</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a human-readable String representation of a transformed value.</para>
<para>null values will return &quot;null&quot;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>a transformed value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a human-readable String representation of the value </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="" kindref="compound">toHumanString(Type, Object)</ref> instead; will be removed in 2.0.0 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="158" column="18" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="158" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a446e9975b5c8943a3c79961828964c4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default String</type>
        <definition>default String org.apache.iceberg.transforms.Transform&lt; S, T &gt;.toHumanString</definition>
        <argsstring>(Type type, T value)</argsstring>
        <name>toHumanString</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="168" column="18" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="168" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a8307bedfb0caa0f4146a64e6ca3436b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default String</type>
        <definition>default String org.apache.iceberg.transforms.Transform&lt; S, T &gt;.dedupName</definition>
        <argsstring>()</argsstring>
        <name>dedupName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the unique transform name to check if similar transforms for the same source field are added multiple times in partition spec builder.</para>
<para><simplesect kind="return"><para>a name used for dedup </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="204" column="18" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="204" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A transform function used for partitioning.</para>
<para>Implementations of this interface can be used to transform values, check or types, and project <ref refid="" kindref="compound">predicates</ref> to predicates on partition values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;S&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Java class of source values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;T&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Java class of transformed values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.transforms.Transform&lt; S, T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org::apache::iceberg::transforms::UnknownTransform&lt; S, T &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1transforms_1_1UnknownTransform"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.transforms.Transform&lt; S, T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/transforms/Transform.java" line="39" column="41" bodyfile="api/src/main/java/org/apache/iceberg/transforms/Transform.java" bodystart="39" bodyend="207"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a66e0eaf482b30c064e7b39089444240e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>apply</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1acc62b7e635feade156287342878950b9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>bind</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a6f8b7e633d8cd7e379142db8eb29bb8e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>canTransform</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a8307bedfb0caa0f4146a64e6ca3436b7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>dedupName</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1abf15a8eb90311deddc720d1f9781d7ea" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>getResultType</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a3df21d15054b99e348f83887ea69a092" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>isIdentity</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1aeb976db53e1e4878b4efc3d9fcba9a99" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>isVoid</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a0c24fa40b7fefa987423cb69bcdf7af6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>preservesOrder</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1aff0e4c12bbea5735268d62fcba5e903c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>project</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1af3d713ed9fb86faea2181d8b62500cbd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>projectStrict</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a6d4654d8d2ccb9976596ce4c2bf26119" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>satisfiesOrderOf</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a0d760e53e012dd78f21a5f8fcf090685" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>toHumanString</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform_1a446e9975b5c8943a3c79961828964c4c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::transforms::Transform</scope><name>toHumanString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
