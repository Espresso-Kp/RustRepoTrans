<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="RemoveSnapshots_8java" kind="file" language="Java">
    <compoundname>RemoveSnapshots.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1RemoveSnapshots" prot="package">org::apache::iceberg::RemoveSnapshots</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg">org::apache::iceberg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a23f5045580fe34658b42f28db973f2a1" kindref="member">COMMIT_MAX_RETRY_WAIT_MS</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ac45e17cf44ad36e4868e0baa2572b255" kindref="member">COMMIT_MAX_RETRY_WAIT_MS_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a9c9f52b31c1f233b045573d14cd78985" kindref="member">COMMIT_MIN_RETRY_WAIT_MS</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a39c3419cd4dc1557fed230ffba3670a3" kindref="member">COMMIT_MIN_RETRY_WAIT_MS_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a864293367ff937c803f57a0664065e19" kindref="member">COMMIT_NUM_RETRIES</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a3a5472d1c63b84db40ddc56574be5f43" kindref="member">COMMIT_NUM_RETRIES_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a34c7fdbe7f27f89eaf55df1f63f6ae7d" kindref="member">COMMIT_TOTAL_RETRY_TIME_MS</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ad9cf752dce2ad464d55bd322c3774d05" kindref="member">COMMIT_TOTAL_RETRY_TIME_MS_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a93ee0d7c5766cc29426a1e8ae2151a88" kindref="member">GC_ENABLED</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a685381469d4f7776beab6a206a099b92" kindref="member">GC_ENABLED_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a4cd970f1aa2439967a02459c2eb35890" kindref="member">MAX_REF_AGE_MS</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a90b35610ee599ea838c088a531c28ce1" kindref="member">MAX_REF_AGE_MS_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1acae25e9b6135e29e4a49cbbcb7643d31" kindref="member">MAX_SNAPSHOT_AGE_MS</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a505d44a75c4350e0ab746413ed3c182e" kindref="member">MAX_SNAPSHOT_AGE_MS_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1afc004d25958fd542e4d545c541c1972c" kindref="member">MIN_SNAPSHOTS_TO_KEEP</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a62b77091be733c3ec7851c8105067ba9" kindref="member">MIN_SNAPSHOTS_TO_KEEP_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collection;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Set;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.ExecutorService;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.function.Consumer;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Maps" kindref="compound">Maps</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Sets" kindref="compound">Sets</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.util.concurrent.MoreExecutors;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1DateTimeUtil" kindref="compound">DateTimeUtil</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil" kindref="compound">PropertyUtil</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Tasks" kindref="compound">Tasks</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ThreadPools" kindref="compound">ThreadPools</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.slf4j.Logger;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.slf4j.LoggerFactory;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;UnnecessaryAnonymousClass&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">class<sp/>RemoveSnapshots<sp/>implements<sp/>ExpireSnapshots<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Logger<sp/>LOG<sp/>=<sp/>LoggerFactory.getLogger(RemoveSnapshots.class);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>an<sp/>executor<sp/>service<sp/>that<sp/>runs<sp/>each<sp/>task<sp/>in<sp/>the<sp/>thread<sp/>that<sp/>invokes<sp/>execute/submit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>ExecutorService<sp/>DEFAULT_DELETE_EXECUTOR_SERVICE<sp/>=</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MoreExecutors.newDirectExecutorService();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Consumer&lt;String&gt;<sp/>defaultDelete<sp/>=</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Consumer&lt;String&gt;()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>accept(String<sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops.io().deleteFile(file);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>TableOperations<sp/>ops;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Set&lt;Long&gt;<sp/>idsToRemove<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>defaultMaxRefAgeMs;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cleanExpiredFiles<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>TableMetadata<sp/>base;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>defaultExpireOlderThan;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaultMinNumSnapshots;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Consumer&lt;String&gt;<sp/>deleteFunc<sp/>=<sp/>defaultDelete;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ExecutorService<sp/>deleteExecutorService<sp/>=<sp/>DEFAULT_DELETE_EXECUTOR_SERVICE;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ExecutorService<sp/>planExecutorService<sp/>=<sp/>ThreadPools.getWorkerPool();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Boolean<sp/>incrementalCleanup;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>RemoveSnapshots(TableOperations<sp/>ops)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>this.ops<sp/>=<sp/>ops;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>this.base<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ValidationException.check(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropertyUtil.propertyAsBoolean(base.properties(),<sp/>GC_ENABLED,<sp/>GC_ENABLED_DEFAULT),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>expire<sp/>snapshots:<sp/>GC<sp/>is<sp/>disabled<sp/>(deleting<sp/>files<sp/>may<sp/>corrupt<sp/>other<sp/>tables)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>defaultMaxSnapshotAgeMs<sp/>=</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropertyUtil.propertyAsLong(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.properties(),<sp/>MAX_SNAPSHOT_AGE_MS,<sp/>MAX_SNAPSHOT_AGE_MS_DEFAULT);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>this.now<sp/>=<sp/>System.currentTimeMillis();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this.defaultExpireOlderThan<sp/>=<sp/>now<sp/>-<sp/>defaultMaxSnapshotAgeMs;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>this.defaultMinNumSnapshots<sp/>=</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropertyUtil.propertyAsInt(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.properties(),<sp/>MIN_SNAPSHOTS_TO_KEEP,<sp/>MIN_SNAPSHOTS_TO_KEEP_DEFAULT);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this.defaultMaxRefAgeMs<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropertyUtil.propertyAsLong(base.properties(),<sp/>MAX_REF_AGE_MS,<sp/>MAX_REF_AGE_MS_DEFAULT);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>cleanExpiredFiles(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>clean)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>this.cleanExpiredFiles<sp/>=<sp/>clean;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>expireSnapshotId(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expireSnapshotId)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Expiring<sp/>snapshot<sp/>with<sp/>id:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>expireSnapshotId);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>idsToRemove.add(expireSnapshotId);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>expireOlderThan(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timestampMillis)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expiring<sp/>snapshots<sp/>older<sp/>than:<sp/>{}<sp/>({})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DateTimeUtil.formatTimestampMillis(timestampMillis),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestampMillis);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>this.defaultExpireOlderThan<sp/>=<sp/>timestampMillis;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>retainLast(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSnapshots)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>&lt;=<sp/>numSnapshots,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>snapshots<sp/>to<sp/>retain<sp/>must<sp/>be<sp/>at<sp/>least<sp/>1,<sp/>cannot<sp/>be:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numSnapshots);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>this.defaultMinNumSnapshots<sp/>=<sp/>numSnapshots;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>deleteWith(Consumer&lt;String&gt;<sp/>newDeleteFunc)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>this.deleteFunc<sp/>=<sp/>newDeleteFunc;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>executeDeleteWith(ExecutorService<sp/>executorService)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>this.deleteExecutorService<sp/>=<sp/>executorService;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ExpireSnapshots<sp/>planWith(ExecutorService<sp/>executorService)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this.planExecutorService<sp/>=<sp/>executorService;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Snapshot&gt;<sp/>apply()<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>TableMetadata<sp/>updated<sp/>=<sp/>internalApply();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Snapshot&gt;<sp/>removed<sp/>=<sp/>Lists.newArrayList(base.snapshots());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>removed.removeAll(updated.snapshots());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>removed;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>TableMetadata<sp/>internalApply()<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>this.base<sp/>=<sp/>ops.refresh();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base.snapshots().isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Long&gt;<sp/>idsToRetain<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>refs<sp/>that<sp/>should<sp/>be<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>SnapshotRef&gt;<sp/>retainedRefs<sp/>=<sp/>computeRetainedRefs(base.refs());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;Long,<sp/>List&lt;String&gt;&gt;<sp/>retainedIdToRefs<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp/>SnapshotRef&gt;<sp/>retainedRefEntry<sp/>:<sp/>retainedRefs.entrySet())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>snapshotId<sp/>=<sp/>retainedRefEntry.getValue().snapshotId();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retainedIdToRefs.putIfAbsent(snapshotId,<sp/>Lists.newArrayList());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retainedIdToRefs.get(snapshotId).add(retainedRefEntry.getKey());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idsToRetain.add(snapshotId);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idToRemove<sp/>:<sp/>idsToRemove)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>refsForId<sp/>=<sp/>retainedIdToRefs.get(idToRemove);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refsForId<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>expire<sp/>%s.<sp/>Still<sp/>referenced<sp/>by<sp/>refs:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idToRemove,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refsForId);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>idsToRetain.addAll(computeAllBranchSnapshotsToRetain(retainedRefs.values()));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>idsToRetain.addAll(unreferencedSnapshotsToRetain(retainedRefs.values()));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>TableMetadata.Builder<sp/>updatedMetaBuilder<sp/>=<sp/>TableMetadata.buildFrom(base);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>base.refs().keySet().stream()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.filter(ref<sp/>-&gt;<sp/>!retainedRefs.containsKey(ref))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.forEach(updatedMetaBuilder::removeRef);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>base.snapshots().stream()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.map(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">Snapshot::snapshotId</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.filter(snapshot<sp/>-&gt;<sp/>!idsToRetain.contains(snapshot))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.forEach(idsToRemove::add);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>updatedMetaBuilder.removeSnapshots(idsToRemove);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>updatedMetaBuilder.build();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Map&lt;String,<sp/>SnapshotRef&gt;<sp/>computeRetainedRefs(Map&lt;String,<sp/>SnapshotRef&gt;<sp/>refs)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>SnapshotRef&gt;<sp/>retainedRefs<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp/>SnapshotRef&gt;<sp/>refEntry<sp/>:<sp/>refs.entrySet())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>name<sp/>=<sp/>refEntry.getKey();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SnapshotRef<sp/>ref<sp/>=<sp/>refEntry.getValue();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.equals(SnapshotRef.MAIN_BRANCH))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retainedRefs.put(name,<sp/>ref);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Snapshot<sp/>snapshot<sp/>=<sp/>base.snapshot(ref.snapshotId());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxRefAgeMs<sp/>=<sp/>ref.maxRefAgeMs()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/>ref.maxRefAgeMs()<sp/>:<sp/>defaultMaxRefAgeMs;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snapshot<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>refAgeMs<sp/>=<sp/>now<sp/>-<sp/>snapshot.timestampMillis();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refAgeMs<sp/>&lt;=<sp/>maxRefAgeMs)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retainedRefs.put(name,<sp/>ref);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG.warn(</highlight><highlight class="stringliteral">&quot;Removing<sp/>invalid<sp/>ref<sp/>{}:<sp/>snapshot<sp/>{}<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">,<sp/>name,<sp/>ref.snapshotId());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retainedRefs;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Set&lt;Long&gt;<sp/>computeAllBranchSnapshotsToRetain(Collection&lt;SnapshotRef&gt;<sp/>refs)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Long&gt;<sp/>branchSnapshotsToRetain<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SnapshotRef<sp/>ref<sp/>:<sp/>refs)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref.isBranch())<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expireSnapshotsOlderThan<sp/>=</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.maxSnapshotAgeMs()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/>now<sp/>-<sp/>ref.maxSnapshotAgeMs()<sp/>:<sp/>defaultExpireOlderThan;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSnapshotsToKeep<sp/>=</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.minSnapshotsToKeep()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/>ref.minSnapshotsToKeep()<sp/>:<sp/>defaultMinNumSnapshots;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branchSnapshotsToRetain.addAll(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeBranchSnapshotsToRetain(</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.snapshotId(),<sp/>expireSnapshotsOlderThan,<sp/>minSnapshotsToKeep));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>branchSnapshotsToRetain;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Set&lt;Long&gt;<sp/>computeBranchSnapshotsToRetain(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>snapshot,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expireSnapshotsOlderThan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSnapshotsToKeep)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Long&gt;<sp/>idsToRetain<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Snapshot<sp/>ancestor<sp/>:<sp/>SnapshotUtil.ancestorsOf(snapshot,<sp/>base::snapshot))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idsToRetain.size()<sp/>&lt;<sp/>minSnapshotsToKeep</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>ancestor.timestampMillis()<sp/>&gt;=<sp/>expireSnapshotsOlderThan)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idsToRetain.add(ancestor.snapshotId());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idsToRetain;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idsToRetain;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Set&lt;Long&gt;<sp/>unreferencedSnapshotsToRetain(Collection&lt;SnapshotRef&gt;<sp/>refs)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Long&gt;<sp/>referencedSnapshots<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SnapshotRef<sp/>ref<sp/>:<sp/>refs)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref.isBranch())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Snapshot<sp/>snapshot<sp/>:<sp/>SnapshotUtil.ancestorsOf(ref.snapshotId(),<sp/>base::snapshot))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referencedSnapshots.add(snapshot.snapshotId());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referencedSnapshots.add(ref.snapshotId());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Long&gt;<sp/>snapshotsToRetain<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Snapshot<sp/>snapshot<sp/>:<sp/>base.snapshots())<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!referencedSnapshots.contains(snapshot.snapshotId())</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//<sp/>unreferenced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshot.timestampMillis()<sp/>&gt;=<sp/>defaultExpireOlderThan)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>not<sp/>old<sp/>enough<sp/>to<sp/>expire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshotsToRetain.add(snapshot.snapshotId());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snapshotsToRetain;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>commit()<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Tasks.foreach(ops)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.retry(base.propertyAsInt(COMMIT_NUM_RETRIES,<sp/>COMMIT_NUM_RETRIES_DEFAULT))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.exponentialBackoff(</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.propertyAsInt(COMMIT_MIN_RETRY_WAIT_MS,<sp/>COMMIT_MIN_RETRY_WAIT_MS_DEFAULT),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.propertyAsInt(COMMIT_MAX_RETRY_WAIT_MS,<sp/>COMMIT_MAX_RETRY_WAIT_MS_DEFAULT),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.propertyAsInt(COMMIT_TOTAL_RETRY_TIME_MS,<sp/>COMMIT_TOTAL_RETRY_TIME_MS_DEFAULT),</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0<sp/></highlight><highlight class="comment">/*<sp/>exponential<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.onlyRetryOn(CommitFailedException.class)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.run(</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableMetadata<sp/>updated<sp/>=<sp/>internalApply();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops.commit(base,<sp/>updated);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Committed<sp/>snapshot<sp/>changes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cleanExpiredFiles)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cleanExpiredSnapshots();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>ExpireSnapshots<sp/>withIncrementalCleanup(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>useIncrementalCleanup)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>this.incrementalCleanup<sp/>=<sp/>useIncrementalCleanup;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanExpiredSnapshots()<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>TableMetadata<sp/>current<sp/>=<sp/>ops.refresh();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incrementalCleanup<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>incrementalCleanup<sp/>=<sp/>current.refs().size()<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cleaning<sp/>up<sp/>expired<sp/>files<sp/>(local,<sp/>{})&quot;</highlight><highlight class="normal">,<sp/>incrementalCleanup<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;incremental&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;reachable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>FileCleanupStrategy<sp/>cleanupStrategy<sp/>=</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incrementalCleanup</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IncrementalFileCleanup(</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops.io(),<sp/>deleteExecutorService,<sp/>planExecutorService,<sp/>deleteFunc)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>new<sp/>ReachableFileCleanup(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ops.io(),<sp/>deleteExecutorService,<sp/>planExecutorService,<sp/>deleteFunc);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>cleanupStrategy.cleanFiles(base,<sp/>current);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="core/src/main/java/org/apache/iceberg/RemoveSnapshots.java"/>
  </compounddef>
</doxygen>
