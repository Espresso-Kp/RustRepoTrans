<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="TestGlueCatalogNamespace_8java" kind="file" language="Java">
    <compoundname>TestGlueCatalogNamespace.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace" prot="public">org::apache::iceberg::aws::glue::TestGlueCatalogNamespace</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1aws_1_1glue">org::apache::iceberg::aws::glue</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.aws.glue;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThat;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThatThrownBy;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.UUID;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1catalog" kindref="compound">catalog</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1AlreadyExistsException" kindref="compound">AlreadyExistsException</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NamespaceNotEmptyException" kindref="compound">NamespaceNotEmptyException</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableMap;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Maps" kindref="compound">Maps</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Sets" kindref="compound">Sets</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.Test;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.CreateTableRequest;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.Database;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.EntityNotFoundException;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.GetDatabaseRequest;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.TableInput;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace" kindref="compound">TestGlueCatalogNamespace</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase" kindref="compound">GlueTestBase</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="45" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1aa123d7c82609da6d24e2e80ed7a2810b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1aa123d7c82609da6d24e2e80ed7a2810b" kindref="member">testCreateNamespace</ref>()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1a5e2825439b6f73ac8b3a8c6eedec88c4" kindref="member">getRandomName</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaces.add(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glue.getDatabase(GetDatabaseRequest.builder().name(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">).build()))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;namespace<sp/>does<sp/>not<sp/>exist<sp/>before<sp/>create&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(EntityNotFoundException.class)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>properties<sp/>=</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImmutableMap.of(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IcebergToGlueConverter.GLUE_DESCRIPTION_KEY,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IcebergToGlueConverter.GLUE_DB_LOCATION_KEY,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;s3://location&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref><sp/>ns<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad29eaee338bae07e222ccc0bdd25da8e" kindref="member">createNamespace</ref>(ns,<sp/>properties);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Database<sp/>database<sp/>=</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glue.getDatabase(GetDatabaseRequest.builder().name(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">).build()).database();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.name()).isEqualTo(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.description()).isEqualTo(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.locationUri()).isEqualTo(</highlight><highlight class="stringliteral">&quot;s3://location&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.parameters()).containsEntry(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a35e164d630d2fbb0e5103cbd06de0af6" kindref="member">loadNamespaceMetadata</ref>(ns)).isEqualTo(properties);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="72" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1ad88f2ee91d45591fe12e9d1236bb40a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1ad88f2ee91d45591fe12e9d1236bb40a8" kindref="member">testCreateDuplicate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad29eaee338bae07e222ccc0bdd25da8e" kindref="member">createNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>create<sp/>namespace<sp/>with<sp/>the<sp/>same<sp/>name&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1AlreadyExistsException" kindref="compound">AlreadyExistsException</ref>.class)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;it<sp/>already<sp/>exists<sp/>in<sp/>Glue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="81" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a40909c05186b85cf6c0239dd901acaf9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a40909c05186b85cf6c0239dd901acaf9" kindref="member">testCreateBadName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Namespace&gt;<sp/>invalidNamespaces<sp/>=</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lists.newArrayList(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="stringliteral">&quot;db-1&quot;</highlight><highlight class="normal">),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="stringliteral">&quot;db&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;db2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"><sp/>:<sp/>invalidNamespaces)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad29eaee338bae07e222ccc0bdd25da8e" kindref="member">createNamespace</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>create<sp/>namespace<sp/>with<sp/>invalid<sp/>or<sp/>nested<sp/>names&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>.class)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>convert<sp/>namespace&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="94" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1acaf013c0b77abed645a080492049a94d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1acaf013c0b77abed645a080492049a94d" kindref="member">testNamespaceExists</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(glueCatalog.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1aa1bb39594115028cb61a785fd4b8052b" kindref="member">namespaceExists</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">))).isTrue();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="100" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a4da372e31d7166b50ce156e2083beb82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a4da372e31d7166b50ce156e2083beb82" kindref="member">testListNamespace</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Namespace&gt;<sp/>namespaceList<sp/>=<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a477d211742d84afcf551469d49f12581" kindref="member">listNamespaces</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(namespaceList).isNotEmpty();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(namespaceList).contains(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>namespaceList<sp/>=<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a477d211742d84afcf551469d49f12581" kindref="member">listNamespaces</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(namespaceList).isEmpty();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="110" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1ad0339e3e6d33558d0316581c5b8d7449" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1ad0339e3e6d33558d0316581c5b8d7449" kindref="member">testNamespaceProperties</ref>()<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>properties<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(</highlight><highlight class="stringliteral">&quot;key2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(IcebergToGlueConverter.GLUE_DB_LOCATION_KEY,<sp/></highlight><highlight class="stringliteral">&quot;s3://test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(IcebergToGlueConverter.GLUE_DESCRIPTION_KEY,<sp/></highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a86b6570e0fab853e359c1cda37084ada" kindref="member">setProperties</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">),<sp/>properties);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>Database<sp/>database<sp/>=</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glue.getDatabase(GetDatabaseRequest.builder().name(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">).build()).database();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.parameters()).containsEntry(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">).containsEntry(</highlight><highlight class="stringliteral">&quot;key2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.locationUri()).isEqualTo(</highlight><highlight class="stringliteral">&quot;s3://test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.description()).isEqualTo(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a0a230bb3dcf8d3bdf4113dfbe69e9fce" kindref="member">removeProperties</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets.newHashSet(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IcebergToGlueConverter.GLUE_DB_LOCATION_KEY,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IcebergToGlueConverter.GLUE_DESCRIPTION_KEY));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>database<sp/>=<sp/>glue.getDatabase(GetDatabaseRequest.builder().name(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">).build()).database();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.parameters()).doesNotContainKey(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">).containsEntry(</highlight><highlight class="stringliteral">&quot;key2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.locationUri()).isNull();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.description()).isNull();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>properties<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(IcebergToGlueConverter.GLUE_DB_LOCATION_KEY,<sp/></highlight><highlight class="stringliteral">&quot;s3://test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>properties.put(IcebergToGlueConverter.GLUE_DESCRIPTION_KEY,<sp/></highlight><highlight class="stringliteral">&quot;description2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a86b6570e0fab853e359c1cda37084ada" kindref="member">setProperties</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">),<sp/>properties);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>database<sp/>=<sp/>glue.getDatabase(GetDatabaseRequest.builder().name(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">).build()).database();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.parameters()).containsEntry(</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">).containsEntry(</highlight><highlight class="stringliteral">&quot;key2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.locationUri()).isEqualTo(</highlight><highlight class="stringliteral">&quot;s3://test2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(database.description()).isEqualTo(</highlight><highlight class="stringliteral">&quot;description2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="148" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a3a019acf3ec9adea8d79a74cd641f8c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a3a019acf3ec9adea8d79a74cd641f8c6" kindref="member">testDropNamespace</ref>()<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47105cc8a643365eb68c6d9a6f5d4498" kindref="member">dropNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glue.getDatabase(GetDatabaseRequest.builder().name(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">).build()))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;namespace<sp/>should<sp/>not<sp/>exist<sp/>after<sp/>deletion&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(EntityNotFoundException.class)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="158" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a7ea9fa33856f037d070abf8353b27d6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a7ea9fa33856f037d070abf8353b27d6e" kindref="member">testDropNamespaceThatContainsOnlyIcebergTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1a2882e051f95256144ade18ac44ee34c9" kindref="member">createTable</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47105cc8a643365eb68c6d9a6f5d4498" kindref="member">dropNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;namespace<sp/>should<sp/>not<sp/>be<sp/>dropped<sp/>when<sp/>still<sp/>has<sp/>Iceberg<sp/>table&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NamespaceNotEmptyException" kindref="compound">NamespaceNotEmptyException</ref>.class)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;still<sp/>contains<sp/>Iceberg<sp/>tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="168" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a640c5cb3a880b34b66987799f949ab9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogNamespace_1a640c5cb3a880b34b66987799f949ab9c" kindref="member">testDropNamespaceThatContainsNonIcebergTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>glue.createTable(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateTableRequest.builder()</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.databaseName(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tableInput(TableInput.builder().name(UUID.randomUUID().toString()).build())</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47105cc8a643365eb68c6d9a6f5d4498" kindref="member">dropNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;namespace<sp/>should<sp/>not<sp/>be<sp/>dropped<sp/>when<sp/>still<sp/>has<sp/>non-Iceberg<sp/>table&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NamespaceNotEmptyException" kindref="compound">NamespaceNotEmptyException</ref>.class)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;still<sp/>contains<sp/>non-Iceberg<sp/>tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="aws/src/integration/java/org/apache/iceberg/aws/glue/TestGlueCatalogNamespace.java"/>
  </compounddef>
</doxygen>
