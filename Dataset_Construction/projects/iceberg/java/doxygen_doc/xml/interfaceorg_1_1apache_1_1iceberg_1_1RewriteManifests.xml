<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::RewriteManifests</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate" prot="public" virt="non-virtual">org.apache.iceberg.SnapshotUpdate&lt; RewriteManifests &gt;</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1BaseRewriteManifests" prot="public" virt="non-virtual">org.apache.iceberg.BaseRewriteManifests</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1ac97df4c59dc44541c746514ef6a8f7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests" kindref="compound">RewriteManifests</ref></type>
        <definition>RewriteManifests org.apache.iceberg.RewriteManifests.clusterBy</definition>
        <argsstring>(Function&lt; DataFile, Object &gt; func)</argsstring>
        <name>clusterBy</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseRewriteManifests_1a3dd098e705c7c91fad70614d07fe1b88">clusterBy</reimplementedby>
        <param>
          <type>Function&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>, Object &gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Groups an existing <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref> by a cluster key produced by a function. The cluster key will determine which data file will be associated with a particular manifest. All data files with the same cluster key will be written to the same manifest (unless the file is large and split into multiple files). Manifests deleted via <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1ae3060912555fc049593d6c982d693574" kindref="member">deleteManifest(ManifestFile)</ref> or added via <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1a9b2fa4707ecf0897559997d063a61f5e" kindref="member">addManifest(ManifestFile)</ref> are ignored during the rewrite process.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function used to cluster data files to manifests. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RewriteManifests.java" line="49" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1a584ef0ddea6305c857685a6e048f18a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests" kindref="compound">RewriteManifests</ref></type>
        <definition>RewriteManifests org.apache.iceberg.RewriteManifests.rewriteIf</definition>
        <argsstring>(Predicate&lt; ManifestFile &gt; predicate)</argsstring>
        <name>rewriteIf</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseRewriteManifests_1a4845b8ea03e6c1227e210c360ecb56da">rewriteIf</reimplementedby>
        <param>
          <type>Predicate&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref> &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines which existing <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref> for the table should be rewritten. Manifests that do not match the predicate are kept as-is. If this is not called and no predicate is set, then all manifests will be rewritten.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predicate</parametername>
</parameternamelist>
<parameterdescription>
<para>Predicate used to determine which manifests to rewrite. If true then the manifest file will be included for rewrite. If false then then manifest is kept as-is. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RewriteManifests.java" line="60" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1ae3060912555fc049593d6c982d693574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests" kindref="compound">RewriteManifests</ref></type>
        <definition>RewriteManifests org.apache.iceberg.RewriteManifests.deleteManifest</definition>
        <argsstring>(ManifestFile manifest)</argsstring>
        <name>deleteManifest</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseRewriteManifests_1ac71ef0ab225ff61a2ad635393db3fe9b">deleteManifest</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref></type>
          <declname>manifest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">manifest file</ref> from the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manifest</parametername>
</parameternamelist>
<parameterdescription>
<para>a manifest to delete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RewriteManifests.java" line="68" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1a9b2fa4707ecf0897559997d063a61f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests" kindref="compound">RewriteManifests</ref></type>
        <definition>RewriteManifests org.apache.iceberg.RewriteManifests.addManifest</definition>
        <argsstring>(ManifestFile manifest)</argsstring>
        <name>addManifest</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseRewriteManifests_1ab6872d88355997c6f20b4e7e8a0d6570">addManifest</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref></type>
          <declname>manifest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">manifest file</ref> to the table. The added manifest cannot contain new or deleted files.</para>
<para>By default, the manifest will be rewritten to ensure all entries have explicit snapshot IDs. In that case, it is always the responsibility of the caller to manage the lifecycle of the original manifest.</para>
<para>If manifest entries are allowed to inherit the snapshot ID assigned on commit, the manifest should never be deleted manually if the commit succeeds as it will become part of the table metadata and will be cleaned up on expiry. If the manifest gets merged with others while preparing a new snapshot, it will be deleted automatically if this operation is successful. If the commit fails, the manifest will never be deleted and it is up to the caller whether to delete or reuse it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>manifest</parametername>
</parameternamelist>
<parameterdescription>
<para>a manifest to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RewriteManifests.java" line="88" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>API for rewriting manifests for a table.</para>
<para>This API accumulates manifest files, produces a new <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref> of the table described only by the manifest files that were added, and commits that snapshot as the current.</para>
<para>This API can be used to rewrite matching manifests according to a clustering function as well as to replace specific manifests. Manifests that are deleted or added directly are ignored during the rewrite process. The set of active files in replaced manifests must be the same as in new manifests.</para>
<para>When committing, these changes will be applied to the latest table snapshot. Commit conflicts will be resolved by applying the changes to the new latest snapshot and reattempting the commit. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.apache.iceberg.BaseRewriteManifests</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseRewriteManifests"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.RewriteManifests</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.SnapshotUpdate&lt; RewriteManifests &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.RewriteManifests</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.SnapshotUpdate&lt; RewriteManifests &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate"/>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/RewriteManifests.java" line="38" column="50" bodyfile="api/src/main/java/org/apache/iceberg/RewriteManifests.java" bodystart="38" bodyend="89"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1a9b2fa4707ecf0897559997d063a61f5e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>addManifest</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1ac97df4c59dc44541c746514ef6a8f7d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>clusterBy</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1ae3060912555fc049593d6c982d693574" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>deleteManifest</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a939514bf390d07c354dffc6be1b2ba89" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>deleteWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RewriteManifests_1a584ef0ddea6305c857685a6e048f18a1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>rewriteIf</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a5a6c298d7ae52b719969641744d621ff" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>scanManifestsWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a72b3978b4804d7f75c70f9e0c95ef55c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>set</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1ac54dc0e998f7664271ab88be021d37ed" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>stageOnly</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a4eec4643f899de9ed2c4f22beb310447" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RewriteManifests</scope><name>toBranch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
