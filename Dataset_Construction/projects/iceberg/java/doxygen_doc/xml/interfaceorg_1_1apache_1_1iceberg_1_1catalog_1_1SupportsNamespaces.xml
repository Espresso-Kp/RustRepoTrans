<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::catalog::SupportsNamespaces</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog" prot="public" virt="non-virtual">org.apache.iceberg.aws.dynamodb.DynamoDbCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog" prot="public" virt="non-virtual">org.apache.iceberg.aws.glue.GlueCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog" prot="public" virt="non-virtual">org.apache.iceberg.catalog.BaseSessionCatalog.AsCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog" prot="public" virt="non-virtual">org.apache.iceberg.dell.ecs.EcsCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog" prot="public" virt="non-virtual">org.apache.iceberg.hadoop.HadoopCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog" prot="public" virt="non-virtual">org.apache.iceberg.hive.HiveCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog" prot="public" virt="non-virtual">org.apache.iceberg.inmemory.InMemoryCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog" prot="public" virt="non-virtual">org.apache.iceberg.jdbc.JdbcCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog" prot="public" virt="non-virtual">org.apache.iceberg.nessie.NessieCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog" prot="public" virt="non-virtual">org.apache.iceberg.rest.RESTCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog" prot="public" virt="non-virtual">org.apache.iceberg.snowflake.SnowflakeCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseCatalog" prot="public" virt="non-virtual">org.apache.iceberg.spark.BaseCatalog</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1acc80b7da14b90a65d39e97e05479ea33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default void</type>
        <definition>default void org.apache.iceberg.catalog.SupportsNamespaces.createNamespace</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>createNamespace</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a20cfdfd3049dfc963d21e770811a80f2">createNamespace</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a namespace in the catalog.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace already exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If create is not a supported operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="50" column="16" bodyfile="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a0384b0f5cbc9d88eddc25e6a38c2218e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.catalog.SupportsNamespaces.createNamespace</definition>
        <argsstring>(Namespace namespace, Map&lt; String, String &gt; metadata)</argsstring>
        <name>createNamespace</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a78961eb4a79e5721ba0fc067eb758b19">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1af7ecd555611901bb40ba1d30f1f7eb01">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1ae5476012cf3706d5573e4eed5e6fb1d7">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ac50d5563488ccb56ea9a22e92002906c">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a7d5398d62ac55507dbf8035707f96ffb">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1a6c91724531453d38827bea890760828d">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ab95d4472033e21582ad7d4d625a9df9c">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1af9489aef76e7e6aa9365456e5c2bdc44">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad29eaee338bae07e222ccc0bdd25da8e">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1af71c57ee3bde276712a7b08c45257337">createNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a9b1c87700b1faf352af1ba99878d8415">createNamespace</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a namespace in the catalog.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a multi-part namespace </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>a string Map of properties for the given namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace already exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If create is not a supported operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="62" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1afeb1dc59ff0b25cfde224eda3f3f9906" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default List&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> &gt;</type>
        <definition>default List&lt;Namespace&gt; org.apache.iceberg.catalog.SupportsNamespaces.listNamespaces</definition>
        <argsstring>()</argsstring>
        <name>listNamespaces</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSessionCatalog_1af7b787d66d3adf65946f956654a608b5">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSessionCatalog_1af7b787d66d3adf65946f956654a608b5">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSessionCatalog_1af7b787d66d3adf65946f956654a608b5">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a3690234f3eba0f1195fb1ed6214a27cd">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1a215ca3e304f611d0adc875ed0c0084f6">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkCatalog_1aa65785ca1dbaeb52bb08dba1a7795031">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkCatalog_1aa65785ca1dbaeb52bb08dba1a7795031">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkCatalog_1aa65785ca1dbaeb52bb08dba1a7795031">listNamespaces</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List top-level namespaces from the catalog.</para>
<para>If an object such as a table, view, or function exists, its parent namespaces must also exist and must be returned by this discovery method. For example, if table a.b.t exists, this method must return [&quot;a&quot;] in the result array.</para>
<para><simplesect kind="return"><para>a List of namespace <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> names </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="73" column="16" bodyfile="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a2b9b9478bd0cbf14d1e68d563c091dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>List&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> &gt;</type>
        <definition>List&lt;Namespace&gt; org.apache.iceberg.catalog.SupportsNamespaces.listNamespaces</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>listNamespaces</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1ad93326c74e2aa3a2f588e4147bd3c382">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ad0d21ef26bfb342aa4a1494e93a220b8">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1ae9c387f9195b3850c9d0a4462643bbbf">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a7c6264320d3c39bcb695253525ce2c88">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1ae05d63eaa61c4ae88653da8fe4f4d1a1">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ac1a1734a20ecef5653f64dfa5b0949fb">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a1ec805c844137331da661dc99a438872">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1a7050dbe22bd7c71fb6a5833a75ebcd51">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1ac1afbfc169b2279951a2fa7dd6bc6916">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a477d211742d84afcf551469d49f12581">listNamespaces</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1ae84a5f56690935551508e50b0d77dccf">listNamespaces</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchNamespaceException" kindref="compound">NoSuchNamespaceException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List child namespaces from the namespace.</para>
<para>For two existing tables named &apos;a.b.c.table&apos; and &apos;a.b.d.table&apos;, this method returns:</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.empty()<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
</itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
</itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;c&quot;)<sp/></highlight></codeline>
</programlisting> and<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;d&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
</itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>Given:<programlisting><codeline><highlight class="normal">Namespace.of(&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;c&quot;)<sp/></highlight></codeline>
</programlisting> </para>
</listitem>
<listitem>
<para>Returns: empty list, because there are no child namespaces </para>
</listitem>
</itemizedlist>
</para>
<para><simplesect kind="return"><para>a List of child <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> names from the given namespace </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="105" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a68f05b7949ffed7561de0b847530088a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Map&lt; String, String &gt;</type>
        <definition>Map&lt;String, String&gt; org.apache.iceberg.catalog.SupportsNamespaces.loadNamespaceMetadata</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>loadNamespaceMetadata</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a29ec9a2abad135f70849e28f8c35b934">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a05cf1940f6697c4bc17658a2c9290c76">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1a5a007e3120d5443ec95fe1bf31341bb7">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a4496899af7db57e27df9e165266eeca5">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ab54c83343c6383869f8f919928a13ec2">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a7f5025321f1af33a3f877a09e1c4c309">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a60c5cdf240cc7846867e9e015412425c">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1a423ef635aa39c672ceb2624916c8904f">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1a02536f1a2a68b34869a8a8c9eff76ad0">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a35e164d630d2fbb0e5103cbd06de0af6">loadNamespaceMetadata</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a68775a96f80ce35940350824bd0e8346">loadNamespaceMetadata</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchNamespaceException" kindref="compound">NoSuchNamespaceException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load metadata properties for a namespace.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string map of properties for the given namespace </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="114" column="7"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1acf63db9574b2e049feb8b3f336199580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.catalog.SupportsNamespaces.dropNamespace</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>dropNamespace</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a06c59f47d120e6e895e8e15dea1fbd54">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a9fa9201aa18cc33ed3518765c5910acc">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1ad1754eb4f1ba8434179f55e6d236a4ee">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1ae097a6d77b3b28b069d92c796930608f">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ac46363d242f6d9b8082e78a9b12038f9">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1adb0a0b8d72118a2bac146af174677a48">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a5026d84f5e56f5ab367acfb2bb319f0a">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1af50f8378f53e4615cc54d889293bfe6a">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1ac9146b12aec1522ca7dccc8b802d4840">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47105cc8a643365eb68c6d9a6f5d4498">dropNamespace</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a5d186903689d50e5212c3029279b1540">dropNamespace</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NamespaceNotEmptyException" kindref="compound">NamespaceNotEmptyException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a namespace. If the namespace exists and was dropped, this will return true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the namespace was dropped, false otherwise. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NamespaceNotEmptyException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace is not empty </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="123" column="11"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a8869570cea0555c5f8d125ebafb11865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.catalog.SupportsNamespaces.setProperties</definition>
        <argsstring>(Namespace namespace, Map&lt; String, String &gt; properties)</argsstring>
        <name>setProperties</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1ad7dacc0dc4d2aa1fa362e4aae886d2ef">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1af0a2cfc5a7ac8f68d7e218e52e08eb31">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1ac4b80cdb3fb774ed0a7dafc74ca6d81d">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ab4e60ff7cb6ec4055b94cdc6f5bf50fc">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1ab7fe90703035f5503518524525e2e02a">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1acf908523971ad0d2a1b61d214bdb9c1b">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1a84e67b770ddf79f2aee86d1fe3e41beb">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1ae88cb6a28c0b340eb2e38ff5dac61a1e">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a86b6570e0fab853e359c1cda37084ada">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a2f3681c335241fa89118cbd8793e495f">setProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a9cb10fcc7f17f4b600001dc13b455b16">setProperties</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchNamespaceException" kindref="compound">NoSuchNamespaceException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a collection of properties on a namespace in the catalog.</para>
<para>Properties that are not in the given map are not modified or removed by this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a collection of metadata to apply to the namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If namespace properties are not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="135" column="11"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a0cde285e5da773dd910fbe08d36c3d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.catalog.SupportsNamespaces.removeProperties</definition>
        <argsstring>(Namespace namespace, Set&lt; String &gt; properties)</argsstring>
        <name>removeProperties</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a0f8877d5da6f3072c977baaacc2c0d46">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a2d3d619ccb1caa060a4384f050519656">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1a997d8d9cab7b0fd16395da59a33cab02">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1af6e1c365bb5fe37690df7a37bf42c55e">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1aa562d2db2b0139afaef23e9670eda215">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1ad2cc5174940362acaea090fb54d599dc">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1a084c3e7bc61bc48faca4d5ea0548fdab">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1aeb043f6c0081206bb8f4c98caeb76a08">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a0a230bb3dcf8d3bdf4113dfbe69e9fce">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a97f0ff541e03df4cf60b38e3f0031e95">removeProperties</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1ab5c7dfbc23beb16e1c261301c2ff8ded">removeProperties</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <param>
          <type>Set&lt; String &gt;</type>
          <declname>properties</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchNamespaceException" kindref="compound">NoSuchNamespaceException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a set of property keys from a namespace in the catalog.</para>
<para>Properties that are not in the given set are not modified or removed by this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a collection of metadata to apply to the namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the namespace does not exist (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UnsupportedOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If namespace properties are not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="148" column="11"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1aa1bb39594115028cb61a785fd4b8052b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.catalog.SupportsNamespaces.namespaceExists</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>namespaceExists</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1af9f865e207ce2c5bbae9d886ee81f3d2">namespaceExists</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1aa5e64b280339e854d85a91a7f0e8a894">namespaceExists</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a57a883221c250382bfecdd41b7bd29dd">namespaceExists</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1aeeaa0da06f580057054e5d2c7a04ddc6">namespaceExists</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> exists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace. <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref> exists, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="157" column="19" bodyfile="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" bodystart="157" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog" kindref="compound">Catalog</ref> methods for working with namespaces.</para>
<para>If an object such as a table, view, or function exists, its parent namespaces must also exist and must be returned by the discovery methods <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1afeb1dc59ff0b25cfde224eda3f3f9906" kindref="member">listNamespaces()</ref> and {<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a2b9b9478bd0cbf14d1e68d563c091dcb" kindref="member">}. </ref><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog" kindref="compound">Catalog</ref> implementations are not required to maintain the existence of namespaces independent of objects in a namespace. For example, a function catalog that loads functions using reflection and uses Java packages as namespaces is not required to support the methods to create, alter, or drop a namespace. Implementations are allowed to discover the existence of objects or namespaces without throwing <ref refid="" kindref="compound">NoSuchNamespaceException</ref> when no namespace is found. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="14">
        <label>org.apache.iceberg.spark.SparkCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkCatalog"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.catalog.SupportsNamespaces</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces"/>
      </node>
      <node id="12">
        <label>org.apache.iceberg.snowflake.SnowflakeCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org.apache.iceberg.hadoop.HadoopCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.aws.glue.GlueCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.aws.dynamodb.DynamoDbCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>org.apache.iceberg.rest.RESTCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>org.apache.iceberg.jdbc.JdbcCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>org.apache.iceberg.spark.BaseCatalog</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>org.apache.iceberg.inmemory.InMemoryCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>org.apache.iceberg.spark.SparkSessionCatalog&lt; T extends TableCatalog &amp;FunctionCatalog &amp;SupportsNamespaces &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSessionCatalog"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>org.apache.iceberg.hive.HiveCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>org.apache.iceberg.nessie.NessieCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>org.apache.iceberg.dell.ecs.EcsCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.catalog.BaseSessionCatalog.AsCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" line="42" column="36" bodyfile="api/src/main/java/org/apache/iceberg/catalog/SupportsNamespaces.java" bodystart="42" bodyend="165"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1acc80b7da14b90a65d39e97e05479ea33" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>createNamespace</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a0384b0f5cbc9d88eddc25e6a38c2218e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>createNamespace</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1acf63db9574b2e049feb8b3f336199580" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>dropNamespace</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1afeb1dc59ff0b25cfde224eda3f3f9906" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>listNamespaces</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a2b9b9478bd0cbf14d1e68d563c091dcb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>listNamespaces</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a68f05b7949ffed7561de0b847530088a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>loadNamespaceMetadata</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1aa1bb39594115028cb61a785fd4b8052b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>namespaceExists</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a0cde285e5da773dd910fbe08d36c3d80" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>removeProperties</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1SupportsNamespaces_1a8869570cea0555c5f8d125ebafb11865" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::SupportsNamespaces</scope><name>setProperties</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
