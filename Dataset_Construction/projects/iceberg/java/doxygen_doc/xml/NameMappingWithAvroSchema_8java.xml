<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="NameMappingWithAvroSchema_8java" kind="file" language="Java">
    <compoundname>NameMappingWithAvroSchema.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema" prot="public">org::apache::iceberg::avro::NameMappingWithAvroSchema</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1avro">org::apache::iceberg::avro</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.avro;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.avro.Schema;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1mapping" kindref="compound">mapping</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1mapping" kindref="compound">mapping</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema" kindref="compound">NameMappingWithAvroSchema</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1AvroWithTypeByStructureVisitor" kindref="compound">AvroWithTypeByStructureVisitor</ref>&lt;MappedFields&gt;<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="32" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1af4f63cacd4f7f3d9296d18280666c380" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1af4f63cacd4f7f3d9296d18280666c380" kindref="member">record</ref>(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1af4f63cacd4f7f3d9296d18280666c380" kindref="member">record</ref>,<sp/>List&lt;String&gt;<sp/>names,<sp/>List&lt;MappedFields&gt;<sp/>fieldResults)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;MappedField&gt;<sp/>fields<sp/>=<sp/>Lists.newArrayListWithExpectedSize(fieldResults.size());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fieldResults.size();<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref><sp/>field<sp/>=<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">.asStructType().fields().get(i);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/>result<sp/>=<sp/>fieldResults.get(i);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fields.add(<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(field.fieldId(),<sp/>field.name(),<sp/>result));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields_1aebbebf337ca8b17325ff19e2ec79852a" kindref="member">of</ref>(fields);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="46" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a3f8e21c4a0a5b726f4a8f60012be0504" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal">(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>type,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal">,<sp/>List&lt;MappedFields&gt;<sp/>optionResults)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1AvroSchemaUtil" kindref="compound">AvroSchemaUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1AvroSchemaUtil_1a3c8b151042e7312a9d15c6e194c0f17c" kindref="member">isOptionSchema</ref>(</highlight><highlight class="keyword">union</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>optionResults.size();<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">union</highlight><highlight class="normal">.getTypes().get(i).getType()<sp/>!=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>.Type.NULL)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>optionResults.get(i);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Complex<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>instanceof<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>visit<sp/>invalid<sp/>Iceberg<sp/>type:<sp/>%s<sp/>for<sp/>Avro<sp/>complex<sp/>union<sp/>type:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">=<sp/>(Types.StructType)<sp/>type;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;MappedField&gt;<sp/>fields<sp/>=<sp/>Lists.newArrayListWithExpectedSize(optionResults.size());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avro<sp/>spec<sp/>for<sp/>union<sp/>types<sp/>states<sp/>that<sp/>unions<sp/>may<sp/>not<sp/>contain<sp/>more<sp/>than<sp/>one<sp/>schema<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>type,<sp/>except<sp/>for<sp/>the<sp/>named<sp/>types<sp/>record,<sp/>fixed<sp/>and<sp/>enum.<sp/>For<sp/>example,<sp/>unions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>containing<sp/>two<sp/>array<sp/>types<sp/>or<sp/>two<sp/>map<sp/>types<sp/>are<sp/>not<sp/>permitted,<sp/>but<sp/>two<sp/>named<sp/>types<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>names<sp/>are<sp/>permitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore,<sp/>for<sp/>non-named<sp/>types,<sp/>use<sp/>the<sp/>Avro<sp/>type<sp/>toString()<sp/>as<sp/>the<sp/>field<sp/>mapping<sp/>key.<sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>named<sp/>types,<sp/>use<sp/>the<sp/>record<sp/>name<sp/>of<sp/>the<sp/>Avro<sp/>type<sp/>as<sp/>the<sp/>field<sp/>mapping<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>option<sp/>:<sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal">.getTypes())<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option.getType()<sp/>!=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>.Type.NULL)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>option<sp/>is<sp/>a<sp/>named<sp/>type,<sp/>i.e.,<sp/>a<sp/>RECORD,<sp/>ENUM,<sp/>or<sp/>FIXED<sp/>type.<sp/>If<sp/>so,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>record<sp/>name<sp/>of<sp/>the<sp/>Avro<sp/>type<sp/>as<sp/>the<sp/>field<sp/>name.<sp/>Otherwise,<sp/>use<sp/>the<sp/>Avro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>toString().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option.getType()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>.Type.RECORD</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>option.getType()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>.Type.ENUM</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>option.getType()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>.Type.FIXED)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fields.add(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">.fields().get(index).fieldId(),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option.getName(),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionResults.get(index)));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fields.add(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">.fields().get(index).fieldId(),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option.getType().getName(),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionResults.get(index)));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>iStruct<sp/>and<sp/>optionResults<sp/>do<sp/>not<sp/>contain<sp/>an<sp/>entry<sp/>for<sp/>the<sp/>NULL<sp/>type,<sp/>so<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>i<sp/>only<sp/>when<sp/>we<sp/>encounter<sp/>a<sp/>non-NULL<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields_1aebbebf337ca8b17325ff19e2ec79852a" kindref="member">of</ref>(fields);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="100" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a6a3964e25554e9513248556bfd33caca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a6a3964e25554e9513248556bfd33caca" kindref="member">array</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>list,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a6a3964e25554e9513248556bfd33caca" kindref="member">array</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/>elementResult)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields_1aebbebf337ca8b17325ff19e2ec79852a" kindref="member">of</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(list.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1a85dcf8a7801e94a9f1e8b96e7fd8d926" kindref="member">asListType</ref>().elementId(),<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/>elementResult));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="105" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a569aba399723fe5adf0ce8df1af3f70c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a569aba399723fe5adf0ce8df1af3f70c" kindref="member">map</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>sMap,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a569aba399723fe5adf0ce8df1af3f70c" kindref="member">map</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/>keyResult,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/>valueResult)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields_1aebbebf337ca8b17325ff19e2ec79852a" kindref="member">of</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(sMap.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1aa40de0b1700bd54f47a4d7efde92cd20" kindref="member">asMapType</ref>().keyId(),<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/>keyResult),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(sMap.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1aa40de0b1700bd54f47a4d7efde92cd20" kindref="member">asMapType</ref>().valueId(),<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>valueResult));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="112" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1af41ce8253c9dc570c52d90d00bfdb8e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1af41ce8253c9dc570c52d90d00bfdb8e2" kindref="member">map</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>sMap,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1a569aba399723fe5adf0ce8df1af3f70c" kindref="member">map</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/>valueResult)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields_1aebbebf337ca8b17325ff19e2ec79852a" kindref="member">of</ref>(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(sMap.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1aa40de0b1700bd54f47a4d7efde92cd20" kindref="member">asMapType</ref>().keyId(),<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField" kindref="compound">MappedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedField_1a8fad879f7ab174ef32e10b2af464bf4d" kindref="member">of</ref>(sMap.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1aa40de0b1700bd54f47a4d7efde92cd20" kindref="member">asMapType</ref>().valueId(),<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>valueResult));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="119" refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1aca88fac35c7772a4ae7480641d314b18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1MappedFields" kindref="compound">MappedFields</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1aca88fac35c7772a4ae7480641d314b18" kindref="member">primitive</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>type,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1NameMappingWithAvroSchema_1aca88fac35c7772a4ae7480641d314b18" kindref="member">primitive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>mapping<sp/>because<sp/>primitives<sp/>have<sp/>no<sp/>nested<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="core/src/main/java/org/apache/iceberg/avro/NameMappingWithAvroSchema.java"/>
  </compounddef>
</doxygen>
