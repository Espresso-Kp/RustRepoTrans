<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v3_85_2spark_2src_2main_2java_2org_2apache_2iceberg_2spark_2data_2AvroWithSparkSchemaVisitor_8java" kind="file" language="Java">
    <compoundname>AvroWithSparkSchemaVisitor.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor" prot="public">org::apache::iceberg::spark::data::AvroWithSparkSchemaVisitor</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1spark_1_1data">org::apache::iceberg::spark::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.spark.data;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1avro" kindref="compound">avro</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1AvroWithPartnerByStructureVisitor" kindref="compound">AvroWithPartnerByStructureVisitor</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.ArrayType;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DataType;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DataTypes;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.MapType;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StringType;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StructField;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StructType;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor" kindref="compound">AvroWithSparkSchemaVisitor</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1avro_1_1AvroWithPartnerByStructureVisitor" kindref="compound">AvroWithPartnerByStructureVisitor</ref>&lt;DataType,<sp/>T&gt;<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="36" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a2426cf904b1b044219bcbc19b94fe361" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a2426cf904b1b044219bcbc19b94fe361" kindref="member">isStringType</ref>(DataType<sp/>dataType)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataType<sp/>instanceof<sp/>StringType;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="41" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a7ea1809cc9efe6543a78fe97861bffce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a7ea1809cc9efe6543a78fe97861bffce" kindref="member">isMapType</ref>(DataType<sp/>dataType)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataType<sp/>instanceof<sp/>MapType;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="46" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1af7b5bfdb5575fd64cf30856cdeb86d83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>DataType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1af7b5bfdb5575fd64cf30856cdeb86d83" kindref="member">arrayElementType</ref>(DataType<sp/>arrayType)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayType<sp/>instanceof<sp/>ArrayType,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>array:<sp/>%s<sp/>is<sp/>not<sp/>an<sp/>array&quot;</highlight><highlight class="normal">,<sp/>arrayType);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ArrayType)<sp/>arrayType).elementType();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="53" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a6f6ae897153cd9aa0baf2d972e2bf105" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>DataType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a6f6ae897153cd9aa0baf2d972e2bf105" kindref="member">mapKeyType</ref>(DataType<sp/>mapType)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a7ea1809cc9efe6543a78fe97861bffce" kindref="member">isMapType</ref>(mapType),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>map:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>map&quot;</highlight><highlight class="normal">,<sp/>mapType);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((MapType)<sp/>mapType).keyType();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="59" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a5bd2a6c1ff96fcd9fe207037a34692a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>DataType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a5bd2a6c1ff96fcd9fe207037a34692a2" kindref="member">mapValueType</ref>(DataType<sp/>mapType)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a7ea1809cc9efe6543a78fe97861bffce" kindref="member">isMapType</ref>(mapType),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>map:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>map&quot;</highlight><highlight class="normal">,<sp/>mapType);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((MapType)<sp/>mapType).valueType();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="65" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a6a65aaf9027933f97099b2f74de202cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair&lt;String, DataType&gt;</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a6a65aaf9027933f97099b2f74de202cf" kindref="member">fieldNameAndType</ref>(DataType<sp/>structType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structType<sp/>instanceof<sp/>StructType,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>struct:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>struct&quot;</highlight><highlight class="normal">,<sp/>structType);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>StructField<sp/>field<sp/>=<sp/>((StructType)<sp/>structType).apply(pos);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair_1a3856d0c570993ee5a8eb67055ccc6baa" kindref="member">of</ref>(field.name(),<sp/>field.dataType());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="73" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a57e9f521b6138425d8732c961b447f1e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>DataType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1AvroWithSparkSchemaVisitor_1a57e9f521b6138425d8732c961b447f1e" kindref="member">nullType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataTypes.NullType;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/AvroWithSparkSchemaVisitor.java"/>
  </compounddef>
</doxygen>
