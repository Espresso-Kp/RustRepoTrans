<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator" kind="class" language="Java" prot="package" abstract="yes">
    <compoundname>org::apache::iceberg::spark::BaseFileRewriteCoordinator</compoundname>
    <templateparamlist>
      <param>
        <type>F</type>
        <typeconstraint><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ContentFile" kindref="compound">ContentFile</ref>&lt; F</typeconstraint>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a6abf8df534b1586db262dcecc5fb5a60" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>static final Logger org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;::LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(BaseFileRewriteCoordinator.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="34" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1aa504f88064b93b9ffcd812dfd84ba302" prot="private" static="no" mutable="no">
        <type>final Map&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>&lt; String, String &gt;, Set&lt; F &gt; &gt;</type>
        <definition>final Map&lt; Pair&lt; String, String &gt;, Set&lt; F &gt; &gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;::resultMap</definition>
        <argsstring></argsstring>
        <name>resultMap</name>
        <initializer>= Maps.newConcurrentMap()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="36" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8790537a0e58e0373ad537ff6a4524b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.stageRewrite</definition>
        <argsstring>(Table table, String fileSetId, Set&lt; F &gt; newFiles)</argsstring>
        <name>stageRewrite</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <param>
          <type>Set&lt; F &gt;</type>
          <declname>newFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called to persist the output of a rewrite action for a specific group. Since the write is done via a Spark Datasource, we have to propagate the result through this side-effect call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>table where the rewrite is occurring </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileSetId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id used to identify the source set of files being rewritten </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFiles</parametername>
</parameternamelist>
<parameterdescription>
<para>the new files which have been written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="46" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a5d09d8a8a5b74a469acee0015f2ba499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; F &gt;</type>
        <definition>Set&lt;F&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.fetchNewFiles</definition>
        <argsstring>(Table table, String fileSetId)</argsstring>
        <name>fetchNewFiles</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="56" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a69b2423556a760105a74b05c08507f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.clearRewrite</definition>
        <argsstring>(Table table, String fileSetId)</argsstring>
        <name>clearRewrite</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="65" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a0a21ab0741958b6ef8103e45035a7389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; String &gt;</type>
        <definition>Set&lt;String&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.fetchSetIds</definition>
        <argsstring>(Table table)</argsstring>
        <name>fetchSetIds</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="71" column="14" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8790537a0e58e0373ad537ff6a4524b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.stageRewrite</definition>
        <argsstring>(Table table, String fileSetId, Set&lt; F &gt; newFiles)</argsstring>
        <name>stageRewrite</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <param>
          <type>Set&lt; F &gt;</type>
          <declname>newFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called to persist the output of a rewrite action for a specific group. Since the write is done via a Spark Datasource, we have to propagate the result through this side-effect call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>table where the rewrite is occurring </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileSetId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id used to identify the source set of files being rewritten </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFiles</parametername>
</parameternamelist>
<parameterdescription>
<para>the new files which have been written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="46" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a5d09d8a8a5b74a469acee0015f2ba499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; F &gt;</type>
        <definition>Set&lt;F&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.fetchNewFiles</definition>
        <argsstring>(Table table, String fileSetId)</argsstring>
        <name>fetchNewFiles</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="56" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a69b2423556a760105a74b05c08507f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.clearRewrite</definition>
        <argsstring>(Table table, String fileSetId)</argsstring>
        <name>clearRewrite</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="65" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a0a21ab0741958b6ef8103e45035a7389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; String &gt;</type>
        <definition>Set&lt;String&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.fetchSetIds</definition>
        <argsstring>(Table table)</argsstring>
        <name>fetchSetIds</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="71" column="14" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8790537a0e58e0373ad537ff6a4524b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.stageRewrite</definition>
        <argsstring>(Table table, String fileSetId, Set&lt; F &gt; newFiles)</argsstring>
        <name>stageRewrite</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <param>
          <type>Set&lt; F &gt;</type>
          <declname>newFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called to persist the output of a rewrite action for a specific group. Since the write is done via a Spark Datasource, we have to propagate the result through this side-effect call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>table where the rewrite is occurring </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileSetId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id used to identify the source set of files being rewritten </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFiles</parametername>
</parameternamelist>
<parameterdescription>
<para>the new files which have been written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="46" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a5d09d8a8a5b74a469acee0015f2ba499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; F &gt;</type>
        <definition>Set&lt;F&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.fetchNewFiles</definition>
        <argsstring>(Table table, String fileSetId)</argsstring>
        <name>fetchNewFiles</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="56" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a69b2423556a760105a74b05c08507f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.clearRewrite</definition>
        <argsstring>(Table table, String fileSetId)</argsstring>
        <name>clearRewrite</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>fileSetId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="65" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a0a21ab0741958b6ef8103e45035a7389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; String &gt;</type>
        <definition>Set&lt;String&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.fetchSetIds</definition>
        <argsstring>(Table table)</argsstring>
        <name>fetchSetIds</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="71" column="14" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="71" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8b593577d001180b3dc102323eb6b669" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>&lt; String, String &gt;</type>
        <definition>Pair&lt;String, String&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.toId</definition>
        <argsstring>(Table table, String setId)</argsstring>
        <name>toId</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>setId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="78" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8b593577d001180b3dc102323eb6b669" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>&lt; String, String &gt;</type>
        <definition>Pair&lt;String, String&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.toId</definition>
        <argsstring>(Table table, String setId)</argsstring>
        <name>toId</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>setId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="78" column="16" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8b593577d001180b3dc102323eb6b669" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>&lt; String, String &gt;</type>
        <definition>Pair&lt;String, String&gt; org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;.toId</definition>
        <argsstring>(Table table, String setId)</argsstring>
        <name>toId</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>String</type>
          <declname>setId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="78" column="16" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>Map&lt; org.apache.iceberg.util.Pair&lt; String, String &gt;, Set&lt; F &gt; &gt;</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.BaseFileRewriteCoordinator&lt; F extends ContentFile&lt; F &gt;</label>
        <childnode refid="2" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>resultMap</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Logger</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" line="32" column="44" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/BaseFileRewriteCoordinator.java" bodystart="32" bodyend="81"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a69b2423556a760105a74b05c08507f3f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>clearRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a69b2423556a760105a74b05c08507f3f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>clearRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a69b2423556a760105a74b05c08507f3f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>clearRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a5d09d8a8a5b74a469acee0015f2ba499" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>fetchNewFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a5d09d8a8a5b74a469acee0015f2ba499" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>fetchNewFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a5d09d8a8a5b74a469acee0015f2ba499" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>fetchNewFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a0a21ab0741958b6ef8103e45035a7389" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>fetchSetIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a0a21ab0741958b6ef8103e45035a7389" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>fetchSetIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a0a21ab0741958b6ef8103e45035a7389" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>fetchSetIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a6abf8df534b1586db262dcecc5fb5a60" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1aa504f88064b93b9ffcd812dfd84ba302" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>resultMap</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8790537a0e58e0373ad537ff6a4524b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>stageRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8790537a0e58e0373ad537ff6a4524b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>stageRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8790537a0e58e0373ad537ff6a4524b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>stageRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8b593577d001180b3dc102323eb6b669" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>toId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8b593577d001180b3dc102323eb6b669" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>toId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1BaseFileRewriteCoordinator_1a8b593577d001180b3dc102323eb6b669" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::BaseFileRewriteCoordinator</scope><name>toId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
