<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::spark::SparkWriteUtil</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" prot="private" static="yes" mutable="no">
        <type>final NamedReference</type>
        <definition>static final NamedReference org.apache.iceberg.spark.SparkWriteUtil::SPEC_ID</definition>
        <argsstring></argsstring>
        <name>SPEC_ID</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" kindref="member">ref</ref>(MetadataColumns.SPEC_ID)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="48" column="39" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" prot="private" static="yes" mutable="no">
        <type>final NamedReference</type>
        <definition>static final NamedReference org.apache.iceberg.spark.SparkWriteUtil::PARTITION</definition>
        <argsstring></argsstring>
        <name>PARTITION</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" kindref="member">ref</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataColumns_1a1745c8b01a4289a0e79eb1976f8e531e" kindref="member">MetadataColumns.PARTITION_COLUMN_NAME</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="49" column="39" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" prot="private" static="yes" mutable="no">
        <type>final NamedReference</type>
        <definition>static final NamedReference org.apache.iceberg.spark.SparkWriteUtil::FILE_PATH</definition>
        <argsstring></argsstring>
        <name>FILE_PATH</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" kindref="member">ref</ref>(MetadataColumns.FILE_PATH)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="50" column="39" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a7c698bb4fef325b6e33a3f4734c8daa6" prot="private" static="yes" mutable="no">
        <type>final NamedReference</type>
        <definition>static final NamedReference org.apache.iceberg.spark.SparkWriteUtil::ROW_POSITION</definition>
        <argsstring></argsstring>
        <name>ROW_POSITION</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" kindref="member">ref</ref>(MetadataColumns.ROW_POSITION)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="51" column="39" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0f8710128c2a690f953ceda2e795b5ca" prot="private" static="yes" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>final Expression [] org.apache.iceberg.spark.SparkWriteUtil.FILE_CLUSTERING</definition>
        <argsstring></argsstring>
        <name>FILE_CLUSTERING</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" kindref="member">clusterBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" kindref="member">FILE_PATH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="53" column="35" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a2ded2b5145a56c2cb55091d57bddca7e" prot="private" static="yes" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>final Expression [] org.apache.iceberg.spark.SparkWriteUtil.PARTITION_CLUSTERING</definition>
        <argsstring></argsstring>
        <name>PARTITION_CLUSTERING</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" kindref="member">clusterBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" kindref="member">SPEC_ID</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" kindref="member">PARTITION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="54" column="35" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abdfdede57a4b8c6788b883a8167083c2" prot="private" static="yes" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>final Expression [] org.apache.iceberg.spark.SparkWriteUtil.PARTITION_FILE_CLUSTERING</definition>
        <argsstring></argsstring>
        <name>PARTITION_FILE_CLUSTERING</name>
        <initializer>=
      <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" kindref="member">clusterBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" kindref="member">SPEC_ID</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" kindref="member">PARTITION</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" kindref="member">FILE_PATH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="55" column="35" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1adb5034ce8cbc50f5b7e7ddf96b3fff3c" prot="private" static="yes" mutable="no">
        <type>final SortOrder[]</type>
        <definition>final SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.EMPTY_ORDERING</definition>
        <argsstring></argsstring>
        <name>EMPTY_ORDERING</name>
        <initializer>= new SortOrder[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="58" column="34" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aff0b4647a5b2274745c5383d665ed2cd" prot="private" static="yes" mutable="no">
        <type>final SortOrder[]</type>
        <definition>final SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.EXISTING_ROW_ORDERING</definition>
        <argsstring></argsstring>
        <name>EXISTING_ROW_ORDERING</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" kindref="member">orderBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" kindref="member">FILE_PATH</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a7c698bb4fef325b6e33a3f4734c8daa6" kindref="member">ROW_POSITION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="59" column="34" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab53c67df5fffca193be18c584e9c4292" prot="private" static="yes" mutable="no">
        <type>final SortOrder[]</type>
        <definition>final SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.PARTITION_ORDERING</definition>
        <argsstring></argsstring>
        <name>PARTITION_ORDERING</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" kindref="member">orderBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" kindref="member">SPEC_ID</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" kindref="member">PARTITION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="60" column="34" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a4a1a4449c170ebc4e99804e3946c2f41" prot="private" static="yes" mutable="no">
        <type>final SortOrder[]</type>
        <definition>final SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.PARTITION_FILE_ORDERING</definition>
        <argsstring></argsstring>
        <name>PARTITION_FILE_ORDERING</name>
        <initializer>= <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" kindref="member">orderBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" kindref="member">SPEC_ID</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" kindref="member">PARTITION</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" kindref="member">FILE_PATH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="61" column="34" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ac5d91ba20296cae36a631c869fde5b32" prot="private" static="yes" mutable="no">
        <type>final SortOrder[]</type>
        <definition>final SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.POSITION_DELETE_ORDERING</definition>
        <argsstring></argsstring>
        <name>POSITION_DELETE_ORDERING</name>
        <initializer>=
      <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" kindref="member">orderBy</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" kindref="member">SPEC_ID</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" kindref="member">PARTITION</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" kindref="member">FILE_PATH</ref>, <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a7c698bb4fef325b6e33a3f4734c8daa6" kindref="member">ROW_POSITION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="62" column="34" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab249bd478a9578fd2098e306e7761f34" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkWriteUtil.SparkWriteUtil</definition>
        <argsstring>()</argsstring>
        <name>SparkWriteUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="65" column="11" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab249bd478a9578fd2098e306e7761f34" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.SparkWriteUtil.SparkWriteUtil</definition>
        <argsstring>()</argsstring>
        <name>SparkWriteUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="65" column="11" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aab52b2da4d677e6edae78078a0748e9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>static SparkWriteRequirements org.apache.iceberg.spark.SparkWriteUtil.writeRequirements</definition>
        <argsstring>(Table table, DistributionMode mode, boolean fanoutEnabled)</argsstring>
        <name>writeRequirements</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds requirements for batch and micro-batch writes such as append or overwrite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="68" column="40" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1af23509ac0cc3718ae06a249d8e032277" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>static SparkWriteRequirements org.apache.iceberg.spark.SparkWriteUtil.copyOnWriteRequirements</definition>
        <argsstring>(Table table, Command command, DistributionMode mode, boolean fanoutEnabled)</argsstring>
        <name>copyOnWriteRequirements</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Command</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds requirements for copy-on-write DELETE, UPDATE, MERGE operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="93" column="40" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a9985b4440720883d6f7978806d2d135d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>static SparkWriteRequirements org.apache.iceberg.spark.SparkWriteUtil.positionDeltaRequirements</definition>
        <argsstring>(Table table, Command command, DistributionMode mode, boolean fanoutEnabled)</argsstring>
        <name>positionDeltaRequirements</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Command</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds requirements for merge-on-read DELETE, UPDATE, MERGE operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="132" column="40" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="132" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a663f6f4c1ed222a24bd4a20b32d99217" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>static SparkWriteRequirements org.apache.iceberg.spark.SparkWriteUtil.writeRequirements</definition>
        <argsstring>(Table table, DistributionMode mode, boolean fanoutEnabled, long advisoryPartitionSize)</argsstring>
        <name>writeRequirements</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <param>
          <type>long</type>
          <declname>advisoryPartitionSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds requirements for batch and micro-batch writes such as append or overwrite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="68" column="40" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a4554c1645895af22b03f1a6600752944" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>static SparkWriteRequirements org.apache.iceberg.spark.SparkWriteUtil.copyOnWriteRequirements</definition>
        <argsstring>(Table table, Command command, DistributionMode mode, boolean fanoutEnabled, long advisoryPartitionSize)</argsstring>
        <name>copyOnWriteRequirements</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Command</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <param>
          <type>long</type>
          <declname>advisoryPartitionSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds requirements for copy-on-write DELETE, UPDATE, MERGE operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="93" column="40" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="93" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ae969b2d409dfb83eb58bf91a1a0f7d8f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteRequirements" kindref="compound">SparkWriteRequirements</ref></type>
        <definition>static SparkWriteRequirements org.apache.iceberg.spark.SparkWriteUtil.positionDeltaRequirements</definition>
        <argsstring>(Table table, Command command, DistributionMode mode, boolean fanoutEnabled, long advisoryPartitionSize)</argsstring>
        <name>positionDeltaRequirements</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>Command</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <param>
          <type>long</type>
          <declname>advisoryPartitionSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds requirements for merge-on-read DELETE, UPDATE, MERGE operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="136" column="40" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="136" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a5cd8d96996afa39aad5a2077e39a86b6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.writeDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>writeDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="76" column="31" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="76" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ae05435f49a78d16e92aabd6fe12347dc" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.copyOnWriteDeleteUpdateDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>copyOnWriteDeleteUpdateDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="105" column="31" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="105" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad0c611eb89a49ba9f0a8f6aa168914b2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.positionDeltaUpdateMergeDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>positionDeltaUpdateMergeDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="146" column="31" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="146" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad48c73d676f98f1bb31464ac6fdb6f6b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.positionDeltaUpdateMergeOrdering</definition>
        <argsstring>(Table table, boolean fanoutEnabled)</argsstring>
        <name>positionDeltaUpdateMergeOrdering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="172" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="172" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a9b6ebaef13ed90213effb4098fb290c7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.positionDeltaDeleteDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>positionDeltaDeleteDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="180" column="31" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="180" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1acc6c0848c19a239478f05dbc7e5fe3cb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.writeOrdering</definition>
        <argsstring>(Table table, boolean fanoutEnabled)</argsstring>
        <name>writeOrdering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="208" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0fa48c14c1d88f5af963dded95eb5bdd" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>static Expression [] org.apache.iceberg.spark.SparkWriteUtil.clustering</definition>
        <argsstring>(Table table)</argsstring>
        <name>clustering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="216" column="29" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aec5ee110c5ecd83ff1aaa3d0d9270c9f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.ordering</definition>
        <argsstring>(Table table)</argsstring>
        <name>ordering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="220" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a6f748dc9544b9ceecb90cbd2d34eff3e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>static Expression [] org.apache.iceberg.spark.SparkWriteUtil.concat</definition>
        <argsstring>(Expression[] clustering, Expression... otherClustering)</argsstring>
        <name>concat</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
          <declname>clustering</declname>
        </param>
        <param>
          <type>Expression...</type>
          <declname>otherClustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="224" column="29" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a740612dc9af57b241603a2a47bd0792f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.concat</definition>
        <argsstring>(SortOrder[] ordering, SortOrder... otherOrdering)</argsstring>
        <name>concat</name>
        <param>
          <type>SortOrder[]</type>
          <declname>ordering</declname>
        </param>
        <param>
          <type>SortOrder...</type>
          <declname>otherOrdering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="228" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NamedReference</type>
        <definition>static NamedReference org.apache.iceberg.spark.SparkWriteUtil.ref</definition>
        <argsstring>(Types.NestedField field)</argsstring>
        <name>ref</name>
        <param>
          <type>Types.NestedField</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="232" column="33" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a632668a21a73d9a13a6648b90c6ca88d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NamedReference</type>
        <definition>static NamedReference org.apache.iceberg.spark.SparkWriteUtil.ref</definition>
        <argsstring>(String name)</argsstring>
        <name>ref</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="236" column="33" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>static Expression [] org.apache.iceberg.spark.SparkWriteUtil.clusterBy</definition>
        <argsstring>(Expression... exprs)</argsstring>
        <name>clusterBy</name>
        <param>
          <type>Expression...</type>
          <declname>exprs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="240" column="29" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.orderBy</definition>
        <argsstring>(Expression... exprs)</argsstring>
        <name>orderBy</name>
        <param>
          <type>Expression...</type>
          <declname>exprs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="244" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a293985c29db3b1e337206a37c62a101d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder</type>
        <definition>static SortOrder org.apache.iceberg.spark.SparkWriteUtil.sort</definition>
        <argsstring>(Expression expr)</argsstring>
        <name>sort</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="248" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a5cd8d96996afa39aad5a2077e39a86b6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.writeDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>writeDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="76" column="31" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="76" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ae05435f49a78d16e92aabd6fe12347dc" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.copyOnWriteDeleteUpdateDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>copyOnWriteDeleteUpdateDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="109" column="31" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="109" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad0c611eb89a49ba9f0a8f6aa168914b2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.positionDeltaUpdateMergeDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>positionDeltaUpdateMergeDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="154" column="31" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="154" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad48c73d676f98f1bb31464ac6fdb6f6b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.positionDeltaUpdateMergeOrdering</definition>
        <argsstring>(Table table, boolean fanoutEnabled)</argsstring>
        <name>positionDeltaUpdateMergeOrdering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="180" column="28" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a9b6ebaef13ed90213effb4098fb290c7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Distribution</type>
        <definition>static Distribution org.apache.iceberg.spark.SparkWriteUtil.positionDeltaDeleteDistribution</definition>
        <argsstring>(Table table, DistributionMode mode)</argsstring>
        <name>positionDeltaDeleteDistribution</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1DistributionMode" kindref="compound">DistributionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="188" column="31" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="188" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1acc6c0848c19a239478f05dbc7e5fe3cb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.writeOrdering</definition>
        <argsstring>(Table table, boolean fanoutEnabled)</argsstring>
        <name>writeOrdering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>fanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="216" column="28" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="216" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0fa48c14c1d88f5af963dded95eb5bdd" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>static Expression [] org.apache.iceberg.spark.SparkWriteUtil.clustering</definition>
        <argsstring>(Table table)</argsstring>
        <name>clustering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="224" column="29" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aec5ee110c5ecd83ff1aaa3d0d9270c9f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.ordering</definition>
        <argsstring>(Table table)</argsstring>
        <name>ordering</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="228" column="28" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a6f748dc9544b9ceecb90cbd2d34eff3e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>static Expression [] org.apache.iceberg.spark.SparkWriteUtil.concat</definition>
        <argsstring>(Expression[] clustering, Expression... otherClustering)</argsstring>
        <name>concat</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
          <declname>clustering</declname>
        </param>
        <param>
          <type>Expression...</type>
          <declname>otherClustering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="232" column="29" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a740612dc9af57b241603a2a47bd0792f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.concat</definition>
        <argsstring>(SortOrder[] ordering, SortOrder... otherOrdering)</argsstring>
        <name>concat</name>
        <param>
          <type>SortOrder[]</type>
          <declname>ordering</declname>
        </param>
        <param>
          <type>SortOrder...</type>
          <declname>otherOrdering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="236" column="28" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NamedReference</type>
        <definition>static NamedReference org.apache.iceberg.spark.SparkWriteUtil.ref</definition>
        <argsstring>(Types.NestedField field)</argsstring>
        <name>ref</name>
        <param>
          <type>Types.NestedField</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="240" column="33" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a632668a21a73d9a13a6648b90c6ca88d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NamedReference</type>
        <definition>static NamedReference org.apache.iceberg.spark.SparkWriteUtil.ref</definition>
        <argsstring>(String name)</argsstring>
        <name>ref</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="244" column="33" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>[]</type>
        <definition>static Expression [] org.apache.iceberg.spark.SparkWriteUtil.clusterBy</definition>
        <argsstring>(Expression... exprs)</argsstring>
        <name>clusterBy</name>
        <param>
          <type>Expression...</type>
          <declname>exprs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="248" column="29" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder[]</type>
        <definition>static SortOrder [] org.apache.iceberg.spark.SparkWriteUtil.orderBy</definition>
        <argsstring>(Expression... exprs)</argsstring>
        <name>orderBy</name>
        <param>
          <type>Expression...</type>
          <declname>exprs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="252" column="28" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a293985c29db3b1e337206a37c62a101d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SortOrder</type>
        <definition>static SortOrder org.apache.iceberg.spark.SparkWriteUtil.sort</definition>
        <argsstring>(Expression expr)</argsstring>
        <name>sort</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="256" column="28" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="256" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A utility that contains helper methods for working with Spark writes.</para>
<para>Note it is an evolving internal API that is subject to change even in minor releases. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>NamedReference</label>
      </node>
      <node id="4">
        <label>Serializable</label>
      </node>
      <node id="3">
        <label>org.apache.iceberg.expressions.Expression</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SortOrder</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.SparkWriteUtil</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil"/>
        <childnode refid="2" relation="usage">
          <edgelabel>PARTITION_ORDERING</edgelabel>
          <edgelabel>EMPTY_ORDERING</edgelabel>
          <edgelabel>PARTITION_FILE_ORDERING</edgelabel>
          <edgelabel>POSITION_DELETE_ORDERING</edgelabel>
          <edgelabel>EXISTING_ROW_ORDERING</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>FILE_CLUSTERING</edgelabel>
          <edgelabel>PARTITION_FILE_CLUSTERING</edgelabel>
          <edgelabel>PARTITION_CLUSTERING</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>PARTITION</edgelabel>
          <edgelabel>SPEC_ID</edgelabel>
          <edgelabel>ROW_POSITION</edgelabel>
          <edgelabel>FILE_PATH</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" line="46" column="28" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkWriteUtil.java" bodystart="46" bodyend="251"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>clusterBy</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abc8acc2931a466e677c946b7b6650e87" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>clusterBy</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0fa48c14c1d88f5af963dded95eb5bdd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>clustering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0fa48c14c1d88f5af963dded95eb5bdd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>clustering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a6f748dc9544b9ceecb90cbd2d34eff3e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>concat</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a740612dc9af57b241603a2a47bd0792f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>concat</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a6f748dc9544b9ceecb90cbd2d34eff3e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>concat</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a740612dc9af57b241603a2a47bd0792f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>concat</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ae05435f49a78d16e92aabd6fe12347dc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>copyOnWriteDeleteUpdateDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ae05435f49a78d16e92aabd6fe12347dc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>copyOnWriteDeleteUpdateDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1af23509ac0cc3718ae06a249d8e032277" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>copyOnWriteRequirements</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a4554c1645895af22b03f1a6600752944" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>copyOnWriteRequirements</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1adb5034ce8cbc50f5b7e7ddf96b3fff3c" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>EMPTY_ORDERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aff0b4647a5b2274745c5383d665ed2cd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>EXISTING_ROW_ORDERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0f8710128c2a690f953ceda2e795b5ca" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>FILE_CLUSTERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a49e109da12213037b377717c7717d7e8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>FILE_PATH</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>orderBy</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aa0c81c8c214ec3349f34e4daf37107db" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>orderBy</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aec5ee110c5ecd83ff1aaa3d0d9270c9f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ordering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aec5ee110c5ecd83ff1aaa3d0d9270c9f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ordering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1afe3754f8b1e6c222ff6858978fd33818" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>PARTITION</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a2ded2b5145a56c2cb55091d57bddca7e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>PARTITION_CLUSTERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1abdfdede57a4b8c6788b883a8167083c2" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>PARTITION_FILE_CLUSTERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a4a1a4449c170ebc4e99804e3946c2f41" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>PARTITION_FILE_ORDERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab53c67df5fffca193be18c584e9c4292" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>PARTITION_ORDERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ac5d91ba20296cae36a631c869fde5b32" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>POSITION_DELETE_ORDERING</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a9b6ebaef13ed90213effb4098fb290c7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaDeleteDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a9b6ebaef13ed90213effb4098fb290c7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaDeleteDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a9985b4440720883d6f7978806d2d135d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaRequirements</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ae969b2d409dfb83eb58bf91a1a0f7d8f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaRequirements</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad0c611eb89a49ba9f0a8f6aa168914b2" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaUpdateMergeDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad0c611eb89a49ba9f0a8f6aa168914b2" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaUpdateMergeDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad48c73d676f98f1bb31464ac6fdb6f6b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaUpdateMergeOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ad48c73d676f98f1bb31464ac6fdb6f6b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>positionDeltaUpdateMergeOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ref</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a632668a21a73d9a13a6648b90c6ca88d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ref</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab28f018889a3e9cc9fa31bca9c40b770" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ref</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a632668a21a73d9a13a6648b90c6ca88d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ref</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a7c698bb4fef325b6e33a3f4734c8daa6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>ROW_POSITION</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a293985c29db3b1e337206a37c62a101d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>sort</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a293985c29db3b1e337206a37c62a101d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>sort</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab249bd478a9578fd2098e306e7761f34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>SparkWriteUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1ab249bd478a9578fd2098e306e7761f34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>SparkWriteUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a0bfac55edb07ab2d87d209574f8f27ad" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>SPEC_ID</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a5cd8d96996afa39aad5a2077e39a86b6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>writeDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a5cd8d96996afa39aad5a2077e39a86b6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>writeDistribution</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1acc6c0848c19a239478f05dbc7e5fe3cb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>writeOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1acc6c0848c19a239478f05dbc7e5fe3cb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>writeOrdering</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1aab52b2da4d677e6edae78078a0748e9c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>writeRequirements</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkWriteUtil_1a663f6f4c1ed222a24bd4a20b32d99217" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::SparkWriteUtil</scope><name>writeRequirements</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
