<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ZOrderByteUtils_8java" kind="file" language="Java">
    <compoundname>ZOrderByteUtils.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils" prot="public">org::apache::iceberg::util::ZOrderByteUtils</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1util">org::apache::iceberg::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.util;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.nio.ByteBuffer;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.nio.CharBuffer;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.nio.charset.CharsetEncoder;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.nio.charset.StandardCharsets;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Arrays;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils" kindref="compound">ZOrderByteUtils</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ad6e8c114dda8af9652ffa8d9cfc38fc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ad6e8c114dda8af9652ffa8d9cfc38fc8" kindref="member">ZOrderByteUtils</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/>allocatePrimitiveBuffer()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ByteBuffer.allocate(<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1a5a22de0e473c9911b850b3fe20bf0b12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1a5a22de0e473c9911b850b3fe20bf0b12" kindref="member">intToOrderedBytes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.putLong(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>val)<sp/>^<sp/>0x8000000000000000L);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1aceb3a85121c035bcc234bdc21f35261e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1aceb3a85121c035bcc234bdc21f35261e" kindref="member">longToOrderedBytes</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.putLong(val<sp/>^<sp/>0x8000000000000000L);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac3429be9d19e35471edd5c836bab6bfc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac3429be9d19e35471edd5c836bab6bfc" kindref="member">shortToOrderedBytes</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>val,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.putLong(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>val)<sp/>^<sp/>0x8000000000000000L);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1af31589c006f2c0d6c594ee4f7f4151e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1af31589c006f2c0d6c594ee4f7f4151e7" kindref="member">tinyintToOrderedBytes</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>val,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.putLong(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>val)<sp/>^<sp/>0x8000000000000000L);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1abe7c099bc8fd1f663d95a20c13ac9309" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1abe7c099bc8fd1f663d95a20c13ac9309" kindref="member">floatToOrderedBytes</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lval<sp/>=<sp/>Double.doubleToLongBits(val);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>lval<sp/>^=<sp/>((lval<sp/>&gt;&gt;<sp/>(Integer.SIZE<sp/>-<sp/>1))<sp/>|<sp/>Long.MIN_VALUE);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.putLong(lval);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1a1f9097178fdd32d761d7f16ac91aeb9f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1a1f9097178fdd32d761d7f16ac91aeb9f" kindref="member">doubleToOrderedBytes</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ac74b185acde7fad8b71d71d8826dfbca" kindref="member">PRIMITIVE_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lval<sp/>=<sp/>Double.doubleToLongBits(val);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>lval<sp/>^=<sp/>((lval<sp/>&gt;&gt;<sp/>(Integer.SIZE<sp/>-<sp/>1))<sp/>|<sp/>Long.MIN_VALUE);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes.putLong(lval);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;ByteBufferBackingArray&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1a27b62156c6fcc0f13341f8c6f110d386" refkind="member"><highlight class="normal"><sp/><sp/>public<sp/>static<sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1a27b62156c6fcc0f13341f8c6f110d386" kindref="member">stringToOrderedBytes</ref>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/>ByteBuffer<sp/>reuse,<sp/>CharsetEncoder<sp/>encoder)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder.charset().equals(StandardCharsets.UTF_8),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>an<sp/>encoder<sp/>not<sp/>using<sp/>UTF_8<sp/>as<sp/>it&apos;s<sp/>Charset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/>length);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>Arrays.fill(bytes.array(),<sp/>0,<sp/>length,<sp/>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>0x00);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CharBuffer<sp/>inputBuffer<sp/>=<sp/>CharBuffer.wrap(val);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encoder.encode(inputBuffer,<sp/>bytes,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;ByteBufferBackingArray&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1afe51e05b33a497b78303db411b97d6bc" refkind="member"><highlight class="normal"><sp/><sp/>public<sp/>static<sp/>ByteBuffer<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1afe51e05b33a497b78303db411b97d6bc" kindref="member">byteTruncateOrFill</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>ByteBuffer<sp/>bytes<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers" kindref="compound">ByteBuffers</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ByteBuffers_1ab3722928a920e68ad0e149a68696e64d" kindref="member">reuse</ref>(reuse,<sp/>length);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.fill(bytes.array(),<sp/>0,<sp/>length,<sp/>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>0x00);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.length<sp/>&lt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes.put(val,<sp/>0,<sp/>val.length);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.fill(bytes.array(),<sp/>val.length,<sp/>length,<sp/>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>0x00);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes.put(val,<sp/>0,<sp/>length);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>interleaveBits(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[][]<sp/>columnsBinary,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interleavedSize)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interleaveBits(columnsBinary,<sp/>interleavedSize,<sp/>ByteBuffer.allocate(interleavedSize));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NarrowingCompoundAssignment<sp/>is<sp/>intended<sp/>here.<sp/>See</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/apache/iceberg/pull/5200#issuecomment-1176226163</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>@SuppressWarnings({</highlight><highlight class="stringliteral">&quot;ByteBufferBackingArray&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NarrowingCompoundAssignment&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="179" refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ad01e0a61f4455b3ac52b884dc46cc338" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ZOrderByteUtils_1ad01e0a61f4455b3ac52b884dc46cc338" kindref="member">interleaveBits</ref>(</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[][]<sp/>columnsBinary,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interleavedSize,<sp/>ByteBuffer<sp/>reuse)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>interleavedBytes<sp/>=<sp/>reuse.array();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Arrays.fill(interleavedBytes,<sp/>0,<sp/>interleavedSize,<sp/>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>0x00);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sourceColumn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sourceByte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sourceBit<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interleaveByte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interleaveBit<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(interleaveByte<sp/>&lt;<sp/>interleavedSize)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>source<sp/>bit<sp/>from<sp/>source<sp/>byte<sp/>and<sp/>move<sp/>it<sp/>to<sp/>the<sp/>output<sp/>bit<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interleavedBytes[interleaveByte]<sp/>|=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(columnsBinary[sourceColumn][sourceByte]<sp/>&amp;<sp/>1<sp/>&lt;&lt;<sp/>sourceBit)<sp/>&gt;&gt;&gt;<sp/>sourceBit<sp/>&lt;&lt;<sp/>interleaveBit;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--interleaveBit;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>an<sp/>output<sp/>byte<sp/>has<sp/>been<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interleaveBit<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>the<sp/>next<sp/>output<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interleaveByte++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>the<sp/>highest<sp/>order<sp/>bit<sp/>of<sp/>the<sp/>new<sp/>output<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interleaveBit<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>last<sp/>output<sp/>byte<sp/>has<sp/>been<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interleaveByte<sp/>==<sp/>interleavedSize)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>source<sp/>bit<sp/>to<sp/>interleave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>next<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++sourceColumn;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceColumn<sp/>==<sp/>columnsBinary.length)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>last<sp/>source<sp/>column<sp/>was<sp/>used,<sp/>reset<sp/>to<sp/>next<sp/>bit<sp/>of<sp/>first<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceColumn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--sourceBit;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceBit<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>last<sp/>bit<sp/>of<sp/>the<sp/>source<sp/>byte<sp/>was<sp/>used,<sp/>reset<sp/>to<sp/>the<sp/>highest<sp/>bit<sp/>of<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceByte++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceBit<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(columnsBinary[sourceColumn].length<sp/>&lt;=<sp/>sourceByte);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interleavedBytes;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="core/src/main/java/org/apache/iceberg/util/ZOrderByteUtils.java"/>
  </compounddef>
</doxygen>
