<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a" kind="class" language="Java" prot="private">
    <compoundname>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">LogicalTypeAnnotation::LogicalTypeAnnotationVisitor&lt; ParquetValueWriter&lt;?&gt; &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a20019296c9c15eafa5c6482d35987126" prot="private" static="no" mutable="no">
        <type>final ColumnDescriptor</type>
        <definition>final ColumnDescriptor org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor::desc</definition>
        <argsstring></argsstring>
        <name>desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="143" column="38" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a7bb3afc4f6c7617dccecf4c153bb8bc4" prot="private" static="no" mutable="no">
        <type>final PrimitiveType</type>
        <definition>final PrimitiveType org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor::primitive</definition>
        <argsstring></argsstring>
        <name>primitive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="144" column="35" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1adce431a9fce43912c36b4e76d2e2f1d5" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.LogicalTypeAnnotationParquetValueWriterVisitor</definition>
        <argsstring>(ColumnDescriptor desc, PrimitiveType primitive)</argsstring>
        <name>LogicalTypeAnnotationParquetValueWriterVisitor</name>
        <param>
          <type>ColumnDescriptor</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>PrimitiveType</type>
          <declname>primitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="146" column="7" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1adce431a9fce43912c36b4e76d2e2f1d5" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.LogicalTypeAnnotationParquetValueWriterVisitor</definition>
        <argsstring>(ColumnDescriptor desc, PrimitiveType primitive)</argsstring>
        <name>LogicalTypeAnnotationParquetValueWriterVisitor</name>
        <param>
          <type>ColumnDescriptor</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>PrimitiveType</type>
          <declname>primitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="146" column="7" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1adce431a9fce43912c36b4e76d2e2f1d5" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.LogicalTypeAnnotationParquetValueWriterVisitor</definition>
        <argsstring>(ColumnDescriptor desc, PrimitiveType primitive)</argsstring>
        <name>LogicalTypeAnnotationParquetValueWriterVisitor</name>
        <param>
          <type>ColumnDescriptor</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>PrimitiveType</type>
          <declname>primitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="145" column="7" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="145" bodyend="149"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ad6ce042855d61d5443affc38e97405da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.StringLogicalTypeAnnotation stringLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.StringLogicalTypeAnnotation</type>
          <declname>stringLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="153" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a53a2c9b4e340c711b92f130b683851b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.EnumLogicalTypeAnnotation enumLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.EnumLogicalTypeAnnotation</type>
          <declname>enumLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="159" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a1fcee63dfc26cfe884b8c69c7debfa2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.JsonLogicalTypeAnnotation jsonLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.JsonLogicalTypeAnnotation</type>
          <declname>jsonLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="165" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac04c4c61ab3a0a3dae6f075ae2380f1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.UUIDLogicalTypeAnnotation uuidLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.UUIDLogicalTypeAnnotation</type>
          <declname>uuidLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="171" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a3399fa076db0ac85e7799e45fdcbb5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.MapLogicalTypeAnnotation mapLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.MapLogicalTypeAnnotation</type>
          <declname>mapLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="177" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a4c48cfb7f29898d93fd9c339286b6f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.ListLogicalTypeAnnotation listLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.ListLogicalTypeAnnotation</type>
          <declname>listLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="183" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a399dee3e8eed470c8043f7d87eccce15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(DecimalLogicalTypeAnnotation decimal)</argsstring>
        <name>visit</name>
        <param>
          <type>DecimalLogicalTypeAnnotation</type>
          <declname>decimal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="189" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a697a5e47bea85dbd3313f18b70968f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.DateLogicalTypeAnnotation dateLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.DateLogicalTypeAnnotation</type>
          <declname>dateLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="203" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a6fdcfccba3ecd82b192da19e0e0c89f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.TimeLogicalTypeAnnotation timeLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.TimeLogicalTypeAnnotation</type>
          <declname>timeLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="209" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="209" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac15b6b0a7619b5807bc63d0f309a9320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.TimestampLogicalTypeAnnotation timestampLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.TimestampLogicalTypeAnnotation</type>
          <declname>timestampLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="218" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ae7ad48e728aec712dd86a39c53bab67f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.IntLogicalTypeAnnotation intLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.IntLogicalTypeAnnotation</type>
          <declname>intLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="227" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="227" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a5c9d397fdaacf93870bdd3e14377e877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.BsonLogicalTypeAnnotation bsonLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.BsonLogicalTypeAnnotation</type>
          <declname>bsonLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="242" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ad6ce042855d61d5443affc38e97405da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.StringLogicalTypeAnnotation stringLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.StringLogicalTypeAnnotation</type>
          <declname>stringLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="153" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a53a2c9b4e340c711b92f130b683851b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.EnumLogicalTypeAnnotation enumLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.EnumLogicalTypeAnnotation</type>
          <declname>enumLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="159" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a1fcee63dfc26cfe884b8c69c7debfa2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.JsonLogicalTypeAnnotation jsonLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.JsonLogicalTypeAnnotation</type>
          <declname>jsonLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="165" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac04c4c61ab3a0a3dae6f075ae2380f1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.UUIDLogicalTypeAnnotation uuidLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.UUIDLogicalTypeAnnotation</type>
          <declname>uuidLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="171" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a3399fa076db0ac85e7799e45fdcbb5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.MapLogicalTypeAnnotation mapLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.MapLogicalTypeAnnotation</type>
          <declname>mapLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="177" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a4c48cfb7f29898d93fd9c339286b6f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.ListLogicalTypeAnnotation listLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.ListLogicalTypeAnnotation</type>
          <declname>listLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="183" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a399dee3e8eed470c8043f7d87eccce15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(DecimalLogicalTypeAnnotation decimal)</argsstring>
        <name>visit</name>
        <param>
          <type>DecimalLogicalTypeAnnotation</type>
          <declname>decimal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="189" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a697a5e47bea85dbd3313f18b70968f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.DateLogicalTypeAnnotation dateLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.DateLogicalTypeAnnotation</type>
          <declname>dateLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="203" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a6fdcfccba3ecd82b192da19e0e0c89f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.TimeLogicalTypeAnnotation timeLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.TimeLogicalTypeAnnotation</type>
          <declname>timeLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="209" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="209" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac15b6b0a7619b5807bc63d0f309a9320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.TimestampLogicalTypeAnnotation timestampLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.TimestampLogicalTypeAnnotation</type>
          <declname>timestampLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="218" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ae7ad48e728aec712dd86a39c53bab67f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.IntLogicalTypeAnnotation intLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.IntLogicalTypeAnnotation</type>
          <declname>intLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="227" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="227" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a5c9d397fdaacf93870bdd3e14377e877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.BsonLogicalTypeAnnotation bsonLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.BsonLogicalTypeAnnotation</type>
          <declname>bsonLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="242" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ad6ce042855d61d5443affc38e97405da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.StringLogicalTypeAnnotation stringLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.StringLogicalTypeAnnotation</type>
          <declname>stringLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="152" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a53a2c9b4e340c711b92f130b683851b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.EnumLogicalTypeAnnotation enumLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.EnumLogicalTypeAnnotation</type>
          <declname>enumLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="158" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a1fcee63dfc26cfe884b8c69c7debfa2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.JsonLogicalTypeAnnotation jsonLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.JsonLogicalTypeAnnotation</type>
          <declname>jsonLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="164" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac04c4c61ab3a0a3dae6f075ae2380f1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.UUIDLogicalTypeAnnotation uuidLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.UUIDLogicalTypeAnnotation</type>
          <declname>uuidLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="170" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a3399fa076db0ac85e7799e45fdcbb5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.MapLogicalTypeAnnotation mapLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.MapLogicalTypeAnnotation</type>
          <declname>mapLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="176" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a4c48cfb7f29898d93fd9c339286b6f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.ListLogicalTypeAnnotation listLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.ListLogicalTypeAnnotation</type>
          <declname>listLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="182" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a399dee3e8eed470c8043f7d87eccce15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(DecimalLogicalTypeAnnotation decimal)</argsstring>
        <name>visit</name>
        <param>
          <type>DecimalLogicalTypeAnnotation</type>
          <declname>decimal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="188" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="188" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a697a5e47bea85dbd3313f18b70968f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.DateLogicalTypeAnnotation dateLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.DateLogicalTypeAnnotation</type>
          <declname>dateLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="202" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a6fdcfccba3ecd82b192da19e0e0c89f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.TimeLogicalTypeAnnotation timeLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.TimeLogicalTypeAnnotation</type>
          <declname>timeLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="208" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac15b6b0a7619b5807bc63d0f309a9320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.TimestampLogicalTypeAnnotation timestampLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.TimestampLogicalTypeAnnotation</type>
          <declname>timestampLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="217" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ae7ad48e728aec712dd86a39c53bab67f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.IntLogicalTypeAnnotation intLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.IntLogicalTypeAnnotation</type>
          <declname>intLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="226" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="226" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a5c9d397fdaacf93870bdd3e14377e877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetValueWriter" kindref="compound">ParquetValueWriter</ref>&lt;?&gt; &gt;</type>
        <definition>Optional&lt;ParquetValueWriter&lt;?&gt; &gt; org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor.visit</definition>
        <argsstring>(LogicalTypeAnnotation.BsonLogicalTypeAnnotation bsonLogicalType)</argsstring>
        <name>visit</name>
        <param>
          <type>LogicalTypeAnnotation.BsonLogicalTypeAnnotation</type>
          <declname>bsonLogicalType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="241" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="241" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>LogicalTypeAnnotation::LogicalTypeAnnotationVisitor&lt; ParquetValueWriter&lt;?&gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.spark.data.SparkParquetWriters.WriteBuilder.LogicalTypeAnnotationParquetValueWriterVisitor</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>primitive</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>ColumnDescriptor</label>
      </node>
      <node id="3">
        <label>PrimitiveType</label>
      </node>
      <node id="2">
        <label>LogicalTypeAnnotation::LogicalTypeAnnotationVisitor&lt; ParquetValueWriter&lt;?&gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" line="141" column="4" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/data/SparkParquetWriters.java" bodystart="140" bodyend="246"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a20019296c9c15eafa5c6482d35987126" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>desc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1adce431a9fce43912c36b4e76d2e2f1d5" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>LogicalTypeAnnotationParquetValueWriterVisitor</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1adce431a9fce43912c36b4e76d2e2f1d5" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>LogicalTypeAnnotationParquetValueWriterVisitor</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1adce431a9fce43912c36b4e76d2e2f1d5" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>LogicalTypeAnnotationParquetValueWriterVisitor</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a7bb3afc4f6c7617dccecf4c153bb8bc4" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>primitive</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ad6ce042855d61d5443affc38e97405da" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a53a2c9b4e340c711b92f130b683851b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a1fcee63dfc26cfe884b8c69c7debfa2a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac04c4c61ab3a0a3dae6f075ae2380f1c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a3399fa076db0ac85e7799e45fdcbb5fd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a4c48cfb7f29898d93fd9c339286b6f22" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a399dee3e8eed470c8043f7d87eccce15" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a697a5e47bea85dbd3313f18b70968f8a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a6fdcfccba3ecd82b192da19e0e0c89f9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac15b6b0a7619b5807bc63d0f309a9320" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ae7ad48e728aec712dd86a39c53bab67f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a5c9d397fdaacf93870bdd3e14377e877" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ad6ce042855d61d5443affc38e97405da" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a53a2c9b4e340c711b92f130b683851b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a1fcee63dfc26cfe884b8c69c7debfa2a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac04c4c61ab3a0a3dae6f075ae2380f1c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a3399fa076db0ac85e7799e45fdcbb5fd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a4c48cfb7f29898d93fd9c339286b6f22" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a399dee3e8eed470c8043f7d87eccce15" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a697a5e47bea85dbd3313f18b70968f8a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a6fdcfccba3ecd82b192da19e0e0c89f9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac15b6b0a7619b5807bc63d0f309a9320" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ae7ad48e728aec712dd86a39c53bab67f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a5c9d397fdaacf93870bdd3e14377e877" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ad6ce042855d61d5443affc38e97405da" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a53a2c9b4e340c711b92f130b683851b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a1fcee63dfc26cfe884b8c69c7debfa2a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac04c4c61ab3a0a3dae6f075ae2380f1c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a3399fa076db0ac85e7799e45fdcbb5fd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a4c48cfb7f29898d93fd9c339286b6f22" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a399dee3e8eed470c8043f7d87eccce15" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a697a5e47bea85dbd3313f18b70968f8a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a6fdcfccba3ecd82b192da19e0e0c89f9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ac15b6b0a7619b5807bc63d0f309a9320" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1ae7ad48e728aec712dd86a39c53bab67f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkParquetWriters_1_1WriteBuilder_1_1Logical1284770bc729bc8fadec595fcf67a38a_1a5c9d397fdaacf93870bdd3e14377e877" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::data::SparkParquetWriters::WriteBuilder::LogicalTypeAnnotationParquetValueWriterVisitor</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
