<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::RowDelta</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate" prot="public" virt="non-virtual">org.apache.iceberg.SnapshotUpdate&lt; RowDelta &gt;</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1BaseRowDelta" prot="public" virt="non-virtual">org.apache.iceberg.BaseRowDelta</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1abad1a7900d06d3696996836fdae91070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.addRows</definition>
        <argsstring>(DataFile inserts)</argsstring>
        <name>addRows</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref></type>
          <declname>inserts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref> to the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inserts</parametername>
</parameternamelist>
<parameterdescription>
<para>a data file of rows to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a77f257b5c3a7622275f5325bf8e67bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.addDeletes</definition>
        <argsstring>(DeleteFile deletes)</argsstring>
        <name>addDeletes</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DeleteFile" kindref="compound">DeleteFile</ref></type>
          <declname>deletes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DeleteFile" kindref="compound">DeleteFile</ref> to the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deletes</parametername>
</parameternamelist>
<parameterdescription>
<para>a delete file of rows to delete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="47" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a87d6f29c114faa5c8d315e7932d17372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.validateFromSnapshot</definition>
        <argsstring>(long snapshotId)</argsstring>
        <name>validateFromSnapshot</name>
        <param>
          <type>long</type>
          <declname>snapshotId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the snapshot ID used in any reads for this operation.</para>
<para>Validations will check changes after this snapshot ID. If the from snapshot is not set, all ancestor snapshots through the table&apos;s initial snapshot are validated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshotId</parametername>
</parameternamelist>
<parameterdescription>
<para>a snapshot ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="58" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1ae452a616502472ed582c10f96439e85d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.caseSensitive</definition>
        <argsstring>(boolean caseSensitive)</argsstring>
        <name>caseSensitive</name>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables or disables case sensitive expression binding for validations that accept expressions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>whether expression binding should be case sensitive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="66" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a11ef054f001947de63c3c23b702ee774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.validateDataFilesExist</definition>
        <argsstring>(Iterable&lt;? extends CharSequence &gt; referencedFiles)</argsstring>
        <name>validateDataFilesExist</name>
        <param>
          <type>Iterable&lt;? extends CharSequence &gt;</type>
          <declname>referencedFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add data file paths that must not be removed by conflicting commits for this <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref> to succeed.</para>
<para>If any path has been removed by a conflicting commit in the table since the snapshot passed to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a87d6f29c114faa5c8d315e7932d17372" kindref="member">validateFromSnapshot(long)</ref>, the operation will fail with a {<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">}. </ref>By default, this validation checks only rewrite and overwrite commits. To apply validation to delete commits, call <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a44dcd038c57c54b54a061d35797e9a6e" kindref="member">validateDeletedFiles()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>referencedFiles</parametername>
</parameternamelist>
<parameterdescription>
<para>file paths that are referenced by a position delete file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="82" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a44dcd038c57c54b54a061d35797e9a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.validateDeletedFiles</definition>
        <argsstring>()</argsstring>
        <name>validateDeletedFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable validation that referenced data files passed to {<ref refid="" kindref="compound">} have not been removed by a delete operation. </ref>If a data file has a row deleted using a position delete file, rewriting or overwriting the data file concurrently would un-delete the row. Deleting the data file is normally allowed, but a delete may be part of a transaction that reads and re-appends a row. This method is used to validate deletes for the transaction case.</para>
<para><simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="95" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a6d0bcb8f4debd71330108459355547ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.conflictDetectionFilter</definition>
        <argsstring>(Expression conflictDetectionFilter)</argsstring>
        <name>conflictDetectionFilter</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>conflictDetectionFilter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a conflict detection filter used to validate concurrently added data and delete files.</para>
<para>If not called, a true literal will be used as the conflict detection filter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conflictDetectionFilter</parametername>
</parameternamelist>
<parameterdescription>
<para>an expression on rows in the table </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="105" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a9b8bf06b63d2807fdc037ed22fc7a910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.validateNoConflictingDataFiles</definition>
        <argsstring>()</argsstring>
        <name>validateNoConflictingDataFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables validation that data files added concurrently do not conflict with this commit&apos;s operation.</para>
<para>This method should be called when the table is queried to determine which files to delete/append. If a concurrent operation commits a new file after the data was read and that file might contain rows matching the specified conflict detection filter, this operation will detect this during retries and fail.</para>
<para>Calling this method is required to maintain serializable isolation for update/delete operations. Otherwise, the isolation level will be snapshot isolation.</para>
<para>Validation uses the conflict detection filter passed to {<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a6d0bcb8f4debd71330108459355547ce" kindref="member">} and applies to operations that happened after the snapshot passed to  #validateFromSnapshot(long)}.  this for method chaining </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="125" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1ad4fddcabfb4d2f24ac05577c5d17a195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta" kindref="compound">RowDelta</ref></type>
        <definition>RowDelta org.apache.iceberg.RowDelta.validateNoConflictingDeleteFiles</definition>
        <argsstring>()</argsstring>
        <name>validateNoConflictingDeleteFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables validation that delete files added concurrently do not conflict with this commit&apos;s operation.</para>
<para>This method must be called when the table is queried to produce a row delta for UPDATE and MERGE operations independently of the isolation level. Calling this method isn&apos;t required for DELETE operations as it is OK to delete a record that is also deleted concurrently.</para>
<para>Validation uses the conflict detection filter passed to {<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a6d0bcb8f4debd71330108459355547ce" kindref="member">} and applies to operations that happened after the snapshot passed to  #validateFromSnapshot(long)}.  this for method chaining </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="141" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>API for encoding row-level changes to a table.</para>
<para>This API accumulates data and delete file changes, produces a new <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref> of the table, and commits that snapshot as the current.</para>
<para>When committing, these changes will be applied to the latest table snapshot. Commit conflicts will be resolved by applying the changes to the new latest snapshot and reattempting the commit. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.RowDelta</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.BaseRowDelta</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.SnapshotUpdate&lt; RowDelta &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.RowDelta</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.SnapshotUpdate&lt; RowDelta &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate"/>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/RowDelta.java" line="32" column="42" bodyfile="api/src/main/java/org/apache/iceberg/RowDelta.java" bodystart="32" bodyend="142"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a77f257b5c3a7622275f5325bf8e67bef" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>addDeletes</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1abad1a7900d06d3696996836fdae91070" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>addRows</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1ae452a616502472ed582c10f96439e85d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>caseSensitive</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a6d0bcb8f4debd71330108459355547ce" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>conflictDetectionFilter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a939514bf390d07c354dffc6be1b2ba89" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>deleteWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a5a6c298d7ae52b719969641744d621ff" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>scanManifestsWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a72b3978b4804d7f75c70f9e0c95ef55c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>set</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1ac54dc0e998f7664271ab88be021d37ed" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>stageOnly</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1SnapshotUpdate_1a4eec4643f899de9ed2c4f22beb310447" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>toBranch</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a11ef054f001947de63c3c23b702ee774" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>validateDataFilesExist</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a44dcd038c57c54b54a061d35797e9a6e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>validateDeletedFiles</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a87d6f29c114faa5c8d315e7932d17372" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>validateFromSnapshot</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1a9b8bf06b63d2807fdc037ed22fc7a910" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>validateNoConflictingDataFiles</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1RowDelta_1ad4fddcabfb4d2f24ac05577c5d17a195" prot="public" virt="non-virtual"><scope>org::apache::iceberg::RowDelta</scope><name>validateNoConflictingDeleteFiles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
