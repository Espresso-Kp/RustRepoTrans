<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::hadoop::HadoopTables</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables" prot="public" virt="non-virtual">org.apache.iceberg.Tables</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable" prot="public" virt="non-virtual">org.apache.iceberg.hadoop.Configurable&lt; C &gt;</basecompoundref>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1_1HadoopTableBuilder" prot="private">org::apache::iceberg::hadoop::HadoopTables::HadoopTableBuilder</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a6d2770414a80c1046317f205b76c2a07" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.hadoop.HadoopTables.LOCK_PROPERTY_PREFIX</definition>
        <argsstring></argsstring>
        <name>LOCK_PROPERTY_PREFIX</name>
        <initializer>= &quot;iceberg.tables.hadoop.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="60" column="30" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ac7db12a20e201eeb415eb665310bcf23" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>final Logger org.apache.iceberg.hadoop.HadoopTables.LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(HadoopTables.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="62" column="31" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a37a5f6a71889b86e10fca448556ff81f" prot="private" static="yes" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.hadoop.HadoopTables.METADATA_JSON</definition>
        <argsstring></argsstring>
        <name>METADATA_JSON</name>
        <initializer>= &quot;metadata.json&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="63" column="31" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ae7fb22c7c752f67a6ce527aeaf6add8c" prot="private" static="yes" mutable="no">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1LockManager" kindref="compound">LockManager</ref></type>
        <definition>LockManager org.apache.iceberg.hadoop.HadoopTables.lockManager</definition>
        <argsstring></argsstring>
        <name>lockManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="65" column="30" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a942e9c3bcadebf8da8dd9b95d9dc49b9" prot="private" static="no" mutable="no">
        <type>Configuration</type>
        <definition>Configuration org.apache.iceberg.hadoop.HadoopTables.conf</definition>
        <argsstring></argsstring>
        <name>conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="67" column="25" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a17fbdefe8cc4319cddb291a7650fdfeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.hadoop.HadoopTables.HadoopTables</definition>
        <argsstring>()</argsstring>
        <name>HadoopTables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="69" column="10" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a2ac0061e388dcb4ae1d1be8b58bd5e49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.hadoop.HadoopTables.HadoopTables</definition>
        <argsstring>(Configuration conf)</argsstring>
        <name>HadoopTables</name>
        <param>
          <type>Configuration</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="73" column="10" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1aee3ecdcbb37ceba94f910e6731f4ab3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>Table org.apache.iceberg.hadoop.HadoopTables.load</definition>
        <argsstring>(String location)</argsstring>
        <name>load</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables_1a556853567479690382ff3ff68c29c0f3">load</reimplements>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the table location from a FileSystem path location.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a path URI (e.g. hdfs:///warehouse/my_table/) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>table implementation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="84" column="16" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="84" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a21143391c028c3a36458551d2ef126df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.hadoop.HadoopTables.exists</definition>
        <argsstring>(String location)</argsstring>
        <name>exists</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables_1a840506542472a27e14cdce988006e690">exists</reimplements>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="106" column="18" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a0856eb90000b5c9d5f24a10124a471ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>Table org.apache.iceberg.hadoop.HadoopTables.create</definition>
        <argsstring>(Schema schema, PartitionSpec spec, SortOrder order, Map&lt; String, String &gt; properties, String location)</argsstring>
        <name>create</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables_1a937d3253320a41a4cf10df786f3ecb70">create</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref></type>
          <declname>order</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a table using the FileSystem implementation resolve from location.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>iceberg schema used to create the table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>partitioning spec, if null the table will be unpartitioned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties, initialized to empty if null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a path URI (e.g. hdfs:///warehouse/my_table) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>newly created table implementation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="149" column="16" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1aaceef044584599a1c67678710f8069dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.hadoop.HadoopTables.dropTable</definition>
        <argsstring>(String location)</argsstring>
        <name>dropTable</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a table and delete all data and metadata files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a path URI (e.g. hdfs:///warehouse/my_table) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table was dropped, false if it did not exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="168" column="18" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a49006fef4fb4e485723e7299eaf0cedb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.hadoop.HadoopTables.dropTable</definition>
        <argsstring>(String location, boolean purge)</argsstring>
        <name>dropTable</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>purge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a table; optionally delete data and metadata files.</para>
<para>If purge is set to true the implementation should delete all data and metadata files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a path URI (e.g. hdfs:///warehouse/my_table) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>purge</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, delete all data and metadata files in the table </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table was dropped, false if it did not exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="181" column="18" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="181" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a5d1f65d07faafb63118fccaccc0bb49e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>Transaction org.apache.iceberg.hadoop.HadoopTables.newCreateTableTransaction</definition>
        <argsstring>(String location, Schema schema, PartitionSpec spec, Map&lt; String, String &gt; properties)</argsstring>
        <name>newCreateTableTransaction</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a location for the table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to create the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="258" column="22" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="258" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a554d375cc2e94c0069fb6a01a813d30f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>Transaction org.apache.iceberg.hadoop.HadoopTables.newReplaceTableTransaction</definition>
        <argsstring>(String location, Schema schema, PartitionSpec spec, Map&lt; String, String &gt; properties, boolean orCreate)</argsstring>
        <name>newReplaceTableTransaction</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>orCreate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to replace a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a location for the table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orCreate</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create the table if not exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to replace the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table doesn&apos;t exist and orCreate is false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="277" column="22" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="277" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a545008a7cb04dfb33ab93504afbda0ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Catalog.TableBuilder</type>
        <definition>Catalog.TableBuilder org.apache.iceberg.hadoop.HadoopTables.buildTable</definition>
        <argsstring>(String location, Schema schema)</argsstring>
        <name>buildTable</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="289" column="30" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a56cf13d5bc3b5791d9c26c52022bbc3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.hadoop.HadoopTables.setConf</definition>
        <argsstring>(Configuration conf)</argsstring>
        <name>setConf</name>
        <param>
          <type>Configuration</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="399" column="15" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="399" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a62aadd3b380e510389d47d61d6d40b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Configuration</type>
        <definition>Configuration org.apache.iceberg.hadoop.HadoopTables.getConf</definition>
        <argsstring>()</argsstring>
        <name>getConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="404" column="24" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="404" bodyend="406"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ad8077d5c427dcebe872c069835f1f856" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>&lt; String, <ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref> &gt;</type>
        <definition>Pair&lt;String, MetadataTableType&gt; org.apache.iceberg.hadoop.HadoopTables.parseMetadataType</definition>
        <argsstring>(String location)</argsstring>
        <name>parseMetadataType</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to resolve a metadata table, which we encode as URI fragments e.g. hdfs:///warehouse/my_table#snapshots</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to parse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A base table name and <ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref> if a type is found, null if not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="117" column="16" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="117" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a12b20bb2f0ff310a6e56e7b59984d0e0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>Table org.apache.iceberg.hadoop.HadoopTables.loadMetadataTable</definition>
        <argsstring>(String location, String metadataTableName, MetadataTableType type)</argsstring>
        <name>loadMetadataTable</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>String</type>
          <declname>metadataTableName</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="129" column="17" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="129" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ad6c39e36c8d0e9e8e9368ad664cf58b5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
        <definition>TableMetadata org.apache.iceberg.hadoop.HadoopTables.tableMetadata</definition>
        <argsstring>(Schema schema, PartitionSpec spec, SortOrder order, Map&lt; String, String &gt; properties, String location)</argsstring>
        <name>tableMetadata</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref></type>
          <declname>order</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="234" column="25" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="234" bodyend="246"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a90a5a5d6f633d68049ff0f383ac518b7" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref></type>
        <definition>TableOperations org.apache.iceberg.hadoop.HadoopTables.newTableOps</definition>
        <argsstring>(String location)</argsstring>
        <name>newTableOps</name>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="207" column="19" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="207" bodyend="214"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ad03a035de8a850bf43e44155c996a2da" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1LockManager" kindref="compound">LockManager</ref></type>
        <definition>static synchronized LockManager org.apache.iceberg.hadoop.HadoopTables.createOrGetLockManager</definition>
        <argsstring>(HadoopTables table)</argsstring>
        <name>createOrGetLockManager</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables" kindref="compound">HadoopTables</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="216" column="43" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="216" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of Iceberg tables that uses the Hadoop FileSystem to store metadata and manifests. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.apache.iceberg.Tables</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.hadoop.HadoopTables</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.hadoop.Configurable&lt; C &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>AutoCloseable</label>
      </node>
      <node id="2">
        <label>org.apache.iceberg.Tables</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables"/>
      </node>
      <node id="4">
        <label>org.apache.iceberg.LockManager</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1LockManager"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Logger</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.hadoop.HadoopTables</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>lockManager</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>conf</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Configuration</label>
      </node>
      <node id="3">
        <label>org.apache.iceberg.hadoop.Configurable&lt; C &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable"/>
      </node>
    </collaborationgraph>
    <location file="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" line="58" column="47" bodyfile="core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java" bodystart="58" bodyend="407"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a545008a7cb04dfb33ab93504afbda0ee" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>buildTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a942e9c3bcadebf8da8dd9b95d9dc49b9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>conf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a0856eb90000b5c9d5f24a10124a471ee" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>create</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables_1a2966245d5453f8cd259e97555094c5d2" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::Tables."><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>create</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables_1a66390e04473c52e2a20e8c481d367d61" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::Tables."><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>create</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Tables_1aea71a24041929e01c3a76064736e299e" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::Tables."><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>create</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ad03a035de8a850bf43e44155c996a2da" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>createOrGetLockManager</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1aaceef044584599a1c67678710f8069dd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>dropTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a49006fef4fb4e485723e7299eaf0cedb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>dropTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a21143391c028c3a36458551d2ef126df" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>exists</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a62aadd3b380e510389d47d61d6d40b82" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>getConf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a17fbdefe8cc4319cddb291a7650fdfeb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>HadoopTables</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a2ac0061e388dcb4ae1d1be8b58bd5e49" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>HadoopTables</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1aee3ecdcbb37ceba94f910e6731f4ab3b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>load</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a12b20bb2f0ff310a6e56e7b59984d0e0" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>loadMetadataTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a6d2770414a80c1046317f205b76c2a07" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>LOCK_PROPERTY_PREFIX</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ae7fb22c7c752f67a6ce527aeaf6add8c" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>lockManager</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ac7db12a20e201eeb415eb665310bcf23" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a37a5f6a71889b86e10fca448556ff81f" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>METADATA_JSON</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a5d1f65d07faafb63118fccaccc0bb49e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>newCreateTableTransaction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a554d375cc2e94c0069fb6a01a813d30f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>newReplaceTableTransaction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a90a5a5d6f633d68049ff0f383ac518b7" prot="package" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>newTableOps</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ad8077d5c427dcebe872c069835f1f856" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>parseMetadataType</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1a56cf13d5bc3b5791d9c26c52022bbc3e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>setConf</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1hadoop_1_1Configurable_1a4db86e314a80fd0e4522d83cb1b6c6c8" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::hadoop::Configurable."><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>setConf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopTables_1ad6c39e36c8d0e9e8e9368ad664cf58b5" prot="private" virt="non-virtual"><scope>org::apache::iceberg::hadoop::HadoopTables</scope><name>tableMetadata</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
