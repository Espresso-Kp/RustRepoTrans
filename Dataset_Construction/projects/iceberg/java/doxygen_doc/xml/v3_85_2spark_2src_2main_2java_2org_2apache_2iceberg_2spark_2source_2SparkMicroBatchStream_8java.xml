<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v3_85_2spark_2src_2main_2java_2org_2apache_2iceberg_2spark_2source_2SparkMicroBatchStream_8java" kind="file" language="Java">
    <compoundname>SparkMicroBatchStream.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream" prot="public">org::apache::iceberg::spark::source::SparkMicroBatchStream</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore" prot="private">org::apache::iceberg::spark::source::SparkMicroBatchStream::InitialOffsetStore</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1spark_1_1source">org::apache::iceberg::spark::source</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.spark.source;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.BufferedWriter;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.IOException;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.InputStream;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.OutputStream;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.OutputStreamWriter;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.UncheckedIOException;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.nio.charset.StandardCharsets;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Locale;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1CombinedScanTask" kindref="compound">CombinedScanTask</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations" kindref="compound">DataOperations</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1FileScanTask" kindref="compound">FileScanTask</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches" kindref="compound">MicroBatches</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches" kindref="compound">MicroBatches</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1_1MicroBatch" kindref="compound">MicroBatch</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1SchemaParser" kindref="compound">SchemaParser</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1SnapshotSummary" kindref="compound">SnapshotSummary</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable" kindref="compound">CloseableIterable</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterator" kindref="compound">CloseableIterator</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile" kindref="compound">InputFile</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1OutputFile" kindref="compound">OutputFile</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Joiner" kindref="compound">Joiner</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Iterables;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1spark" kindref="compound">spark</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadConf" kindref="compound">SparkReadConf</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1spark" kindref="compound">spark</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadOptions" kindref="compound">SparkReadOptions</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Pair" kindref="compound">Pair</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil" kindref="compound">PropertyUtil</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1TableScanUtil" kindref="compound">TableScanUtil</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.api.java.JavaSparkContext;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.broadcast.Broadcast;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1connector" kindref="compound">connector</ref>.read.InputPartition;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1connector" kindref="compound">connector</ref>.read.PartitionReaderFactory;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1connector" kindref="compound">connector</ref>.read.streaming.MicroBatchStream;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1connector" kindref="compound">connector</ref>.read.streaming.Offset;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1connector" kindref="compound">connector</ref>.read.streaming.ReadLimit;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1connector" kindref="compound">connector</ref>.read.streaming.SupportsAdmissionControl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.slf4j.Logger;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.slf4j.LoggerFactory;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SparkMicroBatchStream<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>MicroBatchStream,<sp/>SupportsAdmissionControl<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Joiner<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a868461ceefb4608e9082c5e4a5786c07" kindref="member">SLASH</ref><sp/>=<sp/>Joiner.on(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Logger<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3e91e242568317521ceb1d6420d46950" kindref="member">LOG</ref><sp/>=<sp/>LoggerFactory.getLogger(SparkMicroBatchStream.class);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Types.StructType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8401b655957e24ea79ba7a9f1449c85d" kindref="member">EMPTY_GROUPING_KEY_TYPE</ref><sp/>=<sp/>Types.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType_1a153512b804412f71f0cf9b804d9ff525" kindref="member">of</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Table<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8d467d153024b4fe1ea5b72389d23347" kindref="member">branch</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af378fab31f3f896bfcb5c661859dd864" kindref="member">caseSensitive</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a54ef559f7b902fc57486f45f8db0e34e" kindref="member">expectedSchema</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Broadcast&lt;Table&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1afc2f2662f87da6e373bfd13984b6a5cf" kindref="member">tableBroadcast</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3278f49937333aa41f9721ee77d63d83" kindref="member">splitSize</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2b9824394645a4848565666cc81219b6" kindref="member">splitLookback</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ac236843028cb419f47dbade8a90f1608" kindref="member">splitOpenFileCost</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ae6e90a8eb945e6cf26940254b5e67fb4" kindref="member">localityPreferred</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>StreamingOffset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a199ae2b6bbe6f6208c0ac0c1a05bebbb" kindref="member">initialOffset</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7da349a6c858e739f776f8a3e1fee7e4" kindref="member">skipDelete</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a6d2f773655aba265a1f5625956400e16" kindref="member">skipOverwrite</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" kindref="member">maxRecordsPerMicroBatch</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>SparkMicroBatchStream(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JavaSparkContext<sp/>sparkContext,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Table<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkReadConf<sp/>readConf,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Schema<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a54ef559f7b902fc57486f45f8db0e34e" kindref="member">expectedSchema</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>checkpointLocation)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this.table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>this.branch<sp/>=<sp/>readConf.branch();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>this.caseSensitive<sp/>=<sp/>readConf.caseSensitive();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this.expectedSchema<sp/>=<sp/>SchemaParser.toJson(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a54ef559f7b902fc57486f45f8db0e34e" kindref="member">expectedSchema</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>this.localityPreferred<sp/>=<sp/>readConf.localityEnabled();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this.tableBroadcast<sp/>=<sp/>sparkContext.broadcast(SerializableTableWithSize.copyOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>this.splitSize<sp/>=<sp/>readConf.splitSize();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>this.splitLookback<sp/>=<sp/>readConf.splitLookback();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this.splitOpenFileCost<sp/>=<sp/>readConf.splitOpenFileCost();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this.fromTimestamp<sp/>=<sp/>readConf.streamFromTimestamp();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this.maxFilesPerMicroBatch<sp/>=<sp/>readConf.maxFilesPerMicroBatch();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this.maxRecordsPerMicroBatch<sp/>=<sp/>readConf.maxRecordsPerMicroBatch();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>InitialOffsetStore<sp/>initialOffsetStore<sp/>=</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InitialOffsetStore(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/>checkpointLocation,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this.initialOffset<sp/>=<sp/>initialOffsetStore.initialOffset();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this.skipDelete<sp/>=<sp/>readConf.streamingSkipDeleteSnapshots();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this.skipOverwrite<sp/>=<sp/>readConf.streamingSkipOverwriteSnapshots();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="117" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Offset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" kindref="member">latestOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aec4e667308c60dcf66b1ff8ddfe44783" kindref="member">refresh</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>()<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1a28a8af80f4df47f198dc99f4d509397b" kindref="member">timestampMillis</ref>()<sp/>&lt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>latestSnapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StreamingOffset(latestSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" kindref="member">addedFilesCount</ref>(latestSnapshot),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="133" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>InputPartition[]<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a863ba629076d4e243680eacbfbd3a0e5" kindref="member">planInputPartitions</ref>(Offset<sp/>start,<sp/>Offset<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>instanceof<sp/>StreamingOffset,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>end<sp/>offset:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>StreamingOffset&quot;</highlight><highlight class="normal">,<sp/>end);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>instanceof<sp/>StreamingOffset,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>start<sp/>offset:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>StreamingOffset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end.equals(StreamingOffset.START_OFFSET))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputPartition[0];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>StreamingOffset<sp/>endOffset<sp/>=<sp/>(StreamingOffset)<sp/>end;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>StreamingOffset<sp/>startOffset<sp/>=<sp/>(StreamingOffset)<sp/>start;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;FileScanTask&gt;<sp/>fileScanTasks<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" kindref="member">planFiles</ref>(startOffset,<sp/>endOffset);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable" kindref="compound">CloseableIterable&lt;FileScanTask&gt;</ref><sp/>splitTasks<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1TableScanUtil" kindref="compound">TableScanUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1TableScanUtil_1aaf4b8f87309e8d667dce6e5740ae9ded" kindref="member">splitFiles</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable" kindref="compound">CloseableIterable</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable_1a040801611474341d2578918bb2948ac3" kindref="member">withNoopClose</ref>(fileScanTasks),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3278f49937333aa41f9721ee77d63d83" kindref="member">splitSize</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;CombinedScanTask&gt;<sp/>combinedScanTasks<sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lists.newArrayList(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1TableScanUtil" kindref="compound">TableScanUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1TableScanUtil_1ad3568c0c4afafe0dad8ad2e647bb64f8" kindref="member">planTasks</ref>(splitTasks,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3278f49937333aa41f9721ee77d63d83" kindref="member">splitSize</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2b9824394645a4848565666cc81219b6" kindref="member">splitLookback</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ac236843028cb419f47dbade8a90f1608" kindref="member">splitOpenFileCost</ref>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>String[][]<sp/>locations<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" kindref="member">computePreferredLocations</ref>(combinedScanTasks);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>InputPartition[]<sp/>partitions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputPartition[combinedScanTasks.size()];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>combinedScanTasks.size();<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partitions[index]<sp/>=</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SparkInputPartition(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8401b655957e24ea79ba7a9f1449c85d" kindref="member">EMPTY_GROUPING_KEY_TYPE</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combinedScanTasks.get(index),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1afc2f2662f87da6e373bfd13984b6a5cf" kindref="member">tableBroadcast</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a8d467d153024b4fe1ea5b72389d23347" kindref="member">branch</ref>,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a54ef559f7b902fc57486f45f8db0e34e" kindref="member">expectedSchema</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af378fab31f3f896bfcb5c661859dd864" kindref="member">caseSensitive</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locations<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/>locations[index]<sp/>:<sp/>SparkPlanningUtil.NO_LOCATION_PREFERENCE);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partitions;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String[][]<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7264be32d0ec2cb1b923b6d0208107d8" kindref="member">computePreferredLocations</ref>(List&lt;CombinedScanTask&gt;<sp/>taskGroups)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ae6e90a8eb945e6cf26940254b5e67fb4" kindref="member">localityPreferred</ref><sp/>?<sp/>SparkPlanningUtil.fetchBlockLocations(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>(),<sp/>taskGroups)<sp/>:<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="179" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>PartitionReaderFactory<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a764c5f65c46049dbcd3636e2fc8c4539" kindref="member">createReaderFactory</ref>()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SparkRowReaderFactory();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="184" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Offset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a5e944f1529a60cfb5d18516d766c85d0" kindref="member">initialOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a199ae2b6bbe6f6208c0ac0c1a05bebbb" kindref="member">initialOffset</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="189" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Offset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa37fa4875b6cc4b36da9da415ce176cf" kindref="member">deserializeOffset</ref>(String<sp/>json)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.fromJson(json);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="194" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a0f945eb5b1a1fe7d05268f0c2355256c" kindref="member">commit</ref>(Offset<sp/>end)<sp/>{}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="197" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ab33f5ec82053d207155642a0d28e586c" kindref="member">stop</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;FileScanTask&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aaac4f2cacdb15b099623ed6332030c6d" kindref="member">planFiles</ref>(StreamingOffset<sp/>startOffset,<sp/>StreamingOffset<sp/>endOffset)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;FileScanTask&gt;<sp/>fileScanTasks<sp/>=<sp/>Lists.newArrayList();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>StreamingOffset<sp/>batchStartOffset<sp/>=</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamingOffset.START_OFFSET.equals(startOffset)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" kindref="member">determineStartingOffset</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>startOffset;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>StreamingOffset<sp/>currentOffset<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[(startOffset<sp/>:<sp/>startFileIndex),<sp/>(endOffset<sp/>:<sp/>endFileIndex)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endFileIndex;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentOffset<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset<sp/>=<sp/>batchStartOffset;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>snapshotAfter<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil_1a161d191fc27cead2097545c88598b6ac" kindref="member">snapshotAfter</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/>currentOffset.snapshotId());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>happen<sp/>that<sp/>we<sp/>need<sp/>to<sp/>read<sp/>this<sp/>snapshot<sp/>partially<sp/>in<sp/>case<sp/>it&apos;s<sp/>equal<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>endOffset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentOffset.snapshotId()<sp/>!=<sp/>endOffset.snapshotId())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StreamingOffset(snapshotAfter.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/>0L,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset<sp/>=<sp/>endOffset;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>snapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a7a9dd6d8d4967fe8aed041134b9140f7" kindref="member">snapshot</ref>(currentOffset.snapshotId());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" kindref="member">validateCurrentSnapshotExists</ref>(snapshot,<sp/>currentOffset);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" kindref="member">shouldProcess</ref>(snapshot))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3e91e242568317521ceb1d6420d46950" kindref="member">LOG</ref>.debug(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>snapshot:<sp/>{}<sp/>of<sp/>table<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>currentOffset.snapshotId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1ac3bd999ff367dc8f622ca14e9b85277e" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>currentSnapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a7a9dd6d8d4967fe8aed041134b9140f7" kindref="member">snapshot</ref>(currentOffset.snapshotId());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentOffset.snapshotId()<sp/>==<sp/>endOffset.snapshotId())<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endFileIndex<sp/>=<sp/>endOffset.position();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endFileIndex<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" kindref="member">addedFilesCount</ref>(currentSnapshot);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1_1MicroBatch" kindref="compound">MicroBatch</ref><sp/>latestMicroBatch<sp/>=</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches" kindref="compound">MicroBatches</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1affc28389cecea3c8e4931e1585e34c70" kindref="member">from</ref>(currentSnapshot,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>())</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1_1MicroBatchBuilder_1a369a177c9458cf28739b5e6e3f51536e" kindref="member">caseSensitive</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af378fab31f3f896bfcb5c661859dd864" kindref="member">caseSensitive</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.specsById(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a8ad2549622317d3388535399b6b7fd05" kindref="member">specs</ref>())</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.generate(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset.position(),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endFileIndex,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long.MAX_VALUE,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset.shouldScanAllFiles());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileScanTasks.addAll(latestMicroBatch.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1_1MicroBatch_1a658d853b9f0d4f8b304eca2683741041" kindref="member">tasks</ref>());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentOffset.snapshotId()<sp/>!=<sp/>endOffset.snapshotId());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileScanTasks;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" kindref="member">shouldProcess</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>snapshot)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>op<sp/>=<sp/>snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1a42c6d33eacf20dec9eb38501f46da7e5" kindref="member">operation</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations" kindref="compound">DataOperations</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations_1a05bfd7d9860dc878b4c4c75b417eb438" kindref="member">APPEND</ref>:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations" kindref="compound">DataOperations</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations_1ad83128eeb6561dd7db2e1cfbdd81bbad" kindref="member">REPLACE</ref>:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations" kindref="compound">DataOperations</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations_1ad1046d3630ecd94a41aca1a148220fcb" kindref="member">DELETE</ref>:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkState(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a7da349a6c858e739f776f8a3e1fee7e4" kindref="member">skipDelete</ref>,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>process<sp/>delete<sp/>snapshot:<sp/>%s,<sp/>to<sp/>ignore<sp/>deletes,<sp/>set<sp/>%s=true&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadOptions" kindref="compound">SparkReadOptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadOptions_1ac280cebb5308d70e3ed5912b78474b95" kindref="member">STREAMING_SKIP_DELETE_SNAPSHOTS</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations" kindref="compound">DataOperations</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1DataOperations_1a3efce9f299ae52ff3baed43e9cdeaf97" kindref="member">OVERWRITE</ref>:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkState(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a6d2f773655aba265a1f5625956400e16" kindref="member">skipOverwrite</ref>,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>process<sp/>overwrite<sp/>snapshot:<sp/>%s,<sp/>to<sp/>ignore<sp/>overwrites,<sp/>set<sp/>%s=true&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadOptions" kindref="compound">SparkReadOptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkReadOptions_1ad5d79e7c1af795755d8f777ce79ccfdf" kindref="member">STREAMING_SKIP_OVERWRITE_SNAPSHOTS</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalStateException(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>process<sp/>unknown<sp/>snapshot<sp/>operation:<sp/>%s<sp/>(snapshot<sp/>id<sp/>%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op.toLowerCase(Locale.ROOT),<sp/>snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>()));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>StreamingOffset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" kindref="member">determineStartingOffset</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/>Long<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>()<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref><sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>existing<sp/>behavior<sp/>and<sp/>start<sp/>from<sp/>the<sp/>oldest<sp/>snapshot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StreamingOffset(<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil_1af70fb5519530bc568668b6477a732890" kindref="member">oldestAncestor</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>).<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1a28a8af80f4df47f198dc99f4d509397b" kindref="member">timestampMillis</ref>()<sp/>&lt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>snapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil_1acdfba836b109388072aae3111b518006" kindref="member">oldestAncestorAfter</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snapshot<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StreamingOffset(snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalStateException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>not<sp/>determine<sp/>the<sp/>first<sp/>snapshot<sp/>after<sp/>the<sp/>timestamp.<sp/>use<sp/>the<sp/>oldest<sp/>ancestor<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StreamingOffset(<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil_1af70fb5519530bc568668b6477a732890" kindref="member">oldestAncestor</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>).<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;checkstyle:CyclomaticComplexity&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1aa75ecb4259b6a823d913cc26311ce5ae" refkind="member"><highlight class="normal"><sp/><sp/>public<sp/>Offset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a154b34f2c3ab9e7124a8dc4d6b9e1720" kindref="member">latestOffset</ref>(Offset<sp/>startOffset,<sp/>ReadLimit<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>end<sp/>offset<sp/>get<sp/>snapshotId<sp/>from<sp/>the<sp/>startOffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startOffset<sp/>instanceof<sp/>StreamingOffset,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>start<sp/>offset:<sp/>%s<sp/>is<sp/>not<sp/>a<sp/>StreamingOffset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startOffset);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aec4e667308c60dcf66b1ff8ddfe44783" kindref="member">refresh</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>()<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1a28a8af80f4df47f198dc99f4d509397b" kindref="member">timestampMillis</ref>()<sp/>&lt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.START_OFFSET;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>offset<sp/>can<sp/>expand<sp/>to<sp/>multiple<sp/>snapshots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>StreamingOffset<sp/>startingOffset<sp/>=<sp/>(StreamingOffset)<sp/>startOffset;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startOffset.equals(StreamingOffset.START_OFFSET))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startingOffset<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" kindref="member">determineStartingOffset</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1897cfe43ec8392f40e9bd5779ff3a62" kindref="member">fromTimestamp</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>curSnapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a7a9dd6d8d4967fe8aed041134b9140f7" kindref="member">snapshot</ref>(startingOffset.snapshotId());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" kindref="member">validateCurrentSnapshotExists</ref>(curSnapshot,<sp/>startingOffset);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startPosOfSnapOffset<sp/>=<sp/>(int)<sp/>startingOffset.position();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>scanAllFiles<sp/>=<sp/>startingOffset.shouldScanAllFiles();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>shouldContinueReading<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curFilesAdded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curRecordCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>:<sp/>we<sp/>produce<sp/>nextOffset<sp/>with<sp/>pos<sp/>as<sp/>non-inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(shouldContinueReading)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>manifest<sp/>index<sp/>for<sp/>the<sp/>curSnapshot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Pair&lt;ManifestFile,<sp/>Integer&gt;&gt;<sp/>indexedManifests<sp/>=</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches" kindref="compound">MicroBatches</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1a4689671261958981de8ac68365bfdb95" kindref="member">skippedManifestIndexesFromSnapshot</ref>(</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>(),<sp/>curSnapshot,<sp/>startPosOfSnapOffset,<sp/>scanAllFiles);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>under<sp/>assumption<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>add<sp/>at-least<sp/>1<sp/>file<sp/>in<sp/>the<sp/>new<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>indexedManifests.size()<sp/>&amp;&amp;<sp/>shouldContinueReading;<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>rest<sp/>assured<sp/>curPos<sp/>&gt;=<sp/>startFileIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curPos<sp/>=<sp/>indexedManifests.get(idx).second();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable" kindref="compound">CloseableIterable&lt;FileScanTask&gt;</ref><sp/>taskIterable<sp/>=</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches" kindref="compound">MicroBatches</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MicroBatches_1a086e4c4f453e0bcd9467c50b11e78369" kindref="member">openManifestFile</ref>(</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>(),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a8ad2549622317d3388535399b6b7fd05" kindref="member">specs</ref>(),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af378fab31f3f896bfcb5c661859dd864" kindref="member">caseSensitive</ref>,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curSnapshot,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexedManifests.get(idx).first(),</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanAllFiles);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterator" kindref="compound">CloseableIterator&lt;FileScanTask&gt;</ref><sp/>taskIter<sp/>=<sp/>taskIterable.iterator())<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(taskIter.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1FileScanTask" kindref="compound">FileScanTask</ref><sp/>task<sp/>=<sp/>taskIter.next();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curPos<sp/>&gt;=<sp/>startPosOfSnapOffset)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>use<sp/>readLimit<sp/>provided<sp/>in<sp/>function<sp/>param,<sp/>the<sp/>readLimits<sp/>are<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>2<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((curFilesAdded<sp/>+<sp/>1)<sp/>&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(curRecordCount<sp/>+<sp/>task.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ContentScanTask_1aa15f447b4d93d067dad725838d22411c" kindref="member">file</ref>().recordCount())<sp/>&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" kindref="member">maxRecordsPerMicroBatch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldContinueReading<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curFilesAdded<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curRecordCount<sp/>+=<sp/>task.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ContentScanTask_1aa15f447b4d93d067dad725838d22411c" kindref="member">file</ref>().recordCount();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++curPos;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IOException<sp/>ioe)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3e91e242568317521ceb1d6420d46950" kindref="member">LOG</ref>.warn(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>close<sp/>task<sp/>iterable&quot;</highlight><highlight class="normal">,<sp/>ioe);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>currentSnapShot<sp/>was<sp/>also<sp/>the<sp/>mostRecentSnapshot<sp/>then<sp/>break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>())<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>everything<sp/>was<sp/>OK<sp/>and<sp/>we<sp/>consumed<sp/>complete<sp/>snapshot<sp/>then<sp/>move<sp/>to<sp/>next<sp/>snapshot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldContinueReading)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>nextValid<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ad5f956d08bbf3ce0988e9eea3d143977" kindref="member">nextValidSnapshot</ref>(curSnapshot);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextValid<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nextValide<sp/>implies<sp/>all<sp/>the<sp/>remaining<sp/>snapshots<sp/>should<sp/>be<sp/>skipped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldContinueReading<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>the<sp/>next<sp/>available<sp/>snapshot,<sp/>continue<sp/>from<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curSnapshot<sp/>=<sp/>nextValid;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startPosOfSnapOffset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>anyhow<sp/>we<sp/>are<sp/>moving<sp/>to<sp/>next<sp/>snapshot<sp/>we<sp/>should<sp/>only<sp/>scan<sp/>addedFiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanAllFiles<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>StreamingOffset<sp/>latestStreamingOffset<sp/>=</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StreamingOffset(curSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/>curPos,<sp/>scanAllFiles);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>no<sp/>new<sp/>data<sp/>arrived,<sp/>then<sp/>return<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>latestStreamingOffset.equals(startingOffset)<sp/>?<sp/>null<sp/>:<sp/>latestStreamingOffset;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ad5f956d08bbf3ce0988e9eea3d143977" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1ad5f956d08bbf3ce0988e9eea3d143977" kindref="member">nextValidSnapshot</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>curSnapshot)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>nextSnapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil_1a161d191fc27cead2097545c88598b6ac" kindref="member">snapshotAfter</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/>curSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>over<sp/>rewrite<sp/>and<sp/>delete<sp/>snapshots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a27fb2e15a4df0e5e2c1e45dfaeb6761b" kindref="member">shouldProcess</ref>(nextSnapshot))<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a3e91e242568317521ceb1d6420d46950" kindref="member">LOG</ref>.debug(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>snapshot:<sp/>{}<sp/>of<sp/>table<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>nextSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1ac3bd999ff367dc8f622ca14e9b85277e" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>currentSnapShot<sp/>was<sp/>also<sp/>the<sp/>mostRecentSnapshot<sp/>then<sp/>break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5c4df259908bf1a7e85b7264de73f943" kindref="member">currentSnapshot</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextSnapshot<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil" kindref="compound">SnapshotUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1SnapshotUtil_1a161d191fc27cead2097545c88598b6ac" kindref="member">snapshotAfter</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>,<sp/>nextSnapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1aad24e075e95dfc00842c2eea7081154a" kindref="member">snapshotId</ref>());</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nextSnapshot;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" kindref="member">addedFilesCount</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>snapshot)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" kindref="member">addedFilesCount</ref><sp/>=</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil" kindref="compound">PropertyUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil_1a3aa85645457d631be688a88d88007f72" kindref="member">propertyAsLong</ref>(snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1a507d93b2f0c78a80ec17187c9e596cb7" kindref="member">summary</ref>(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1SnapshotSummary" kindref="compound">SnapshotSummary</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1SnapshotSummary_1afc70a5703c33a7bfa0fd7d1ced514496" kindref="member">ADDED_FILES_PROP</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>snapshotSummary<sp/>doesn&apos;t<sp/>have<sp/>SnapshotSummary.ADDED_FILES_PROP,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>through<sp/>addedFiles<sp/>iterator<sp/>to<sp/>find<sp/>addedFilesCount.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" kindref="member">addedFilesCount</ref><sp/>==<sp/>-1</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>Iterables.size(snapshot.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot_1a895010e4ea4aae0f92756e4c844d6e1a" kindref="member">addedDataFiles</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1ff0ee9c03779d67e1e0f7b31449456e" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>()))</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1adc2a391a9b17640c2210f79f4d4fd66a" kindref="member">addedFilesCount</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a2ce8f5d4b1567e31ab9977f64ff83e19" kindref="member">validateCurrentSnapshotExists</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref><sp/>snapshot,<sp/>StreamingOffset<sp/>currentOffset)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snapshot<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalStateException(</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>load<sp/>current<sp/>offset<sp/>at<sp/>snapshot<sp/>%d,<sp/>the<sp/>snapshot<sp/>was<sp/>expired<sp/>or<sp/>removed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset.snapshotId()));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="457" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ReadLimit<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1af1fecaabe7ce24eba3e59eade712b674" kindref="member">getDefaultReadLimit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref><sp/>!=<sp/>Integer.MAX_VALUE</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" kindref="member">maxRecordsPerMicroBatch</ref><sp/>!=<sp/>Integer.MAX_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadLimit[]<sp/>readLimits<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ReadLimit[2];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readLimits[0]<sp/>=<sp/>ReadLimit.maxFiles(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readLimits[1]<sp/>=<sp/>ReadLimit.maxRows(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadLimit.compositeLimit(readLimits);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref><sp/>!=<sp/>Integer.MAX_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadLimit.maxFiles(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a9bda779e7990149dd7d84fb245a54706" kindref="member">maxFilesPerMicroBatch</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" kindref="member">maxRecordsPerMicroBatch</ref><sp/>!=<sp/>Integer.MAX_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadLimit.maxRows(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a926bfa53b5593724571cbf801a863444" kindref="member">maxRecordsPerMicroBatch</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReadLimit.allAvailable();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InitialOffsetStore<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aafd81c046d64fbb9c64323bf5cc200cc" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a154d43e0e4c70b42165e38aaa05b3fcf" kindref="member">io</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a38323f590009652b4e6318b424ce6d46" kindref="member">initialOffsetLocation</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a9ea3cbef40a32953c1fd1cdd98e06f3d" kindref="member">fromTimestamp</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>InitialOffsetStore(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aafd81c046d64fbb9c64323bf5cc200cc" kindref="member">table</ref>,<sp/>String<sp/>checkpointLocation,<sp/>Long<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a9ea3cbef40a32953c1fd1cdd98e06f3d" kindref="member">fromTimestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aafd81c046d64fbb9c64323bf5cc200cc" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.io<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aafd81c046d64fbb9c64323bf5cc200cc" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.initialOffsetLocation<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a868461ceefb4608e9082c5e4a5786c07" kindref="member">SLASH</ref>.join(checkpointLocation,<sp/></highlight><highlight class="stringliteral">&quot;offsets/0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.fromTimestamp<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a9ea3cbef40a32953c1fd1cdd98e06f3d" kindref="member">fromTimestamp</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aedf5b0217c33d5d695d98dd43fab1e0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StreamingOffset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aedf5b0217c33d5d695d98dd43fab1e0a" kindref="member">initialOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile" kindref="compound">InputFile</ref><sp/>inputFile<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a154d43e0e4c70b42165e38aaa05b3fcf" kindref="member">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO_1a54bd6931df3543c33aa9490c26e4e181" kindref="member">newInputFile</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a38323f590009652b4e6318b424ce6d46" kindref="member">initialOffsetLocation</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputFile.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile_1a5e9046803bc7ef318c00159a3fb9d5b8" kindref="member">exists</ref>())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1af3e75e46619ea2e8e5484f2b2ef8552c" kindref="member">readOffset</ref>(inputFile);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aafd81c046d64fbb9c64323bf5cc200cc" kindref="member">table</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aec4e667308c60dcf66b1ff8ddfe44783" kindref="member">refresh</ref>();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StreamingOffset<sp/>offset<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1a1e87f2502baefee7b370796a4c2996bf" kindref="member">determineStartingOffset</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1aafd81c046d64fbb9c64323bf5cc200cc" kindref="member">table</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a9ea3cbef40a32953c1fd1cdd98e06f3d" kindref="member">fromTimestamp</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1OutputFile" kindref="compound">OutputFile</ref><sp/>outputFile<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a154d43e0e4c70b42165e38aaa05b3fcf" kindref="member">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO_1a2088493983fbb8c7f26bef51d3fa93de" kindref="member">newOutputFile</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a38323f590009652b4e6318b424ce6d46" kindref="member">initialOffsetLocation</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a950daa8e41cc88ef64ef33ed8d7dcb13" kindref="member">writeOffset</ref>(offset,<sp/>outputFile);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a950daa8e41cc88ef64ef33ed8d7dcb13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a950daa8e41cc88ef64ef33ed8d7dcb13" kindref="member">writeOffset</ref>(StreamingOffset<sp/>offset,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1OutputFile" kindref="compound">OutputFile</ref><sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>(OutputStream<sp/>outputStream<sp/>=<sp/>file.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1OutputFile_1abd61f39f96a5040fbb32d06af7d700ab" kindref="member">create</ref>())<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufferedWriter<sp/>writer<sp/>=</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BufferedWriter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>OutputStreamWriter(outputStream,<sp/>StandardCharsets.UTF_8));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer.write(offset.json());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer.flush();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IOException<sp/>ioException)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UncheckedIOException(</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight><highlight class="stringliteral">&quot;Failed<sp/>writing<sp/>offset<sp/>to:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a38323f590009652b4e6318b424ce6d46" kindref="member">initialOffsetLocation</ref>),<sp/>ioException);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1af3e75e46619ea2e8e5484f2b2ef8552c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>StreamingOffset<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1af3e75e46619ea2e8e5484f2b2ef8552c" kindref="member">readOffset</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile" kindref="compound">InputFile</ref><sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>(InputStream<sp/>in<sp/>=<sp/>file.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile_1ab7df9d86933a5957f118029c3323e8af" kindref="member">newStream</ref>())<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StreamingOffset.fromJson(in);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IOException<sp/>ioException)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UncheckedIOException(</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight><highlight class="stringliteral">&quot;Failed<sp/>reading<sp/>offset<sp/>from:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkMicroBatchStream_1_1InitialOffsetStore_1a38323f590009652b4e6318b424ce6d46" kindref="member">initialOffsetLocation</ref>),<sp/>ioException);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkMicroBatchStream.java"/>
  </compounddef>
</doxygen>
