<path>
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs
</path>
<function>
    async fn drop_table(&self, table: &TableIdent) -> Result<()> {
        let request = self
            .client
            .0
            .delete(self.config.table_endpoint(table))
            .build()?;

        self.client
            .execute::<ErrorResponse, NO_CONTENT>(request)
            .await
    }
</function>
------

<path>
projects/iceberg/python/pyiceberg/catalog/sql.py
</path>
<function>
    def drop_table(self, identifier: Union[str, Identifier], purge_requested: bool = False) -> None:
        identifier_tuple = self.identifier_to_tuple_without_catalog(identifier)
        response = self._session.delete(
            self.url(
                Endpoints.drop_table, prefixed=True, purge=purge_requested, **self._split_identifier_for_path(identifier_tuple)
            ),
        )
        try:
            response.raise_for_status()
        except HTTPError as exc:
            self._handle_non_200_response(exc, {404: NoSuchTableError})

</function>
