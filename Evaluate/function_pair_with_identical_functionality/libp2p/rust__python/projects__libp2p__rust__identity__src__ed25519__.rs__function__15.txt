<path>
projects/libp2p/rust/identity/src/ed25519.rs
</path>
<function>
    pub fn verify(&self, msg: &[u8], sig: &[u8]) -> bool {
        ed25519::Signature::try_from(sig)
            .and_then(|s| self.0.verify(msg, &s))
            .is_ok()
    }
</function>
------

<path>
projects/libp2p/python/libp2p/crypto/ed25519.py
</path>
<function>
    def verify(self, data: bytes, signature: bytes) -> bool:
        verify_key = VerifyKey(self.to_bytes())
        try:
            verify_key.verify(data, signature)
        except BadSignatureError:
            return False
        return True


</function>
