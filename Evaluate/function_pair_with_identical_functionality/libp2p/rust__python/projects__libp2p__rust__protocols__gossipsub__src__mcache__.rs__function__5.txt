<path>
projects/libp2p/rust/protocols/gossipsub/src/mcache.rs
</path>
<function>
    pub(crate) fn get(&self, message_id: &MessageId) -> Option<&RawMessage> {
        self.msgs.get(message_id).map(|(message, _)| message)
    }
</function>
------

<path>
projects/libp2p/python/libp2p/pubsub/mcache.py
</path>
<function>
    def get(self, mid: Tuple[bytes, bytes]) -> Optional[rpc_pb2.Message]:
        """
        Get a message from the mcache.

        :param mid: (seqno, from_id) of the message to get.
        :return: The rpc message associated with this mid
        """
        if mid in self.msgs:
            return self.msgs[mid]

        return None

</function>
