<path>
projects/libp2p/rust/identity/src/ecdsa.rs
</path>
<function>
    pub fn verify(&self, msg: &[u8], sig: &[u8]) -> bool {
        let Ok(sig) = Signature::from_der(sig) else {
            return false;
        };
        self.0.verify(msg, &sig).is_ok()
    }
</function>
------

<path>
projects/libp2p/python/libp2p/crypto/rsa.py
</path>
<function>
    def verify(self, data: bytes, signature: bytes) -> bool:
        h = SHA256.new(data)
        try:
            pkcs1_15.new(self.impl).verify(h, signature)
        except (ValueError, TypeError):
            return False
        return True


</function>
