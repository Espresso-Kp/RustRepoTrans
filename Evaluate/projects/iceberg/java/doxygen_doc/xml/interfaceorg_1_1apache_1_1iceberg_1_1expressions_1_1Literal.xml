<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::expressions::Literal</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Literals_1_1AboveMax" prot="public" virt="non-virtual">org.apache.iceberg.expressions.Literals.AboveMax&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Literals_1_1BaseLiteral" prot="public" virt="non-virtual">org.apache.iceberg.expressions.Literals.BaseLiteral&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Literals_1_1BelowMin" prot="public" virt="non-virtual">org.apache.iceberg.expressions.Literals.BelowMin&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a05a229efa4e8076260405ae018e0d13d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; Boolean &gt;</type>
        <definition>static Literal&lt;Boolean&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(boolean value)</argsstring>
        <name>of</name>
        <param>
          <type>boolean</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="34" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a4ff28b99a7644a3f96a44289d79b849b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; Integer &gt;</type>
        <definition>static Literal&lt;Integer&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(int value)</argsstring>
        <name>of</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="38" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a08a009b611ee94af5da148274a8ac11c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; Long &gt;</type>
        <definition>static Literal&lt;Long&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(long value)</argsstring>
        <name>of</name>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="42" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a1b9eb00a4d0bf1f84aa71260c91a8fc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; Float &gt;</type>
        <definition>static Literal&lt;Float&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(float value)</argsstring>
        <name>of</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="46" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1aaed6f0b3d69fac2d3cd115ae94888145" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; Double &gt;</type>
        <definition>static Literal&lt;Double&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(double value)</argsstring>
        <name>of</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="50" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1afa14fbdc30c61cf3cceb1a8a6c9746e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; CharSequence &gt;</type>
        <definition>static Literal&lt;CharSequence&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(CharSequence value)</argsstring>
        <name>of</name>
        <param>
          <type>CharSequence</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="54" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a244f5b17b4f21c2964cde6ee9e481d6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; UUID &gt;</type>
        <definition>static Literal&lt;UUID&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(UUID value)</argsstring>
        <name>of</name>
        <param>
          <type>UUID</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="58" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a0be978a3f73a7cefc51220f96e62dd75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; ByteBuffer &gt;</type>
        <definition>static Literal&lt;ByteBuffer&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(byte[] value)</argsstring>
        <name>of</name>
        <param>
          <type>byte[]</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="62" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1ac960301f0f2e76d60792ea2c6420fd7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; ByteBuffer &gt;</type>
        <definition>static Literal&lt;ByteBuffer&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(ByteBuffer value)</argsstring>
        <name>of</name>
        <param>
          <type>ByteBuffer</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="66" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a829b0490c6856ea3c05a2380b7bd0b05" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; BigDecimal &gt;</type>
        <definition>static Literal&lt;BigDecimal&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.of</definition>
        <argsstring>(BigDecimal value)</argsstring>
        <name>of</name>
        <param>
          <type>BigDecimal</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="70" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1ac891cbe07d9e1eda3f815eafcdc2852e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T org.apache.iceberg.expressions.Literal&lt; T &gt;.value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Literals_1_1BaseLiteral_1aaa6a32dd57af2a68ce2dc1d89f3722f9">value</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value wrapped by this literal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a716f56c72020d5d5afea06bc99aa0ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>&lt; X &gt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; X &gt;</type>
        <definition>&lt;X&gt; Literal&lt;X&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.to</definition>
        <argsstring>(Type type)</argsstring>
        <name>to</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts this literal to a literal of the given type.</para>
<para>When a predicate is bound to a concrete data column, literals are converted to match the bound column&apos;s type. This conversion process is more narrow than a cast and is only intended for cases where substituting one type is a common mistake (e.g. 34 instead of 34L) or where this API avoids requiring a concrete class (e.g., dates).</para>
<para>If conversion to a target type is not supported, this method returns null.</para>
<para>This method may return <ref refid="" kindref="compound">Literals#aboveMax</ref> or <ref refid="" kindref="compound">Literals#belowMin</ref> when the target type is not as wide as the original type. These values indicate that the containing predicate can be simplified. For example, Integer.MAX_VALUE+1 converted to an int will result in<programlisting><codeline><highlight class="normal">aboveMax<sp/></highlight></codeline>
</programlisting> and can simplify a &lt; Integer.MAX_VALUE+1 to {<ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Expressions_1a53d1494a86985c74259aa1f8982e55c2" kindref="member">}  type A primitive  Type}  </ref> The Java type of value the new literal contains <simplesect kind="return"><para>A literal of the given type or null if conversion was not valid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="97" column="12"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a922d9f3f6bad1440d92158a5069e9b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Comparator&lt; T &gt;</type>
        <definition>Comparator&lt;T&gt; org.apache.iceberg.expressions.Literal&lt; T &gt;.comparator</definition>
        <argsstring>()</argsstring>
        <name>comparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="" kindref="compound">Comparator</ref> for values.</para>
<para><simplesect kind="return"><para>a comparator for T objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="104" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a2a919633ca8f9b9baac03ae3a75ea807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default ByteBuffer</type>
        <definition>default ByteBuffer org.apache.iceberg.expressions.Literal&lt; T &gt;.toByteBuffer</definition>
        <argsstring>()</argsstring>
        <name>toByteBuffer</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Literals_1_1BaseLiteral_1aebcf22cd387f6166013669c9bc630db5">toByteBuffer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes the value wrapped by this literal to binary using the single-value serialization format described in the Iceberg table specification.</para>
<para><simplesect kind="return"><para>a ByteBuffer that contains the serialized literal value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="112" column="22" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="112" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents a literal fixed value in an expression predicate</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;T&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>The Java type of the value wrapped by a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.expressions.Literal&lt; T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org::apache::iceberg::expressions::Literals::BaseLiteral&lt; T &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Literals_1_1BaseLiteral"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org::apache::iceberg::expressions::Literals::AboveMax&lt; T &gt;</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>org::apache::iceberg::expressions::Literals::BelowMin&lt; T &gt;</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Serializable</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.expressions.Literal&lt; T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/expressions/Literal.java" line="33" column="39" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Literal.java" bodystart="33" bodyend="115"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a922d9f3f6bad1440d92158a5069e9b48" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>comparator</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a05a229efa4e8076260405ae018e0d13d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a4ff28b99a7644a3f96a44289d79b849b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a08a009b611ee94af5da148274a8ac11c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a1b9eb00a4d0bf1f84aa71260c91a8fc3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1aaed6f0b3d69fac2d3cd115ae94888145" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1afa14fbdc30c61cf3cceb1a8a6c9746e9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a244f5b17b4f21c2964cde6ee9e481d6e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a0be978a3f73a7cefc51220f96e62dd75" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1ac960301f0f2e76d60792ea2c6420fd7f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a829b0490c6856ea3c05a2380b7bd0b05" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>of</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a716f56c72020d5d5afea06bc99aa0ee1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>to</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1a2a919633ca8f9b9baac03ae3a75ea807" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>toByteBuffer</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal_1ac891cbe07d9e1eda3f815eafcdc2852e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Literal</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
