<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v3_85_2spark_2src_2main_2java_2org_2apache_2iceberg_2spark_2PruneColumnsWithReordering_8java" kind="file" language="Java">
    <compoundname>PruneColumnsWithReordering.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering" prot="public">org::apache::iceberg::spark::PruneColumnsWithReordering</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1spark">org::apache::iceberg::spark</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.spark;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Set;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.function.Supplier;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableMap;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableSet;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Maps" kindref="compound">Maps</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.ArrayType;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.BinaryType;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.BinaryType$;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.BooleanType$;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DataType;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DateType$;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DecimalType;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DoubleType$;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.FloatType$;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.IntegerType$;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.LongType$;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.MapType;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StringType;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StringType$;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StructField;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StructType;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.TimestampNTZType$;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.TimestampType$;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PruneColumnsWithReordering<sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>TypeUtil.CustomOrderSchemaVisitor&lt;Type&gt;<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>StructType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a8d1145ce198f8cc762a3169e6c5d7631" kindref="member">requestedType</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Set&lt;Integer&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1af0fd7a881f4fce9690d05aa9044e83d2" kindref="member">filterRefs</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>DataType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>PruneColumnsWithReordering(StructType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a8d1145ce198f8cc762a3169e6c5d7631" kindref="member">requestedType</ref>,<sp/>Set&lt;Integer&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1af0fd7a881f4fce9690d05aa9044e83d2" kindref="member">filterRefs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this.requestedType<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a8d1145ce198f8cc762a3169e6c5d7631" kindref="member">requestedType</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this.filterRefs<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1af0fd7a881f4fce9690d05aa9044e83d2" kindref="member">filterRefs</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="65" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a5b1ab51b148f8c07882f8dfeecf63c42" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a5b1ab51b148f8c07882f8dfeecf63c42" kindref="member">schema</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a5b1ab51b148f8c07882f8dfeecf63c42" kindref="member">schema</ref>,<sp/>Supplier&lt;Type&gt;<sp/>structResult)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a8d1145ce198f8cc762a3169e6c5d7631" kindref="member">requestedType</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>structResult.get();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="75" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a8fc48926e45ad39d592bf3b2d2b71d85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">,<sp/>Iterable&lt;Type&gt;<sp/>fieldResults)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkNotNull(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>prune<sp/>null<sp/>struct.<sp/>Pruning<sp/>must<sp/>start<sp/>with<sp/>a<sp/>schema.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref><sp/>instanceof<sp/>StructType,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>struct:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>StructType<sp/>requestedStruct<sp/>=<sp/>(StructType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref>&gt;<sp/>fields<sp/>=<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">.fields();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Type&gt;<sp/>types<sp/>=<sp/>Lists.newArrayList(fieldResults);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>LinkedHashMap<sp/>to<sp/>preserve<sp/>the<sp/>original<sp/>order<sp/>of<sp/>filter<sp/>fields<sp/>that<sp/>are<sp/>not<sp/>projected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref>&gt;<sp/>projectedFields<sp/>=<sp/>Maps.newLinkedHashMap();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fields.size();<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref><sp/>=<sp/>fields.get(i);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>type<sp/>=<sp/>types.get(i);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.type()<sp/>==<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projectedFields.put(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.isOptional())<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projectedFields.put(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField_1a5dc43468eb525a89a58b97e9df84afc7" kindref="member">optional</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.fieldId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name(),<sp/>type));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projectedFields.put(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField_1a201920aceaad833b462fa1e0e53deb7f" kindref="member">required</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.fieldId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name(),<sp/>type));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>new<sp/>struct<sp/>with<sp/>the<sp/>projected<sp/>struct&apos;s<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>reordered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>StructField[]<sp/>requestedFields<sp/>=<sp/>requestedStruct.fields();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref>&gt;<sp/>newFields<sp/>=<sp/>Lists.newArrayListWithExpectedSize(requestedFields.length);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>requestedFields.length;<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fields<sp/>are<sp/>resolved<sp/>by<sp/>name<sp/>because<sp/>Spark<sp/>only<sp/>sees<sp/>the<sp/>current<sp/>table<sp/>schema.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>name<sp/>=<sp/>requestedFields[i].<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField_1a9075edc77154a1d1804b0eae9563a8a2" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fields.get(i).name().equals(name))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reordered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newFields.add(projectedFields.remove(name));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>remaining<sp/>filter<sp/>fields<sp/>that<sp/>were<sp/>not<sp/>explicitly<sp/>projected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!projectedFields.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newFields.addAll(projectedFields.values());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>order<sp/>probably<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reordered<sp/>||<sp/>changed)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType_1a153512b804412f71f0cf9b804d9ff525" kindref="member">of</ref>(newFields);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="136" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>,<sp/>Supplier&lt;Type&gt;<sp/>fieldResult)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref><sp/>instanceof<sp/>StructType,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>struct:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>StructType<sp/>requestedStruct<sp/>=<sp/>(StructType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fields<sp/>are<sp/>resolved<sp/>by<sp/>name<sp/>because<sp/>Spark<sp/>only<sp/>sees<sp/>the<sp/>current<sp/>table<sp/>schema.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requestedStruct.getFieldIndex(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name()).isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>filter<sp/>fields<sp/>are<sp/>projected<sp/>even<sp/>if<sp/>they<sp/>aren&apos;t<sp/>in<sp/>the<sp/>requested<sp/>schema.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1af0fd7a881f4fce9690d05aa9044e83d2" kindref="member">filterRefs</ref>.contains(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.fieldId()))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.type();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fieldIndex<sp/>=<sp/>requestedStruct.fieldIndex(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>StructField<sp/>requestedField<sp/>=<sp/>requestedStruct.fields()[fieldIndex];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedField.nullable()<sp/>||<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.isRequired(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>an<sp/>optional<sp/>field<sp/>as<sp/>non-null:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/>requestedField.dataType();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fieldResult.get();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IllegalArgumentException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>projection<sp/>for<sp/>field<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a3f910ebe28db811b800e19106959feae" kindref="member">field</ref>.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>e.getMessage(),<sp/>e);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/>requestedStruct;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="169" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1ListType" kindref="compound">ListType</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>,<sp/>Supplier&lt;Type&gt;<sp/>elementResult)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref><sp/>instanceof<sp/>ArrayType,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>an<sp/>array:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayType<sp/>requestedArray<sp/>=<sp/>(ArrayType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedArray.containsNull()<sp/>||<sp/>!<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>.isElementOptional(),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>an<sp/>array<sp/>of<sp/>optional<sp/>elements<sp/>as<sp/>required<sp/>elements:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedArray);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/>requestedArray.elementType();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>elementType<sp/>=<sp/>elementResult.get();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>.elementType()<sp/>==<sp/>elementType)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>a<sp/>projected<sp/>element<sp/>type,<sp/>create<sp/>a<sp/>new<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>.isElementOptional())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1ListType" kindref="compound">ListType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1ListType_1ab392a2fe7719a43bf3ca78a8cc9ef88f" kindref="member">ofOptional</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>.elementId(),<sp/>elementType);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1ListType" kindref="compound">ListType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1ListType_1a8da9bf8932dd9a695bb06bd6823dfdd3" kindref="member">ofRequired</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7456c356b624b4451f5131bd7e7e0af3" kindref="member">list</ref>.elementId(),<sp/>elementType);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/>requestedArray;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="197" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1MapType" kindref="compound">MapType</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>,<sp/>Supplier&lt;Type&gt;<sp/>keyResult,<sp/>Supplier&lt;Type&gt;<sp/>valueResult)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref><sp/>instanceof<sp/>MapType,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>map:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>MapType<sp/>requestedMap<sp/>=<sp/>(MapType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedMap.valueContainsNull()<sp/>||<sp/>!<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.isValueOptional(),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>a<sp/>map<sp/>of<sp/>optional<sp/>values<sp/>as<sp/>required<sp/>values:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringType.class.isInstance(requestedMap.keyType()),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>map<sp/>key<sp/>type<sp/>(not<sp/>string):<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedMap.keyType());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/>requestedMap.valueType();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>valueType<sp/>=<sp/>valueResult.get();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.valueType()<sp/>==<sp/>valueType)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.isValueOptional())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1MapType" kindref="compound">MapType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1MapType_1a25e53df2a8756837274dd99b53b7c8ba" kindref="member">ofOptional</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.keyId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.valueId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.keyType(),<sp/>valueType);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1MapType" kindref="compound">MapType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1MapType_1a91fc4386ca95ad012bf04ba966100c4e" kindref="member">ofRequired</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.keyId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.valueId(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1aa9ac37dbb8f1dec9f8958a8db10e1207" kindref="member">map</ref>.keyType(),<sp/>valueType);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.current<sp/>=<sp/>requestedMap;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="228" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1PrimitiveType" kindref="compound">PrimitiveType</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Class&lt;?<sp/>extends<sp/>DataType&gt;&gt;<sp/>expectedType<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a59a2097b641962a3658054931bd6b662" kindref="member">TYPES</ref>.get(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1a98cdf4dcb892759a8129046ca7cb3b6c" kindref="member">typeId</ref>());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expectedType<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>expectedType.contains(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>.getClass()),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>%s<sp/>to<sp/>incompatible<sp/>type:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>additional<sp/>checks<sp/>based<sp/>on<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1a98cdf4dcb892759a8129046ca7cb3b6c" kindref="member">typeId</ref>())<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DECIMAL:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1DecimalType" kindref="compound">DecimalType</ref><sp/>decimal<sp/>=<sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1DecimalType" kindref="compound">DecimalType</ref>)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DecimalType<sp/>requestedDecimal<sp/>=<sp/>(DecimalType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a7519002b21c7e8f9e0670169f7da9b0c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedDecimal.scale()<sp/>==<sp/>decimal.scale(),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>decimal<sp/>with<sp/>incompatible<sp/>scale:<sp/>%s<sp/>!=<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedDecimal.scale(),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal.scale());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedDecimal.precision()<sp/>&gt;=<sp/>decimal.precision(),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>decimal<sp/>with<sp/>incompatible<sp/>precision:<sp/>%s<sp/>&lt;<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedDecimal.precision(),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal.precision());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMESTAMP:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1TimestampType" kindref="compound">TimestampType</ref><sp/>timestamp<sp/>=<sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1TimestampType" kindref="compound">TimestampType</ref>)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp.shouldAdjustToUTC(),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>project<sp/>timestamp<sp/>(without<sp/>time<sp/>zone)<sp/>as<sp/>timestamptz<sp/>(with<sp/>time<sp/>zone)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1adda16f34c1a3c5ebf7b8aecd7905664b" kindref="member">primitive</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>ImmutableMap&lt;TypeID,<sp/>Set&lt;Class&lt;?<sp/>extends<sp/>DataType&gt;&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithReordering_1a59a2097b641962a3658054931bd6b662" kindref="member">TYPES</ref><sp/>=</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ImmutableMap.&lt;<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>,<sp/>Set&lt;Class&lt;?<sp/>extends<sp/>DataType&gt;&gt;&gt;builder()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1aee22eec1cdd9d1ef42c88cae88218ec9" kindref="member">BOOLEAN</ref>,<sp/>ImmutableSet.of(BooleanType$.class))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a0583dd600adf6b3f2181c9c368d39c23" kindref="member">INTEGER</ref>,<sp/>ImmutableSet.of(IntegerType$.class))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a6d61b704a55b8ee3bf6f39113853ed6b" kindref="member">LONG</ref>,<sp/>ImmutableSet.of(LongType$.class))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1ad53332c09144e192b35b5eb6a1d41147" kindref="member">FLOAT</ref>,<sp/>ImmutableSet.of(FloatType$.class))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a65b806e4609ee71e6136ac5524b33144" kindref="member">DOUBLE</ref>,<sp/>ImmutableSet.of(DoubleType$.class))</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a306db88c0868cdc8a97f9bfe4b5421cc" kindref="member">DATE</ref>,<sp/>ImmutableSet.of(DateType$.class))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a1534edefa504df38b2a0936ab641febe" kindref="member">TIMESTAMP</ref>,<sp/>ImmutableSet.of(TimestampType$.class,<sp/>TimestampNTZType$.class))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a6f5530ab86fc66549d5d74fbe55a36be" kindref="member">DECIMAL</ref>,<sp/>ImmutableSet.of(DecimalType.class))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1ac622b8dde27a2098ace11bee4e7d9f27" kindref="member">UUID</ref>,<sp/>ImmutableSet.of(StringType$.class))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1abba21af2596c57df35c2c4a5edc937da" kindref="member">STRING</ref>,<sp/>ImmutableSet.of(StringType$.class))</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1ac348bdb85c0ad3317552eb8d92d6ebe9" kindref="member">FIXED</ref>,<sp/>ImmutableSet.of(BinaryType$.class))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.put(<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">TypeID</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a3ca13bc66cd80c15538249cc05c6d33d" kindref="member">BINARY</ref>,<sp/>ImmutableSet.of(BinaryType.class))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.buildOrThrow();</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/PruneColumnsWithReordering.java"/>
  </compounddef>
</doxygen>
