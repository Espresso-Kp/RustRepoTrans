<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::flink::FlinkSchemaUtil</compoundname>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a12cb4412057de0c3bb497d77337012db" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.FlinkSchemaUtil.FlinkSchemaUtil</definition>
        <argsstring>()</argsstring>
        <name>FlinkSchemaUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="59" column="11" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a12cb4412057de0c3bb497d77337012db" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.FlinkSchemaUtil.FlinkSchemaUtil</definition>
        <argsstring>()</argsstring>
        <name>FlinkSchemaUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="59" column="11" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a12cb4412057de0c3bb497d77337012db" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.FlinkSchemaUtil.FlinkSchemaUtil</definition>
        <argsstring>()</argsstring>
        <name>FlinkSchemaUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="59" column="11" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a04546f72b934d7c55a23a21d381b4906" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(TableSchema schema)</argsstring>
        <name>convert</name>
        <param>
          <type>TableSchema</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000047"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" kindref="member">convert(ResolvedSchema)</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="63" column="24" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(ResolvedSchema flinkSchema)</argsstring>
        <name>convert</name>
        <param>
          <type>ResolvedSchema</type>
          <declname>flinkSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the flink table schema to apache iceberg schema with column comment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="80" column="24" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="80" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab38a950e3bb37507f9a007002d94a6e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Schema baseSchema, TableSchema flinkSchema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>baseSchema</declname>
        </param>
        <param>
          <type>TableSchema</type>
          <declname>flinkSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a Flink <ref refid="" kindref="compound">TableSchema</ref> to a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> based on the given schema.</para>
<para>This conversion does not assign new ids; it uses ids from the base schema.</para>
<para>Data types, field order, and nullability will match the Flink type. This conversion may return a schema that is not compatible with base schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> on which conversion is based </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flinkSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a Flink TableSchema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted or there are missing ids </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="139" column="24" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="139" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a30e30615238ad6a36853391e64fedcdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RowType</type>
        <definition>static RowType org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> to a <ref refid="" kindref="compound">Flink type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Flink type </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted to Flink </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="163" column="25" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a0f18e85b9f44cbb420bf574ca0700d29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LogicalType</type>
        <definition>static LogicalType org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Type type)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">Type</ref> to a <ref refid="" kindref="compound">Flink type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a Type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Flink type </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted to Flink </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="174" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab5008e25a4871778d8b980c1c7fe5d66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(LogicalType flinkType)</argsstring>
        <name>convert</name>
        <param>
          <type>LogicalType</type>
          <declname>flinkType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">Flink type</ref> to a <ref refid="" kindref="compound">Type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flinkType</parametername>
</parameternamelist>
<parameterdescription>
<para>a FlinkType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Iceberg type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="184" column="22" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a1a40c38c0c50c3bf402f20b335a44cf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TableSchema</type>
        <definition>static TableSchema org.apache.iceberg.flink.FlinkSchemaUtil.toSchema</definition>
        <argsstring>(RowType rowType)</argsstring>
        <name>toSchema</name>
        <param>
          <type>RowType</type>
          <declname>rowType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">RowType</ref> to a <ref refid="" kindref="compound">TableSchema</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowType</parametername>
</parameternamelist>
<parameterdescription>
<para>a RowType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flink TableSchema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="194" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ad7ce854fee7fb43b571834d076706bc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TableSchema</type>
        <definition>static TableSchema org.apache.iceberg.flink.FlinkSchemaUtil.toSchema</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>toSchema</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> to a <ref refid="" kindref="compound">TableSchema</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>iceberg schema to convert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flink TableSchema. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="208" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="208" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a04546f72b934d7c55a23a21d381b4906" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(TableSchema schema)</argsstring>
        <name>convert</name>
        <param>
          <type>TableSchema</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000050"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" kindref="member">convert(ResolvedSchema)</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="63" column="24" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(ResolvedSchema flinkSchema)</argsstring>
        <name>convert</name>
        <param>
          <type>ResolvedSchema</type>
          <declname>flinkSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the flink table schema to apache iceberg schema with column comment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="80" column="24" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="80" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab38a950e3bb37507f9a007002d94a6e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Schema baseSchema, TableSchema flinkSchema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>baseSchema</declname>
        </param>
        <param>
          <type>TableSchema</type>
          <declname>flinkSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a Flink <ref refid="" kindref="compound">TableSchema</ref> to a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> based on the given schema.</para>
<para>This conversion does not assign new ids; it uses ids from the base schema.</para>
<para>Data types, field order, and nullability will match the Flink type. This conversion may return a schema that is not compatible with base schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> on which conversion is based </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flinkSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a Flink TableSchema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted or there are missing ids </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="139" column="24" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="139" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a30e30615238ad6a36853391e64fedcdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RowType</type>
        <definition>static RowType org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> to a <ref refid="" kindref="compound">Flink type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Flink type </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted to Flink </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="163" column="25" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a0f18e85b9f44cbb420bf574ca0700d29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LogicalType</type>
        <definition>static LogicalType org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Type type)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">Type</ref> to a <ref refid="" kindref="compound">Flink type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a Type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Flink type </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted to Flink </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="174" column="29" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab5008e25a4871778d8b980c1c7fe5d66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(LogicalType flinkType)</argsstring>
        <name>convert</name>
        <param>
          <type>LogicalType</type>
          <declname>flinkType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">Flink type</ref> to a <ref refid="" kindref="compound">Type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flinkType</parametername>
</parameternamelist>
<parameterdescription>
<para>a FlinkType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Iceberg type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="184" column="22" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a1a40c38c0c50c3bf402f20b335a44cf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TableSchema</type>
        <definition>static TableSchema org.apache.iceberg.flink.FlinkSchemaUtil.toSchema</definition>
        <argsstring>(RowType rowType)</argsstring>
        <name>toSchema</name>
        <param>
          <type>RowType</type>
          <declname>rowType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">RowType</ref> to a <ref refid="" kindref="compound">TableSchema</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowType</parametername>
</parameternamelist>
<parameterdescription>
<para>a RowType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flink TableSchema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="194" column="29" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ad7ce854fee7fb43b571834d076706bc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TableSchema</type>
        <definition>static TableSchema org.apache.iceberg.flink.FlinkSchemaUtil.toSchema</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>toSchema</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> to a <ref refid="" kindref="compound">TableSchema</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>iceberg schema to convert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flink TableSchema. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="208" column="29" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="208" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a04546f72b934d7c55a23a21d381b4906" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(TableSchema schema)</argsstring>
        <name>convert</name>
        <param>
          <type>TableSchema</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000053"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" kindref="member">convert(ResolvedSchema)</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="63" column="24" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(ResolvedSchema flinkSchema)</argsstring>
        <name>convert</name>
        <param>
          <type>ResolvedSchema</type>
          <declname>flinkSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the flink table schema to apache iceberg schema with column comment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="80" column="24" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="80" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab38a950e3bb37507f9a007002d94a6e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Schema baseSchema, TableSchema flinkSchema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>baseSchema</declname>
        </param>
        <param>
          <type>TableSchema</type>
          <declname>flinkSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a Flink <ref refid="" kindref="compound">TableSchema</ref> to a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> based on the given schema.</para>
<para>This conversion does not assign new ids; it uses ids from the base schema.</para>
<para>Data types, field order, and nullability will match the Flink type. This conversion may return a schema that is not compatible with base schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> on which conversion is based </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flinkSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a Flink TableSchema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted or there are missing ids </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="139" column="24" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="139" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a30e30615238ad6a36853391e64fedcdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RowType</type>
        <definition>static RowType org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> to a <ref refid="" kindref="compound">Flink type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Flink type </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted to Flink </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="163" column="25" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a0f18e85b9f44cbb420bf574ca0700d29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LogicalType</type>
        <definition>static LogicalType org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(Type type)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">Type</ref> to a <ref refid="" kindref="compound">Flink type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a Type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Flink type </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the type cannot be converted to Flink </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="174" column="29" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab5008e25a4871778d8b980c1c7fe5d66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.flink.FlinkSchemaUtil.convert</definition>
        <argsstring>(LogicalType flinkType)</argsstring>
        <name>convert</name>
        <param>
          <type>LogicalType</type>
          <declname>flinkType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">Flink type</ref> to a <ref refid="" kindref="compound">Type</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flinkType</parametername>
</parameternamelist>
<parameterdescription>
<para>a FlinkType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the equivalent Iceberg type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="184" column="22" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a1a40c38c0c50c3bf402f20b335a44cf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TableSchema</type>
        <definition>static TableSchema org.apache.iceberg.flink.FlinkSchemaUtil.toSchema</definition>
        <argsstring>(RowType rowType)</argsstring>
        <name>toSchema</name>
        <param>
          <type>RowType</type>
          <declname>rowType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="" kindref="compound">RowType</ref> to a <ref refid="" kindref="compound">TableSchema</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowType</parametername>
</parameternamelist>
<parameterdescription>
<para>a RowType </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flink TableSchema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="194" column="29" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ad7ce854fee7fb43b571834d076706bc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TableSchema</type>
        <definition>static TableSchema org.apache.iceberg.flink.FlinkSchemaUtil.toSchema</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>toSchema</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref> to a <ref refid="" kindref="compound">TableSchema</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>iceberg schema to convert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flink TableSchema. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="208" column="29" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="208" bodyend="231"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a2d675d0dcde0325050155f9c32cb2e34" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.freshIdentifierFieldIds</definition>
        <argsstring>(Schema icebergSchema, List&lt; String &gt; primaryKeys)</argsstring>
        <name>freshIdentifierFieldIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>icebergSchema</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>primaryKeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="110" column="25" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="110" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a2d675d0dcde0325050155f9c32cb2e34" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.freshIdentifierFieldIds</definition>
        <argsstring>(Schema icebergSchema, List&lt; String &gt; primaryKeys)</argsstring>
        <name>freshIdentifierFieldIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>icebergSchema</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>primaryKeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="110" column="25" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="110" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a2d675d0dcde0325050155f9c32cb2e34" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.flink.FlinkSchemaUtil.freshIdentifierFieldIds</definition>
        <argsstring>(Schema icebergSchema, List&lt; String &gt; primaryKeys)</argsstring>
        <name>freshIdentifierFieldIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>icebergSchema</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>primaryKeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="110" column="25" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="110" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Converter between Flink types and Iceberg type. The conversion is not a 1:1 mapping that not allows back-and-forth conversion. So some information might get lost during the back-and-forth conversion.</para>
<para>This inconsistent types:</para>
<para><itemizedlist>
<listitem>
<para>map Iceberg UUID type to Flink BinaryType(16) </para>
</listitem>
<listitem>
<para>map Flink VarCharType(_) and CharType(_) to Iceberg String type </para>
</listitem>
<listitem>
<para>map Flink VarBinaryType(_) to Iceberg Binary type </para>
</listitem>
<listitem>
<para>map Flink TimeType(_) to Iceberg Time type (microseconds) </para>
</listitem>
<listitem>
<para>map Flink TimestampType(_) to Iceberg Timestamp without zone type (microseconds) </para>
</listitem>
<listitem>
<para>map Flink LocalZonedTimestampType(_) to Iceberg Timestamp with zone type (microseconds) </para>
</listitem>
<listitem>
<para>map Flink MultiSetType to Iceberg Map type(element, int) </para>
</listitem>
</itemizedlist>
</para>
    </detaileddescription>
    <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" line="57" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkSchemaUtil.java" bodystart="57" bodyend="232"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a04546f72b934d7c55a23a21d381b4906" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab38a950e3bb37507f9a007002d94a6e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a30e30615238ad6a36853391e64fedcdd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a0f18e85b9f44cbb420bf574ca0700d29" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab5008e25a4871778d8b980c1c7fe5d66" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a04546f72b934d7c55a23a21d381b4906" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab38a950e3bb37507f9a007002d94a6e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a30e30615238ad6a36853391e64fedcdd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a0f18e85b9f44cbb420bf574ca0700d29" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab5008e25a4871778d8b980c1c7fe5d66" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a04546f72b934d7c55a23a21d381b4906" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a72c557eab34ad845efc3e589bfa642e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab38a950e3bb37507f9a007002d94a6e5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a30e30615238ad6a36853391e64fedcdd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a0f18e85b9f44cbb420bf574ca0700d29" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ab5008e25a4871778d8b980c1c7fe5d66" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a12cb4412057de0c3bb497d77337012db" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>FlinkSchemaUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a12cb4412057de0c3bb497d77337012db" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>FlinkSchemaUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a12cb4412057de0c3bb497d77337012db" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>FlinkSchemaUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a2d675d0dcde0325050155f9c32cb2e34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>freshIdentifierFieldIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a2d675d0dcde0325050155f9c32cb2e34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>freshIdentifierFieldIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a2d675d0dcde0325050155f9c32cb2e34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>freshIdentifierFieldIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a1a40c38c0c50c3bf402f20b335a44cf7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>toSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ad7ce854fee7fb43b571834d076706bc2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>toSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a1a40c38c0c50c3bf402f20b335a44cf7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>toSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ad7ce854fee7fb43b571834d076706bc2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>toSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1a1a40c38c0c50c3bf402f20b335a44cf7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>toSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkSchemaUtil_1ad7ce854fee7fb43b571834d076706bc2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkSchemaUtil</scope><name>toSchema</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
