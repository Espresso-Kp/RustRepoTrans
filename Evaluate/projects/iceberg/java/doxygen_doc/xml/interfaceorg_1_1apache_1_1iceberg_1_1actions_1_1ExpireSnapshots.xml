<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::actions::ExpireSnapshots</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action" prot="public" virt="non-virtual">org.apache.iceberg.actions.Action&lt; ExpireSnapshots, ExpireSnapshots.Result &gt;</basecompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1BaseExpireSnapshots" prot="public" virt="non-virtual">org.apache.iceberg.actions.BaseExpireSnapshots</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" prot="public" virt="non-virtual">org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction</derivedcompoundref>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1_1Result" prot="public">org::apache::iceberg::actions::ExpireSnapshots::Result</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a1ae35f096692532cee1727d6365691e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" kindref="compound">ExpireSnapshots</ref></type>
        <definition>ExpireSnapshots org.apache.iceberg.actions.ExpireSnapshots.expireSnapshotId</definition>
        <argsstring>(long snapshotId)</argsstring>
        <name>expireSnapshotId</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7">expireSnapshotId</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7">expireSnapshotId</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7">expireSnapshotId</reimplementedby>
        <param>
          <type>long</type>
          <declname>snapshotId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires a specific <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref> identified by id.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a5d3787e47cc09c0931ade2c48b517ea0" kindref="member">org.apache.iceberg.ExpireSnapshots#expireSnapshotId(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshotId</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the snapshot to expire </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" line="41" column="19"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1af21e528ad9aa2b074f58546e78e403f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" kindref="compound">ExpireSnapshots</ref></type>
        <definition>ExpireSnapshots org.apache.iceberg.actions.ExpireSnapshots.expireOlderThan</definition>
        <argsstring>(long timestampMillis)</argsstring>
        <name>expireOlderThan</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc">expireOlderThan</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc">expireOlderThan</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc">expireOlderThan</reimplementedby>
        <param>
          <type>long</type>
          <declname>timestampMillis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires all snapshots older than the given timestamp.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a75ec0b28725db3254d0a607848d877fb" kindref="member">org.apache.iceberg.ExpireSnapshots#expireOlderThan(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestampMillis</parametername>
</parameternamelist>
<parameterdescription>
<para>a long timestamp, as returned by <ref refid="" kindref="compound">System#currentTimeMillis()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" line="51" column="19"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1adaf9f831996a0f82b55cf08fa2db0193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" kindref="compound">ExpireSnapshots</ref></type>
        <definition>ExpireSnapshots org.apache.iceberg.actions.ExpireSnapshots.retainLast</definition>
        <argsstring>(int numSnapshots)</argsstring>
        <name>retainLast</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71">retainLast</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71">retainLast</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71">retainLast</reimplementedby>
        <param>
          <type>int</type>
          <declname>numSnapshots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retains the most recent ancestors of the current snapshot.</para>
<para>If a snapshot would be expired because it is older than the expiration timestamp, but is one of the<programlisting><codeline><highlight class="normal">numSnapshots<sp/></highlight></codeline>
</programlisting> most recent ancestors of the current state, it will be retained. This will not cause snapshots explicitly identified by id from expiring.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1aadd836f5c58847424c9f76f8fe39f74a" kindref="member">org.apache.iceberg.ExpireSnapshots#retainLast(int)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numSnapshots</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of snapshots to retain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" line="65" column="19"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1ab4f67211d6e68a29ff6692bf52d4400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" kindref="compound">ExpireSnapshots</ref></type>
        <definition>ExpireSnapshots org.apache.iceberg.actions.ExpireSnapshots.deleteWith</definition>
        <argsstring>(Consumer&lt; String &gt; deleteFunc)</argsstring>
        <name>deleteWith</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82">deleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82">deleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82">deleteWith</reimplementedby>
        <param>
          <type>Consumer&lt; String &gt;</type>
          <declname>deleteFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative delete implementation that will be used for manifests, data and delete files.</para>
<para>Manifest files that are no longer used by valid snapshots will be deleted. Content files that were marked as logically deleted by snapshots that are expired will be deleted as well.</para>
<para>If this method is not called, unnecessary manifests and content files will still be deleted.</para>
<para>Identical to <ref refid="" kindref="compound">org.apache.iceberg.ExpireSnapshots#deleteWith(Consumer)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deleteFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called to delete manifests and data files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" line="81" column="19"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a65344736cfee3b2440b195cc6c0926cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" kindref="compound">ExpireSnapshots</ref></type>
        <definition>ExpireSnapshots org.apache.iceberg.actions.ExpireSnapshots.executeDeleteWith</definition>
        <argsstring>(ExecutorService executorService)</argsstring>
        <name>executeDeleteWith</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677">executeDeleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677">executeDeleteWith</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677">executeDeleteWith</reimplementedby>
        <param>
          <type>ExecutorService</type>
          <declname>executorService</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative executor service that will be used for files removal. This service will only be used if a custom delete function is provided by <ref refid="" kindref="compound">deleteWith(Consumer)</ref> or if the FileIO does not <ref refid="" kindref="compound">support bulk deletes</ref>. Otherwise, parallelism should be controlled by the IO specific <ref refid="" kindref="compound">deleteFiles</ref> method.</para>
<para>If this method is not called and bulk deletes are not supported, unnecessary manifests and content files will still be deleted in the current thread.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1ab18b5bd07da6aabd041167275326e4ed" kindref="member">org.apache.iceberg.ExpireSnapshots#executeDeleteWith(ExecutorService)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executorService</parametername>
</parameternamelist>
<parameterdescription>
<para>the service to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" line="98" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An action that expires snapshots in a table.</para>
<para>Similar to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots" kindref="compound">org.apache.iceberg.ExpireSnapshots</ref> but may use a query engine to distribute parts of the work. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.actions.ExpireSnapshots</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.actions.BaseExpireSnapshots</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.actions.Action&lt; ExpireSnapshots, ExpireSnapshots.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action"/>
      </node>
      <node id="4">
        <label>org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.actions.ExpireSnapshots</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.actions.Action&lt; ExpireSnapshots, ExpireSnapshots.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action"/>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" line="32" column="42" bodyfile="api/src/main/java/org/apache/iceberg/actions/ExpireSnapshots.java" bodystart="32" bodyend="122"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1ab4f67211d6e68a29ff6692bf52d4400c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>deleteWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1ad2b991f8193b21534f7f1b647ced0757" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>execute</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a65344736cfee3b2440b195cc6c0926cc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>executeDeleteWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1af21e528ad9aa2b074f58546e78e403f5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>expireOlderThan</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a1ae35f096692532cee1727d6365691e3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>expireSnapshotId</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1a7f4cee506b8657f0091d7ac57eed767f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>option</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1aedb3c8e8e03088ee8ec151db15474d9c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>options</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1adaf9f831996a0f82b55cf08fa2db0193" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::ExpireSnapshots</scope><name>retainLast</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
