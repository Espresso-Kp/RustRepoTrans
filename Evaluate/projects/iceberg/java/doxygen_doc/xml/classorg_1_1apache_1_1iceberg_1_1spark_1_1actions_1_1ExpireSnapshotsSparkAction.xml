<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">org::apache::iceberg::spark::actions::BaseSparkAction&lt; ExpireSnapshotsSparkAction &gt;</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots" prot="public" virt="non-virtual">org.apache.iceberg.actions.ExpireSnapshots</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1afbfeaa0e1fe9f9a99fd7f35dd7cbea24" prot="public" static="yes" mutable="no">
        <type>final String</type>
        <definition>static final String org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::STREAM_RESULTS</definition>
        <argsstring></argsstring>
        <name>STREAM_RESULTS</name>
        <initializer>= &quot;stream-results&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="68" column="30" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a98861487fe6a7a78a82c47b56a291363" prot="public" static="yes" mutable="no">
        <type>final boolean</type>
        <definition>static final boolean org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::STREAM_RESULTS_DEFAULT</definition>
        <argsstring></argsstring>
        <name>STREAM_RESULTS_DEFAULT</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="69" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a1e247d171a59f53d404667df9a5fbb29" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>static final Logger org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(ExpireSnapshotsSparkAction.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="71" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a425ccc0ec922ed2de5380cfa310f4aee" prot="private" static="no" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>final Table org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="73" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6610fab3517e7431c77e28129d958028" prot="private" static="no" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref></type>
        <definition>final TableOperations org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::ops</definition>
        <argsstring></argsstring>
        <name>ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="74" column="33" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1afa1fd8378e7403799a606c2aa4261d57" prot="private" static="no" mutable="no">
        <type>final Set&lt; Long &gt;</type>
        <definition>final Set&lt; Long &gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::expiredSnapshotIds</definition>
        <argsstring></argsstring>
        <name>expiredSnapshotIds</name>
        <initializer>= Sets.newHashSet()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="76" column="21" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1aad23e91c67b358f46c4f97f235903f6b" prot="private" static="no" mutable="no">
        <type>Long</type>
        <definition>Long org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::expireOlderThanValue</definition>
        <argsstring></argsstring>
        <name>expireOlderThanValue</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="77" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1aab214856566da6f7642dc9e76360998c" prot="private" static="no" mutable="no">
        <type>Integer</type>
        <definition>Integer org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::retainLastValue</definition>
        <argsstring></argsstring>
        <name>retainLastValue</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="78" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1aa83e6322071b973119e873418ff050a9" prot="private" static="no" mutable="no">
        <type>Consumer&lt; String &gt;</type>
        <definition>Consumer&lt; String &gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::deleteFunc</definition>
        <argsstring></argsstring>
        <name>deleteFunc</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="79" column="20" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a13c84c7ff5da6601df7e2a8600969d5b" prot="private" static="no" mutable="no">
        <type>ExecutorService</type>
        <definition>ExecutorService org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::deleteExecutorService</definition>
        <argsstring></argsstring>
        <name>deleteExecutorService</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="80" column="27" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1abdcc71b893fae62ae5e21ad4bf7209cc" prot="private" static="no" mutable="no">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt; FileInfo &gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction::expiredFileDS</definition>
        <argsstring></argsstring>
        <name>expiredFileDS</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="81" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ab8cb95571116f98054c487b04ab977d0" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.ExpireSnapshotsSparkAction</definition>
        <argsstring>(SparkSession spark, Table table)</argsstring>
        <name>ExpireSnapshotsSparkAction</name>
        <param>
          <type>SparkSession</type>
          <declname>spark</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="83" column="3" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="83" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ab8cb95571116f98054c487b04ab977d0" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.ExpireSnapshotsSparkAction</definition>
        <argsstring>(SparkSession spark, Table table)</argsstring>
        <name>ExpireSnapshotsSparkAction</name>
        <param>
          <type>SparkSession</type>
          <declname>spark</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="83" column="3" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="83" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ab8cb95571116f98054c487b04ab977d0" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.ExpireSnapshotsSparkAction</definition>
        <argsstring>(SparkSession spark, Table table)</argsstring>
        <name>ExpireSnapshotsSparkAction</name>
        <param>
          <type>SparkSession</type>
          <declname>spark</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="83" column="3" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="83" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0fde51b8e3623e80415b2f0a418c0d1f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.self</definition>
        <argsstring>()</argsstring>
        <name>self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="94" column="40" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0fde51b8e3623e80415b2f0a418c0d1f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.self</definition>
        <argsstring>()</argsstring>
        <name>self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="94" column="40" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0fde51b8e3623e80415b2f0a418c0d1f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.self</definition>
        <argsstring>()</argsstring>
        <name>self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="94" column="40" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="94" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.executeDeleteWith</definition>
        <argsstring>(ExecutorService executorService)</argsstring>
        <name>executeDeleteWith</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a65344736cfee3b2440b195cc6c0926cc">executeDeleteWith</reimplements>
        <param>
          <type>ExecutorService</type>
          <declname>executorService</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative executor service that will be used for files removal. This service will only be used if a custom delete function is provided by <ref refid="" kindref="compound">deleteWith(Consumer)</ref> or if the FileIO does not <ref refid="" kindref="compound">support bulk deletes</ref>. Otherwise, parallelism should be controlled by the IO specific <ref refid="" kindref="compound">deleteFiles</ref> method.</para>
<para>If this method is not called and bulk deletes are not supported, unnecessary manifests and content files will still be deleted in the current thread.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1ab18b5bd07da6aabd041167275326e4ed" kindref="member">org.apache.iceberg.ExpireSnapshots#executeDeleteWith(ExecutorService)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executorService</parametername>
</parameternamelist>
<parameterdescription>
<para>the service to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="99" column="37" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireSnapshotId</definition>
        <argsstring>(long snapshotId)</argsstring>
        <name>expireSnapshotId</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a1ae35f096692532cee1727d6365691e3">expireSnapshotId</reimplements>
        <param>
          <type>long</type>
          <declname>snapshotId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires a specific <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref> identified by id.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a5d3787e47cc09c0931ade2c48b517ea0" kindref="member">org.apache.iceberg.ExpireSnapshots#expireSnapshotId(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshotId</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the snapshot to expire </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="105" column="37" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireOlderThan</definition>
        <argsstring>(long timestampMillis)</argsstring>
        <name>expireOlderThan</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1af21e528ad9aa2b074f58546e78e403f5">expireOlderThan</reimplements>
        <param>
          <type>long</type>
          <declname>timestampMillis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires all snapshots older than the given timestamp.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a75ec0b28725db3254d0a607848d877fb" kindref="member">org.apache.iceberg.ExpireSnapshots#expireOlderThan(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestampMillis</parametername>
</parameternamelist>
<parameterdescription>
<para>a long timestamp, as returned by <ref refid="" kindref="compound">System#currentTimeMillis()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="111" column="37" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.retainLast</definition>
        <argsstring>(int numSnapshots)</argsstring>
        <name>retainLast</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1adaf9f831996a0f82b55cf08fa2db0193">retainLast</reimplements>
        <param>
          <type>int</type>
          <declname>numSnapshots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retains the most recent ancestors of the current snapshot.</para>
<para>If a snapshot would be expired because it is older than the expiration timestamp, but is one of the<programlisting><codeline><highlight class="normal">numSnapshots<sp/></highlight></codeline>
</programlisting> most recent ancestors of the current state, it will be retained. This will not cause snapshots explicitly identified by id from expiring.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1aadd836f5c58847424c9f76f8fe39f74a" kindref="member">org.apache.iceberg.ExpireSnapshots#retainLast(int)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numSnapshots</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of snapshots to retain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="117" column="37" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.deleteWith</definition>
        <argsstring>(Consumer&lt; String &gt; newDeleteFunc)</argsstring>
        <name>deleteWith</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1ab4f67211d6e68a29ff6692bf52d4400c">deleteWith</reimplements>
        <param>
          <type>Consumer&lt; String &gt;</type>
          <declname>deleteFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative delete implementation that will be used for manifests, data and delete files.</para>
<para>Manifest files that are no longer used by valid snapshots will be deleted. Content files that were marked as logically deleted by snapshots that are expired will be deleted as well.</para>
<para>If this method is not called, unnecessary manifests and content files will still be deleted.</para>
<para>Identical to <ref refid="" kindref="compound">org.apache.iceberg.ExpireSnapshots#deleteWith(Consumer)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deleteFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called to delete manifests and data files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="127" column="37" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6498796e5d9fc1e77edd41b401c5fd81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireFiles</definition>
        <argsstring>()</argsstring>
        <name>expireFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires snapshots and commits the changes to the table, returning a Dataset of files to delete.</para>
<para>This does not delete data files. To delete data files, run <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" kindref="member">execute()</ref>.</para>
<para>This may be called before or after <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" kindref="member">execute()</ref> to return the expired files.</para>
<para><simplesect kind="return"><para>a Dataset of files that are no longer referenced by the table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="141" column="18" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="141" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="179" column="32" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.executeDeleteWith</definition>
        <argsstring>(ExecutorService executorService)</argsstring>
        <name>executeDeleteWith</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a65344736cfee3b2440b195cc6c0926cc">executeDeleteWith</reimplements>
        <param>
          <type>ExecutorService</type>
          <declname>executorService</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative executor service that will be used for files removal. This service will only be used if a custom delete function is provided by <ref refid="" kindref="compound">deleteWith(Consumer)</ref> or if the FileIO does not <ref refid="" kindref="compound">support bulk deletes</ref>. Otherwise, parallelism should be controlled by the IO specific <ref refid="" kindref="compound">deleteFiles</ref> method.</para>
<para>If this method is not called and bulk deletes are not supported, unnecessary manifests and content files will still be deleted in the current thread.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1ab18b5bd07da6aabd041167275326e4ed" kindref="member">org.apache.iceberg.ExpireSnapshots#executeDeleteWith(ExecutorService)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executorService</parametername>
</parameternamelist>
<parameterdescription>
<para>the service to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="99" column="37" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireSnapshotId</definition>
        <argsstring>(long snapshotId)</argsstring>
        <name>expireSnapshotId</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a1ae35f096692532cee1727d6365691e3">expireSnapshotId</reimplements>
        <param>
          <type>long</type>
          <declname>snapshotId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires a specific <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref> identified by id.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a5d3787e47cc09c0931ade2c48b517ea0" kindref="member">org.apache.iceberg.ExpireSnapshots#expireSnapshotId(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshotId</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the snapshot to expire </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="105" column="37" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireOlderThan</definition>
        <argsstring>(long timestampMillis)</argsstring>
        <name>expireOlderThan</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1af21e528ad9aa2b074f58546e78e403f5">expireOlderThan</reimplements>
        <param>
          <type>long</type>
          <declname>timestampMillis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires all snapshots older than the given timestamp.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a75ec0b28725db3254d0a607848d877fb" kindref="member">org.apache.iceberg.ExpireSnapshots#expireOlderThan(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestampMillis</parametername>
</parameternamelist>
<parameterdescription>
<para>a long timestamp, as returned by <ref refid="" kindref="compound">System#currentTimeMillis()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="111" column="37" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.retainLast</definition>
        <argsstring>(int numSnapshots)</argsstring>
        <name>retainLast</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1adaf9f831996a0f82b55cf08fa2db0193">retainLast</reimplements>
        <param>
          <type>int</type>
          <declname>numSnapshots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retains the most recent ancestors of the current snapshot.</para>
<para>If a snapshot would be expired because it is older than the expiration timestamp, but is one of the<programlisting><codeline><highlight class="normal">numSnapshots<sp/></highlight></codeline>
</programlisting> most recent ancestors of the current state, it will be retained. This will not cause snapshots explicitly identified by id from expiring.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1aadd836f5c58847424c9f76f8fe39f74a" kindref="member">org.apache.iceberg.ExpireSnapshots#retainLast(int)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numSnapshots</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of snapshots to retain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="117" column="37" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.deleteWith</definition>
        <argsstring>(Consumer&lt; String &gt; newDeleteFunc)</argsstring>
        <name>deleteWith</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1ab4f67211d6e68a29ff6692bf52d4400c">deleteWith</reimplements>
        <param>
          <type>Consumer&lt; String &gt;</type>
          <declname>deleteFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative delete implementation that will be used for manifests, data and delete files.</para>
<para>Manifest files that are no longer used by valid snapshots will be deleted. Content files that were marked as logically deleted by snapshots that are expired will be deleted as well.</para>
<para>If this method is not called, unnecessary manifests and content files will still be deleted.</para>
<para>Identical to <ref refid="" kindref="compound">org.apache.iceberg.ExpireSnapshots#deleteWith(Consumer)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deleteFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called to delete manifests and data files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="127" column="37" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6498796e5d9fc1e77edd41b401c5fd81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireFiles</definition>
        <argsstring>()</argsstring>
        <name>expireFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires snapshots and commits the changes to the table, returning a Dataset of files to delete.</para>
<para>This does not delete data files. To delete data files, run <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" kindref="member">execute()</ref>.</para>
<para>This may be called before or after <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" kindref="member">execute()</ref> to return the expired files.</para>
<para><simplesect kind="return"><para>a Dataset of files that are no longer referenced by the table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="141" column="18" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="141" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="179" column="32" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.executeDeleteWith</definition>
        <argsstring>(ExecutorService executorService)</argsstring>
        <name>executeDeleteWith</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a65344736cfee3b2440b195cc6c0926cc">executeDeleteWith</reimplements>
        <param>
          <type>ExecutorService</type>
          <declname>executorService</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative executor service that will be used for files removal. This service will only be used if a custom delete function is provided by <ref refid="" kindref="compound">deleteWith(Consumer)</ref> or if the FileIO does not <ref refid="" kindref="compound">support bulk deletes</ref>. Otherwise, parallelism should be controlled by the IO specific <ref refid="" kindref="compound">deleteFiles</ref> method.</para>
<para>If this method is not called and bulk deletes are not supported, unnecessary manifests and content files will still be deleted in the current thread.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1ab18b5bd07da6aabd041167275326e4ed" kindref="member">org.apache.iceberg.ExpireSnapshots#executeDeleteWith(ExecutorService)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executorService</parametername>
</parameternamelist>
<parameterdescription>
<para>the service to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="99" column="37" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireSnapshotId</definition>
        <argsstring>(long snapshotId)</argsstring>
        <name>expireSnapshotId</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1a1ae35f096692532cee1727d6365691e3">expireSnapshotId</reimplements>
        <param>
          <type>long</type>
          <declname>snapshotId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires a specific <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref> identified by id.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a5d3787e47cc09c0931ade2c48b517ea0" kindref="member">org.apache.iceberg.ExpireSnapshots#expireSnapshotId(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshotId</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the snapshot to expire </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="105" column="37" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireOlderThan</definition>
        <argsstring>(long timestampMillis)</argsstring>
        <name>expireOlderThan</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1af21e528ad9aa2b074f58546e78e403f5">expireOlderThan</reimplements>
        <param>
          <type>long</type>
          <declname>timestampMillis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires all snapshots older than the given timestamp.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1a75ec0b28725db3254d0a607848d877fb" kindref="member">org.apache.iceberg.ExpireSnapshots#expireOlderThan(long)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestampMillis</parametername>
</parameternamelist>
<parameterdescription>
<para>a long timestamp, as returned by <ref refid="" kindref="compound">System#currentTimeMillis()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="111" column="37" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.retainLast</definition>
        <argsstring>(int numSnapshots)</argsstring>
        <name>retainLast</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1adaf9f831996a0f82b55cf08fa2db0193">retainLast</reimplements>
        <param>
          <type>int</type>
          <declname>numSnapshots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retains the most recent ancestors of the current snapshot.</para>
<para>If a snapshot would be expired because it is older than the expiration timestamp, but is one of the<programlisting><codeline><highlight class="normal">numSnapshots<sp/></highlight></codeline>
</programlisting> most recent ancestors of the current state, it will be retained. This will not cause snapshots explicitly identified by id from expiring.</para>
<para>Identical to <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots_1aadd836f5c58847424c9f76f8fe39f74a" kindref="member">org.apache.iceberg.ExpireSnapshots#retainLast(int)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numSnapshots</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of snapshots to retain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="117" column="37" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction" kindref="compound">ExpireSnapshotsSparkAction</ref></type>
        <definition>ExpireSnapshotsSparkAction org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.deleteWith</definition>
        <argsstring>(Consumer&lt; String &gt; newDeleteFunc)</argsstring>
        <name>deleteWith</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots_1ab4f67211d6e68a29ff6692bf52d4400c">deleteWith</reimplements>
        <param>
          <type>Consumer&lt; String &gt;</type>
          <declname>deleteFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes an alternative delete implementation that will be used for manifests, data and delete files.</para>
<para>Manifest files that are no longer used by valid snapshots will be deleted. Content files that were marked as logically deleted by snapshots that are expired will be deleted as well.</para>
<para>If this method is not called, unnecessary manifests and content files will still be deleted.</para>
<para>Identical to <ref refid="" kindref="compound">org.apache.iceberg.ExpireSnapshots#deleteWith(Consumer)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deleteFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that will be called to delete manifests and data files </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="127" column="37" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6498796e5d9fc1e77edd41b401c5fd81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.expireFiles</definition>
        <argsstring>()</argsstring>
        <name>expireFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expires snapshots and commits the changes to the table, returning a Dataset of files to delete.</para>
<para>This does not delete data files. To delete data files, run <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" kindref="member">execute()</ref>.</para>
<para>This may be called before or after <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" kindref="member">execute()</ref> to return the expired files.</para>
<para><simplesect kind="return"><para>a Dataset of files that are no longer referenced by the table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="141" column="18" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="141" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="179" column="32" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="179" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a48d3d12b42f5e99b6a2151ad11754652" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.jobDesc</definition>
        <argsstring>()</argsstring>
        <name>jobDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="184" column="18" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="184" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a39b2eb9740890328665d937d3101304b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.doExecute</definition>
        <argsstring>()</argsstring>
        <name>doExecute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="208" column="33" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2515805649b946f40e23b76e345d3ed7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.streamResults</definition>
        <argsstring>()</argsstring>
        <name>streamResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="216" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae1a045addfe776d734d50e8bf8ff9e71" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.fileDS</definition>
        <argsstring>(TableMetadata metadata)</argsstring>
        <name>fileDS</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="220" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a14069facfc166f7271dcc1f2ce2f3bd9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.fileDS</definition>
        <argsstring>(TableMetadata metadata, Set&lt; Long &gt; snapshotIds)</argsstring>
        <name>fileDS</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>Set&lt; Long &gt;</type>
          <declname>snapshotIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="224" column="19" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="224" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0359f4f0cb73d87537a974fedf0150fa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Long &gt;</type>
        <definition>Set&lt;Long&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.findExpiredSnapshotIds</definition>
        <argsstring>(TableMetadata originalMetadata, TableMetadata updatedMetadata)</argsstring>
        <name>findExpiredSnapshotIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>originalMetadata</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>updatedMetadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="232" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="232" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a9827d6ce9f66748bbbc653d50f3287a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.deleteFiles</definition>
        <argsstring>(Iterator&lt; FileInfo &gt; files)</argsstring>
        <name>deleteFiles</name>
        <param>
          <type>Iterator&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="242" column="33" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="242" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a48d3d12b42f5e99b6a2151ad11754652" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.jobDesc</definition>
        <argsstring>()</argsstring>
        <name>jobDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="184" column="18" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="184" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a39b2eb9740890328665d937d3101304b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.doExecute</definition>
        <argsstring>()</argsstring>
        <name>doExecute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="208" column="33" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2515805649b946f40e23b76e345d3ed7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.streamResults</definition>
        <argsstring>()</argsstring>
        <name>streamResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="216" column="19" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae1a045addfe776d734d50e8bf8ff9e71" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.fileDS</definition>
        <argsstring>(TableMetadata metadata)</argsstring>
        <name>fileDS</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="220" column="19" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a14069facfc166f7271dcc1f2ce2f3bd9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.fileDS</definition>
        <argsstring>(TableMetadata metadata, Set&lt; Long &gt; snapshotIds)</argsstring>
        <name>fileDS</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>Set&lt; Long &gt;</type>
          <declname>snapshotIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="224" column="19" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="224" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0359f4f0cb73d87537a974fedf0150fa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Long &gt;</type>
        <definition>Set&lt;Long&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.findExpiredSnapshotIds</definition>
        <argsstring>(TableMetadata originalMetadata, TableMetadata updatedMetadata)</argsstring>
        <name>findExpiredSnapshotIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>originalMetadata</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>updatedMetadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="232" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="232" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a9827d6ce9f66748bbbc653d50f3287a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.deleteFiles</definition>
        <argsstring>(Iterator&lt; FileInfo &gt; files)</argsstring>
        <name>deleteFiles</name>
        <param>
          <type>Iterator&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="242" column="33" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="242" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a48d3d12b42f5e99b6a2151ad11754652" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.jobDesc</definition>
        <argsstring>()</argsstring>
        <name>jobDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="184" column="18" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="184" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a39b2eb9740890328665d937d3101304b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.doExecute</definition>
        <argsstring>()</argsstring>
        <name>doExecute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="208" column="33" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2515805649b946f40e23b76e345d3ed7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.streamResults</definition>
        <argsstring>()</argsstring>
        <name>streamResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="216" column="19" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae1a045addfe776d734d50e8bf8ff9e71" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.fileDS</definition>
        <argsstring>(TableMetadata metadata)</argsstring>
        <name>fileDS</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="220" column="19" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a14069facfc166f7271dcc1f2ce2f3bd9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dataset&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
        <definition>Dataset&lt;FileInfo&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.fileDS</definition>
        <argsstring>(TableMetadata metadata, Set&lt; Long &gt; snapshotIds)</argsstring>
        <name>fileDS</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>Set&lt; Long &gt;</type>
          <declname>snapshotIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="224" column="19" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="224" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0359f4f0cb73d87537a974fedf0150fa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Long &gt;</type>
        <definition>Set&lt;Long&gt; org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.findExpiredSnapshotIds</definition>
        <argsstring>(TableMetadata originalMetadata, TableMetadata updatedMetadata)</argsstring>
        <name>findExpiredSnapshotIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>originalMetadata</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>updatedMetadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="232" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="232" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a9827d6ce9f66748bbbc653d50f3287a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ExpireSnapshots.Result</type>
        <definition>ExpireSnapshots.Result org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction.deleteFiles</definition>
        <argsstring>(Iterator&lt; FileInfo &gt; files)</argsstring>
        <name>deleteFiles</name>
        <param>
          <type>Iterator&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1FileInfo" kindref="compound">FileInfo</ref> &gt;</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="242" column="33" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="242" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An action that performs the same operation as <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots" kindref="compound">org.apache.iceberg.ExpireSnapshots</ref> but uses Spark to determine the delta in files between the pre and post-expiration table metadata. All of the same restrictions of <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots" kindref="compound">org.apache.iceberg.ExpireSnapshots</ref> also apply to this action.</para>
<para>This action first leverages <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ExpireSnapshots" kindref="compound">org.apache.iceberg.ExpireSnapshots</ref> to expire snapshots and then uses metadata tables to find files that can be safely deleted. This is done by anti-joining two Datasets that contain all manifest and content files before and after the expiration. The snapshot expiration will be fully committed before any deletes are issued.</para>
<para>This operation performs a shuffle so the parallelism can be controlled through &apos;spark.sql.shuffle.partitions&apos;.</para>
<para>Deletes are still performed locally after retrieving the results from the Spark executors. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.apache.iceberg.actions.ExpireSnapshots</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.actions.Action&lt; ExpireSnapshots, ExpireSnapshots.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org::apache::iceberg::spark::actions::BaseSparkAction&lt; ExpireSnapshotsSparkAction &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>org.apache.iceberg.Table</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Table"/>
      </node>
      <node id="11">
        <label>org.apache.iceberg.TableOperations</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations"/>
      </node>
      <node id="3">
        <label>org.apache.iceberg.actions.ExpireSnapshots</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1ExpireSnapshots"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Set&lt; Long &gt;</label>
      </node>
      <node id="6">
        <label>Logger</label>
      </node>
      <node id="8">
        <label>Dataset&lt; org.apache.iceberg.spark.actions.FileInfo &gt;</label>
      </node>
      <node id="4">
        <label>org.apache.iceberg.actions.Action&lt; ExpireSnapshots, ExpireSnapshots.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action"/>
      </node>
      <node id="10">
        <label>ExecutorService</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.actions.ExpireSnapshotsSparkAction</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>expiredSnapshotIds</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>table</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>expiredFileDS</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>deleteFunc</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>deleteExecutorService</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>ops</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Consumer&lt; String &gt;</label>
      </node>
      <node id="2">
        <label>org::apache::iceberg::spark::actions::BaseSparkAction&lt; ExpireSnapshotsSparkAction &gt;</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" line="66" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/actions/ExpireSnapshotsSparkAction.java" bodystart="65" bodyend="270"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a13c84c7ff5da6601df7e2a8600969d5b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteExecutorService</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a9827d6ce9f66748bbbc653d50f3287a7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a9827d6ce9f66748bbbc653d50f3287a7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a9827d6ce9f66748bbbc653d50f3287a7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1aa83e6322071b973119e873418ff050a9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteFunc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a8fb2fbe767832d86c01e19d516247b82" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>deleteWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a39b2eb9740890328665d937d3101304b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>doExecute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a39b2eb9740890328665d937d3101304b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>doExecute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a39b2eb9740890328665d937d3101304b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>doExecute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>execute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>execute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a43ed461625fd272cd1d0817712e084cf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>execute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>executeDeleteWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>executeDeleteWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a958332cfe61f4037324db4f4f2442677" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>executeDeleteWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1abdcc71b893fae62ae5e21ad4bf7209cc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expiredFileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1afa1fd8378e7403799a606c2aa4261d57" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expiredSnapshotIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6498796e5d9fc1e77edd41b401c5fd81" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6498796e5d9fc1e77edd41b401c5fd81" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6498796e5d9fc1e77edd41b401c5fd81" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireOlderThan</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireOlderThan</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a3b43f6e55a71b1f7e572b51ac5ed7abc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireOlderThan</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1aad23e91c67b358f46c4f97f235903f6b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireOlderThanValue</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireSnapshotId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireSnapshotId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2fde0594722ffcb8b519ea3c9d1009b7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>expireSnapshotId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ab8cb95571116f98054c487b04ab977d0" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>ExpireSnapshotsSparkAction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ab8cb95571116f98054c487b04ab977d0" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>ExpireSnapshotsSparkAction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ab8cb95571116f98054c487b04ab977d0" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>ExpireSnapshotsSparkAction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae1a045addfe776d734d50e8bf8ff9e71" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>fileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a14069facfc166f7271dcc1f2ce2f3bd9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>fileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae1a045addfe776d734d50e8bf8ff9e71" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>fileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a14069facfc166f7271dcc1f2ce2f3bd9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>fileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae1a045addfe776d734d50e8bf8ff9e71" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>fileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a14069facfc166f7271dcc1f2ce2f3bd9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>fileDS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0359f4f0cb73d87537a974fedf0150fa" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>findExpiredSnapshotIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0359f4f0cb73d87537a974fedf0150fa" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>findExpiredSnapshotIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0359f4f0cb73d87537a974fedf0150fa" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>findExpiredSnapshotIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a48d3d12b42f5e99b6a2151ad11754652" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>jobDesc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a48d3d12b42f5e99b6a2151ad11754652" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>jobDesc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a48d3d12b42f5e99b6a2151ad11754652" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>jobDesc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a1e247d171a59f53d404667df9a5fbb29" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a6610fab3517e7431c77e28129d958028" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>ops</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1a7f4cee506b8657f0091d7ac57eed767f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>option</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1Action_1aedb3c8e8e03088ee8ec151db15474d9c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>options</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>retainLast</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>retainLast</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1ae3b799670a4cb7fa4c52c3ded5c5ec71" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>retainLast</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1aab214856566da6f7642dc9e76360998c" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>retainLastValue</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0fde51b8e3623e80415b2f0a418c0d1f" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>self</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0fde51b8e3623e80415b2f0a418c0d1f" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>self</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a0fde51b8e3623e80415b2f0a418c0d1f" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>self</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1afbfeaa0e1fe9f9a99fd7f35dd7cbea24" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>STREAM_RESULTS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a98861487fe6a7a78a82c47b56a291363" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>STREAM_RESULTS_DEFAULT</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2515805649b946f40e23b76e345d3ed7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>streamResults</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2515805649b946f40e23b76e345d3ed7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>streamResults</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a2515805649b946f40e23b76e345d3ed7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>streamResults</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1ExpireSnapshotsSparkAction_1a425ccc0ec922ed2de5380cfa310f4aee" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::actions::ExpireSnapshotsSparkAction</scope><name>table</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
