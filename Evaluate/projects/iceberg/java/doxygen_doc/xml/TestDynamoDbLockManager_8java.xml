<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="TestDynamoDbLockManager_8java" kind="file" language="Java">
    <compoundname>TestDynamoDbLockManager.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager" prot="public">org::apache::iceberg::aws::dynamodb::TestDynamoDbLockManager</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb">org::apache::iceberg::aws::dynamodb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.aws.dynamodb;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThat;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThatThrownBy;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.UUID;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.CompletableFuture;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.ForkJoinPool;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.stream.Collectors;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.stream.IntStream;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties" kindref="compound">CatalogProperties</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1aws" kindref="compound">aws</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1AwsClientFactories" kindref="compound">AwsClientFactories</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableMap;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Maps" kindref="compound">Maps</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.AfterAll;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.BeforeAll;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.BeforeEach;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.Test;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.mockito.Mockito;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.DynamoDbClient;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.AttributeValue;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.ConditionalCheckFailedException;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.GetItemRequest;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.GetItemResponse;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.dynamodb.model.ResourceNotFoundException;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager" kindref="compound">TestDynamoDbLockManager</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aa4ccacc2443327ccb8190e93e938d2b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>ForkJoinPool<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aa4ccacc2443327ccb8190e93e938d2b6" kindref="member">POOL</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ForkJoinPool(16);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" kindref="member">lockTableName</ref>;</highlight></codeline>
<codeline lineno="54" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a67874da3f493aa9ebcfb14a368e80f9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DynamoDbClient<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a67874da3f493aa9ebcfb14a368e80f9e" kindref="member">dynamo</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a0546de9afbf2a6d28979ae238f44bce7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager" kindref="compound">DynamoDbLockManager</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a0546de9afbf2a6d28979ae238f44bce7" kindref="member">lockManager</ref>;</highlight></codeline>
<codeline lineno="57" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aee7d545b5295302d26f24256f111184a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aee7d545b5295302d26f24256f111184a" kindref="member">entityId</ref>;</highlight></codeline>
<codeline lineno="58" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adac1c3b6c6a6b257139e27111ecfa6af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adac1c3b6c6a6b257139e27111ecfa6af" kindref="member">ownerId</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>@BeforeAll</highlight></codeline>
<codeline lineno="61" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a7ed613e8072cb8b53aa4d0da5bae6eb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a7ed613e8072cb8b53aa4d0da5bae6eb8" kindref="member">beforeClass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" kindref="member">lockTableName</ref><sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a6a75ed7635c08546f306079c242e92b8" kindref="member">genTableName</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a67874da3f493aa9ebcfb14a368e80f9e" kindref="member">dynamo</ref><sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1AwsClientFactories" kindref="compound">AwsClientFactories</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1AwsClientFactories_1afc81d17e0d7e55375e1f5a8c4d7da480" kindref="member">defaultFactory</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1aws_1_1AwsClientFactory_1a7ef45c5bb0a3bf7fec5172334f1acfbf" kindref="member">dynamo</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>@BeforeEach</highlight></codeline>
<codeline lineno="67" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a764184aea2e3fbc4877e9199dc1f3535" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a764184aea2e3fbc4877e9199dc1f3535" kindref="member">before</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a0546de9afbf2a6d28979ae238f44bce7" kindref="member">lockManager</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager" kindref="compound">DynamoDbLockManager</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a67874da3f493aa9ebcfb14a368e80f9e" kindref="member">dynamo</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" kindref="member">lockTableName</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aee7d545b5295302d26f24256f111184a" kindref="member">entityId</ref><sp/>=<sp/>UUID.randomUUID().toString();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adac1c3b6c6a6b257139e27111ecfa6af" kindref="member">ownerId</ref><sp/>=<sp/>UUID.randomUUID().toString();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>@AfterAll</highlight></codeline>
<codeline lineno="74" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ab2dcc3317028e9dd23b175ceacb44909" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ab2dcc3317028e9dd23b175ceacb44909" kindref="member">afterClass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a67874da3f493aa9ebcfb14a368e80f9e" kindref="member">dynamo</ref>.deleteTable(DeleteTableRequest.builder().tableName(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" kindref="member">lockTableName</ref>).build());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="79" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ac2bbcfd3b3c66fd23b2b850c9996836f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ac2bbcfd3b3c66fd23b2b850c9996836f" kindref="member">testTableCreation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a0546de9afbf2a6d28979ae238f44bce7" kindref="member">lockManager</ref>.tableExists(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" kindref="member">lockTableName</ref>)).isTrue();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="84" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ad407caf4ecdcb6544adedf5193cf7bce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ad407caf4ecdcb6544adedf5193cf7bce" kindref="member">testAcquireOnceSingleProcess</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a0546de9afbf2a6d28979ae238f44bce7" kindref="member">lockManager</ref>.acquireOnce(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aee7d545b5295302d26f24256f111184a" kindref="member">entityId</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adac1c3b6c6a6b257139e27111ecfa6af" kindref="member">ownerId</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>AttributeValue&gt;<sp/>key<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>key.put(</highlight><highlight class="stringliteral">&quot;entityId&quot;</highlight><highlight class="normal">,<sp/>AttributeValue.builder().s(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aee7d545b5295302d26f24256f111184a" kindref="member">entityId</ref>).build());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>GetItemResponse<sp/>response<sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a67874da3f493aa9ebcfb14a368e80f9e" kindref="member">dynamo</ref>.getItem(GetItemRequest.builder().tableName(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a5cf2b96af93537c38f794022eabf7e01" kindref="member">lockTableName</ref>).key(key).build());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(response.hasItem()).as(</highlight><highlight class="stringliteral">&quot;should<sp/>have<sp/>item<sp/>in<sp/>dynamo<sp/>after<sp/>acquire&quot;</highlight><highlight class="normal">).isTrue();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(response.item())</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasEntrySatisfying(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;entityId&quot;</highlight><highlight class="normal">,<sp/>attributeValue<sp/>-&gt;<sp/>assertThat(attributeValue.s()).isEqualTo(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aee7d545b5295302d26f24256f111184a" kindref="member">entityId</ref>))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasEntrySatisfying(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ownerId&quot;</highlight><highlight class="normal">,<sp/>attributeValue<sp/>-&gt;<sp/>assertThat(attributeValue.s()).isEqualTo(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adac1c3b6c6a6b257139e27111ecfa6af" kindref="member">ownerId</ref>))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasEntrySatisfying(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/>attributeValue<sp/>-&gt;<sp/>assertThat(attributeValue).isNotNull())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasEntrySatisfying(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;leaseDurationMs&quot;</highlight><highlight class="normal">,<sp/>attributeValue<sp/>-&gt;<sp/>assertThat(attributeValue).isNotNull());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="102" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a276609ce16326862d30fd660353673e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a276609ce16326862d30fd660353673e7" kindref="member">testAcquireOnceMultiProcesses</ref>()<sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Boolean&gt;<sp/>results<sp/>=</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1aa4ccacc2443327ccb8190e93e938d2b6" kindref="member">POOL</ref>.submit(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntStream.range(0,<sp/>16)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parallel()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mapToObj(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DynamoDbLockManager<sp/>threadLocalLockManager<sp/>=</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>DynamoDbLockManager(dynamo,<sp/>lockTableName);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadLocalLockManager.acquireOnce(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityId,<sp/>UUID.randomUUID().toString());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(ConditionalCheckFailedException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList()))</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(results).as(</highlight><highlight class="stringliteral">&quot;should<sp/>have<sp/>only<sp/>1<sp/>process<sp/>succeeded<sp/>in<sp/>acquisition&quot;</highlight><highlight class="normal">).hasSize(1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="126" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adfe1476004864a3a2ea999995d8af61f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adfe1476004864a3a2ea999995d8af61f" kindref="member">testReleaseAndAcquire</ref>()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a8b3b7784112c2bfb7b288352ff2d4f71" kindref="member">acquire</ref>(entityId,<sp/>ownerId)).isTrue();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a981ef941278826a5a0b2b6d8e6d62744" kindref="member">release</ref>(entityId,<sp/>ownerId)).isTrue();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a8b3b7784112c2bfb7b288352ff2d4f71" kindref="member">acquire</ref>(entityId,<sp/>ownerId)).isTrue();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="133" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a50cf787f1fb6493d046737fd49858188" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a50cf787f1fb6493d046737fd49858188" kindref="member">testReleaseWithWrongOwner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a8b3b7784112c2bfb7b288352ff2d4f71" kindref="member">acquire</ref>(entityId,<sp/>ownerId)).isTrue();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a981ef941278826a5a0b2b6d8e6d62744" kindref="member">release</ref>(entityId,<sp/>UUID.randomUUID().toString())).isFalse();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>@SuppressWarnings({</highlight><highlight class="stringliteral">&quot;DangerousCompletableFutureUsage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FutureReturnValueIgnored&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="140" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1af7c162a594469843a7cab01e257f9450" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1af7c162a594469843a7cab01e257f9450" kindref="member">testAcquireSingleProcess</ref>()<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a8b3b7784112c2bfb7b288352ff2d4f71" kindref="member">acquire</ref>(entityId,<sp/>ownerId)).isTrue();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>oldOwner<sp/>=<sp/>ownerId;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>CompletableFuture.supplyAsync(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thread.sleep(5000);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(InterruptedException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RuntimeException(e);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a981ef941278826a5a0b2b6d8e6d62744" kindref="member">release</ref>(entityId,<sp/>oldOwner)).isTrue();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ownerId<sp/>=<sp/>UUID.randomUUID().toString();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>System.currentTimeMillis();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a8b3b7784112c2bfb7b288352ff2d4f71" kindref="member">acquire</ref>(entityId,<sp/>ownerId)).isTrue();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(System.currentTimeMillis()<sp/>-<sp/>start).isGreaterThanOrEqualTo(5000);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="162" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ac07da8acb58ab89144649b8dc1fcb9f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1ac07da8acb58ab89144649b8dc1fcb9f8" kindref="member">testAcquireMultiProcessAllSucceed</ref>()<sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a7f5625e698809df3e40e95b590795790" kindref="member">initialize</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImmutableMap.of(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties" kindref="compound">CatalogProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties_1a000fef79e676ce682229de9c8780b478" kindref="member">LOCK_ACQUIRE_INTERVAL_MS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;500&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties" kindref="compound">CatalogProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties_1a1d7d3f6c9289579b8af9281a5e3bc270" kindref="member">LOCK_ACQUIRE_TIMEOUT_MS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;100000000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties" kindref="compound">CatalogProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties_1acf6dfce88ede225a8ebe169389238335" kindref="member">LOCK_TABLE</ref>,<sp/>lockTableName));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>System.currentTimeMillis();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Boolean&gt;<sp/>results<sp/>=</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POOL.submit(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntStream.range(0,<sp/>16)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parallel()</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mapToObj(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DynamoDbLockManager<sp/>threadLocalLockManager<sp/>=</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>DynamoDbLockManager(dynamo,<sp/>lockTableName);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>owner<sp/>=<sp/>UUID.randomUUID().toString();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolean<sp/>succeeded<sp/>=<sp/>threadLocalLockManager.acquire(entityId,<sp/>owner);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(succeeded)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thread.sleep(1000);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(InterruptedException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>new<sp/>RuntimeException(e);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(threadLocalLockManager.release(entityId,<sp/>owner))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isTrue();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>succeeded;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList()))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(results).as(</highlight><highlight class="stringliteral">&quot;all<sp/>lock<sp/>acquire<sp/>should<sp/>succeed<sp/>sequentially&quot;</highlight><highlight class="normal">).hasSize(16);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(System.currentTimeMillis()<sp/>-<sp/>start).isGreaterThanOrEqualTo(16000);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="198" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adb36e698055dbc95c444d036f87bb39d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1adb36e698055dbc95c444d036f87bb39d" kindref="member">testAcquireMultiProcessOnlyOneSucceed</ref>()<sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>lockManager.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager_1a7f5625e698809df3e40e95b590795790" kindref="member">initialize</ref>(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImmutableMap.of(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties" kindref="compound">CatalogProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties_1a1d7d3f6c9289579b8af9281a5e3bc270" kindref="member">LOCK_ACQUIRE_TIMEOUT_MS</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;10000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties" kindref="compound">CatalogProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1CatalogProperties_1acf6dfce88ede225a8ebe169389238335" kindref="member">LOCK_TABLE</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lockTableName));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Boolean&gt;<sp/>results<sp/>=</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POOL.submit(</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntStream.range(0,<sp/>16)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parallel()</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mapToObj(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DynamoDbLockManager<sp/>threadLocalLockManager<sp/>=</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>DynamoDbLockManager(dynamo,<sp/>lockTableName);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>threadLocalLockManager.acquire(entityId,<sp/>ownerId);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList()))</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.get();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(results).as(</highlight><highlight class="stringliteral">&quot;only<sp/>1<sp/>thread<sp/>should<sp/>have<sp/>acquired<sp/>the<sp/>lock&quot;</highlight><highlight class="normal">).hasSize(1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="223" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a15c4186e1c595104fa6674dca33edfa6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a15c4186e1c595104fa6674dca33edfa6" kindref="member">testTableCreationFailure</ref>()<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>DynamoDbClient<sp/>dynamo2<sp/>=<sp/>Mockito.mock(DynamoDbClient.class);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doThrow(ResourceNotFoundException.class)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.when(dynamo2)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.describeTable(Mockito.any(DescribeTableRequest.class));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbLockManager" kindref="compound">DynamoDbLockManager</ref>(dynamo2,<sp/>lockTableName))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;should<sp/>fail<sp/>to<sp/>initialize<sp/>the<sp/>lock<sp/>manager&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(IllegalStateException.class)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>Dynamo<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a6a75ed7635c08546f306079c242e92b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1TestDynamoDbLockManager_1a6a75ed7635c08546f306079c242e92b8" kindref="member">genTableName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UUID.randomUUID().toString().replace(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="aws/src/integration/java/org/apache/iceberg/aws/dynamodb/TestDynamoDbLockManager.java"/>
  </compounddef>
</doxygen>
