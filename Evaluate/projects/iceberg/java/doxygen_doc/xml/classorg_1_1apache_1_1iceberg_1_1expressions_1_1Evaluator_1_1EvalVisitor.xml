<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor" kind="class" language="Java" prot="private">
    <compoundname>org::apache::iceberg::expressions::Evaluator::EvalVisitor</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor" prot="public" virt="non-virtual">org::apache::iceberg::expressions::ExpressionVisitors::BoundVisitor&lt; Boolean &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1ad272ef7d0c8aa1b98c8b7ba210910b67" prot="private" static="no" mutable="no">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1StructLike" kindref="compound">StructLike</ref></type>
        <definition>StructLike org.apache.iceberg.expressions.Evaluator.EvalVisitor.struct</definition>
        <argsstring></argsstring>
        <name>struct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="52" column="24" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a4a22255269ff708e6108f61dc96827a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.eval</definition>
        <argsstring>(StructLike row)</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1StructLike" kindref="compound">StructLike</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="54" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1add37af6e126833adb928a30042ea885f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Boolean</type>
        <definition>Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.alwaysTrue</definition>
        <argsstring>()</argsstring>
        <name>alwaysTrue</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1a98343f8ba6c05118b018f71a93da0e1f">alwaysTrue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="60" column="20" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a0ad7b90bcdd62f10748dfca4ecc50658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Boolean</type>
        <definition>Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.alwaysFalse</definition>
        <argsstring>()</argsstring>
        <name>alwaysFalse</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1a04422c5f0e0d1bd91fd3ae6df409dddc">alwaysFalse</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="65" column="20" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a1d5e48f26777f5f3692ea2080ad37e59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Boolean</type>
        <definition>Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.not</definition>
        <argsstring>(Boolean result)</argsstring>
        <name>not</name>
        <param>
          <type>Boolean</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="70" column="20" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a253b587498f58dc6781fad9b1a6f6143" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Boolean</type>
        <definition>Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.and</definition>
        <argsstring>(Boolean leftResult, Boolean rightResult)</argsstring>
        <name>and</name>
        <param>
          <type>Boolean</type>
          <declname>leftResult</declname>
        </param>
        <param>
          <type>Boolean</type>
          <declname>rightResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="75" column="20" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a6b4ed89290538361601f6cb3e3920720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Boolean</type>
        <definition>Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.or</definition>
        <argsstring>(Boolean leftResult, Boolean rightResult)</argsstring>
        <name>or</name>
        <param>
          <type>Boolean</type>
          <declname>leftResult</declname>
        </param>
        <param>
          <type>Boolean</type>
          <declname>rightResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="80" column="20" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="80" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1aa23addf78a085a4f8cf06832c959f75e" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.isNull</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr)</argsstring>
        <name>isNull</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a03eb29625002286665b67bcf261fccf3">isNull</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="85" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1ac77f2671024338c65c15f8744ff84c1a" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.notNull</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr)</argsstring>
        <name>notNull</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a29993cbb5ba76aa88e7c7191c4ee6f87">notNull</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="90" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a32133fb26b293c704096f3cd6d5bffd7" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.isNaN</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr)</argsstring>
        <name>isNaN</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a3da1a8f505eb9ea52062c5716e5437ab">isNaN</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="95" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1aced0f2cd9b00c346cdc1a8147cb1dbd6" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.notNaN</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr)</argsstring>
        <name>notNaN</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a5d16793ab9ca935b47f80207f7add11d">notNaN</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="100" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a7935e7756b3687bf9240801528b8af28" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.lt</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>lt</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a72601797bf3f1f1cbafc229ac6f9a7ca">lt</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="105" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1acf98a22920c1d1af9fc4a734569cdc67" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.ltEq</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>ltEq</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1ac7c4544b403e62dd603ae5fef520ce88">ltEq</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="111" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a5278732ed381bdad6ceb0a4474db2454" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.gt</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>gt</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a0e9157a72c40143b116c2f7ea3511c96">gt</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="117" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a32ea5e2ac42a340c7f59dd3b641c2d85" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.gtEq</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>gtEq</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a068e2d0160b7f9f22ec3c0bbd4b9768e">gtEq</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="123" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1afb3a96e3971a1501df03b751a4f7b6c1" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.eq</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>eq</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a3480488dadf58de680c44173fcce1e9e">eq</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="129" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1aa5effb5160ac75777b872b98b2bf6868" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.notEq</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>notEq</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1ab626afe4075dff581bb80def00ec9ff3">notEq</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="135" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a007723b0866d78b83e1cfea27e4aeb93" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.in</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Set&lt; T &gt; literalSet)</argsstring>
        <name>in</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a95f922b14861771a189494f91f146259">in</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type>Set&lt; T &gt;</type>
          <declname>literalSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="140" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1af2064f7825634e45e9e7640374057454" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.notIn</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Set&lt; T &gt; literalSet)</argsstring>
        <name>notIn</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a4834da3541a4a31c7966047dd619a193">notIn</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type>Set&lt; T &gt;</type>
          <declname>literalSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="145" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a965443af6049a125e513a195dae6eacc" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.startsWith</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>startsWith</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a3de5f412469620ec6f4a1eb19974b0ae">startsWith</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="150" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1af784d776b41c7331aeb55e4458430105" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>public&lt; T &gt; Boolean</type>
        <definition>public&lt;T&gt; Boolean org.apache.iceberg.expressions.Evaluator.EvalVisitor.notStartsWith</definition>
        <argsstring>(Bound&lt; T &gt; valueExpr, Literal&lt; T &gt; lit)</argsstring>
        <name>notStartsWith</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a418ca2115871136fdca37548cd00fead">notStartsWith</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound" kindref="compound">Bound</ref>&lt; T &gt;</type>
          <declname>valueExpr</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="156" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="156" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org::apache::iceberg::expressions::ExpressionVisitors::ExpressionVisitor&lt; R &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.expressions.Evaluator.EvalVisitor</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org::apache::iceberg::expressions::ExpressionVisitors::BoundVisitor&lt; Boolean &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>org.apache.iceberg.StructLike</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1StructLike"/>
      </node>
      <node id="3">
        <label>org::apache::iceberg::expressions::ExpressionVisitors::ExpressionVisitor&lt; R &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.expressions.Evaluator.EvalVisitor</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>struct</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>org::apache::iceberg::expressions::ExpressionVisitors::BoundVisitor&lt; Boolean &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" line="51" column="42" bodyfile="api/src/main/java/org/apache/iceberg/expressions/Evaluator.java" bodystart="51" bodyend="159"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1aca79ea5c0416ca3759b30c33fbb9fba0" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>aggregate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1a95919aead5279e0fe3c7084c509ce932" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>aggregate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a0ad7b90bcdd62f10748dfca4ecc50658" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>alwaysFalse</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1add37af6e126833adb928a30042ea885f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>alwaysTrue</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a253b587498f58dc6781fad9b1a6f6143" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>and</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1ad62629fc8b1c5b18331d5d2ef88365ae" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::expressions::ExpressionVisitors::BoundVisitor."><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>and</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1afb3a96e3971a1501df03b751a4f7b6c1" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>eq</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a4a22255269ff708e6108f61dc96827a7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>eval</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a5278732ed381bdad6ceb0a4474db2454" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>gt</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a32ea5e2ac42a340c7f59dd3b641c2d85" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>gtEq</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a007723b0866d78b83e1cfea27e4aeb93" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>in</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a32133fb26b293c704096f3cd6d5bffd7" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>isNaN</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1aa23addf78a085a4f8cf06832c959f75e" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>isNull</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a7935e7756b3687bf9240801528b8af28" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>lt</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1acf98a22920c1d1af9fc4a734569cdc67" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>ltEq</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a1d5e48f26777f5f3692ea2080ad37e59" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>not</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1afce5f262ad54793d2a7320e97994bc07" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::expressions::ExpressionVisitors::BoundVisitor."><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>not</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1aa5effb5160ac75777b872b98b2bf6868" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>notEq</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1af2064f7825634e45e9e7640374057454" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>notIn</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1aced0f2cd9b00c346cdc1a8147cb1dbd6" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>notNaN</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1ac77f2671024338c65c15f8744ff84c1a" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>notNull</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1af784d776b41c7331aeb55e4458430105" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>notStartsWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a6b4ed89290538361601f6cb3e3920720" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>or</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1ExpressionVisitor_1a157dc38782dd185ae14db2cbcebc00d4" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::expressions::ExpressionVisitors::BoundVisitor."><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>or</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1a76df3a212077b59b772c12727247c1fa" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>predicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1ExpressionVisitors_1_1BoundVisitor_1adb6b56dc93c5ae5fd9d027ec07df7e04" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>predicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1a965443af6049a125e513a195dae6eacc" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>startsWith</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Evaluator_1_1EvalVisitor_1ad272ef7d0c8aa1b98c8b7ba210910b67" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::Evaluator::EvalVisitor</scope><name>struct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
