<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v1_817_2flink_2src_2main_2java_2org_2apache_2iceberg_2flink_2source_2enumerator_2AbstractIcebergEnumerator_8java" kind="file" language="Java">
    <compoundname>AbstractIcebergEnumerator.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1enumerator_1_1AbstractIcebergEnumerator" prot="package">org::apache::iceberg::flink::source::enumerator::AbstractIcebergEnumerator</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1enumerator">org::apache::iceberg::flink::source::enumerator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1enumerator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.flink.source.enumerator;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.IOException;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Iterator;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.LinkedHashMap;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.CompletableFuture;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.atomic.AtomicReference;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>javax.annotation.Nullable;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SourceEvent;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SplitEnumerator;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SplitEnumeratorContext;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink" kindref="compound">flink</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source" kindref="compound">source</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner" kindref="compound">assigner</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink" kindref="compound">flink</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source" kindref="compound">source</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner" kindref="compound">assigner</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner" kindref="compound">SplitAssigner</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink" kindref="compound">flink</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source" kindref="compound">source</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split" kindref="compound">split</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink" kindref="compound">flink</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source" kindref="compound">source</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split" kindref="compound">split</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SplitRequestEvent" kindref="compound">SplitRequestEvent</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.slf4j.Logger;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.slf4j.LoggerFactory;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AbstractIcebergEnumerator</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>SplitEnumerator&lt;IcebergSourceSplit,<sp/>IcebergEnumeratorState&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Logger<sp/>LOG<sp/>=<sp/>LoggerFactory.getLogger(AbstractIcebergEnumerator.class);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>SplitEnumeratorContext&lt;IcebergSourceSplit&gt;<sp/>enumeratorContext;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner" kindref="compound">SplitAssigner</ref><sp/>assigner;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Map&lt;Integer,<sp/>String&gt;<sp/>readersAwaitingSplit;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>AtomicReference&lt;CompletableFuture&lt;Void&gt;&gt;<sp/>availableFuture;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>AbstractIcebergEnumerator(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplitEnumeratorContext&lt;IcebergSourceSplit&gt;<sp/>enumeratorContext,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner" kindref="compound">SplitAssigner</ref><sp/>assigner)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this.enumeratorContext<sp/>=<sp/>enumeratorContext;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this.assigner<sp/>=<sp/>assigner;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>this.readersAwaitingSplit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LinkedHashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>this.availableFuture<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AtomicReference&lt;&gt;();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>assigner.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a65481ac8485626412acde40da85b4599" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close()<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>assigner.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ade6430e6cbc17270cfbb4000068543a7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleSplitRequest(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtaskId,<sp/>@Nullable<sp/>String<sp/>requesterHostname)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iceberg<sp/>source<sp/>uses<sp/>custom<sp/>split<sp/>request<sp/>event<sp/>to<sp/>piggyback<sp/>finished<sp/>split<sp/>ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UnsupportedOperationException(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>invalid<sp/>default<sp/>split<sp/>request<sp/>event<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;from<sp/>subtask<sp/>%d<sp/>as<sp/>Iceberg<sp/>source<sp/>uses<sp/>custom<sp/>split<sp/>request<sp/>event&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtaskId));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleSourceEvent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtaskId,<sp/>SourceEvent<sp/>sourceEvent)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceEvent<sp/>instanceof<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SplitRequestEvent" kindref="compound">SplitRequestEvent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SplitRequestEvent" kindref="compound">SplitRequestEvent</ref><sp/>splitRequestEvent<sp/>=<sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SplitRequestEvent" kindref="compound">SplitRequestEvent</ref>)<sp/>sourceEvent;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Received<sp/>request<sp/>split<sp/>event<sp/>from<sp/>subtask<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>subtaskId);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assigner.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a05ecfe6b050b8f3bc868bdc2a1ea9743" kindref="member">onCompletedSplits</ref>(splitRequestEvent.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SplitRequestEvent_1a0b289c849f514894da36f8d898501bfb" kindref="member">finishedSplitIds</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readersAwaitingSplit.put(subtaskId,<sp/>splitRequestEvent.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SplitRequestEvent_1a17ec218eb4af8a3205b0fa3b0a0c2913" kindref="member">requesterHostname</ref>());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assignSplits();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>unknown<sp/>event<sp/>from<sp/>subtask<sp/>%d:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtaskId,<sp/>sourceEvent.getClass().getCanonicalName()));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSplitsBack(List&lt;IcebergSourceSplit&gt;<sp/>splits,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtaskId)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Add<sp/>{}<sp/>splits<sp/>back<sp/>to<sp/>the<sp/>pool<sp/>for<sp/>failed<sp/>subtask<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>splits.size(),<sp/>subtaskId);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>assigner.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06" kindref="member">onUnassignedSplits</ref>(splits);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>assignSplits();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addReader(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtaskId)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Added<sp/>reader:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>subtaskId);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignSplits()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Assigning<sp/>splits<sp/>for<sp/>{}<sp/>awaiting<sp/>readers&quot;</highlight><highlight class="normal">,<sp/>readersAwaitingSplit.size());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator&lt;Map.Entry&lt;Integer,<sp/>String&gt;&gt;<sp/>awaitingReader<sp/>=</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readersAwaitingSplit.entrySet().iterator();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(awaitingReader.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Map.Entry&lt;Integer,<sp/>String&gt;<sp/>nextAwaiting<sp/>=<sp/>awaitingReader.next();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>reader<sp/>that<sp/>requested<sp/>another<sp/>split<sp/>has<sp/>failed<sp/>in<sp/>the<sp/>meantime,<sp/>remove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>from<sp/>the<sp/>list<sp/>of<sp/>waiting<sp/>readers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enumeratorContext.registeredReaders().containsKey(nextAwaiting.getKey()))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>awaitingReader.remove();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>awaitingSubtask<sp/>=<sp/>nextAwaiting.getKey();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>hostname<sp/>=<sp/>nextAwaiting.getValue();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref><sp/>getResult<sp/>=<sp/>assigner.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a9ee59579af101474c6736ab4cddb1b3e" kindref="member">getNext</ref>(hostname);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getResult.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1a6d0361d6e70f026efc73067311aa987d" kindref="member">status</ref>()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1_1Status" kindref="compound">Status</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1_1Status_1a85b5e3f7dea2e25b489e8e118184a9ea" kindref="member">AVAILABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;Assign<sp/>split<sp/>to<sp/>subtask<sp/>{}:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>awaitingSubtask,<sp/>getResult.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1a27b7fc1da041ca01d64c2540f6a5f20f" kindref="member">split</ref>());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumeratorContext.assignSplit(getResult.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1a27b7fc1da041ca01d64c2540f6a5f20f" kindref="member">split</ref>(),<sp/>awaitingSubtask);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>awaitingReader.remove();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getResult.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1a6d0361d6e70f026efc73067311aa987d" kindref="member">status</ref>()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1_1Status" kindref="compound">Status</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1_1Status_1ac2644b5658ef54a7365cb537ec2bb30a" kindref="member">CONSTRAINED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAvailableFutureIfNeeded();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getResult.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1a6d0361d6e70f026efc73067311aa987d" kindref="member">status</ref>()<sp/>==<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1_1Status" kindref="compound">Status</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1_1Status_1ae1912d3c01a04aceacd803630560d619" kindref="member">UNAVAILABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldWaitForMoreSplits())<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAvailableFutureIfNeeded();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG.info(</highlight><highlight class="stringliteral">&quot;No<sp/>more<sp/>splits<sp/>available<sp/>for<sp/>subtask<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>awaitingSubtask);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumeratorContext.signalNoMoreSplits(awaitingSubtask);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>awaitingReader.remove();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>status:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>getResult.<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult_1a6d0361d6e70f026efc73067311aa987d" kindref="member">status</ref>());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>shouldWaitForMoreSplits();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getAvailableFutureIfNeeded()<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(availableFuture.get()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>CompletableFuture&lt;Void&gt;<sp/>future<sp/>=</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assigner</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ae1d69b66fb8b06eb618c7442f4e86322" kindref="member">isAvailable</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.thenAccept(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore<sp/>-&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>run<sp/>assignSplits<sp/>in<sp/>coordinator<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>future<sp/>may<sp/>be<sp/>completed<sp/>from<sp/>other<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E.g.,<sp/>in<sp/>event<sp/>time<sp/>alignment<sp/>assigner,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>watermark<sp/>advancement<sp/>from<sp/>another<sp/>source<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cause<sp/>the<sp/>available<sp/>future<sp/>to<sp/>be<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumeratorContext.runInCoordinatorThread(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG.debug(</highlight><highlight class="stringliteral">&quot;Executing<sp/>callback<sp/>of<sp/>assignSplits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableFuture.set(null);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assignSplits();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>availableFuture.set(future);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG.debug(</highlight><highlight class="stringliteral">&quot;Registered<sp/>callback<sp/>for<sp/>future<sp/>available<sp/>splits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/enumerator/AbstractIcebergEnumerator.java"/>
  </compounddef>
</doxygen>
