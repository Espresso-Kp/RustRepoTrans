<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1Scan" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::Scan</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkChangelogScan" prot="public" virt="non-virtual">org.apache.iceberg.spark.source.SparkChangelogScan</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkScan" prot="public" virt="non-virtual">org.apache.iceberg.spark.source.SparkScan</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>ThisT</type>
      </param>
      <param>
        <type>T</type>
        <typeconstraint><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ScanTask" kindref="compound">ScanTask</ref></typeconstraint>
      </param>
      <param>
        <type>G</type>
        <typeconstraint><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ScanTaskGroup" kindref="compound">ScanTaskGroup</ref>&lt; T</typeconstraint>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a5c64e1894f98cc97f364b83e32500f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.option</definition>
        <argsstring>(String property, String value)</argsstring>
        <name>option</name>
        <param>
          <type>String</type>
          <declname>property</declname>
        </param>
        <param>
          <type>String</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this scan&apos;s configuration that will override the <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref>&apos;s behavior based on the incoming pair. Unknown properties will be ignored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the table property to be overridden </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to override with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new scan based on this with overridden behavior </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="45" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a0153b22dc6381654a870bfdec0448fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.project</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>project</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this with the schema as its projection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a projection schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new scan based on this with the given projection </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="53" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a295d5298571b1486a64a2ba9754edf16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.caseSensitive</definition>
        <argsstring>(boolean caseSensitive)</argsstring>
        <name>caseSensitive</name>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this that, if data columns where selected via {<ref refid="" kindref="compound">}, controls whether the match to the schema will be done with case sensitivity. Default is true.  a new scan based on this with case sensitivity as stated </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a8be74a3a03f7ec58c5b6d6c09fcc61a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.isCaseSensitive</definition>
        <argsstring>()</argsstring>
        <name>isCaseSensitive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether this scan is case-sensitive with respect to column names.</para>
<para><simplesect kind="return"><para>true if case-sensitive, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="69" column="11"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a40afdc060c8bc87f84bdd05bb7989fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.includeColumnStats</definition>
        <argsstring>()</argsstring>
        <name>includeColumnStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this that loads the column stats with each data file.</para>
<para>Column stats include: value count, null value count, lower bounds, and upper bounds.</para>
<para><simplesect kind="return"><para>a new scan based on this that loads column stats. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a4221d65b550be3b2fe63473bc59d044f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default ThisT</type>
        <definition>default ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.includeColumnStats</definition>
        <argsstring>(Collection&lt; String &gt; requestedColumns)</argsstring>
        <name>includeColumnStats</name>
        <param>
          <type>Collection&lt; String &gt;</type>
          <declname>requestedColumns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this that loads the column stats for the specific columns with each data file.</para>
<para>Column stats include: value count, null value count, lower bounds, and upper bounds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>requestedColumns</parametername>
</parameternamelist>
<parameterdescription>
<para>column names for which to keep the stats. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new scan based on this that loads column stats for specific columns. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="89" column="17" bodyfile="api/src/main/java/org/apache/iceberg/Scan.java" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a4aee25bb5fbca5312220355f0ac69b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.select</definition>
        <argsstring>(Collection&lt; String &gt; columns)</argsstring>
        <name>select</name>
        <param>
          <type>Collection&lt; String &gt;</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this that will read the given data columns. This produces an expected schema that includes all fields that are either selected or used by this scan&apos;s filter expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>columns</parametername>
</parameternamelist>
<parameterdescription>
<para>column names from the table&apos;s schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new scan based on this with the given projection columns </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="102" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a1340e5fc7b4c25c4de1129fd7fdf1072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default ThisT</type>
        <definition>default ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.select</definition>
        <argsstring>(String... columns)</argsstring>
        <name>select</name>
        <param>
          <type>String...</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this that will read the given columns. This produces an expected schema that includes all fields that are either selected or used by this scan&apos;s filter expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>columns</parametername>
</parameternamelist>
<parameterdescription>
<para>column names </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new scan based on this with the given projection columns </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="111" column="17" bodyfile="api/src/main/java/org/apache/iceberg/Scan.java" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1afa54ee3e31aa55e0519d8af3e5a18f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.filter</definition>
        <argsstring>(Expression expr)</argsstring>
        <name>filter</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from the results of this filtered by the <ref refid="" kindref="compound">Expression</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>a filter expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new scan based on this with results filtered by the expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="121" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a9e814b789e661f8a2009067076d5b981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.filter</definition>
        <argsstring>()</argsstring>
        <name>filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns this scan&apos;s filter <ref refid="" kindref="compound">Expression</ref>.</para>
<para><simplesect kind="return"><para>this scan&apos;s filter expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="128" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1ac46bcf02b0970e6ecd3262cecb330d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.ignoreResiduals</definition>
        <argsstring>()</argsstring>
        <name>ignoreResiduals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan from this that applies data filtering to files but not to rows in those files.</para>
<para><simplesect kind="return"><para>a new scan based on this that does not filter rows in files. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="136" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1abd9b1012cab0721e55cb27b4554c41dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ThisT</type>
        <definition>ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.planWith</definition>
        <argsstring>(ExecutorService executorService)</argsstring>
        <name>planWith</name>
        <param>
          <type>ExecutorService</type>
          <declname>executorService</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan to use a particular executor to plan. The default worker pool will be used by default.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executorService</parametername>
</parameternamelist>
<parameterdescription>
<para>the provided executor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a table scan that uses the provided executor to access manifests </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="145" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1acb8fc9c08f016683ea0fb2a8d0f593e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>Schema org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.schema</definition>
        <argsstring>()</argsstring>
        <name>schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns this scan&apos;s projection <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>.</para>
<para>If the projection schema was set directly using <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a0153b22dc6381654a870bfdec0448fab" kindref="member">project(Schema)</ref>, returns that schema.</para>
<para>If the projection schema was set by calling <ref refid="" kindref="compound">select(Collection)</ref>, returns a projection schema that includes the selected data fields and any fields used in the filter expression.</para>
<para><simplesect kind="return"><para>this scan&apos;s projection schema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="159" column="10"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1ac2e0c80af05f0cd51fea0ab58f862268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable" kindref="compound">CloseableIterable</ref>&lt; T &gt;</type>
        <definition>CloseableIterable&lt;T&gt; org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.planFiles</definition>
        <argsstring>()</argsstring>
        <name>planFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Plan tasks for this scan where each task reads a single file.</para>
<para>Use <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a7a9a9aac9313893034f5daa9d7544ad2" kindref="member">planTasks()</ref> for planning balanced tasks where each task will read either a single file, a part of a file, or multiple files.</para>
<para><simplesect kind="return"><para>an Iterable of tasks scanning entire files required by this scan </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="169" column="21"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a7a9a9aac9313893034f5daa9d7544ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1CloseableIterable" kindref="compound">CloseableIterable</ref>&lt; G &gt;</type>
        <definition>CloseableIterable&lt;G&gt; org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.planTasks</definition>
        <argsstring>()</argsstring>
        <name>planTasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Plan balanced task groups for this scan by splitting large and combining small tasks.</para>
<para>Task groups created by this method may read partial input files, multiple input files or both.</para>
<para><simplesect kind="return"><para>an Iterable of balanced task groups required by this scan </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="179" column="21"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1ae602c2fc1903a1c0a57ec59042d40651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.targetSplitSize</definition>
        <argsstring>()</argsstring>
        <name>targetSplitSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the target split size for this scan. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="182" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a01bb803e5973a357780a18f223742e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.splitLookback</definition>
        <argsstring>()</argsstring>
        <name>splitLookback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the split lookback for this scan. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="185" column="7"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1adbb58b2895f1afd3b201ad057be237d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.splitOpenFileCost</definition>
        <argsstring>()</argsstring>
        <name>splitOpenFileCost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the split open file cost for this scan. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="188" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a31c843ed2298dff6e4917f07bc2f84d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default ThisT</type>
        <definition>default ThisT org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;.metricsReporter</definition>
        <argsstring>(MetricsReporter reporter)</argsstring>
        <name>metricsReporter</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1metrics_1_1MetricsReporter" kindref="compound">MetricsReporter</ref></type>
          <declname>reporter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new scan that will report scan metrics to the provided reporter in addition to reporters maintained by the scan. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="194" column="17" bodyfile="api/src/main/java/org/apache/iceberg/Scan.java" bodystart="194" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan" kindref="compound">Scan</ref> objects are immutable and can be shared between threads. Refinement methods, like {<ref refid="" kindref="compound">} and  #filter(Expression)}, create new TableScan instances.  </ref> the child Java API class, returned by method chaining <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;T&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>the Java type of tasks produces by this scan </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;G&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>the Java type of task groups produces by this scan </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>org.apache.iceberg.spark.source.SparkStagedScan</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.spark.source.SparkScan</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.spark.source.SparkChangelogScan</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.spark.source.SparkPartitioningAwareScan&lt; T extends PartitionScanTask &gt;</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.Scan&lt; ThisT, T extends ScanTask, G extends ScanTaskGroup&lt; T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan"/>
      </node>
    </inheritancegraph>
    <location file="api/src/main/java/org/apache/iceberg/Scan.java" line="36" column="24" bodyfile="api/src/main/java/org/apache/iceberg/Scan.java" bodystart="36" bodyend="198"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a295d5298571b1486a64a2ba9754edf16" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>caseSensitive</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1afa54ee3e31aa55e0519d8af3e5a18f27" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>filter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a9e814b789e661f8a2009067076d5b981" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>filter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1ac46bcf02b0970e6ecd3262cecb330d8b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>ignoreResiduals</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a40afdc060c8bc87f84bdd05bb7989fbe" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>includeColumnStats</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a4221d65b550be3b2fe63473bc59d044f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>includeColumnStats</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a8be74a3a03f7ec58c5b6d6c09fcc61a3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>isCaseSensitive</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a31c843ed2298dff6e4917f07bc2f84d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>metricsReporter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a5c64e1894f98cc97f364b83e32500f67" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>option</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1ac2e0c80af05f0cd51fea0ab58f862268" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>planFiles</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a7a9a9aac9313893034f5daa9d7544ad2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>planTasks</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1abd9b1012cab0721e55cb27b4554c41dc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>planWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a0153b22dc6381654a870bfdec0448fab" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>project</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1acb8fc9c08f016683ea0fb2a8d0f593e9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>schema</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a4aee25bb5fbca5312220355f0ac69b94" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>select</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a1340e5fc7b4c25c4de1129fd7fdf1072" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>select</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1a01bb803e5973a357780a18f223742e68" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>splitLookback</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1adbb58b2895f1afd3b201ad057be237d9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>splitOpenFileCost</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Scan_1ae602c2fc1903a1c0a57ec59042d40651" prot="public" virt="non-virtual"><scope>org::apache::iceberg::Scan</scope><name>targetSplitSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
