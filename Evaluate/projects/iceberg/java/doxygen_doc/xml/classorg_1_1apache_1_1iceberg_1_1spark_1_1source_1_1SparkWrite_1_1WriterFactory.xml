<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory" kind="class" language="Java" prot="private">
    <compoundname>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DataWriterFactory</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">StreamingDataWriterFactory</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a22dd099f949134389870ed31f848f9d1" prot="private" static="no" mutable="no">
        <type>final Broadcast&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> &gt;</type>
        <definition>final Broadcast&lt; Table &gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory::tableBroadcast</definition>
        <argsstring></argsstring>
        <name>tableBroadcast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="608" column="29" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a403b44c99d07a1d8ee8698ff4ca7d53d" prot="private" static="no" mutable="no">
        <type>final <ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref></type>
        <definition>final FileFormat org.apache.iceberg.spark.source.SparkWrite.WriterFactory::format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="609" column="30" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a958f38391fd0391d00e0547aed9400f6" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.spark.source.SparkWrite.WriterFactory::outputSpecId</definition>
        <argsstring></argsstring>
        <name>outputSpecId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="610" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a7b29613aa081f370af13a0ead50db263" prot="private" static="no" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.iceberg.spark.source.SparkWrite.WriterFactory::targetFileSize</definition>
        <argsstring></argsstring>
        <name>targetFileSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="611" column="24" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1ac4bf72dd12bbc2f4492d42596c84da64" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>final Schema org.apache.iceberg.spark.source.SparkWrite.WriterFactory::writeSchema</definition>
        <argsstring></argsstring>
        <name>writeSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="612" column="26" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0aa40b346e14578141ed1fe245e9403a" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
        <definition>final StructType org.apache.iceberg.spark.source.SparkWrite.WriterFactory::dsSchema</definition>
        <argsstring></argsstring>
        <name>dsSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="613" column="30" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a19ac4e5da3b4a80827723fde095a97fc" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkWrite.WriterFactory::partitionedFanoutEnabled</definition>
        <argsstring></argsstring>
        <name>partitionedFanoutEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="614" column="27" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a5c80a05ee365bb7365bb09d7c41b8900" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.spark.source.SparkWrite.WriterFactory::queryId</definition>
        <argsstring></argsstring>
        <name>queryId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="615" column="26" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1adb97d675fd9a9d98d186f082279d7053" prot="private" static="no" mutable="no">
        <type>final Map&lt; String, String &gt;</type>
        <definition>final Map&lt; String, String &gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory::writeProperties</definition>
        <argsstring></argsstring>
        <name>writeProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="627" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a053b35531f311ef0b785c4dfb52c4d83" prot="private" static="no" mutable="no">
        <type>final boolean</type>
        <definition>final boolean org.apache.iceberg.spark.source.SparkWrite.WriterFactory.useFanoutWriter</definition>
        <argsstring></argsstring>
        <name>useFanoutWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="641" column="27" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="641" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a627f241b1d363f293717f55e4d604f0e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkWrite.WriterFactory.WriterFactory</definition>
        <argsstring>(Broadcast&lt; Table &gt; tableBroadcast, String queryId, FileFormat format, int outputSpecId, long targetFileSize, Schema writeSchema, StructType dsSchema, boolean partitionedFanoutEnabled)</argsstring>
        <name>WriterFactory</name>
        <param>
          <type>Broadcast&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> &gt;</type>
          <declname>tableBroadcast</declname>
        </param>
        <param>
          <type>String</type>
          <declname>queryId</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSpecId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>targetFileSize</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
          <declname>dsSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>partitionedFanoutEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="617" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="617" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1ab9eaf7e02a686920e5854e440bae1430" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkWrite.WriterFactory.WriterFactory</definition>
        <argsstring>(Broadcast&lt; Table &gt; tableBroadcast, String queryId, FileFormat format, int outputSpecId, long targetFileSize, Schema writeSchema, StructType dsSchema, boolean partitionedFanoutEnabled, Map&lt; String, String &gt; writeProperties)</argsstring>
        <name>WriterFactory</name>
        <param>
          <type>Broadcast&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> &gt;</type>
          <declname>tableBroadcast</declname>
        </param>
        <param>
          <type>String</type>
          <declname>queryId</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSpecId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>targetFileSize</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
          <declname>dsSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>partitionedFanoutEnabled</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>writeProperties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="629" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="629" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a345cef3626fda6f3758aa59e3de44b96" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SparkWrite.WriterFactory.WriterFactory</definition>
        <argsstring>(Broadcast&lt; Table &gt; tableBroadcast, String queryId, FileFormat format, int outputSpecId, long targetFileSize, Schema writeSchema, StructType dsSchema, boolean useFanoutWriter, Map&lt; String, String &gt; writeProperties)</argsstring>
        <name>WriterFactory</name>
        <param>
          <type>Broadcast&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> &gt;</type>
          <declname>tableBroadcast</declname>
        </param>
        <param>
          <type>String</type>
          <declname>queryId</declname>
        </param>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputSpecId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>targetFileSize</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref></type>
          <declname>dsSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>useFanoutWriter</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>writeProperties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="645" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="645" bodyend="664"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0cfb2c3d08cc3733cc879ee0937cf01f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1DataWriter" kindref="compound">DataWriter</ref>&lt; InternalRow &gt;</type>
        <definition>DataWriter&lt;InternalRow&gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory.createWriter</definition>
        <argsstring>(int partitionId, long taskId)</argsstring>
        <name>createWriter</name>
        <param>
          <type>int</type>
          <declname>partitionId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>taskId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="637" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="637" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1af0e1919e4e56a5e82e0ec4a719a56beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1DataWriter" kindref="compound">DataWriter</ref>&lt; InternalRow &gt;</type>
        <definition>DataWriter&lt;InternalRow&gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory.createWriter</definition>
        <argsstring>(int partitionId, long taskId, long epochId)</argsstring>
        <name>createWriter</name>
        <param>
          <type>int</type>
          <declname>partitionId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>taskId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>epochId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="642" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="642" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0cfb2c3d08cc3733cc879ee0937cf01f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1DataWriter" kindref="compound">DataWriter</ref>&lt; InternalRow &gt;</type>
        <definition>DataWriter&lt;InternalRow&gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory.createWriter</definition>
        <argsstring>(int partitionId, long taskId)</argsstring>
        <name>createWriter</name>
        <param>
          <type>int</type>
          <declname>partitionId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>taskId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="651" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="651" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1af0e1919e4e56a5e82e0ec4a719a56beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1DataWriter" kindref="compound">DataWriter</ref>&lt; InternalRow &gt;</type>
        <definition>DataWriter&lt;InternalRow&gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory.createWriter</definition>
        <argsstring>(int partitionId, long taskId, long epochId)</argsstring>
        <name>createWriter</name>
        <param>
          <type>int</type>
          <declname>partitionId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>taskId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>epochId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="656" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="656" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0cfb2c3d08cc3733cc879ee0937cf01f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1DataWriter" kindref="compound">DataWriter</ref>&lt; InternalRow &gt;</type>
        <definition>DataWriter&lt;InternalRow&gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory.createWriter</definition>
        <argsstring>(int partitionId, long taskId)</argsstring>
        <name>createWriter</name>
        <param>
          <type>int</type>
          <declname>partitionId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>taskId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="667" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="667" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1af0e1919e4e56a5e82e0ec4a719a56beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1io_1_1DataWriter" kindref="compound">DataWriter</ref>&lt; InternalRow &gt;</type>
        <definition>DataWriter&lt;InternalRow&gt; org.apache.iceberg.spark.source.SparkWrite.WriterFactory.createWriter</definition>
        <argsstring>(int partitionId, long taskId, long epochId)</argsstring>
        <name>createWriter</name>
        <param>
          <type>int</type>
          <declname>partitionId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>taskId</declname>
        </param>
        <param>
          <type>long</type>
          <declname>epochId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="672" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="672" bodyend="704"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DataWriterFactory</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SparkWrite.WriterFactory</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>StreamingDataWriterFactory</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>List&lt; org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="2">
        <label>DataWriterFactory</label>
      </node>
      <node id="19">
        <label>Map&lt; String, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="22">
        <label>Map&lt; String, String &gt;</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SparkWrite.WriterFactory</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>format</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>writeSchema</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>tableBroadcast</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>writeProperties</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>dsSchema</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>StreamingDataWriterFactory</label>
      </node>
      <node id="13">
        <label>Map&lt; String, Integer &gt;</label>
      </node>
      <node id="5">
        <label>org.apache.iceberg.Schema</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1Schema"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>NEWLINE</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>aliasToId</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>identifierFieldIdSet</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>idToAccessor</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>idToName</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>idToField</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>nameToId</edgelabel>
          <edgelabel>lowerCaseNameToId</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>struct</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>idsToReassigned</edgelabel>
          <edgelabel>idsToOriginal</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>org.apache.iceberg.types.Types.StructType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>fieldList</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>FIELD_SEP</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>fieldsById</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>fieldsByLowerCaseName</edgelabel>
          <edgelabel>fieldsByName</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Serializable</label>
      </node>
      <node id="12">
        <label>Map&lt; Integer, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="9">
        <label>Set&lt; Integer &gt;</label>
      </node>
      <node id="20">
        <label>Map&lt; Integer, Integer &gt;</label>
      </node>
      <node id="8">
        <label>BiMap&lt; String, Integer &gt;</label>
      </node>
      <node id="15">
        <label>org.apache.iceberg.types.Type.NestedType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1NestedType"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>org.apache.iceberg.types.Types.NestedField</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.FileFormat</label>
        <link refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat"/>
        <childnode refid="4" relation="usage">
          <edgelabel>VALUES</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>Broadcast&lt; org.apache.iceberg.Table &gt;</label>
      </node>
      <node id="16">
        <label>org.apache.iceberg.types.Type</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Map&lt; Integer, String &gt;</label>
      </node>
      <node id="10">
        <label>Map&lt; Integer, org.apache.iceberg.Accessor&lt; org.apache.iceberg.StructLike &gt; &gt;</label>
      </node>
      <node id="7">
        <label>Joiner</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" line="607" column="83" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SparkWrite.java" bodystart="607" bodyend="674"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0cfb2c3d08cc3733cc879ee0937cf01f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>createWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1af0e1919e4e56a5e82e0ec4a719a56beb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>createWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0cfb2c3d08cc3733cc879ee0937cf01f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>createWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1af0e1919e4e56a5e82e0ec4a719a56beb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>createWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0cfb2c3d08cc3733cc879ee0937cf01f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>createWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1af0e1919e4e56a5e82e0ec4a719a56beb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>createWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a0aa40b346e14578141ed1fe245e9403a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>dsSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a403b44c99d07a1d8ee8698ff4ca7d53d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>format</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a958f38391fd0391d00e0547aed9400f6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>outputSpecId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a19ac4e5da3b4a80827723fde095a97fc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>partitionedFanoutEnabled</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a5c80a05ee365bb7365bb09d7c41b8900" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>queryId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a22dd099f949134389870ed31f848f9d1" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>tableBroadcast</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a7b29613aa081f370af13a0ead50db263" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>targetFileSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a053b35531f311ef0b785c4dfb52c4d83" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>useFanoutWriter</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1adb97d675fd9a9d98d186f082279d7053" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>writeProperties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a627f241b1d363f293717f55e4d604f0e" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>WriterFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1ab9eaf7e02a686920e5854e440bae1430" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>WriterFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1a345cef3626fda6f3758aa59e3de44b96" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>WriterFactory</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkWrite_1_1WriterFactory_1ac4bf72dd12bbc2f4492d42596c84da64" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SparkWrite::WriterFactory</scope><name>writeSchema</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
