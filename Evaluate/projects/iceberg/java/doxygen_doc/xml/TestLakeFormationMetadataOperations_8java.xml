<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="TestLakeFormationMetadataOperations_8java" kind="file" language="Java">
    <compoundname>TestLakeFormationMetadataOperations.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations" prot="public">org::apache::iceberg::aws::lakeformation::TestLakeFormationMetadataOperations</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation">org::apache::iceberg::aws::lakeformation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.aws.lakeformation;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThat;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThatThrownBy;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateProperties" kindref="compound">UpdateProperties</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1catalog" kindref="compound">catalog</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1catalog" kindref="compound">catalog</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ForbiddenException" kindref="compound">ForbiddenException</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Maps" kindref="compound">Maps</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.Test;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.AccessDeniedException;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.lakeformation.model.Permission;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations" kindref="compound">TestLakeFormationMetadataOperations</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1LakeFormationTestBase" kindref="compound">LakeFormationTestBase</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="39" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a12c76ecc3ff94523e67147b36364be9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a12c76ecc3ff94523e67147b36364be9a" kindref="member">testCreateAndDropDatabaseSuccessful</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>grantCreateDbPermission();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad29eaee338bae07e222ccc0bdd25da8e" kindref="member">createNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDatabasePrivileges(testDbName,<sp/>Permission.DROP);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47105cc8a643365eb68c6d9a6f5d4498" kindref="member">dropNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="50" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1acf5461fcd166963dc3529eb10499969b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1acf5461fcd166963dc3529eb10499969b" kindref="member">testCreateDatabaseNoPrivileges</ref>()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad29eaee338bae07e222ccc0bdd25da8e" kindref="member">createNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName)))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>create<sp/>a<sp/>database<sp/>without<sp/>CREATE_DATABASE<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(AccessDeniedException.class)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Lake<sp/>Formation<sp/>permission(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="59" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a7e100074fc664fe9803937ad46248cac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a7e100074fc664fe9803937ad46248cac" kindref="member">testDropDatabaseNoPrivileges</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47105cc8a643365eb68c6d9a6f5d4498" kindref="member">dropNamespace</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName)))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>drop<sp/>a<sp/>database<sp/>without<sp/>DROP<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(AccessDeniedException.class)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Lake<sp/>Formation<sp/>permission(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="73" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a0bd746e4e16b687123ef127961286f78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a0bd746e4e16b687123ef127961286f78" kindref="member">testShowDatabasesSuccessful</ref>()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDatabasePrivileges(testDbName,<sp/>Permission.ALTER);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Namespace&gt;<sp/>namespaces<sp/>=<sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a477d211742d84afcf551469d49f12581" kindref="member">listNamespaces</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(namespaces).contains(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="86" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a01388beefbd678c0e72a3e1ca3d0ec8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a01388beefbd678c0e72a3e1ca3d0ec8c" kindref="member">testCreateTableNoCreateTablePermission</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>grantCreateDbPermission();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>tableLocation<sp/>=<sp/>getTableLocation(testTableName);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDataPathPrivileges(tableLocation);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aea32d4b815e8eb8618888eb827451bbc" kindref="member">createTable</ref>(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(testDbName,<sp/>testTableName),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schema,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitionSpec,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableLocation,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>create<sp/>a<sp/>table<sp/>without<sp/>CREATE_TABLE<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(AccessDeniedException.class)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Lake<sp/>Formation<sp/>permission(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="111" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a94397e23a6d035cefc49219289cce715" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a94397e23a6d035cefc49219289cce715" kindref="member">testShowTablesSuccessful</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.ALTER);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;TableIdentifier&gt;<sp/>tables<sp/>=<sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47d61d146f875a4ce34f2c29cb95c31b" kindref="member">listTables</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(tables).contains(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName),<sp/>testTableName));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="127" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1add472a7e6b668245f1cbe10e70023bd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1add472a7e6b668245f1cbe10e70023bd6" kindref="member">testShowTablesNoPrivileges</ref>()<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47d61d146f875a4ce34f2c29cb95c31b" kindref="member">listTables</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName)))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>show<sp/>tables<sp/>without<sp/>any<sp/>permissions<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(AccessDeniedException.class)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Lake<sp/>Formation<sp/>permission(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="144" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1adf03e7d8b5e1681cb583891a24d3d71a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1adf03e7d8b5e1681cb583891a24d3d71a" kindref="member">testCreateTableNoDataPathPermission</ref>()<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDatabasePrivileges(testDbName,<sp/>Permission.CREATE_TABLE);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aea32d4b815e8eb8618888eb827451bbc" kindref="member">createTable</ref>(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(testDbName,<sp/>testTableName),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schema,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitionSpec,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getTableLocation(testTableName),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>create<sp/>a<sp/>table<sp/>without<sp/>DATA_LOCATION_ACCESS<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ForbiddenException" kindref="compound">ForbiddenException</ref>.class)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Glue<sp/>cannot<sp/>access<sp/>the<sp/>requested<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="167" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a8881eaa99d09141e30589263f360193a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a8881eaa99d09141e30589263f360193a" kindref="member">testCreateTableSuccess</ref>()<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>tableLocation<sp/>=<sp/>getTableLocation(testTableName);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDataPathPrivileges(tableLocation);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDatabasePrivileges(testDbName,<sp/>Permission.CREATE_TABLE);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aea32d4b815e8eb8618888eb827451bbc" kindref="member">createTable</ref>(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(testDbName,<sp/>testTableName),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schema,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitionSpec,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableLocation,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.DELETE,<sp/>Permission.DROP);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a61479231255d871cf18fea6110b60773" kindref="member">dropTable</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(testDbName,<sp/>testTableName),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="189" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a24f7500716ccae6554da1bea9baf7669" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a24f7500716ccae6554da1bea9baf7669" kindref="member">testDropTableSuccessWhenPurgeIsFalse</ref>()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.DROP,<sp/>Permission.SELECT);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a61479231255d871cf18fea6110b60773" kindref="member">dropTable</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(testDbName,<sp/>testTableName),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="203" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1adf9ea874183e171eddfbbe1557a61d2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1adf9ea874183e171eddfbbe1557a61d2d" kindref="member">testDropTableNoDropPermission</ref>()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.SELECT);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a61479231255d871cf18fea6110b60773" kindref="member">dropTable</ref>(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(testDbName,<sp/>testTableName),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>drop<sp/>a<sp/>table<sp/>without<sp/>DROP<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(AccessDeniedException.class)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Lake<sp/>Formation<sp/>permission(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="224" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a17600e4f932aa4ca4998895891f9d2c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a17600e4f932aa4ca4998895891f9d2c0" kindref="member">testAlterTableSetPropertiesSuccessful</ref>()<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>properties<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.ALTER,<sp/>Permission.INSERT);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDataPathPrivileges(getTableLocation(testTableName));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName),<sp/>testTableName));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.putAll(table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.put(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a9309ce993a4165c3caf578aa76855066" kindref="member">DEFAULT_FILE_FORMAT</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ae63dd97a7cd2962dcd3bb35eb3ad9f0c" kindref="member">DEFAULT_FILE_FORMAT_DEFAULT</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateProperties" kindref="compound">UpdateProperties</ref><sp/>updateProperties<sp/>=<sp/>table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a4f9b934d96e680aa5c0bb7406ecb9215" kindref="member">updateProperties</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.forEach(updateProperties::set);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateProperties.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate_1ad6dacd11d0a1497f19f165ebf554d08f" kindref="member">commit</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="249" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a784f6ada303262acb8fa0108f9e5c5f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a784f6ada303262acb8fa0108f9e5c5f4" kindref="member">testAlterTableSetPropertiesNoDataPathAccess</ref>()<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>properties<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.ALTER,<sp/>Permission.INSERT);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName),<sp/>testTableName));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.putAll(table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.put(</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a9309ce993a4165c3caf578aa76855066" kindref="member">DEFAULT_FILE_FORMAT</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ae63dd97a7cd2962dcd3bb35eb3ad9f0c" kindref="member">DEFAULT_FILE_FORMAT_DEFAULT</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateProperties" kindref="compound">UpdateProperties</ref><sp/>updateProperties<sp/>=<sp/>table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a4f9b934d96e680aa5c0bb7406ecb9215" kindref="member">updateProperties</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.forEach(updateProperties::set);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(updateProperties::commit)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>alter<sp/>a<sp/>table<sp/>without<sp/>ALTER<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ForbiddenException" kindref="compound">ForbiddenException</ref>.class)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Glue<sp/>cannot<sp/>access<sp/>the<sp/>requested<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="276" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a024e21452d87b065c1ad7d09c9aa4a55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1a024e21452d87b065c1ad7d09c9aa4a55" kindref="member">testAlterTableSetPropertiesNoPrivileges</ref>()<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>grantDataPathPrivileges(getTableLocation(testTableName));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>-&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName),<sp/>testTableName)))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>alter<sp/>a<sp/>table<sp/>without<sp/>ALTER<sp/>permission<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(AccessDeniedException.class)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Lake<sp/>Formation<sp/>permission(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="297" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1af70f06b47ab9aa3ae33b274e461764e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1lakeformation_1_1TestLakeFormationMetadataOperations_1af70f06b47ab9aa3ae33b274e461764e9" kindref="member">testAlterTableSetPropertiesNoAlterPermission</ref>()<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testDbName<sp/>=<sp/>getRandomDbName();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>testTableName<sp/>=<sp/>getRandomTableName();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateDb(testDbName);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>lfRegisterPathRoleCreateTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>properties<sp/>=<sp/>Maps.newHashMap();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>grantTablePrivileges(testDbName,<sp/>testTableName,<sp/>Permission.SELECT,<sp/>Permission.INSERT);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glueCatalogPrivilegedRole.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace_1a1a7a831e8e46e25cbea939cfc45af7d0" kindref="member">of</ref>(testDbName),<sp/>testTableName));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.putAll(table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.put(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a9309ce993a4165c3caf578aa76855066" kindref="member">DEFAULT_FILE_FORMAT</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ae63dd97a7cd2962dcd3bb35eb3ad9f0c" kindref="member">DEFAULT_FILE_FORMAT_DEFAULT</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateProperties" kindref="compound">UpdateProperties</ref><sp/>updateProperties<sp/>=<sp/>table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a4f9b934d96e680aa5c0bb7406ecb9215" kindref="member">updateProperties</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.forEach(updateProperties::set);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(updateProperties::commit)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>alter<sp/>a<sp/>table<sp/>without<sp/>ALTER<sp/>privileges<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ForbiddenException" kindref="compound">ForbiddenException</ref>.class)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Glue<sp/>cannot<sp/>access<sp/>the<sp/>requested<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteTable(testDbName,<sp/>testTableName);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lfRegisterPathRoleDeleteDb(testDbName);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="aws/src/integration/java/org/apache/iceberg/aws/lakeformation/TestLakeFormationMetadataOperations.java"/>
  </compounddef>
</doxygen>
