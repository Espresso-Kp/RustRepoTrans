<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader" kind="class" language="Java" prot="private">
    <compoundname>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader" prot="public" virt="non-virtual">org.apache.iceberg.data.BaseDeleteLoader</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1a5647b4adf5c2908ae1699c24f8326c3b" prot="private" static="no" mutable="no">
        <type>final <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache" kindref="compound">SparkExecutorCache</ref></type>
        <definition>final SparkExecutorCache org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader::cache</definition>
        <argsstring></argsstring>
        <name>cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="296" column="40" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1a8241b7f77f8baad55ef2d337e9364ca8" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader.CachingDeleteLoader</definition>
        <argsstring>(Function&lt; DeleteFile, InputFile &gt; loadInputFile)</argsstring>
        <name>CachingDeleteLoader</name>
        <param>
          <type>Function&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DeleteFile" kindref="compound">DeleteFile</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile" kindref="compound">InputFile</ref> &gt;</type>
          <declname>loadInputFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="298" column="7" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1aadd72cc17e3f922c62d844e7700bd286" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>protected&lt; V &gt; V</type>
        <definition>protected&lt;V&gt; V org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader.getOrLoad</definition>
        <argsstring>(String key, Supplier&lt; V &gt; valueSupplier, long valueSize)</argsstring>
        <name>getOrLoad</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1ad004eb5d9243998defd56eaf5aec73c6">getOrLoad</reimplements>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Supplier&lt; V &gt;</type>
          <declname>valueSupplier</declname>
        </param>
        <param>
          <type>long</type>
          <declname>valueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the cached value for the key or populates the cache with a new mapping.</para>
<para>If the value for the specified key is in the cache, it should be returned. If the value is not in the cache, implementations should compute the value using the provided supplier, cache it, and then return it.</para>
<para>This method will be called only if <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1ace38603e42906f4898723e32682d0480" kindref="member">canCache(long)</ref> returned true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="309" column="20" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1a8241b7f77f8baad55ef2d337e9364ca8" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader.CachingDeleteLoader</definition>
        <argsstring>(Function&lt; DeleteFile, InputFile &gt; loadInputFile)</argsstring>
        <name>CachingDeleteLoader</name>
        <param>
          <type>Function&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DeleteFile" kindref="compound">DeleteFile</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1InputFile" kindref="compound">InputFile</ref> &gt;</type>
          <declname>loadInputFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="285" column="7" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1aadd72cc17e3f922c62d844e7700bd286" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>protected&lt; V &gt; V</type>
        <definition>protected&lt;V&gt; V org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader.getOrLoad</definition>
        <argsstring>(String key, Supplier&lt; V &gt; valueSupplier, long valueSize)</argsstring>
        <name>getOrLoad</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1ad004eb5d9243998defd56eaf5aec73c6">getOrLoad</reimplements>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Supplier&lt; V &gt;</type>
          <declname>valueSupplier</declname>
        </param>
        <param>
          <type>long</type>
          <declname>valueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the cached value for the key or populates the cache with a new mapping.</para>
<para>If the value for the specified key is in the cache, it should be returned. If the value is not in the cache, implementations should compute the value using the provided supplier, cache it, and then return it.</para>
<para>This method will be called only if <ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1ace38603e42906f4898723e32682d0480" kindref="member">canCache(long)</ref> returned true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="296" column="20" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="296" bodyend="298"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1ace38603e42906f4898723e32682d0480" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader.canCache</definition>
        <argsstring>(long size)</argsstring>
        <name>canCache</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1abd1de96bab3e9bc85f6db040e3733195">canCache</reimplements>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the given number of bytes can be cached.</para>
<para>Implementations should override this method if they support caching. It is also recommended to use the provided size as a guideline to decide whether the value is eligible for caching. For instance, it may be beneficial to discard values that are too large to optimize the cache performance and utilization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="304" column="25" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="304" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1ace38603e42906f4898723e32682d0480" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader.canCache</definition>
        <argsstring>(long size)</argsstring>
        <name>canCache</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1abd1de96bab3e9bc85f6db040e3733195">canCache</reimplements>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the given number of bytes can be cached.</para>
<para>Implementations should override this method if they support caching. It is also recommended to use the provided size as a guideline to decide whether the value is eligible for caching. For instance, it may be beneficial to discard values that are too large to optimize the cache performance and utilization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="291" column="25" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="291" bodyend="293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.data.DeleteLoader</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1data_1_1DeleteLoader"/>
      </node>
      <node id="2">
        <label>org.apache.iceberg.data.BaseDeleteLoader</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>List&lt; org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="24">
        <label>Cache&lt; String, CacheValue &gt;</label>
      </node>
      <node id="20">
        <label>Map&lt; String, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="25">
        <label>Duration</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.BaseReader&lt; T, TaskT extends ScanTask &gt;.SparkDeleteFilter.CachingDeleteLoader</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>cache</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>Map&lt; String, Integer &gt;</label>
      </node>
      <node id="3">
        <label>org.apache.iceberg.data.DeleteLoader</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1data_1_1DeleteLoader"/>
      </node>
      <node id="6">
        <label>org.apache.iceberg.Schema</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1Schema"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>NEWLINE</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>aliasToId</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>identifierFieldIdSet</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>idToAccessor</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>idToName</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>idToField</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>nameToId</edgelabel>
          <edgelabel>lowerCaseNameToId</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>struct</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>idsToReassigned</edgelabel>
          <edgelabel>idsToOriginal</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>org.apache.iceberg.types.Types.StructType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>fieldList</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>FIELD_SEP</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fieldsById</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>fieldsByLowerCaseName</edgelabel>
          <edgelabel>fieldsByName</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Serializable</label>
      </node>
      <node id="13">
        <label>Map&lt; Integer, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="2">
        <label>org.apache.iceberg.data.BaseDeleteLoader</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>loadInputFile</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>POS_DELETE_SCHEMA</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>workerPool</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Set&lt; Integer &gt;</label>
      </node>
      <node id="21">
        <label>Map&lt; Integer, Integer &gt;</label>
      </node>
      <node id="4">
        <label>Logger</label>
      </node>
      <node id="9">
        <label>BiMap&lt; String, Integer &gt;</label>
      </node>
      <node id="16">
        <label>org.apache.iceberg.types.Type.NestedType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1NestedType"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>org.apache.iceberg.types.Types.NestedField</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>ExecutorService</label>
      </node>
      <node id="23">
        <label>org.apache.iceberg.spark.SparkExecutorCache</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExecutorCache"/>
        <childnode refid="24" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>org.apache.iceberg.types.Type</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Function&lt; org.apache.iceberg.DeleteFile, org.apache.iceberg.io.InputFile &gt;</label>
      </node>
      <node id="12">
        <label>Map&lt; Integer, String &gt;</label>
      </node>
      <node id="11">
        <label>Map&lt; Integer, org.apache.iceberg.Accessor&lt; org.apache.iceberg.StructLike &gt; &gt;</label>
      </node>
      <node id="8">
        <label>Joiner</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" line="282" column="55" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/BaseReader.java" bodystart="282" bodyend="299"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1ab5351e0e33ccf4076d64bf929564c728" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>BaseDeleteLoader</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1af13c75d6759e934301fe43453f463ed4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>BaseDeleteLoader</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1a5647b4adf5c2908ae1699c24f8326c3b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>cache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1a8241b7f77f8baad55ef2d337e9364ca8" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>CachingDeleteLoader</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1a8241b7f77f8baad55ef2d337e9364ca8" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>CachingDeleteLoader</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1ace38603e42906f4898723e32682d0480" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>canCache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1ace38603e42906f4898723e32682d0480" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>canCache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a5b5a0ff6ea18c3079db745b3f13c3404" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>estimateEqDeletesSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a3c0938af3e04c1d0540f781263f9cc0d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>estimatePosDeletesSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a4616d700a80617cdd2ab5bbc0e1a51a1" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>estimateRecordSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1ac7ab792eb148eee6069be4ed0cadc066" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>execute</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1aadd72cc17e3f922c62d844e7700bd286" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>getOrLoad</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1BaseReader_1_1SparkDeleteFilter_1_1CachingDeleteLoader_1aadd72cc17e3f922c62d844e7700bd286" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>getOrLoad</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a32825d8934c23578f869396b92a9f469" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>getOrReadEqDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a687ed3f93ae289677714be0626df0182" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>getOrReadPosDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1aa5405cb63b8798624d8de4cdd76dbcf6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>loadEqualityDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1aa52f417e95145d0a8e3ea9f188dcde7a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>loadInputFile</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a764f5cf041424ba8024ba2bc0b3f0313" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>loadPositionDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a8393246b3f6aa515200fa4a7a6cd44ea" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a8c127fd91d917f37eb28d74ba1fbf765" prot="package" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>materialize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1abfcf3f80c7723ef3260098a386f8b4d9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>newOrcReaderFunc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a0356db41a2ad3abacd5025253b799ec9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>newParquetReaderFunc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a0eaa08cb5ae9c2486cd0ca37d0b6c409" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>openDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a1bab000714fdf97f48a0f27f28861b2c" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>openDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a7909899fb023f1b02fe0c3ed5aa9ae1a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>POS_DELETE_SCHEMA</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1acbff3dd14451362028ee373133db3f4c" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>readEqDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a0f17473097abb7a0738dfda7c048332a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>readPosDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a9c051ca189f922f17f960570b178a707" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>readPosDeletes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a2b859d7609922473ad1ff82b138bcf58" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>toStructs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1data_1_1BaseDeleteLoader_1a83618e703ff8dca13d24214bd8276198" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::BaseReader::SparkDeleteFilter::CachingDeleteLoader</scope><name>workerPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
