<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::UpdateSchema</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate" prot="public" virt="non-virtual">org.apache.iceberg.PendingUpdate&lt; Schema &gt;</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1SchemaUpdate" prot="public" virt="non-virtual">org.apache.iceberg.SchemaUpdate</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.allowIncompatibleChanges</definition>
        <argsstring>()</argsstring>
        <name>allowIncompatibleChanges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow incompatible changes to the schema.</para>
<para>Incompatible changes can cause failures when attempting to read older data files. For example, adding a required column and attempting to read data files without that column will cause a failure. However, if there are no data files that are not compatible with the change, it can be allowed.</para>
<para>This option allows incompatible changes to be made to a schema. This should be used when the caller has validated that the change will not break. For example, if a column is added as optional but always populated and data older than the column addition has been deleted from the table, this can be used with <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1adbcbaa1aec0c346dd5031e6c5b026ac3" kindref="member">requireColumn(String)</ref> to mark the column required.</para>
<para><simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="49" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ac371093e91b6b33c3d048c1f4322c37f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.addColumn</definition>
        <argsstring>(String name, Type type)</argsstring>
        <name>addColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new top-level column.</para>
<para>Because &quot;.&quot; may be interpreted as a column path separator or may be used in field names, it is not allowed in names passed to this method. To add to nested structures or to add fields with names that contain &quot;.&quot;, use <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad50d551ee24740ad2ac656a80dd3f9b1" kindref="member">addColumn(String, String, Type)</ref>.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name contains &quot;.&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="65" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a7a04b3ffee325f6a731b05aafc7e2029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.addColumn</definition>
        <argsstring>(String name, Type type, String doc)</argsstring>
        <name>addColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new top-level column.</para>
<para>Because &quot;.&quot; may be interpreted as a column path separator or may be used in field names, it is not allowed in names passed to this method. To add to nested structures or to add fields with names that contain &quot;.&quot;, use <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad50d551ee24740ad2ac656a80dd3f9b1" kindref="member">addColumn(String, String, Type)</ref>.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>documentation string for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name contains &quot;.&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad50d551ee24740ad2ac656a80dd3f9b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.addColumn</definition>
        <argsstring>(String parent, String name, Type type)</argsstring>
        <name>addColumn</name>
        <param>
          <type>String</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new column to a nested struct.</para>
<para>The parent name is used to find the parent using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>. If the parent name is null, the new column will be added to the root as a top-level column. If parent identifies a struct, a new column is added to that struct. If it identifies a list, the column is added to the list element struct, and if it identifies a map, the new column is added to the map&apos;s value struct.</para>
<para>The given name is used to name the new column and names containing &quot;.&quot; are not handled differently.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parent struct to the column will be added to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If parent doesn&apos;t identify a struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="106" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a94c896c77752b16fd7ac867c7a33e9e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.addColumn</definition>
        <argsstring>(String parent, String name, Type type, String doc)</argsstring>
        <name>addColumn</name>
        <param>
          <type>String</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new column to a nested struct.</para>
<para>The parent name is used to find the parent using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>. If the parent name is null, the new column will be added to the root as a top-level column. If parent identifies a struct, a new column is added to that struct. If it identifies a list, the column is added to the list element struct, and if it identifies a map, the new column is added to the map&apos;s value struct.</para>
<para>The given name is used to name the new column and names containing &quot;.&quot; are not handled differently.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parent struct to the column will be added to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>documentation string for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If parent doesn&apos;t identify a struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="131" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a03db393c3cef7749a2e004c2769c621e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.addRequiredColumn</definition>
        <argsstring>(String name, Type type)</argsstring>
        <name>addRequiredColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new required top-level column.</para>
<para>This is an incompatible change that can break reading older data. This method will result in an exception unless <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" kindref="member">allowIncompatibleChanges()</ref> has been called.</para>
<para>Because &quot;.&quot; may be interpreted as a column path separator or may be used in field names, it is not allowed in names passed to this method. To add to nested structures or to add fields with names that contain &quot;.&quot;, use <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a18a9d6139e2ab0d79cc5d2cd0deaab38" kindref="member">addRequiredColumn(String, String, Type)</ref>.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name contains &quot;.&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="150" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ae7eba2f5bca08f79090bcdd6c614230e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.addRequiredColumn</definition>
        <argsstring>(String name, Type type, String doc)</argsstring>
        <name>addRequiredColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new required top-level column.</para>
<para>This is an incompatible change that can break reading older data. This method will result in an exception unless <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" kindref="member">allowIncompatibleChanges()</ref> has been called.</para>
<para>Because &quot;.&quot; may be interpreted as a column path separator or may be used in field names, it is not allowed in names passed to this method. To add to nested structures or to add fields with names that contain &quot;.&quot;, use <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a18a9d6139e2ab0d79cc5d2cd0deaab38" kindref="member">addRequiredColumn(String, String, Type)</ref>.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>documentation string for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name contains &quot;.&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="172" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a18a9d6139e2ab0d79cc5d2cd0deaab38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.addRequiredColumn</definition>
        <argsstring>(String parent, String name, Type type)</argsstring>
        <name>addRequiredColumn</name>
        <param>
          <type>String</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new required top-level column.</para>
<para>This is an incompatible change that can break reading older data. This method will result in an exception unless <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" kindref="member">allowIncompatibleChanges()</ref> has been called.</para>
<para>The parent name is used to find the parent using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>. If the parent name is null, the new column will be added to the root as a top-level column. If parent identifies a struct, a new column is added to that struct. If it identifies a list, the column is added to the list element struct, and if it identifies a map, the new column is added to the map&apos;s value struct.</para>
<para>The given name is used to name the new column and names containing &quot;.&quot; are not handled differently.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parent struct to the column will be added to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If parent doesn&apos;t identify a struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="197" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a546409f0c86eb30f33bc17602575a7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.addRequiredColumn</definition>
        <argsstring>(String parent, String name, Type type, String doc)</argsstring>
        <name>addRequiredColumn</name>
        <param>
          <type>String</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>String</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new required top-level column.</para>
<para>This is an incompatible change that can break reading older data. This method will result in an exception unless <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" kindref="member">allowIncompatibleChanges()</ref> has been called.</para>
<para>The parent name is used to find the parent using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>. If the parent name is null, the new column will be added to the root as a top-level column. If parent identifies a struct, a new column is added to that struct. If it identifies a list, the column is added to the list element struct, and if it identifies a map, the new column is added to the map&apos;s value struct.</para>
<para>The given name is used to name the new column and names containing &quot;.&quot; are not handled differently.</para>
<para>If type is a nested type, its field IDs are reassigned when added to the existing schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parent struct to the column will be added to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type for the new column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>documentation string for the new column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If parent doesn&apos;t identify a struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="225" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a57f419f4cb4aadbc6e11292c9a5fe12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.renameColumn</definition>
        <argsstring>(String name, String newName)</argsstring>
        <name>renameColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename a column in the schema.</para>
<para>The name is used to find the column to rename using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>.</para>
<para>The new name may contain &quot;.&quot; and such names are not parsed or handled differently.</para>
<para>Columns may be updated and renamed in the same schema update.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to rename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newName</parametername>
</parameternamelist>
<parameterdescription>
<para>replacement name for the column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change conflicts with other additions, renames, or updates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="242" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a1ed40e3a2c243e4a409ed690c833a217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.updateColumn</definition>
        <argsstring>(String name, Type.PrimitiveType newType)</argsstring>
        <name>updateColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Type.PrimitiveType</type>
          <declname>newType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update a column in the schema to a new primitive type.</para>
<para>The name is used to find the column to update using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>.</para>
<para>Only updates that widen types are allowed.</para>
<para>Columns may be updated and renamed in the same schema update.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to rename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newType</parametername>
</parameternamelist>
<parameterdescription>
<para>replacement type for the column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change introduces a type incompatibility or if it conflicts with other additions, renames, or updates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="260" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a0c7e88e586e3f008c688e96118876883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.updateColumn</definition>
        <argsstring>(String name, Type.PrimitiveType newType, String newDoc)</argsstring>
        <name>updateColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Type.PrimitiveType</type>
          <declname>newType</declname>
        </param>
        <param>
          <type>String</type>
          <declname>newDoc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update a column in the schema to a new primitive type.</para>
<para>The name is used to find the column to update using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>.</para>
<para>Only updates that widen types are allowed.</para>
<para>Columns may be updated and renamed in the same schema update.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to rename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newType</parametername>
</parameternamelist>
<parameterdescription>
<para>replacement type for the column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDoc</parametername>
</parameternamelist>
<parameterdescription>
<para>replacement documentation string for the column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change introduces a type incompatibility or if it conflicts with other additions, renames, or updates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="279" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a38b1f6d423a5238b2dc9cf41f20baa31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.updateColumnDoc</definition>
        <argsstring>(String name, String newDoc)</argsstring>
        <name>updateColumnDoc</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>newDoc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the documentation string for a column.</para>
<para>The name is used to find the column to update using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to update the documentation string for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDoc</parametername>
</parameternamelist>
<parameterdescription>
<para>replacement documentation string for the column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if the column will be deleted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="294" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a58c9f9232fe17da8cb36bc4e36d098e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.makeColumnOptional</definition>
        <argsstring>(String name)</argsstring>
        <name>makeColumnOptional</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update a column to optional.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to mark optional </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="302" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1adbcbaa1aec0c346dd5031e6c5b026ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.requireColumn</definition>
        <argsstring>(String name)</argsstring>
        <name>requireColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update a column to required.</para>
<para>This is an incompatible change that can break reading older data. This method will result in an exception unless <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" kindref="member">allowIncompatibleChanges()</ref> has been called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to mark required </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="313" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1add435682c2b76edb6fcde9975ad986a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.deleteColumn</definition>
        <argsstring>(String name)</argsstring>
        <name>deleteColumn</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a column in the schema.</para>
<para>The name is used to find the column to delete using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to delete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change conflicts with other additions, renames, or updates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="325" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a4d1bd0b6d9ca35ba7228bfbfd3d6688d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.moveFirst</definition>
        <argsstring>(String name)</argsstring>
        <name>moveFirst</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move a column from its current position to the start of the schema or its parent struct.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change conflicts with other changes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="335" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ab6b3967d73fff643f8d7e8b81a203731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.moveBefore</definition>
        <argsstring>(String name, String beforeName)</argsstring>
        <name>moveBefore</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>beforeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move a column from its current position to directly before a reference column.</para>
<para>The name is used to find the column to move using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>. If the name identifies a nested column, it can only be moved within the nested struct that contains it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to move </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beforeName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the reference column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change conflicts with other changes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="350" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1acab2a9048f4397eb98bd23e37eb743dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.moveAfter</definition>
        <argsstring>(String name, String afterName)</argsstring>
        <name>moveAfter</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>afterName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move a column from its current position to directly after a reference column.</para>
<para>The name is used to find the column to move using <ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a0130a3d202cdbc92ff7acb8857cb40ad" kindref="member">Schema#findField(String)</ref>. If the name identifies a nested column, it can only be moved within the nested struct that contains it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column to move </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>afterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the reference column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change conflicts with other changes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="365" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1abc3e57aeab7a63992ba2d301c8e3e60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.unionByNameWith</definition>
        <argsstring>(Schema newSchema)</argsstring>
        <name>unionByNameWith</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>newSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies all field additions and updates from the provided new schema to the existing schema so to create a union schema.</para>
<para>For fields with same canonical names in both schemas it is required that the widen types is supported using <ref refid="" kindref="compound">UpdateSchema#updateColumn(String, Type.PrimitiveType)</ref></para>
<para>Only supports turning a previously required field into an optional one if it is marked optional in the provided new schema using <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a58c9f9232fe17da8cb36bc4e36d098e2" kindref="member">UpdateSchema#makeColumnOptional(String)</ref></para>
<para>Only supports updating existing field docs with fields docs from the provided new schema using <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a38b1f6d423a5238b2dc9cf41f20baa31" kindref="member">UpdateSchema#updateColumnDoc(String, String)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema used in conjunction with the existing schema to create a union schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalStateException</parametername>
</parameternamelist>
<parameterdescription>
<para>If it encounters errors during provided schema traversal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If name doesn&apos;t identify a column in the schema or if this change introduces a type incompatibility or if it conflicts with other additions, renames, or updates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="387" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a13af17d9c707b1fa2fac8e8355e09ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>UpdateSchema org.apache.iceberg.UpdateSchema.setIdentifierFields</definition>
        <argsstring>(Collection&lt; String &gt; names)</argsstring>
        <name>setIdentifierFields</name>
        <param>
          <type>Collection&lt; String &gt;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the identifier fields given a set of field names.</para>
<para>Because identifier fields are unique, duplicated names will be ignored. See {<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a44fe5a49a1703e4644531edee63dfe4a" kindref="member">} to learn more about Iceberg identifier.  names names of the columns to set as identifier fields  this for method chaining </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="398" column="16"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a04778a9754adef9dbeb9fd9e2c875bf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.setIdentifierFields</definition>
        <argsstring>(String... names)</argsstring>
        <name>setIdentifierFields</name>
        <param>
          <type>String...</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the identifier fields given some field names. See {<ref refid="" kindref="compound">} for more details.  names names of the columns to set as identifier fields  this for method chaining </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="407" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="407" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1aaf92cb5f2e68fe8ea37de6c2a4d67a80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema" kindref="compound">UpdateSchema</ref></type>
        <definition>default UpdateSchema org.apache.iceberg.UpdateSchema.caseSensitive</definition>
        <argsstring>(boolean caseSensitive)</argsstring>
        <name>caseSensitive</name>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines if the case of schema needs to be considered when comparing column names</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>when false case is not considered in column name comparisons. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="417" column="24" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="417" bodyend="419"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>API for schema evolution.</para>
<para>When committing, these changes will be applied to the current table metadata. Commit conflicts will not be resolved and will result in a <ref refid="" kindref="compound">CommitFailedException</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.apache.iceberg.PendingUpdate&lt; Schema &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate"/>
      </node>
      <node id="3">
        <label>org.apache.iceberg.SchemaUpdate</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.UpdateSchema</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>org.apache.iceberg.PendingUpdate&lt; Schema &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.UpdateSchema</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/UpdateSchema.java" line="32" column="45" bodyfile="api/src/main/java/org/apache/iceberg/UpdateSchema.java" bodystart="32" bodyend="420"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ac371093e91b6b33c3d048c1f4322c37f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a7a04b3ffee325f6a731b05aafc7e2029" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad50d551ee24740ad2ac656a80dd3f9b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a94c896c77752b16fd7ac867c7a33e9e8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a03db393c3cef7749a2e004c2769c621e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addRequiredColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ae7eba2f5bca08f79090bcdd6c614230e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addRequiredColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a18a9d6139e2ab0d79cc5d2cd0deaab38" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addRequiredColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a546409f0c86eb30f33bc17602575a7ba" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>addRequiredColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ad5b5bafdc62c8e1d55673b1aff97b392" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>allowIncompatibleChanges</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate_1a99b44ce672a5cca4e3c0746ef7e3c555" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>apply</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1aaf92cb5f2e68fe8ea37de6c2a4d67a80" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>caseSensitive</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate_1ad6dacd11d0a1497f19f165ebf554d08f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>commit</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1add435682c2b76edb6fcde9975ad986a5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>deleteColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a58c9f9232fe17da8cb36bc4e36d098e2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>makeColumnOptional</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1acab2a9048f4397eb98bd23e37eb743dd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>moveAfter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ab6b3967d73fff643f8d7e8b81a203731" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>moveBefore</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a4d1bd0b6d9ca35ba7228bfbfd3d6688d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>moveFirst</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a57f419f4cb4aadbc6e11292c9a5fe12a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>renameColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1adbcbaa1aec0c346dd5031e6c5b026ac3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>requireColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a13af17d9c707b1fa2fac8e8355e09ead" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>setIdentifierFields</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a04778a9754adef9dbeb9fd9e2c875bf1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>setIdentifierFields</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1abc3e57aeab7a63992ba2d301c8e3e60e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>unionByNameWith</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a1ed40e3a2c243e4a409ed690c833a217" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>updateColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a0c7e88e586e3f008c688e96118876883" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>updateColumn</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1a38b1f6d423a5238b2dc9cf41f20baa31" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>updateColumnDoc</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate_1a8d9ae1b58515e8b152cfbefc66d4f2cd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::UpdateSchema</scope><name>updateEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
