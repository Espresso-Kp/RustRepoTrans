<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::expressions::BoundLiteralPredicate</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate" prot="public" virt="non-virtual">org::apache::iceberg::expressions::BoundPredicate&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a32a7c4d631c67a56dc2fc4c5ab5ee06a" prot="private" static="yes" mutable="no">
        <type>final Set&lt; Type.TypeID &gt;</type>
        <definition>final Set&lt;Type.TypeID&gt; org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.INTEGRAL_TYPES</definition>
        <argsstring></argsstring>
        <name>INTEGRAL_TYPES</name>
        <initializer>=
      Sets.newHashSet(
          <ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a0583dd600adf6b3f2181c9c368d39c23" kindref="member">Type.TypeID.INTEGER</ref>,
          <ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a6d61b704a55b8ee3bf6f39113853ed6b" kindref="member">Type.TypeID.LONG</ref>,
          <ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a306db88c0868cdc8a97f9bfe4b5421cc" kindref="member">Type.TypeID.DATE</ref>,
          <ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1adace066291a5a9619faa4a96bd1666dd" kindref="member">Type.TypeID.TIME</ref>,
          <ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID_1a1534edefa504df38b2a0936ab641febe" kindref="member">Type.TypeID.TIMESTAMP</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="28" column="28" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a7d604fc6a57b1479d4244ac4be6b0bc0" prot="private" static="no" mutable="no">
        <type>final <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
        <definition>final Literal&lt;T&gt; org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.literal</definition>
        <argsstring></argsstring>
        <name>literal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="40" column="25" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a63826e739e8f292ff55cbef3be6d2da6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.toLong</definition>
        <argsstring>(Literal&lt;?&gt; lit)</argsstring>
        <name>toLong</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt;?&gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="36" column="23" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1acfc3f4562c5779cebd9bcb03f28d8d22" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.BoundLiteralPredicate</definition>
        <argsstring>(Operation op, BoundTerm&lt; T &gt; term, Literal&lt; T &gt; lit)</argsstring>
        <name>BoundLiteralPredicate</name>
        <param>
          <type><ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation" kindref="compound">Operation</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundTerm" kindref="compound">BoundTerm</ref>&lt; T &gt;</type>
          <declname>term</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
          <declname>lit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="42" column="3" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="42" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1aa27c153b5c74bfab6dcd37c3f3f88f62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.negate</definition>
        <argsstring>()</argsstring>
        <name>negate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="52" column="21" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a86dffd6f19ccd2de8613b1c8636f74c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Literal" kindref="compound">Literal</ref>&lt; T &gt;</type>
        <definition>Literal&lt;T&gt; org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.literal</definition>
        <argsstring>()</argsstring>
        <name>literal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="56" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1ad5676362047dc47c73176c3d7e21d39c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.isLiteralPredicate</definition>
        <argsstring>()</argsstring>
        <name>isLiteralPredicate</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a7431cd7c6af0ac887115d24aca2879bb">isLiteralPredicate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="61" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a3cc9ac934dbe0235a03e0e67727bed9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate" kindref="compound">BoundLiteralPredicate</ref>&lt; T &gt;</type>
        <definition>BoundLiteralPredicate&lt;T&gt; org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.asLiteralPredicate</definition>
        <argsstring>()</argsstring>
        <name>asLiteralPredicate</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a49260309b026127c1ba49985a89a3d00">asLiteralPredicate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="66" column="32" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a255d0fa9ebb359c125213f5c153e9eb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.test</definition>
        <argsstring>(T value)</argsstring>
        <name>test</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a0351aa48f1aa7e939713944f0e1cabb1">test</reimplements>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="71" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="71" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1af8d10cb051f337d74d1b1ac822d31451" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.isEquivalentTo</definition>
        <argsstring>(Expression expr)</argsstring>
        <name>isEquivalentTo</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="97" column="18" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="97" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a22a5b2573a767ca82006e92feac8d24d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="143" column="17" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="143" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.apache.iceberg.expressions.Predicate&lt; T, BoundTerm&lt; T &gt; &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate"/>
      </node>
      <node id="2">
        <label>org::apache::iceberg::expressions::BoundPredicate&lt; T &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.expressions.Bound&lt; Boolean &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>org.apache.iceberg.expressions.Predicate&lt; T, BoundTerm&lt; T &gt; &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate"/>
      </node>
      <node id="2">
        <label>org::apache::iceberg::expressions::BoundPredicate&lt; T &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.expressions.Bound&lt; Boolean &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Bound"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.expressions.BoundLiteralPredicate&lt; T &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>INTEGRAL_TYPES</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Set&lt; org.apache.iceberg.types.Type.TypeID &gt;</label>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" line="27" column="52" bodyfile="api/src/main/java/org/apache/iceberg/expressions/BoundLiteralPredicate.java" bodystart="27" bodyend="169"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a3cc9ac934dbe0235a03e0e67727bed9d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>asLiteralPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a8f08ea90cefa6a737c59cb7a46f3167c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>asSetPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a59192d18d464e698f183050c2786ff6f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>asUnaryPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1acfc3f4562c5779cebd9bcb03f28d8d22" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>BoundLiteralPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a349705402e4ed63ea9dbeea3893dc29b" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>BoundPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1af1548af60394decb0fe542efc7c0996e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>eval</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a32a7c4d631c67a56dc2fc4c5ab5ee06a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>INTEGRAL_TYPES</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1af8d10cb051f337d74d1b1ac822d31451" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>isEquivalentTo</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1ad5676362047dc47c73176c3d7e21d39c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>isLiteralPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a39989a32c3afbce13fff4fe9af79213f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>isSetPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a7708bf0218a6950593a63aab8fafedc4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>isUnaryPredicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a7d604fc6a57b1479d4244ac4be6b0bc0" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>literal</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a86dffd6f19ccd2de8613b1c8636f74c6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>literal</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1aa27c153b5c74bfab6dcd37c3f3f88f62" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>negate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate_1a84137bbeb70a6a804dc269c67b52870e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>op</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate_1acfa32a9d93f5b448ad71d9e3d7f95840" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>op</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate_1af602bd496f0e758f8cdc4d35cfe79154" prot="package" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>Predicate</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1a55fd3b0feeabcebb3bd4098591f34c22" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>ref</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate_1a03437aa0628de7f44ba9eb76abc892d8" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>term</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Predicate_1ae955fdf73b495ac001a922c941a7bc58" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>term</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a255d0fa9ebb359c125213f5c153e9eb8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>test</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundPredicate_1abade38c20b8623897c5780d85a5accc0" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::expressions::BoundPredicate."><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>test</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a63826e739e8f292ff55cbef3be6d2da6" prot="private" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>toLong</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1BoundLiteralPredicate_1a22a5b2573a767ca82006e92feac8d24d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::expressions::BoundLiteralPredicate</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
