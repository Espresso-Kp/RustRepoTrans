<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::common::DynMethods::Builder</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a543fd77bf4f467d34af47685aaaeed98" prot="private" static="no" mutable="no">
        <type>final String</type>
        <definition>final String org.apache.iceberg.common.DynMethods.Builder.name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="200" column="26" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a5dda4474787e452a0abc9c19057d8938" prot="private" static="no" mutable="no">
        <type>ClassLoader</type>
        <definition>ClassLoader org.apache.iceberg.common.DynMethods.Builder.loader</definition>
        <argsstring></argsstring>
        <name>loader</name>
        <initializer>= Thread.currentThread().getContextClassLoader()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="201" column="25" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a9f5e8b86c5132bf1a9c7874d12c78403" prot="private" static="no" mutable="no">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref></type>
        <definition>UnboundMethod org.apache.iceberg.common.DynMethods.Builder.method</definition>
        <argsstring></argsstring>
        <name>method</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="202" column="27" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a679fd529b2d2e079c2c37c8e51184dee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.common.DynMethods.Builder.Builder</definition>
        <argsstring>(String methodName)</argsstring>
        <name>Builder</name>
        <param>
          <type>String</type>
          <declname>methodName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="204" column="12" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a79f152feebfe89caf8e4cae0c5aa2f6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.loader</definition>
        <argsstring>(ClassLoader newLoader)</argsstring>
        <name>loader</name>
        <param>
          <type>ClassLoader</type>
          <declname>newLoader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the <ref refid="" kindref="compound">ClassLoader</ref> used to lookup classes by name.</para>
<para>If not set, the current thread&apos;s ClassLoader is used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newLoader</parametername>
</parameternamelist>
<parameterdescription>
<para>a ClassLoader </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="216" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1aec0f9db920db42034401cff03e5d8e33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.orNoop</definition>
        <argsstring>()</argsstring>
        <name>orNoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If no implementation has been found, adds a NOOP method.</para>
<para>Note: calls to impl will not match after this method is called!</para>
<para><simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="228" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a84d69e44436685d6756a214ef8fc9862" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.impl</definition>
        <argsstring>(String className, String methodName, Class&lt;?&gt;... argClasses)</argsstring>
        <name>impl</name>
        <param>
          <type>String</type>
          <declname>className</declname>
        </param>
        <param>
          <type>String</type>
          <declname>methodName</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for an implementation, first finding the given class by name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>methodName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a method (different from constructor) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="245" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="245" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a981489adc5541066d0f379adc059bb2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.impl</definition>
        <argsstring>(String className, Class&lt;?&gt;... argClasses)</argsstring>
        <name>impl</name>
        <param>
          <type>String</type>
          <declname>className</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for an implementation, first finding the given class by name.</para>
<para>The name passed to the constructor is the method name used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="271" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a1fef05977aeb65343b862bf546a5dc7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.impl</definition>
        <argsstring>(Class&lt;?&gt; targetClass, String methodName, Class&lt;?&gt;... argClasses)</argsstring>
        <name>impl</name>
        <param>
          <type>Class&lt;?&gt;</type>
          <declname>targetClass</declname>
        </param>
        <param>
          <type>String</type>
          <declname>methodName</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for a method implementation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetClass</parametername>
</parameternamelist>
<parameterdescription>
<para>a class instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>methodName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a method (different from constructor) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="286" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="286" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1ae744d4a4c13ea131f1ebf3d485a219d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.impl</definition>
        <argsstring>(Class&lt;?&gt; targetClass, Class&lt;?&gt;... argClasses)</argsstring>
        <name>impl</name>
        <param>
          <type>Class&lt;?&gt;</type>
          <declname>targetClass</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for a method implementation.</para>
<para>The name passed to the constructor is the method name used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetClass</parametername>
</parameternamelist>
<parameterdescription>
<para>a class instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="311" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a79c169bf2851d2b3819b426bbc57b507" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.ctorImpl</definition>
        <argsstring>(Class&lt;?&gt; targetClass, Class&lt;?&gt;... argClasses)</argsstring>
        <name>ctorImpl</name>
        <param>
          <type>Class&lt;?&gt;</type>
          <declname>targetClass</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="316" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="316" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1ac684b2c78b031d0709b704b6ed1a456d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.ctorImpl</definition>
        <argsstring>(String className, Class&lt;?&gt;... argClasses)</argsstring>
        <name>ctorImpl</name>
        <param>
          <type>String</type>
          <declname>className</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="330" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="330" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a90ee74d116e7ed8a2a48c5bb5085d0c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.hiddenImpl</definition>
        <argsstring>(String className, String methodName, Class&lt;?&gt;... argClasses)</argsstring>
        <name>hiddenImpl</name>
        <param>
          <type>String</type>
          <declname>className</declname>
        </param>
        <param>
          <type>String</type>
          <declname>methodName</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for an implementation, first finding the given class by name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>methodName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a method (different from constructor) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="354" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="354" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a455525ace085a734c01767980908e8a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.hiddenImpl</definition>
        <argsstring>(String className, Class&lt;?&gt;... argClasses)</argsstring>
        <name>hiddenImpl</name>
        <param>
          <type>String</type>
          <declname>className</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for an implementation, first finding the given class by name.</para>
<para>The name passed to the constructor is the method name used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="380" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a664ed0891dd18063f4c464346776d32e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.hiddenImpl</definition>
        <argsstring>(Class&lt;?&gt; targetClass, String methodName, Class&lt;?&gt;... argClasses)</argsstring>
        <name>hiddenImpl</name>
        <param>
          <type>Class&lt;?&gt;</type>
          <declname>targetClass</declname>
        </param>
        <param>
          <type>String</type>
          <declname>methodName</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for a method implementation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetClass</parametername>
</parameternamelist>
<parameterdescription>
<para>a class instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>methodName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of a method (different from constructor) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="395" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="395" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a48f2c55d0fbcbbc31deaef4064a1c4b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref></type>
        <definition>Builder org.apache.iceberg.common.DynMethods.Builder.hiddenImpl</definition>
        <argsstring>(Class&lt;?&gt; targetClass, Class&lt;?&gt;... argClasses)</argsstring>
        <name>hiddenImpl</name>
        <param>
          <type>Class&lt;?&gt;</type>
          <declname>targetClass</declname>
        </param>
        <param>
          <type>Class&lt;?&gt;...</type>
          <declname>argClasses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for a method implementation.</para>
<para>The name passed to the constructor is the method name used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetClass</parametername>
</parameternamelist>
<parameterdescription>
<para>a class instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>argument classes for the method </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder" kindref="compound">Builder</ref> for method chaining </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::forName(String) </para>
</simplesect>
<simplesect kind="see"><para>java.lang.Class::getMethod(String, Class[]) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="422" column="20" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a8630db226a52984a3ec532bed359b656" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref></type>
        <definition>UnboundMethod org.apache.iceberg.common.DynMethods.Builder.build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first valid implementation as a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref> or throws a RuntimeError if there is none.</para>
<para><simplesect kind="return"><para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref> with a valid implementation </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>RuntimeException</parametername>
</parameternamelist>
<parameterdescription>
<para>if no implementation was found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="434" column="26" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="434" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a629c4baa64c412509ea109f795ceb398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1BoundMethod" kindref="compound">BoundMethod</ref></type>
        <definition>BoundMethod org.apache.iceberg.common.DynMethods.Builder.build</definition>
        <argsstring>(Object receiver)</argsstring>
        <name>build</name>
        <param>
          <type>Object</type>
          <declname>receiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first valid implementation as a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1BoundMethod" kindref="compound">BoundMethod</ref> or throws a RuntimeError if there is none.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>an Object to receive the method invocation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1BoundMethod" kindref="compound">BoundMethod</ref> with a valid implementation and receiver </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalStateException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the method is static </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the receiver&apos;s class is incompatible </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RuntimeException</parametername>
</parameternamelist>
<parameterdescription>
<para>if no implementation was found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="452" column="24" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="452" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a6d9026988956a517b89e855b67f8a501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref></type>
        <definition>UnboundMethod org.apache.iceberg.common.DynMethods.Builder.buildChecked</definition>
        <argsstring>()</argsstring>
        <name>buildChecked</name>
        <exceptions> throws NoSuchMethodException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first valid implementation as a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref> or throws a NoSuchMethodException if there is none.</para>
<para><simplesect kind="return"><para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod" kindref="compound">UnboundMethod</ref> with a valid implementation </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchMethodException</parametername>
</parameternamelist>
<parameterdescription>
<para>if no implementation was found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="463" column="26" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="463" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1acb7b862c955d19ad2ea57955f5549410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1BoundMethod" kindref="compound">BoundMethod</ref></type>
        <definition>BoundMethod org.apache.iceberg.common.DynMethods.Builder.buildChecked</definition>
        <argsstring>(Object receiver)</argsstring>
        <name>buildChecked</name>
        <param>
          <type>Object</type>
          <declname>receiver</declname>
        </param>
        <exceptions> throws NoSuchMethodException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first valid implementation as a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1BoundMethod" kindref="compound">BoundMethod</ref> or throws a NoSuchMethodException if there is none.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>an Object to receive the method invocation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1BoundMethod" kindref="compound">BoundMethod</ref> with a valid implementation and receiver </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalStateException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the method is static </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the receiver&apos;s class is incompatible </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NoSuchMethodException</parametername>
</parameternamelist>
<parameterdescription>
<para>if no implementation was found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="481" column="24" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="481" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a16e2eacb276685c8c2a090f2e29d3eae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1StaticMethod" kindref="compound">StaticMethod</ref></type>
        <definition>StaticMethod org.apache.iceberg.common.DynMethods.Builder.buildStaticChecked</definition>
        <argsstring>()</argsstring>
        <name>buildStaticChecked</name>
        <exceptions> throws NoSuchMethodException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first valid implementation as a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1StaticMethod" kindref="compound">StaticMethod</ref> or throws a NoSuchMethodException if there is none.</para>
<para><simplesect kind="return"><para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1StaticMethod" kindref="compound">StaticMethod</ref> with a valid implementation </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalStateException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the method is not static </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NoSuchMethodException</parametername>
</parameternamelist>
<parameterdescription>
<para>if no implementation was found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="493" column="25" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="493" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1aeb7058e18b7f52f4b5be5dd253ac72a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1StaticMethod" kindref="compound">StaticMethod</ref></type>
        <definition>StaticMethod org.apache.iceberg.common.DynMethods.Builder.buildStatic</definition>
        <argsstring>()</argsstring>
        <name>buildStatic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first valid implementation as a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1StaticMethod" kindref="compound">StaticMethod</ref> or throws a RuntimeException if there is none.</para>
<para><simplesect kind="return"><para>a <ref refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1StaticMethod" kindref="compound">StaticMethod</ref> with a valid implementation </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalStateException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the method is not static </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RuntimeException</parametername>
</parameternamelist>
<parameterdescription>
<para>if no implementation was found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="505" column="25" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="505" bodyend="507"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.common.DynMethods.Builder</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder"/>
        <childnode refid="2" relation="usage">
          <edgelabel>method</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Method</label>
      </node>
      <node id="2">
        <label>org.apache.iceberg.common.DynMethods.UnboundMethod</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1UnboundMethod"/>
        <childnode refid="2" relation="usage">
          <edgelabel>NOOP</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>method</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="common/src/main/java/org/apache/iceberg/common/DynMethods.java" line="199" column="30" bodyfile="common/src/main/java/org/apache/iceberg/common/DynMethods.java" bodystart="199" bodyend="508"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a8630db226a52984a3ec532bed359b656" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>build</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a629c4baa64c412509ea109f795ceb398" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>build</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a6d9026988956a517b89e855b67f8a501" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>buildChecked</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1acb7b862c955d19ad2ea57955f5549410" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>buildChecked</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a679fd529b2d2e079c2c37c8e51184dee" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>Builder</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1aeb7058e18b7f52f4b5be5dd253ac72a1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>buildStatic</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a16e2eacb276685c8c2a090f2e29d3eae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>buildStaticChecked</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a79c169bf2851d2b3819b426bbc57b507" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>ctorImpl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1ac684b2c78b031d0709b704b6ed1a456d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>ctorImpl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a90ee74d116e7ed8a2a48c5bb5085d0c9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>hiddenImpl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a455525ace085a734c01767980908e8a2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>hiddenImpl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a664ed0891dd18063f4c464346776d32e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>hiddenImpl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a48f2c55d0fbcbbc31deaef4064a1c4b3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>hiddenImpl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a84d69e44436685d6756a214ef8fc9862" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>impl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a981489adc5541066d0f379adc059bb2d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>impl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a1fef05977aeb65343b862bf546a5dc7a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>impl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1ae744d4a4c13ea131f1ebf3d485a219d1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>impl</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a5dda4474787e452a0abc9c19057d8938" prot="private" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>loader</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a79f152feebfe89caf8e4cae0c5aa2f6b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>loader</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a9f5e8b86c5132bf1a9c7874d12c78403" prot="private" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>method</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1a543fd77bf4f467d34af47685aaaeed98" prot="private" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>name</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1common_1_1DynMethods_1_1Builder_1aec0f9db920db42034401cff03e5d8e33" prot="public" virt="non-virtual"><scope>org::apache::iceberg::common::DynMethods::Builder</scope><name>orNoop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
