<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="SingleThreadedIteratorSource_8java" kind="file" language="Java">
    <compoundname>SingleThreadedIteratorSource.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource" prot="public">org::apache::iceberg::flink::maintenance::operator::SingleThreadedIteratorSource</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1GlobalSplit" prot="package">org::apache::iceberg::flink::maintenance::operator::SingleThreadedIteratorSource::GlobalSplit</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer" prot="private">org::apache::iceberg::flink::maintenance::operator::SingleThreadedIteratorSource::SplitSerializer</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer" prot="private">org::apache::iceberg::flink::maintenance::operator::SingleThreadedIteratorSource::EnumeratorSerializer</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator">org::apache::iceberg::flink::maintenance::operator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.flink.maintenance.operator;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.IOException;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collection;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Iterator;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.annotation.Internal;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.Source;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SourceReader;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SourceReaderContext;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SplitEnumerator;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.SplitEnumeratorContext;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.lib.util.IteratorSourceEnumerator;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.lib.util.IteratorSourceReader;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.connector.source.lib.util.IteratorSourceSplit;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.api.java.typeutils.ResultTypeQueryable;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.flink.core.io.SimpleVersionedSerializer;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableList;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">@Internal</highlight></codeline>
<codeline lineno="46" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource" kindref="compound">SingleThreadedIteratorSource</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>Source&lt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SingleThreadedIteratorSource.GlobalSplit&lt;T&gt;,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collection&lt;SingleThreadedIteratorSource.GlobalSplit&lt;T&gt;&gt;&gt;,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultTypeQueryable&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="52" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a24fcd50b30274279a9f9e60d73db2776" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a24fcd50b30274279a9f9e60d73db2776" kindref="member">PARALLELISM_ERROR</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Parallelism<sp/>should<sp/>be<sp/>set<sp/>to<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/>Iterator&lt;T&gt;<sp/>createIterator();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;Iterator&lt;T&gt;&gt;<sp/>iteratorSerializer();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="69" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1ac478b54e9d201af64ae7920b7ca9857b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SplitEnumerator&lt;GlobalSplit&lt;T&gt;,<sp/>Collection&lt;GlobalSplit&lt;T&gt;&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1ac478b54e9d201af64ae7920b7ca9857b" kindref="member">createEnumerator</ref>(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplitEnumeratorContext&lt;GlobalSplit&lt;T&gt;&gt;<sp/>enumContext)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(enumContext.currentParallelism()<sp/>==<sp/>1,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a24fcd50b30274279a9f9e60d73db2776" kindref="member">PARALLELISM_ERROR</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IteratorSourceEnumerator&lt;&gt;(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumContext,<sp/>ImmutableList.of(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GlobalSplit&lt;&gt;(createIterator())));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="77" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a73efdaa782d3d56a9c9104bdfa98ca38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SplitEnumerator&lt;GlobalSplit&lt;T&gt;,<sp/>Collection&lt;GlobalSplit&lt;T&gt;&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a73efdaa782d3d56a9c9104bdfa98ca38" kindref="member">restoreEnumerator</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplitEnumeratorContext&lt;GlobalSplit&lt;T&gt;&gt;<sp/>enumContext,<sp/>Collection&lt;GlobalSplit&lt;T&gt;&gt;<sp/>checkpoint)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(enumContext.currentParallelism()<sp/>==<sp/>1,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a24fcd50b30274279a9f9e60d73db2776" kindref="member">PARALLELISM_ERROR</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IteratorSourceEnumerator&lt;&gt;(enumContext,<sp/>checkpoint);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="84" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1ae0a7ecd0a63613e933da023ce7341eb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;GlobalSplit&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1ae0a7ecd0a63613e933da023ce7341eb7" kindref="member">getSplitSerializer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SplitSerializer&lt;&gt;(iteratorSerializer());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="89" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a5e530233bbad0dd28f93028846f40fa9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;Collection&lt;GlobalSplit&lt;T&gt;&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a5e530233bbad0dd28f93028846f40fa9" kindref="member">getEnumeratorCheckpointSerializer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EnumeratorSerializer&lt;&gt;(iteratorSerializer());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="94" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a43521b6f5640b0f7fe05bc0e51c1c4dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SourceReader&lt;T,<sp/>GlobalSplit&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a43521b6f5640b0f7fe05bc0e51c1c4dc" kindref="member">createReader</ref>(SourceReaderContext<sp/>readerContext)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(readerContext.getIndexOfSubtask()<sp/>==<sp/>0,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a24fcd50b30274279a9f9e60d73db2776" kindref="member">PARALLELISM_ERROR</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IteratorSourceReader&lt;&gt;(readerContext);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GlobalSplit&lt;T&gt;<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>IteratorSourceSplit&lt;T,<sp/>Iterator&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Iterator&lt;T&gt;<sp/>iterator;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>GlobalSplit(Iterator&lt;T&gt;<sp/>iterator)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.iterator<sp/>=<sp/>iterator;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/>splitId()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Iterator&lt;T&gt;<sp/>getIterator()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IteratorSourceSplit&lt;T,<sp/>Iterator&lt;T&gt;&gt;<sp/>getUpdatedSplitForIterator(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Iterator&lt;T&gt;<sp/>newIterator)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GlobalSplit&lt;&gt;(newIterator);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/>toString()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String.format(</highlight><highlight class="stringliteral">&quot;GlobalSplit<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>iterator);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer" kindref="compound">SplitSerializer</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;GlobalSplit&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="132" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a76b63f843779c99a36f2a2591ae75183" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;Iterator&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a76b63f843779c99a36f2a2591ae75183" kindref="member">iteratorSerializer</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer" kindref="compound">SplitSerializer</ref>(SimpleVersionedSerializer&lt;Iterator&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a76b63f843779c99a36f2a2591ae75183" kindref="member">iteratorSerializer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.iteratorSerializer<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a76b63f843779c99a36f2a2591ae75183" kindref="member">iteratorSerializer</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a5406fe372b073796d5acdc86f60a21ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a5406fe372b073796d5acdc86f60a21ec" kindref="member">CURRENT_VERSION</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="141" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a6e7a6e42525fd321361eb21a155f3ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a6e7a6e42525fd321361eb21a155f3ed3" kindref="member">getVersion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a5406fe372b073796d5acdc86f60a21ec" kindref="member">CURRENT_VERSION</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="146" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a03802d90d56d6bbb9a55a947c178501b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a03802d90d56d6bbb9a55a947c178501b" kindref="member">serialize</ref>(GlobalSplit&lt;T&gt;<sp/>split)<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a76b63f843779c99a36f2a2591ae75183" kindref="member">iteratorSerializer</ref>.serialize(split.iterator);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="151" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1ada93c7db9267d8c2ab3600246ac46c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GlobalSplit&lt;T&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1ada93c7db9267d8c2ab3600246ac46c5a" kindref="member">deserialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>serialized)<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GlobalSplit&lt;&gt;(<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1SplitSerializer_1a76b63f843779c99a36f2a2591ae75183" kindref="member">iteratorSerializer</ref>.deserialize(version,<sp/>serialized));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer" kindref="compound">EnumeratorSerializer</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;Collection&lt;GlobalSplit&lt;T&gt;&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="158" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ac5338fb535f3105fc3b7f18dd5d25d6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ac5338fb535f3105fc3b7f18dd5d25d6b" kindref="member">CURRENT_VERSION</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="159" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ad3a2523efb5dcf8b34d1247e74ed8156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>SimpleVersionedSerializer&lt;Iterator&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ad3a2523efb5dcf8b34d1247e74ed8156" kindref="member">iteratorSerializer</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer" kindref="compound">EnumeratorSerializer</ref>(SimpleVersionedSerializer&lt;Iterator&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ad3a2523efb5dcf8b34d1247e74ed8156" kindref="member">iteratorSerializer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.iteratorSerializer<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ad3a2523efb5dcf8b34d1247e74ed8156" kindref="member">iteratorSerializer</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="166" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1a8c2abefc4034bebe5bc33bd91e747088" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1a8c2abefc4034bebe5bc33bd91e747088" kindref="member">getVersion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ac5338fb535f3105fc3b7f18dd5d25d6b" kindref="member">CURRENT_VERSION</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="171" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1abb7d0bde393995806407442d36a8fbd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1abb7d0bde393995806407442d36a8fbd8" kindref="member">serialize</ref>(Collection&lt;GlobalSplit&lt;T&gt;&gt;<sp/>checkpoint)<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(checkpoint.size()<sp/>&lt;<sp/>2,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1a24fcd50b30274279a9f9e60d73db2776" kindref="member">PARALLELISM_ERROR</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkpoint.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>{0};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>iterator<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ad3a2523efb5dcf8b34d1247e74ed8156" kindref="member">iteratorSerializer</ref>.serialize(checkpoint.iterator().next().getIterator());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[iterator.length<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.arraycopy(iterator,<sp/>0,<sp/>result,<sp/>1,<sp/>iterator.length);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="185" refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1adbea19331e119f2878403b238b175166" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Collection&lt;GlobalSplit&lt;T&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1adbea19331e119f2878403b238b175166" kindref="member">deserialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>serialized)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serialized[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Lists.newArrayList();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>iterator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[serialized.length<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.arraycopy(serialized,<sp/>1,<sp/>iterator,<sp/>0,<sp/>serialized.length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Lists.newArrayList(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GlobalSplit&lt;&gt;(<ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1maintenance_1_1operator_1_1SingleThreadedIteratorSource_1_1EnumeratorSerializer_1ad3a2523efb5dcf8b34d1247e74ed8156" kindref="member">iteratorSerializer</ref>.deserialize(version,<sp/>iterator)));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/maintenance/operator/SingleThreadedIteratorSource.java"/>
  </compounddef>
</doxygen>
