<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::types::TypeUtil</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1CustomOrderSchemaVisitor" prot="public">org::apache::iceberg::types::TypeUtil::CustomOrderSchemaVisitor</innerclass>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1GetID" prot="public">org::apache::iceberg::types::TypeUtil::GetID</innerclass>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" prot="public">org::apache::iceberg::types::TypeUtil::NextID</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1SchemaVisitor" prot="public">org::apache::iceberg::types::TypeUtil::SchemaVisitor</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1VisitFieldFuture" prot="private">org::apache::iceberg::types::TypeUtil::VisitFieldFuture</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1VisitFuture" prot="private">org::apache::iceberg::types::TypeUtil::VisitFuture</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac0ed5308d21e25c83cd77efabdae42b2" prot="private" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.iceberg.types.TypeUtil.HEADER_SIZE</definition>
        <argsstring></argsstring>
        <name>HEADER_SIZE</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="43" column="28" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a2875fc5783fdfba09c4c568c46a040a5" prot="private" static="yes" mutable="no">
        <type>final int[]</type>
        <definition>final int [] org.apache.iceberg.types.TypeUtil.MAX_PRECISION</definition>
        <argsstring></argsstring>
        <name>MAX_PRECISION</name>
        <initializer>= new int[24]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="771" column="28" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a1923edf6877cd134052274e9f82919cc" prot="private" static="yes" mutable="no">
        <type>final int[]</type>
        <definition>final int [] org.apache.iceberg.types.TypeUtil.REQUIRED_LENGTH</definition>
        <argsstring></argsstring>
        <name>REQUIRED_LENGTH</name>
        <initializer>= new int[40]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="772" column="28" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="772" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a45e05e438c6bddef70b0c39a91052183" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.types.TypeUtil.TypeUtil</definition>
        <argsstring>()</argsstring>
        <name>TypeUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="45" column="11" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaa93cc8df481f79157350aa258ef79f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.project</definition>
        <argsstring>(Schema schema, Set&lt; Integer &gt; fieldIds)</argsstring>
        <name>project</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>fieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Project extracts particular fields from a schema by ID.</para>
<para>Unlike <ref refid="" kindref="compound">TypeUtil#select(Schema, Set)</ref>, project will pick out only the fields enumerated. Structs that are explicitly projected are empty unless sub-fields are explicitly projected. Maps and lists cannot be explicitly selected in fieldIds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>to project fields from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIds</parametername>
</parameternamelist>
<parameterdescription>
<para>list of explicit fields to extract </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the schema with all fields fields not selected removed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="58" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1adece5fcc53d231870cfc528a5d10b881" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Types.StructType</type>
        <definition>static Types.StructType org.apache.iceberg.types.TypeUtil.project</definition>
        <argsstring>(Types.StructType struct, Set&lt; Integer &gt; fieldIds)</argsstring>
        <name>project</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>fieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="74" column="33" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="74" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a0c854e31bbd8d06e9419101da7543ecd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.select</definition>
        <argsstring>(Schema schema, Set&lt; Integer &gt; fieldIds)</argsstring>
        <name>select</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>fieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="88" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="88" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a73e0eb4f2aba9e5f7e5a5f85aa0d3d67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Types.StructType</type>
        <definition>static Types.StructType org.apache.iceberg.types.TypeUtil.select</definition>
        <argsstring>(Types.StructType struct, Set&lt; Integer &gt; fieldIds)</argsstring>
        <name>select</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>fieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="105" column="33" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="105" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a66cd7524889ecf60d724ca126849d852" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Integer &gt;</type>
        <definition>static Set&lt;Integer&gt; org.apache.iceberg.types.TypeUtil.getProjectedIds</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>getProjectedIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="119" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a42d1418799e76b9f089fe995d63e35e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Integer &gt;</type>
        <definition>static Set&lt;Integer&gt; org.apache.iceberg.types.TypeUtil.getProjectedIds</definition>
        <argsstring>(Type type)</argsstring>
        <name>getProjectedIds</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="123" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a6d1f98fe744f7754c75d00c4c15cf8f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Types.StructType</type>
        <definition>static Types.StructType org.apache.iceberg.types.TypeUtil.selectNot</definition>
        <argsstring>(Types.StructType struct, Set&lt; Integer &gt; fieldIds)</argsstring>
        <name>selectNot</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>fieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="134" column="33" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1abb3cd6d5200d3d9354b64d306c35e61e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.selectNot</definition>
        <argsstring>(Schema schema, Set&lt; Integer &gt; fieldIds)</argsstring>
        <name>selectNot</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>Set&lt; Integer &gt;</type>
          <declname>fieldIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="140" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac0b598ec480a6bb0bffec082284d8424" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.join</definition>
        <argsstring>(Schema left, Schema right)</argsstring>
        <name>join</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="146" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="146" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aca71e83369faf0c1a7cbd46099617f68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; String, Integer &gt;</type>
        <definition>static Map&lt;String, Integer&gt; org.apache.iceberg.types.TypeUtil.indexByName</definition>
        <argsstring>(Types.StructType struct)</argsstring>
        <name>indexByName</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="165" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ae703f2879e9dbd3745c27f36f17654f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; Integer, String &gt;</type>
        <definition>static Map&lt;Integer, String&gt; org.apache.iceberg.types.TypeUtil.indexNameById</definition>
        <argsstring>(Types.StructType struct)</argsstring>
        <name>indexNameById</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="171" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaeeefcb7fb96091b3fa1ab4e6dab1496" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; Integer, String &gt;</type>
        <definition>static Map&lt;Integer, String&gt; org.apache.iceberg.types.TypeUtil.indexQuotedNameById</definition>
        <argsstring>(Types.StructType struct, Function&lt; String, String &gt; quotingFunc)</argsstring>
        <name>indexQuotedNameById</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>Function&lt; String, String &gt;</type>
          <declname>quotingFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="177" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a643782b70c9b1692a1dc97383c35e48e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; String, Integer &gt;</type>
        <definition>static Map&lt;String, Integer&gt; org.apache.iceberg.types.TypeUtil.indexByLowerCaseName</definition>
        <argsstring>(Types.StructType struct)</argsstring>
        <name>indexByLowerCaseName</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="184" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="184" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1acc3df212c69bec54a5d8ce6b5def1a67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; Integer, Types.NestedField &gt;</type>
        <definition>static Map&lt;Integer, Types.NestedField&gt; org.apache.iceberg.types.TypeUtil.indexById</definition>
        <argsstring>(Types.StructType struct)</argsstring>
        <name>indexById</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="192" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a54a65dcaf9456f52f5df2ab008fb003b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; Integer, Integer &gt;</type>
        <definition>static Map&lt;Integer, Integer&gt; org.apache.iceberg.types.TypeUtil.indexParents</definition>
        <argsstring>(Types.StructType struct)</argsstring>
        <name>indexParents</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="196" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a85a90df5b652ab26af8920d59269e157" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.types.TypeUtil.assignFreshIds</definition>
        <argsstring>(Type type, NextID nextId)</argsstring>
        <name>assignFreshIds</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">NextID</ref></type>
          <declname>nextId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns fresh ids from the <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">nextId function</ref> for all fields in a type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextId</parametername>
</parameternamelist>
<parameterdescription>
<para>an id assignment function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an structurally identical type with new ids assigned by the nextId function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="207" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac5152839fab27fd575dfad664d62d803" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.assignFreshIds</definition>
        <argsstring>(Schema schema, NextID nextId)</argsstring>
        <name>assignFreshIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">NextID</ref></type>
          <declname>nextId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns fresh ids from the <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">nextId function</ref> for all fields in a schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextId</parametername>
</parameternamelist>
<parameterdescription>
<para>an id assignment function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a structurally identical schema with new ids assigned by the nextId function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="218" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a2a4c8c7c54c78dfadde1faeaa95a052e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.assignFreshIds</definition>
        <argsstring>(int schemaId, Schema schema, NextID nextId)</argsstring>
        <name>assignFreshIds</name>
        <param>
          <type>int</type>
          <declname>schemaId</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">NextID</ref></type>
          <declname>nextId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns fresh ids from the <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">nextId function</ref> for all fields in a schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schemaId</parametername>
</parameternamelist>
<parameterdescription>
<para>an ID assigned to this schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextId</parametername>
</parameternamelist>
<parameterdescription>
<para>an id assignment function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a structurally identical schema with new ids assigned by the nextId function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="232" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac62d99ee195f6af4bdc2af7c101865e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.assignFreshIds</definition>
        <argsstring>(Schema schema, Schema baseSchema, NextID nextId)</argsstring>
        <name>assignFreshIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>baseSchema</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">NextID</ref></type>
          <declname>nextId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns ids to match a given schema, and fresh ids from the <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1NextID" kindref="compound">nextId function</ref> for all other fields.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema with existing IDs to copy by name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextId</parametername>
</parameternamelist>
<parameterdescription>
<para>an id assignment function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a structurally identical schema with new ids assigned by the nextId function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="247" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="247" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a1f661260df5cac02e7cae39d756e0e4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Integer &gt;</type>
        <definition>static Set&lt;Integer&gt; org.apache.iceberg.types.TypeUtil.refreshIdentifierFields</definition>
        <argsstring>(Types.StructType freshSchema, Schema baseSchema)</argsstring>
        <name>refreshIdentifierFields</name>
        <param>
          <type>Types.StructType</type>
          <declname>freshSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>baseSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the identifier fields in the fresh schema based on the identifier fields in the base schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freshSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>fresh schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>base schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>identifier fields in the fresh schema </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="262" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="262" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ad14130a3cbc014f7be6e1d3da5993409" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.assignIncreasingFreshIds</definition>
        <argsstring>(Schema schema)</argsstring>
        <name>assignIncreasingFreshIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns strictly increasing fresh ids for all fields in a schema, starting from 1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a structurally identical schema with new ids assigned strictly increasing from 1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="282" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a411f188f2e54fd72d5543b14640898b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.reassignIds</definition>
        <argsstring>(Schema schema, Schema idSourceSchema)</argsstring>
        <name>reassignIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>idSourceSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reassigns ids in a schema from another schema.</para>
<para>Ids are determined by field names. If a field in the schema cannot be found in the source schema, this will throw IllegalArgumentException.</para>
<para>This will not alter a schema&apos;s structure, nullability, or types.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema to have ids reassigned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idSourceSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema from which field ids will be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an structurally identical schema with field ids matching the source schema </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if a field cannot be found (by name) in the source schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="300" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ade35768e843b6f948e774ef25b0fa6e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.reassignDoc</definition>
        <argsstring>(Schema schema, Schema docSourceSchema)</argsstring>
        <name>reassignDoc</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>docSourceSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reassigns doc in a schema from another schema.</para>
<para>Doc are determined by field id. If a field in the schema cannot be found in the source schema, this will throw IllegalArgumentException.</para>
<para>This will not alter a schema&apos;s structure, nullability, or types.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema to have doc reassigned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>docSourceSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema from which field doc will be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an structurally identical schema with field ids matching the source schema </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if a field cannot be found (by id) in the source schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="317" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="317" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaca5cd40071fe9d1c1a0c2a8be22b9e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.reassignIds</definition>
        <argsstring>(Schema schema, Schema idSourceSchema, boolean caseSensitive)</argsstring>
        <name>reassignIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>idSourceSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reassigns ids in a schema from another schema.</para>
<para>Ids are determined by field names. If a field in the schema cannot be found in the source schema, this will throw IllegalArgumentException.</para>
<para>This will not alter a schema&apos;s structure, nullability, or types.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema to have ids reassigned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idSourceSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema from which field ids will be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an structurally identical schema with field ids matching the source schema </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if a field cannot be found (by name) in the source schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="339" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="339" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a6252503fc665ceb1f7d9cddcf9f22f96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.reassignOrRefreshIds</definition>
        <argsstring>(Schema schema, Schema idSourceSchema)</argsstring>
        <name>reassignOrRefreshIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>idSourceSchema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="345" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="345" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ab729452d39660e9e7c92a7c5bc6a9fae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
        <definition>static Schema org.apache.iceberg.types.TypeUtil.reassignOrRefreshIds</definition>
        <argsstring>(Schema schema, Schema idSourceSchema, boolean caseSensitive)</argsstring>
        <name>reassignOrRefreshIds</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>idSourceSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="349" column="24" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="349" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ade9757b5f05c1b69f07b784daff440ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.types.TypeUtil.assignIds</definition>
        <argsstring>(Type type, GetID getId)</argsstring>
        <name>assignIds</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1GetID" kindref="compound">GetID</ref></type>
          <declname>getId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assigns fresh ids from the <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1GetID" kindref="compound">getId function</ref> for all fields in a type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getId</parametername>
</parameternamelist>
<parameterdescription>
<para>an id assignment function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an structurally identical type with new ids assigned by the getId function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="365" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a76ff081d8c1fee41b9e0e2aece39df1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
        <definition>static Type org.apache.iceberg.types.TypeUtil.find</definition>
        <argsstring>(Schema schema, Predicate&lt; Type &gt; predicate)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>Predicate&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="369" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ada9a11c9a157ebe6895da09aaf99d62f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.iceberg.types.TypeUtil.isPromotionAllowed</definition>
        <argsstring>(Type from, Type.PrimitiveType to)</argsstring>
        <name>isPromotionAllowed</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>Type.PrimitiveType</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="373" column="25" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="373" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a4820ebba730953fde00ea4b510ebce31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.types.TypeUtil.validateWriteSchema</definition>
        <argsstring>(Schema tableSchema, Schema writeSchema, Boolean checkNullability, Boolean checkOrdering)</argsstring>
        <name>validateWriteSchema</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>tableSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>writeSchema</declname>
        </param>
        <param>
          <type>Boolean</type>
          <declname>checkNullability</declname>
        </param>
        <param>
          <type>Boolean</type>
          <declname>checkOrdering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether we could write the iceberg table with the user-provided write schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the table schema written in iceberg meta data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-provided write schema. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkNullability</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, not allow to write optional values to a required field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkOrdering</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, not allow input schema to have different ordering than table schema. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="410" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="410" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a1d2af4d6c9107bdf4ac77db87a52ddf4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.types.TypeUtil.validateSchema</definition>
        <argsstring>(String context, Schema expectedSchema, Schema providedSchema, boolean checkNullability, boolean checkOrdering)</argsstring>
        <name>validateSchema</name>
        <param>
          <type>String</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>expectedSchema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>providedSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>checkNullability</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>checkOrdering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Validates whether the provided schema is compatible with the expected schema.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the schema context (e.g. row ID) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expectedSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the expected schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>providedSchema</parametername>
</parameternamelist>
<parameterdescription>
<para>the provided schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkNullability</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to check field nullability </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkOrdering</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to check field ordering </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="425" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="425" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ab39d92101329168f6d6f687c593cb84c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.types.TypeUtil.estimateSize</definition>
        <argsstring>(Types.NestedField field)</argsstring>
        <name>estimateSize</name>
        <param>
          <type>Types.NestedField</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Estimates the number of bytes a value for a given field may occupy in memory.</para>
<para>This method approximates the memory size based on heuristics and the internal Java representation defined by <ref refid="enumorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1TypeID" kindref="compound">Type.TypeID</ref>. It is important to note that the actual size might differ from this estimation. The method is designed to handle a variety of data types, including primitive types, strings, and nested types such as structs, maps, and lists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>a field for which to estimate the size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the estimated size in bytes of the field&apos;s value in memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="479" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="479" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T &gt; T</type>
        <definition>static &lt;T&gt; T org.apache.iceberg.types.TypeUtil.visit</definition>
        <argsstring>(Schema schema, SchemaVisitor&lt; T &gt; visitor)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1SchemaVisitor" kindref="compound">SchemaVisitor</ref>&lt; T &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="594" column="20" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="594" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ae229459f1a70de45d08cf6c48051d076" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T &gt; T</type>
        <definition>static &lt;T&gt; T org.apache.iceberg.types.TypeUtil.visit</definition>
        <argsstring>(Type type, SchemaVisitor&lt; T &gt; visitor)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1SchemaVisitor" kindref="compound">SchemaVisitor</ref>&lt; T &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="598" column="20" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="598" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a9b3e0354c04b70cd203f3b4cd15873a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T &gt; T</type>
        <definition>static &lt;T&gt; T org.apache.iceberg.types.TypeUtil.visit</definition>
        <argsstring>(Schema schema, CustomOrderSchemaVisitor&lt; T &gt; visitor)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1CustomOrderSchemaVisitor" kindref="compound">CustomOrderSchemaVisitor</ref>&lt; T &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="713" column="20" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="713" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a18c37266809dab984c747bd4e279ccb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T &gt; T</type>
        <definition>static &lt;T&gt; T org.apache.iceberg.types.TypeUtil.visit</definition>
        <argsstring>(Type type, CustomOrderSchemaVisitor&lt; T &gt; visitor)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1CustomOrderSchemaVisitor" kindref="compound">CustomOrderSchemaVisitor</ref>&lt; T &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to traverse types with traversals other than post-order.</para>
<para>This passes a <ref refid="" kindref="compound">Supplier</ref> to each <ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1_1CustomOrderSchemaVisitor" kindref="compound">visitor</ref> method that returns the result of traversing child types. Structs are passed an <ref refid="" kindref="compound">Iterable</ref> that traverses child fields during iteration.</para>
<para>An example use is assigning column IDs, which should be done with a pre-order traversal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a type to traverse with a visitor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>a custom order visitor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;T&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>the type returned by the visitor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result of traversing the given type with the visitor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="731" column="20" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="731" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aa2637afd2d1fff91145a5ca7e160c0aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.types.TypeUtil.decimalRequiredBytes</definition>
        <argsstring>(int precision)</argsstring>
        <name>decimalRequiredBytes</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="765" column="21" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="765" bodyend="769"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a83305d6d170eaeb0887bcafdfeb7f076" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set&lt; Integer &gt;</type>
        <definition>static Set&lt;Integer&gt; org.apache.iceberg.types.TypeUtil.getIdsInternal</definition>
        <argsstring>(Type type, boolean includeStructIds)</argsstring>
        <name>getIdsInternal</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>includeStructIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="130" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a4bcd1135e8ad8f4e8a41da9dd5e4cbcb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.types.TypeUtil.checkSchemaCompatibility</definition>
        <argsstring>(String errMsg, Schema schema, Schema providedSchema, boolean checkNullability, boolean checkOrdering)</argsstring>
        <name>checkSchemaCompatibility</name>
        <param>
          <type>String</type>
          <declname>errMsg</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>providedSchema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>checkNullability</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>checkOrdering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="437" column="23" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="437" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a958825d55b6cddab6217190b9c66abe3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.types.TypeUtil.estimateSize</definition>
        <argsstring>(Type type)</argsstring>
        <name>estimateSize</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="483" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="483" bodyend="528"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a3a35cae8a1ffb24a9b287e1f1de354cc" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.types.TypeUtil.decimalMaxPrecision</definition>
        <argsstring>(int numBytes)</argsstring>
        <name>decimalMaxPrecision</name>
        <param>
          <type>int</type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="759" column="14" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="759" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a53740ded56745039320b95035f31fd29" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.types.TypeUtil.[static initializer]</definition>
        <argsstring></argsstring>
        <name>[static initializer]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="772" column="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" line="41" column="22" bodyfile="api/src/main/java/org/apache/iceberg/types/TypeUtil.java" bodystart="41" bodyend="796"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a53740ded56745039320b95035f31fd29" prot="package" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>[static initializer]</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a85a90df5b652ab26af8920d59269e157" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>assignFreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac5152839fab27fd575dfad664d62d803" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>assignFreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a2a4c8c7c54c78dfadde1faeaa95a052e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>assignFreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac62d99ee195f6af4bdc2af7c101865e0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>assignFreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ade9757b5f05c1b69f07b784daff440ba" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>assignIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ad14130a3cbc014f7be6e1d3da5993409" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>assignIncreasingFreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a4bcd1135e8ad8f4e8a41da9dd5e4cbcb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>checkSchemaCompatibility</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a3a35cae8a1ffb24a9b287e1f1de354cc" prot="package" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>decimalMaxPrecision</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aa2637afd2d1fff91145a5ca7e160c0aa" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>decimalRequiredBytes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ab39d92101329168f6d6f687c593cb84c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>estimateSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a958825d55b6cddab6217190b9c66abe3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>estimateSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a76ff081d8c1fee41b9e0e2aece39df1c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>find</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a83305d6d170eaeb0887bcafdfeb7f076" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>getIdsInternal</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a66cd7524889ecf60d724ca126849d852" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>getProjectedIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a42d1418799e76b9f089fe995d63e35e1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>getProjectedIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac0ed5308d21e25c83cd77efabdae42b2" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>HEADER_SIZE</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1acc3df212c69bec54a5d8ce6b5def1a67" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>indexById</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a643782b70c9b1692a1dc97383c35e48e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>indexByLowerCaseName</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aca71e83369faf0c1a7cbd46099617f68" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>indexByName</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ae703f2879e9dbd3745c27f36f17654f2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>indexNameById</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a54a65dcaf9456f52f5df2ab008fb003b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>indexParents</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaeeefcb7fb96091b3fa1ab4e6dab1496" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>indexQuotedNameById</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ada9a11c9a157ebe6895da09aaf99d62f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>isPromotionAllowed</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ac0b598ec480a6bb0bffec082284d8424" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>join</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a2875fc5783fdfba09c4c568c46a040a5" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>MAX_PRECISION</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaa93cc8df481f79157350aa258ef79f8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>project</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1adece5fcc53d231870cfc528a5d10b881" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>project</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ade35768e843b6f948e774ef25b0fa6e7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>reassignDoc</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a411f188f2e54fd72d5543b14640898b4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>reassignIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaca5cd40071fe9d1c1a0c2a8be22b9e7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>reassignIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a6252503fc665ceb1f7d9cddcf9f22f96" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>reassignOrRefreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ab729452d39660e9e7c92a7c5bc6a9fae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>reassignOrRefreshIds</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a1f661260df5cac02e7cae39d756e0e4d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>refreshIdentifierFields</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a1923edf6877cd134052274e9f82919cc" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>REQUIRED_LENGTH</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a0c854e31bbd8d06e9419101da7543ecd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>select</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a73e0eb4f2aba9e5f7e5a5f85aa0d3d67" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>select</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a6d1f98fe744f7754c75d00c4c15cf8f6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>selectNot</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1abb3cd6d5200d3d9354b64d306c35e61e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>selectNot</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a45e05e438c6bddef70b0c39a91052183" prot="private" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>TypeUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a1d2af4d6c9107bdf4ac77db87a52ddf4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>validateSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a4820ebba730953fde00ea4b510ebce31" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>validateWriteSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1ae229459f1a70de45d08cf6c48051d076" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a9b3e0354c04b70cd203f3b4cd15873a9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a18c37266809dab984c747bd4e279ccb3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::types::TypeUtil</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
