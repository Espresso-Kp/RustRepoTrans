<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::flink::data::RowDataUtil</compoundname>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a27baaa395ccc8c192b5ab90c3d2c2adb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.data.RowDataUtil.RowDataUtil</definition>
        <argsstring>()</argsstring>
        <name>RowDataUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="40" column="11" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a27baaa395ccc8c192b5ab90c3d2c2adb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.data.RowDataUtil.RowDataUtil</definition>
        <argsstring>()</argsstring>
        <name>RowDataUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="40" column="11" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a27baaa395ccc8c192b5ab90c3d2c2adb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.data.RowDataUtil.RowDataUtil</definition>
        <argsstring>()</argsstring>
        <name>RowDataUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="40" column="11" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="40" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a0365d9f6d35650ae7f8a728637ac5794" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>static Object org.apache.iceberg.flink.data.RowDataUtil.convertConstant</definition>
        <argsstring>(Type type, Object value)</argsstring>
        <name>convertConstant</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="42" column="24" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="42" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1ab554b4c646422d82adaa282a53be9826" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RowData</type>
        <definition>static RowData org.apache.iceberg.flink.data.RowDataUtil.clone</definition>
        <argsstring>(RowData from, RowData reuse, RowType rowType, TypeSerializer[] fieldSerializers)</argsstring>
        <name>clone</name>
        <param>
          <type>RowData</type>
          <declname>from</declname>
        </param>
        <param>
          <type>RowData</type>
          <declname>reuse</declname>
        </param>
        <param>
          <type>RowType</type>
          <declname>rowType</declname>
        </param>
        <param>
          <type>TypeSerializer[]</type>
          <declname>fieldSerializers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to the private <ref refid="" kindref="compound">RowDataSerializer#copyRowData(RowData, RowData)</ref> method. This skips the check the arity of rowType and from, because the from RowData may contains additional column for position deletes. Using <ref refid="" kindref="compound">RowDataSerializer#copy(RowData, RowData)</ref> will fail the arity check. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="81" column="25" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="81" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a0365d9f6d35650ae7f8a728637ac5794" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>static Object org.apache.iceberg.flink.data.RowDataUtil.convertConstant</definition>
        <argsstring>(Type type, Object value)</argsstring>
        <name>convertConstant</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="42" column="24" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="42" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1ab554b4c646422d82adaa282a53be9826" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RowData</type>
        <definition>static RowData org.apache.iceberg.flink.data.RowDataUtil.clone</definition>
        <argsstring>(RowData from, RowData reuse, RowType rowType, TypeSerializer[] fieldSerializers)</argsstring>
        <name>clone</name>
        <param>
          <type>RowData</type>
          <declname>from</declname>
        </param>
        <param>
          <type>RowData</type>
          <declname>reuse</declname>
        </param>
        <param>
          <type>RowType</type>
          <declname>rowType</declname>
        </param>
        <param>
          <type>TypeSerializer[]</type>
          <declname>fieldSerializers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to the private <ref refid="" kindref="compound">RowDataSerializer#copyRowData(RowData, RowData)</ref> method. This skips the check the arity of rowType and from, because the from RowData may contains additional column for position deletes. Using <ref refid="" kindref="compound">RowDataSerializer#copy(RowData, RowData)</ref> will fail the arity check. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="81" column="25" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="81" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a0365d9f6d35650ae7f8a728637ac5794" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>static Object org.apache.iceberg.flink.data.RowDataUtil.convertConstant</definition>
        <argsstring>(Type type, Object value)</argsstring>
        <name>convertConstant</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="42" column="24" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="42" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1ab554b4c646422d82adaa282a53be9826" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RowData</type>
        <definition>static RowData org.apache.iceberg.flink.data.RowDataUtil.clone</definition>
        <argsstring>(RowData from, RowData reuse, RowType rowType, TypeSerializer[] fieldSerializers)</argsstring>
        <name>clone</name>
        <param>
          <type>RowData</type>
          <declname>from</declname>
        </param>
        <param>
          <type>RowData</type>
          <declname>reuse</declname>
        </param>
        <param>
          <type>RowType</type>
          <declname>rowType</declname>
        </param>
        <param>
          <type>TypeSerializer[]</type>
          <declname>fieldSerializers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to the private <ref refid="" kindref="compound">RowDataSerializer#copyRowData(RowData, RowData)</ref> method. This skips the check the arity of rowType and from, because the from RowData may contains additional column for position deletes. Using <ref refid="" kindref="compound">RowDataSerializer#copy(RowData, RowData)</ref> will fail the arity check. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="81" column="25" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="81" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" line="38" column="25" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/data/RowDataUtil.java" bodystart="38" bodyend="100"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1ab554b4c646422d82adaa282a53be9826" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>clone</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1ab554b4c646422d82adaa282a53be9826" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>clone</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1ab554b4c646422d82adaa282a53be9826" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>clone</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a0365d9f6d35650ae7f8a728637ac5794" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>convertConstant</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a0365d9f6d35650ae7f8a728637ac5794" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>convertConstant</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a0365d9f6d35650ae7f8a728637ac5794" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>convertConstant</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a27baaa395ccc8c192b5ab90c3d2c2adb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>RowDataUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a27baaa395ccc8c192b5ab90c3d2c2adb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>RowDataUtil</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1data_1_1RowDataUtil_1a27baaa395ccc8c192b5ab90c3d2c2adb" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::data::RowDataUtil</scope><name>RowDataUtil</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
