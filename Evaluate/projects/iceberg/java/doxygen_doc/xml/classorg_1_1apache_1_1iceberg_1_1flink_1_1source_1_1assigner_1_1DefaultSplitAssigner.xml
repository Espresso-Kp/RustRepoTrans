<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner" prot="public" virt="non-virtual">org.apache.iceberg.flink.source.assigner.SplitAssigner</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1acd4da06dc36b9accb344f35c57ecf685" prot="private" static="no" mutable="no">
        <type>final Queue&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
        <definition>final Queue&lt; IcebergSourceSplit &gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner::pendingSplits</definition>
        <argsstring></argsstring>
        <name>pendingSplits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="41" column="23" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ac93f4598de40e99fd6432b9e86fc93e7" prot="private" static="no" mutable="no">
        <type>CompletableFuture&lt; Void &gt;</type>
        <definition>CompletableFuture&lt; Void &gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner::availableFuture</definition>
        <argsstring></argsstring>
        <name>availableFuture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="42" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ab86bee6e40eaa988df5eff19640c2bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.DefaultSplitAssigner</definition>
        <argsstring>(SerializableComparator&lt; IcebergSourceSplit &gt; comparator)</argsstring>
        <name>DefaultSplitAssigner</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializableComparator" kindref="compound">SerializableComparator</ref>&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="44" column="10" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a00e0fd2921fe64e2bb2d2fd7fb03ccad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.DefaultSplitAssigner</definition>
        <argsstring>(SerializableComparator&lt; IcebergSourceSplit &gt; comparator, Collection&lt; IcebergSourceSplitState &gt; assignerState)</argsstring>
        <name>DefaultSplitAssigner</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializableComparator" kindref="compound">SerializableComparator</ref>&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>comparator</declname>
        </param>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplitState" kindref="compound">IcebergSourceSplitState</ref> &gt;</type>
          <declname>assignerState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="48" column="10" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1af1a02afdfa1d22c6f57d05e0d4d4b7a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref></type>
        <definition>synchronized GetSplitResult org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.getNext</definition>
        <argsstring>(@Nullable String hostname)</argsstring>
        <name>getNext</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a9ee59579af101474c6736ab4cddb1b3e">getNext</reimplements>
        <param>
          <type>@Nullable String</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a new split from the assigner when enumerator trying to assign splits to awaiting readers.</para>
<para>If enumerator wasn&apos;t able to assign the split (e.g., reader disconnected), enumerator should call <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06" kindref="member">SplitAssigner#onUnassignedSplits</ref> to return the split. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="58" column="38" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a77e5cf6cc84ef878bbe6333f46d43214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.onDiscoveredSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>onDiscoveredSplits</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a2524922f35775c695ee7d2a383f6911d">onDiscoveredSplits</reimplements>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add new splits discovered by enumerator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="68" column="15" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1afd89c77ddba30c2455a3cd3f612880c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.onUnassignedSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>onUnassignedSplits</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06">onUnassignedSplits</reimplements>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward addSplitsBack event (for failed reader) to assigner </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="73" column="15" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2b5e0029e855803d13290c7c348333d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplitState" kindref="compound">IcebergSourceSplitState</ref> &gt;</type>
        <definition>synchronized Collection&lt;IcebergSourceSplitState&gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a563aacc8af0e4be58e9df72c73a0d60f">state</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple assigner only tracks unassigned splits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="87" column="34" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a5cab1e3488d1790706ec65d925a2dae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized CompletableFuture&lt; Void &gt;</type>
        <definition>synchronized CompletableFuture&lt;Void&gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.isAvailable</definition>
        <argsstring>()</argsstring>
        <name>isAvailable</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ae1d69b66fb8b06eb618c7442f4e86322">isAvailable</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerator can get a notification via CompletableFuture when the assigner has more splits available later. Enumerator should schedule assignment in the thenAccept action of the future.</para>
<para>Assigner will return the same future if this method is called again before the previous future is completed.</para>
<para>The future can be completed from other thread, e.g. the coordinator thread from another thread for event time alignment.</para>
<para>If enumerator need to trigger action upon the future completion, it may want to run it in the coordinator thread using <ref refid="" kindref="compound">SplitEnumeratorContext#runInCoordinatorThread(Runnable)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="94" column="41" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a84ac38d2cf1e05f2dd998a9047df4d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized int</type>
        <definition>synchronized int org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.pendingSplitCount</definition>
        <argsstring>()</argsstring>
        <name>pendingSplitCount</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ac0374e814d9a61382b054569b98f1866">pendingSplitCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of pending splits that haven&apos;t been assigned yet.</para>
<para>The enumerator can poll this API to publish a metric on the number of pending splits.</para>
<para>The enumerator can also use this information to throttle split discovery for streaming read. If there are already many pending splits tracked by the assigner, it is undesirable to discover more splits and track them in the assigner. That will increase the memory footprint and enumerator checkpoint size.</para>
<para>Throttling works better together with <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1ScanContext_1ac1a7b6de246f075153660e98a4d5b379" kindref="member">ScanContext#maxPlanningSnapshotCount()</ref>. Otherwise, the next split discovery after throttling will just discover all non-enumerated snapshots and splits, which defeats the purpose of throttling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="102" column="27" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ab86bee6e40eaa988df5eff19640c2bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.DefaultSplitAssigner</definition>
        <argsstring>(SerializableComparator&lt; IcebergSourceSplit &gt; comparator)</argsstring>
        <name>DefaultSplitAssigner</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializableComparator" kindref="compound">SerializableComparator</ref>&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="44" column="10" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a00e0fd2921fe64e2bb2d2fd7fb03ccad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.DefaultSplitAssigner</definition>
        <argsstring>(SerializableComparator&lt; IcebergSourceSplit &gt; comparator, Collection&lt; IcebergSourceSplitState &gt; assignerState)</argsstring>
        <name>DefaultSplitAssigner</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializableComparator" kindref="compound">SerializableComparator</ref>&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>comparator</declname>
        </param>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplitState" kindref="compound">IcebergSourceSplitState</ref> &gt;</type>
          <declname>assignerState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="48" column="10" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1af1a02afdfa1d22c6f57d05e0d4d4b7a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref></type>
        <definition>synchronized GetSplitResult org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.getNext</definition>
        <argsstring>(@Nullable String hostname)</argsstring>
        <name>getNext</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a9ee59579af101474c6736ab4cddb1b3e">getNext</reimplements>
        <param>
          <type>@Nullable String</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a new split from the assigner when enumerator trying to assign splits to awaiting readers.</para>
<para>If enumerator wasn&apos;t able to assign the split (e.g., reader disconnected), enumerator should call <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06" kindref="member">SplitAssigner#onUnassignedSplits</ref> to return the split. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="58" column="38" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a77e5cf6cc84ef878bbe6333f46d43214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.onDiscoveredSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>onDiscoveredSplits</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a2524922f35775c695ee7d2a383f6911d">onDiscoveredSplits</reimplements>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add new splits discovered by enumerator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="68" column="15" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1afd89c77ddba30c2455a3cd3f612880c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.onUnassignedSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>onUnassignedSplits</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06">onUnassignedSplits</reimplements>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward addSplitsBack event (for failed reader) to assigner </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="73" column="15" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2b5e0029e855803d13290c7c348333d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplitState" kindref="compound">IcebergSourceSplitState</ref> &gt;</type>
        <definition>synchronized Collection&lt;IcebergSourceSplitState&gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a563aacc8af0e4be58e9df72c73a0d60f">state</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple assigner only tracks unassigned splits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="87" column="34" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a5cab1e3488d1790706ec65d925a2dae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized CompletableFuture&lt; Void &gt;</type>
        <definition>synchronized CompletableFuture&lt;Void&gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.isAvailable</definition>
        <argsstring>()</argsstring>
        <name>isAvailable</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ae1d69b66fb8b06eb618c7442f4e86322">isAvailable</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerator can get a notification via CompletableFuture when the assigner has more splits available later. Enumerator should schedule assignment in the thenAccept action of the future.</para>
<para>Assigner will return the same future if this method is called again before the previous future is completed.</para>
<para>The future can be completed from other thread, e.g. the coordinator thread from another thread for event time alignment.</para>
<para>If enumerator need to trigger action upon the future completion, it may want to run it in the coordinator thread using <ref refid="" kindref="compound">SplitEnumeratorContext#runInCoordinatorThread(Runnable)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="94" column="41" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a84ac38d2cf1e05f2dd998a9047df4d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized int</type>
        <definition>synchronized int org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.pendingSplitCount</definition>
        <argsstring>()</argsstring>
        <name>pendingSplitCount</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ac0374e814d9a61382b054569b98f1866">pendingSplitCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of pending splits that haven&apos;t been assigned yet.</para>
<para>The enumerator can poll this API to publish a metric on the number of pending splits.</para>
<para>The enumerator can also use this information to throttle split discovery for streaming read. If there are already many pending splits tracked by the assigner, it is undesirable to discover more splits and track them in the assigner. That will increase the memory footprint and enumerator checkpoint size.</para>
<para>Throttling works better together with <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1ScanContext_1ac1a7b6de246f075153660e98a4d5b379" kindref="member">ScanContext#maxPlanningSnapshotCount()</ref>. Otherwise, the next split discovery after throttling will just discover all non-enumerated snapshots and splits, which defeats the purpose of throttling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="102" column="27" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2074b49eb03d1f2e7bac6772746bd748" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.pendingRecords</definition>
        <argsstring>()</argsstring>
        <name>pendingRecords</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a6dab2d3411715b5fffedf00e03d2c21c">pendingRecords</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of pending records, which can act as a measure of the source lag. This value could be an estimation if the exact number of records cannot be accurately computed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="107" column="15" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ab86bee6e40eaa988df5eff19640c2bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.DefaultSplitAssigner</definition>
        <argsstring>(SerializableComparator&lt; IcebergSourceSplit &gt; comparator)</argsstring>
        <name>DefaultSplitAssigner</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializableComparator" kindref="compound">SerializableComparator</ref>&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="44" column="10" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a00e0fd2921fe64e2bb2d2fd7fb03ccad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.DefaultSplitAssigner</definition>
        <argsstring>(SerializableComparator&lt; IcebergSourceSplit &gt; comparator, Collection&lt; IcebergSourceSplitState &gt; assignerState)</argsstring>
        <name>DefaultSplitAssigner</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializableComparator" kindref="compound">SerializableComparator</ref>&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>comparator</declname>
        </param>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplitState" kindref="compound">IcebergSourceSplitState</ref> &gt;</type>
          <declname>assignerState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="48" column="10" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1af1a02afdfa1d22c6f57d05e0d4d4b7a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1GetSplitResult" kindref="compound">GetSplitResult</ref></type>
        <definition>synchronized GetSplitResult org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.getNext</definition>
        <argsstring>(@Nullable String hostname)</argsstring>
        <name>getNext</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a9ee59579af101474c6736ab4cddb1b3e">getNext</reimplements>
        <param>
          <type>@Nullable String</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a new split from the assigner when enumerator trying to assign splits to awaiting readers.</para>
<para>If enumerator wasn&apos;t able to assign the split (e.g., reader disconnected), enumerator should call <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06" kindref="member">SplitAssigner#onUnassignedSplits</ref> to return the split. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="58" column="38" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a77e5cf6cc84ef878bbe6333f46d43214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.onDiscoveredSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>onDiscoveredSplits</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a2524922f35775c695ee7d2a383f6911d">onDiscoveredSplits</reimplements>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add new splits discovered by enumerator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="68" column="15" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1afd89c77ddba30c2455a3cd3f612880c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.onUnassignedSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>onUnassignedSplits</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ab5e30c3328490749c5fc411be5828e06">onUnassignedSplits</reimplements>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward addSplitsBack event (for failed reader) to assigner </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="73" column="15" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2b5e0029e855803d13290c7c348333d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplitState" kindref="compound">IcebergSourceSplitState</ref> &gt;</type>
        <definition>synchronized Collection&lt;IcebergSourceSplitState&gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a563aacc8af0e4be58e9df72c73a0d60f">state</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple assigner only tracks unassigned splits </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="87" column="34" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a5cab1e3488d1790706ec65d925a2dae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized CompletableFuture&lt; Void &gt;</type>
        <definition>synchronized CompletableFuture&lt;Void&gt; org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.isAvailable</definition>
        <argsstring>()</argsstring>
        <name>isAvailable</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ae1d69b66fb8b06eb618c7442f4e86322">isAvailable</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerator can get a notification via CompletableFuture when the assigner has more splits available later. Enumerator should schedule assignment in the thenAccept action of the future.</para>
<para>Assigner will return the same future if this method is called again before the previous future is completed.</para>
<para>The future can be completed from other thread, e.g. the coordinator thread from another thread for event time alignment.</para>
<para>If enumerator need to trigger action upon the future completion, it may want to run it in the coordinator thread using <ref refid="" kindref="compound">SplitEnumeratorContext#runInCoordinatorThread(Runnable)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="94" column="41" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a84ac38d2cf1e05f2dd998a9047df4d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized int</type>
        <definition>synchronized int org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.pendingSplitCount</definition>
        <argsstring>()</argsstring>
        <name>pendingSplitCount</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ac0374e814d9a61382b054569b98f1866">pendingSplitCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of pending splits that haven&apos;t been assigned yet.</para>
<para>The enumerator can poll this API to publish a metric on the number of pending splits.</para>
<para>The enumerator can also use this information to throttle split discovery for streaming read. If there are already many pending splits tracked by the assigner, it is undesirable to discover more splits and track them in the assigner. That will increase the memory footprint and enumerator checkpoint size.</para>
<para>Throttling works better together with <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1ScanContext_1ac1a7b6de246f075153660e98a4d5b379" kindref="member">ScanContext#maxPlanningSnapshotCount()</ref>. Otherwise, the next split discovery after throttling will just discover all non-enumerated snapshots and splits, which defeats the purpose of throttling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="102" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2074b49eb03d1f2e7bac6772746bd748" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.pendingRecords</definition>
        <argsstring>()</argsstring>
        <name>pendingRecords</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a6dab2d3411715b5fffedf00e03d2c21c">pendingRecords</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of pending records, which can act as a measure of the source lag. This value could be an estimation if the exact number of records cannot be accurately computed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="107" column="15" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="107" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a0fe5aa218394ed8a73ee1fb4861f58dd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.addSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>addSplits</name>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="77" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a27a6a1841bb642855eaa3892d17dc356" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.completeAvailableFuturesIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>completeAvailableFuturesIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="106" column="29" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a0fe5aa218394ed8a73ee1fb4861f58dd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.addSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>addSplits</name>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="77" column="29" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a27a6a1841bb642855eaa3892d17dc356" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.completeAvailableFuturesIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>completeAvailableFuturesIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="113" column="29" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a0fe5aa218394ed8a73ee1fb4861f58dd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.addSplits</definition>
        <argsstring>(Collection&lt; IcebergSourceSplit &gt; splits)</argsstring>
        <name>addSplits</name>
        <param>
          <type>Collection&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1IcebergSourceSplit" kindref="compound">IcebergSourceSplit</ref> &gt;</type>
          <declname>splits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="77" column="29" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a27a6a1841bb642855eaa3892d17dc356" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner.completeAvailableFuturesIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>completeAvailableFuturesIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="113" column="29" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="113" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Since all methods are called in the source coordinator thread by enumerator, there is no need for locking. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.apache.iceberg.flink.source.assigner.SplitAssigner</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Closeable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>CompletableFuture&lt; Void &gt;</label>
      </node>
      <node id="2">
        <label>org.apache.iceberg.flink.source.assigner.SplitAssigner</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.flink.source.assigner.DefaultSplitAssigner</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>pendingSplits</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>availableFuture</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Queue&lt; org.apache.iceberg.flink.source.split.IcebergSourceSplit &gt;</label>
      </node>
      <node id="3">
        <label>Closeable</label>
      </node>
    </collaborationgraph>
    <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" line="39" column="48" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/assigner/DefaultSplitAssigner.java" bodystart="39" bodyend="112"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a0fe5aa218394ed8a73ee1fb4861f58dd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>addSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a0fe5aa218394ed8a73ee1fb4861f58dd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>addSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a0fe5aa218394ed8a73ee1fb4861f58dd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>addSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ac93f4598de40e99fd6432b9e86fc93e7" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>availableFuture</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ade6430e6cbc17270cfbb4000068543a7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>close</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ade6430e6cbc17270cfbb4000068543a7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>close</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1ade6430e6cbc17270cfbb4000068543a7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>close</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a27a6a1841bb642855eaa3892d17dc356" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>completeAvailableFuturesIfNeeded</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a27a6a1841bb642855eaa3892d17dc356" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>completeAvailableFuturesIfNeeded</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a27a6a1841bb642855eaa3892d17dc356" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>completeAvailableFuturesIfNeeded</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ab86bee6e40eaa988df5eff19640c2bc4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>DefaultSplitAssigner</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a00e0fd2921fe64e2bb2d2fd7fb03ccad" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>DefaultSplitAssigner</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ab86bee6e40eaa988df5eff19640c2bc4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>DefaultSplitAssigner</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a00e0fd2921fe64e2bb2d2fd7fb03ccad" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>DefaultSplitAssigner</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1ab86bee6e40eaa988df5eff19640c2bc4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>DefaultSplitAssigner</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a00e0fd2921fe64e2bb2d2fd7fb03ccad" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>DefaultSplitAssigner</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1af1a02afdfa1d22c6f57d05e0d4d4b7a3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>getNext</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1af1a02afdfa1d22c6f57d05e0d4d4b7a3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>getNext</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1af1a02afdfa1d22c6f57d05e0d4d4b7a3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>getNext</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a5cab1e3488d1790706ec65d925a2dae2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>isAvailable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a5cab1e3488d1790706ec65d925a2dae2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>isAvailable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a5cab1e3488d1790706ec65d925a2dae2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>isAvailable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a05ecfe6b050b8f3bc868bdc2a1ea9743" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onCompletedSplits</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a05ecfe6b050b8f3bc868bdc2a1ea9743" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onCompletedSplits</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a05ecfe6b050b8f3bc868bdc2a1ea9743" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onCompletedSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a77e5cf6cc84ef878bbe6333f46d43214" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onDiscoveredSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a77e5cf6cc84ef878bbe6333f46d43214" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onDiscoveredSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a77e5cf6cc84ef878bbe6333f46d43214" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onDiscoveredSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1afd89c77ddba30c2455a3cd3f612880c4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onUnassignedSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1afd89c77ddba30c2455a3cd3f612880c4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onUnassignedSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1afd89c77ddba30c2455a3cd3f612880c4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>onUnassignedSplits</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2074b49eb03d1f2e7bac6772746bd748" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>pendingRecords</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2074b49eb03d1f2e7bac6772746bd748" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>pendingRecords</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a84ac38d2cf1e05f2dd998a9047df4d9d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>pendingSplitCount</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a84ac38d2cf1e05f2dd998a9047df4d9d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>pendingSplitCount</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a84ac38d2cf1e05f2dd998a9047df4d9d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>pendingSplitCount</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1acd4da06dc36b9accb344f35c57ecf685" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>pendingSplits</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a65481ac8485626412acde40da85b4599" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>start</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a65481ac8485626412acde40da85b4599" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>start</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1SplitAssigner_1a65481ac8485626412acde40da85b4599" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>start</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2b5e0029e855803d13290c7c348333d3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>state</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2b5e0029e855803d13290c7c348333d3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>state</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1assigner_1_1DefaultSplitAssigner_1a2b5e0029e855803d13290c7c348333d3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::assigner::DefaultSplitAssigner</scope><name>state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
