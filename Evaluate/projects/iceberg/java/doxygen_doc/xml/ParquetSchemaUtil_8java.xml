<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ParquetSchemaUtil_8java" kind="file" language="Java">
    <compoundname>ParquetSchemaUtil.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil" prot="public">org::apache::iceberg::parquet::ParquetSchemaUtil</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds" prot="public">org::apache::iceberg::parquet::ParquetSchemaUtil::HasIds</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1parquet">org::apache::iceberg::parquet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.parquet;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Set;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.atomic.AtomicInteger;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.function.Function;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1mapping" kindref="compound">mapping</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMapping" kindref="compound">NameMapping</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Sets" kindref="compound">Sets</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.GroupType;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.MessageType;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.PrimitiveType;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.Type;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.Types.MessageTypeBuilder;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil" kindref="compound">ParquetSchemaUtil</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a026f10e26cdc2125ee2bc9558f8a3ab6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a026f10e26cdc2125ee2bc9558f8a3ab6" kindref="member">ParquetSchemaUtil</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a43c11503dc270ab857bfa13fc29847cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MessageType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a43c11503dc270ab857bfa13fc29847cb" kindref="member">convert</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema,<sp/>String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1TypeToMessageType" kindref="compound">TypeToMessageType</ref>().<ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1TypeToMessageType_1adc0a9ecc18f607f28c9d22392ad50358" kindref="member">convert</ref>(schema,<sp/>name);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a471d2cea2d00a19329782dc8aa8c6bd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a471d2cea2d00a19329782dc8aa8c6bd3" kindref="member">convert</ref>(MessageType<sp/>parquetSchema)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>Parquet<sp/>schema<sp/>does<sp/>not<sp/>contain<sp/>ids,<sp/>we<sp/>assign<sp/>fallback<sp/>ids<sp/>to<sp/>top-level<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>remaining<sp/>fields<sp/>will<sp/>get<sp/>ids<sp/>&gt;=<sp/>1000<sp/>to<sp/>avoid<sp/>pruning<sp/>columns<sp/>without<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageType<sp/>parquetSchemaWithIds<sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1ac55ab31b1fbc9348186521707516ac31" kindref="member">hasIds</ref>(parquetSchema)<sp/>?<sp/>parquetSchema<sp/>:<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1aa21c48b4df4473b06f5ea1525051baca" kindref="member">addFallbackIds</ref>(parquetSchema);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>AtomicInteger<sp/>nextId<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AtomicInteger(1000);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1abf04315a389e8a5e4611275a77095822" kindref="member">convertInternal</ref>(parquetSchemaWithIds,<sp/>name<sp/>-&gt;<sp/>nextId.getAndIncrement());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a7cebdb2503536d94f6e87f857bce37ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a7cebdb2503536d94f6e87f857bce37ff" kindref="member">convertAndPrune</ref>(MessageType<sp/>parquetSchema)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1abf04315a389e8a5e4611275a77095822" kindref="member">convertInternal</ref>(parquetSchema,<sp/>name<sp/>-&gt;<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1abf04315a389e8a5e4611275a77095822" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1abf04315a389e8a5e4611275a77095822" kindref="member">convertInternal</ref>(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MessageType<sp/>parquetSchema,<sp/>Function&lt;String[],<sp/>Integer&gt;<sp/>nameToIdFunc)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageTypeToType<sp/>converter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MessageTypeToType(nameToIdFunc);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor" kindref="compound">ParquetTypeVisitor</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor_1a759825cdd3c2da7d8697c0935497eb22" kindref="member">visit</ref>(parquetSchema,<sp/>converter).asNestedType().fields(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converter.getAliases());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a47bb22d46bb8521b650ca894b86f5268" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MessageType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a47bb22d46bb8521b650ca894b86f5268" kindref="member">pruneColumns</ref>(MessageType<sp/>fileSchema,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>expectedSchema)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>order<sp/>must<sp/>match<sp/>the<sp/>incoming<sp/>type,<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>matter<sp/>that<sp/>the<sp/>ids<sp/>are<sp/>unordered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Integer&gt;<sp/>selectedIds<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a66cd7524889ecf60d724ca126849d852" kindref="member">getProjectedIds</ref>(expectedSchema);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MessageType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor" kindref="compound">ParquetTypeVisitor</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor_1a759825cdd3c2da7d8697c0935497eb22" kindref="member">visit</ref>(fileSchema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PruneColumns(selectedIds));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1af11ac5e3259d771c307952f92f858235" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MessageType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1af11ac5e3259d771c307952f92f858235" kindref="member">pruneColumnsFallback</ref>(MessageType<sp/>fileSchema,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>expectedSchema)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Integer&gt;<sp/>selectedIds<sp/>=<sp/>Sets.newHashSet();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField" kindref="compound">NestedField</ref><sp/>field<sp/>:<sp/>expectedSchema.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a503ecd80a74c35c4b05435bb6afc9415" kindref="member">columns</ref>())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selectedIds.add(field.fieldId());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageTypeBuilder<sp/>builder<sp/>=<sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.Types.buildMessage();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ordinal<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>type<sp/>:<sp/>fileSchema.getFields())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectedIds.contains(ordinal))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.addField(type.withId(ordinal));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ordinal<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>builder.named(fileSchema.getName());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1ac55ab31b1fbc9348186521707516ac31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1ac55ab31b1fbc9348186521707516ac31" kindref="member">hasIds</ref>(MessageType<sp/>fileSchema)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor" kindref="compound">ParquetTypeVisitor</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor_1a759825cdd3c2da7d8697c0935497eb22" kindref="member">visit</ref>(fileSchema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds" kindref="compound">HasIds</ref>());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1aa21c48b4df4473b06f5ea1525051baca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MessageType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1aa21c48b4df4473b06f5ea1525051baca" kindref="member">addFallbackIds</ref>(MessageType<sp/>fileSchema)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageTypeBuilder<sp/>builder<sp/>=<sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.parquet.schema.Types.buildMessage();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ordinal<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>ids<sp/>are<sp/>assigned<sp/>starting<sp/>at<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>type<sp/>:<sp/>fileSchema.getFields())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>builder.addField(type.withId(ordinal));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ordinal<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>builder.named(fileSchema.getName());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a00005d4b2b17d529d37bb5bfe6855048" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MessageType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1a00005d4b2b17d529d37bb5bfe6855048" kindref="member">applyNameMapping</ref>(MessageType<sp/>fileSchema,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMapping" kindref="compound">NameMapping</ref><sp/>nameMapping)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MessageType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor" kindref="compound">ParquetTypeVisitor</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor_1a759825cdd3c2da7d8697c0935497eb22" kindref="member">visit</ref>(fileSchema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ApplyNameMapping(nameMapping));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds" kindref="compound">HasIds</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetTypeVisitor" kindref="compound">ParquetTypeVisitor</ref>&lt;Boolean&gt;<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="138" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a71c438d82a0defd80e382b017aefe5c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Boolean<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a71c438d82a0defd80e382b017aefe5c0" kindref="member">message</ref>(MessageType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a71c438d82a0defd80e382b017aefe5c0" kindref="member">message</ref>,<sp/>List&lt;Boolean&gt;<sp/>fields)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">(<ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a71c438d82a0defd80e382b017aefe5c0" kindref="member">message</ref>,<sp/>fields);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="143" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a39264dd35705ee12ac28ddf9347e2679" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Boolean<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">(GroupType<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">,<sp/>List&lt;Boolean&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1ac55ab31b1fbc9348186521707516ac31" kindref="member">hasIds</ref>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Boolean<sp/>hasId<sp/>:<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1ac55ab31b1fbc9348186521707516ac31" kindref="member">hasIds</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasId)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">.getId()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="153" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a92fb4a3c6e0b4920cdbf2d7faed9c0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Boolean<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a92fb4a3c6e0b4920cdbf2d7faed9c0d3" kindref="member">list</ref>(GroupType<sp/>array,<sp/>Boolean<sp/>hasId)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasId<sp/>||<sp/>array.getId()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="158" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1ad97de3691a34bd950357075bb27bb47e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Boolean<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1ad97de3691a34bd950357075bb27bb47e" kindref="member">map</ref>(GroupType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1ad97de3691a34bd950357075bb27bb47e" kindref="member">map</ref>,<sp/>Boolean<sp/>keyHasId,<sp/>Boolean<sp/>valueHasId)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyHasId<sp/>||<sp/>valueHasId<sp/>||<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1ad97de3691a34bd950357075bb27bb47e" kindref="member">map</ref>.getId()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="163" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a589930bd425fbc05b329099d61ab922c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Boolean<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a589930bd425fbc05b329099d61ab922c" kindref="member">primitive</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1PrimitiveType" kindref="compound">PrimitiveType</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a589930bd425fbc05b329099d61ab922c" kindref="member">primitive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1_1HasIds_1a589930bd425fbc05b329099d61ab922c" kindref="member">primitive</ref>.getId()<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1af85539662b7b81fc28ad845fc6a9815e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1parquet_1_1ParquetSchemaUtil_1af85539662b7b81fc28ad845fc6a9815e" kindref="member">determineListElementType</ref>(GroupType<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>repeated<sp/>=<sp/>array.getFields().get(0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isOldListElementType<sp/>=<sp/>isOldListElementType(array);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isOldListElementType<sp/>?<sp/>repeated<sp/>:<sp/>repeated.asGroupType().getType(0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parquet<sp/>LIST<sp/>backwards-compatibility<sp/>rules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#backward-compatibility-rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isOldListElementType(GroupType<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>repeatedType<sp/>=<sp/>list.getFields().get(0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>parentName<sp/>=<sp/>list.getName();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>legacy<sp/>2-level<sp/>list<sp/>types<sp/>with<sp/>primitive<sp/>element<sp/>type,<sp/>e.g.:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>ARRAY&lt;INT&gt;<sp/>(nullable<sp/>list,<sp/>non-null<sp/>elements)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>optional<sp/>group<sp/>my_list<sp/>(LIST)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>repeated<sp/>int32<sp/>element;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>repeatedType.isPrimitive()</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>legacy<sp/>2-level<sp/>list<sp/>types<sp/>whose<sp/>element<sp/>type<sp/>is<sp/>a<sp/>group<sp/>type<sp/>with<sp/>2<sp/>or<sp/>more<sp/>fields,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>ARRAY&lt;STRUCT&lt;str:<sp/>STRING,<sp/>num:<sp/>INT&gt;&gt;<sp/>(nullable<sp/>list,<sp/>non-null<sp/>elements)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>optional<sp/>group<sp/>my_list<sp/>(LIST)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>repeated<sp/>group<sp/>element<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required<sp/>binary<sp/>str<sp/>(UTF8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required<sp/>int32<sp/>num;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeatedType.asGroupType().getFieldCount()<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>legacy<sp/>2-level<sp/>list<sp/>types<sp/>generated<sp/>by<sp/>parquet-avro<sp/>(Parquet<sp/>version<sp/>&lt;<sp/>1.6.0),<sp/>e.g.:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>ARRAY&lt;STRUCT&lt;str:<sp/>STRING&gt;&gt;<sp/>(nullable<sp/>list,<sp/>non-null<sp/>elements)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>optional<sp/>group<sp/>my_list<sp/>(LIST)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>repeated<sp/>group<sp/>array<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required<sp/>binary<sp/>str<sp/>(UTF8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeatedType.getName().equals(</highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>Parquet<sp/>data<sp/>generated<sp/>by<sp/>parquet-thrift,<sp/>e.g.:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>ARRAY&lt;STRUCT&lt;str:<sp/>STRING&gt;&gt;<sp/>(nullable<sp/>list,<sp/>non-null<sp/>elements)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>optional<sp/>group<sp/>my_list<sp/>(LIST)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>repeated<sp/>group<sp/>my_list_tuple<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required<sp/>binary<sp/>str<sp/>(UTF8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeatedType.getName().equals(parentName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_tuple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="parquet/src/main/java/org/apache/iceberg/parquet/ParquetSchemaUtil.java"/>
  </compounddef>
</doxygen>
