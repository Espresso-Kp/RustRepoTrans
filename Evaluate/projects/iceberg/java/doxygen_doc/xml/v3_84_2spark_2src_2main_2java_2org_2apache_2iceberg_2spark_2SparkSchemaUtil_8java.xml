<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v3_84_2spark_2src_2main_2java_2org_2apache_2iceberg_2spark_2SparkSchemaUtil_8java" kind="file" language="Java">
    <compoundname>SparkSchemaUtil.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil" prot="public">org::apache::iceberg::spark::SparkSchemaUtil</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1spark">org::apache::iceberg::spark</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.spark;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collection;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collections;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Set;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.function.Function;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.stream.Collectors;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataColumns" kindref="compound">MetadataColumns</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1expressions" kindref="compound">expressions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Binder" kindref="compound">Binder</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1expressions" kindref="compound">expressions</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.Splitter;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableSet;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.math.LongMath;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.AnalysisException;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.SparkSession;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.catalog.Column;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.DataType;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.StructType;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SparkSchemaUtil<sp/>{</highlight></codeline>
<codeline lineno="49" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1af549d8d6c4b68c3de524c3036302c517" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1af549d8d6c4b68c3de524c3036302c517" kindref="member">SparkSchemaUtil</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a07789112e1f41f120a451fd8e9ac9eca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a07789112e1f41f120a451fd8e9ac9eca" kindref="member">schemaForTable</ref>(SparkSession<sp/>spark,<sp/>String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1adee2281b88301d1455b207021fd39ea7" kindref="member">convert</ref>(spark.table(name).schema());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a241a8d6bc5a4bffaca61af876537bb62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a241a8d6bc5a4bffaca61af876537bb62" kindref="member">specForTable</ref>(SparkSession<sp/>spark,<sp/>String<sp/>name)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/>AnalysisException<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>parts<sp/>=<sp/>Lists.newArrayList(Splitter.on(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">).limit(2).split(name));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>db<sp/>=<sp/>parts.size()<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>:<sp/>parts.get(0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>table<sp/>=<sp/>parts.get(parts.size()<sp/>==<sp/>1<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec<sp/>=</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a5f06e493d25db7d920d29751fbc77d87" kindref="member">identitySpec</ref>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a07789112e1f41f120a451fd8e9ac9eca" kindref="member">schemaForTable</ref>(spark,<sp/>name),<sp/>spark.catalog().listColumns(db,<sp/>table).collectAsList());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spec<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec_1a0409de53f7357c6c70009d25ba61b2c5" kindref="member">unpartitioned</ref>()<sp/>:<sp/>spec;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1adee2281b88301d1455b207021fd39ea7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>StructType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1adee2281b88301d1455b207021fd39ea7" kindref="member">convert</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(StructType)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" kindref="member">visit</ref>(schema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TypeToSparkType());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a80a074044717e7610738c96dbf1f06f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DataType<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a80a074044717e7610738c96dbf1f06f7" kindref="member">convert</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" kindref="member">visit</ref>(type,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TypeToSparkType());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a6671b8301c974df312e8462f549ad3f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a6671b8301c974df312e8462f549ad3f2" kindref="member">convert</ref>(StructType<sp/>sparkType)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/>converted<sp/>=<sp/>SparkTypeVisitor.visit(sparkType,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SparkTypeToType(sparkType));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(converted.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1a111bd6aa1c84487f85324a48aec9a9df" kindref="member">asNestedType</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type_1acbb7e6d760e38c72554b559c95235779" kindref="member">asStructType</ref>().fields());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1af1caa3b1af06da7d4c600ab0e9359ae6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1af1caa3b1af06da7d4c600ab0e9359ae6" kindref="member">convert</ref>(DataType<sp/>sparkType)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SparkTypeVisitor.visit(sparkType,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SparkTypeToType());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a32408c3992c34733ef97ac0d755ee528" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a32408c3992c34733ef97ac0d755ee528" kindref="member">convert</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>baseSchema,<sp/>StructType<sp/>sparkType)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1adee2281b88301d1455b207021fd39ea7" kindref="member">convert</ref>(baseSchema,<sp/>sparkType,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a77cedf9eff8cce9be2b4a6245ba7cc52" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a77cedf9eff8cce9be2b4a6245ba7cc52" kindref="member">convert</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>baseSchema,<sp/>StructType<sp/>sparkType,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>caseSensitive)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>a<sp/>type<sp/>with<sp/>fresh<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">=</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SparkTypeVisitor.visit(sparkType,<sp/>new<sp/>SparkTypeToType(sparkType)).asStructType();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reassign<sp/>ids<sp/>to<sp/>match<sp/>the<sp/>base<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a411f188f2e54fd72d5543b14640898b4" kindref="member">reassignIds</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal">.fields()),<sp/>baseSchema,<sp/>caseSensitive);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>types<sp/>that<sp/>can&apos;t<sp/>be<sp/>represented<sp/>in<sp/>Spark<sp/>(UUID<sp/>and<sp/>Fixed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SparkFixupTypes.fixup(schema,<sp/>baseSchema);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1ab7021c20b30794c2719aca5d5ba510a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1ab7021c20b30794c2719aca5d5ba510a0" kindref="member">convertWithFreshIds</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>baseSchema,<sp/>StructType<sp/>sparkType)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1ab7021c20b30794c2719aca5d5ba510a0" kindref="member">convertWithFreshIds</ref>(baseSchema,<sp/>sparkType,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1afe7284e6898b9eab0bdb683654612f82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1afe7284e6898b9eab0bdb683654612f82" kindref="member">convertWithFreshIds</ref>(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>baseSchema,<sp/>StructType<sp/>sparkType,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>caseSensitive)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>a<sp/>type<sp/>with<sp/>fresh<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType" kindref="compound">StructType</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">=</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SparkTypeVisitor.visit(sparkType,<sp/>new<sp/>SparkTypeToType(sparkType)).asStructType();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reassign<sp/>ids<sp/>to<sp/>match<sp/>the<sp/>base<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema<sp/>=</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a6252503fc665ceb1f7d9cddcf9f22f96" kindref="member">reassignOrRefreshIds</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal">.fields()),<sp/>baseSchema,<sp/>caseSensitive);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>types<sp/>that<sp/>can&apos;t<sp/>be<sp/>represented<sp/>in<sp/>Spark<sp/>(UUID<sp/>and<sp/>Fixed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SparkFixupTypes.fixup(schema,<sp/>baseSchema);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a238897f06abb0002eff6910d7d481b3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a238897f06abb0002eff6910d7d481b3d" kindref="member">prune</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema,<sp/>StructType<sp/>requestedType)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" kindref="member">visit</ref>(schema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithoutReordering" kindref="compound">PruneColumnsWithoutReordering</ref>(requestedType,<sp/>ImmutableSet.of()))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asNestedType()</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asStructType()</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fields());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a7c33a92b3783fe1a6b9fd1b015c2cddb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a7c33a92b3783fe1a6b9fd1b015c2cddb" kindref="member">prune</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema,<sp/>StructType<sp/>requestedType,<sp/>List&lt;Expression&gt;<sp/>filters)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Integer&gt;<sp/>filterRefs<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Binder" kindref="compound">Binder</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Binder_1affd7ec7efadd9b3e96466b83c0f32835" kindref="member">boundReferences</ref>(schema.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a6f726c07b15a68fc5cb6e1b1e185876c" kindref="member">asStruct</ref>(),<sp/>filters,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" kindref="member">visit</ref>(schema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithoutReordering" kindref="compound">PruneColumnsWithoutReordering</ref>(requestedType,<sp/>filterRefs))</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asNestedType()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asStructType()</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fields());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1aead16f3ae687ebf05f757156569d4a82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1aead16f3ae687ebf05f757156569d4a82" kindref="member">prune</ref>(</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema,<sp/>StructType<sp/>requestedType,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>filter,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>caseSensitive)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;Integer&gt;<sp/>filterRefs<sp/>=</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Binder" kindref="compound">Binder</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1expressions_1_1Binder_1affd7ec7efadd9b3e96466b83c0f32835" kindref="member">boundReferences</ref>(schema.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a6f726c07b15a68fc5cb6e1b1e185876c" kindref="member">asStruct</ref>(),<sp/>Collections.singletonList(filter),<sp/>caseSensitive);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1a44f43c59f07d08bc0624203a0c45a12a" kindref="member">visit</ref>(schema,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1PruneColumnsWithoutReordering" kindref="compound">PruneColumnsWithoutReordering</ref>(requestedType,<sp/>filterRefs))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asNestedType()</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asStructType()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fields());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a5f06e493d25db7d920d29751fbc77d87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a5f06e493d25db7d920d29751fbc77d87" kindref="member">identitySpec</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema,<sp/>Collection&lt;Column&gt;<sp/>columns)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>names<sp/>=<sp/>Lists.newArrayList();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Column<sp/>column<sp/>:<sp/>columns)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column.isPartition())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.add(column.name());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a5f06e493d25db7d920d29751fbc77d87" kindref="member">identitySpec</ref>(schema,<sp/>names);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a6c6a9db027604eeeafa590c2a44bcfd4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a6c6a9db027604eeeafa590c2a44bcfd4" kindref="member">identitySpec</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema,<sp/>List&lt;String&gt;<sp/>partitionNames)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partitionNames<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>||<sp/>partitionNames.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec_1_1Builder" kindref="compound">Builder</ref><sp/>builder<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec_1a5f73aba02e3dd22ce2b33483bf460dbe" kindref="member">builderFor</ref>(schema);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(String<sp/>partitionName<sp/>:<sp/>partitionNames)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>builder.identity(partitionName);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>builder.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec_1_1Builder_1a78aa0cec380ca0318178f90ad65c0aea" kindref="member">build</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a7be302ae02f868ed58379712e587d8ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a7be302ae02f868ed58379712e587d8ad" kindref="member">estimateSize</ref>(StructType<sp/>tableSchema,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>totalRecords)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalRecords<sp/>==<sp/>Long.MAX_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalRecords;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>LongMath.checkedMultiply(tableSchema.defaultSize(),<sp/>totalRecords);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(ArithmeticException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Long.MAX_VALUE;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1afc6489f6dc6324d45b1064cbc94e0de7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1afc6489f6dc6324d45b1064cbc94e0de7" kindref="member">validateMetadataColumnReferences</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>tableSchema,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>readSchema)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>conflictingColumnNames<sp/>=</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readSchema.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a503ecd80a74c35c4b05435bb6afc9415" kindref="member">columns</ref>().stream()</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.map(<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.NestedField::name)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.filter(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>-&gt;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataColumns" kindref="compound">MetadataColumns</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataColumns_1ad333f68c0f6d8fe8725351f63207c88f" kindref="member">isMetadataColumn</ref>(name)<sp/>&amp;&amp;<sp/>tableSchema.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1af6a287dd0c94d0a15ae7304a49fa87c4" kindref="member">findField</ref>(name)<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException_1a67cd18a4bc1ec478ffba008a6c62b79c" kindref="member">check</ref>(</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conflictingColumnNames.isEmpty(),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Table<sp/>column<sp/>names<sp/>conflict<sp/>with<sp/>names<sp/>reserved<sp/>for<sp/>Iceberg<sp/>metadata<sp/>columns:<sp/>%s.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Please,<sp/>use<sp/>ALTER<sp/>TABLE<sp/>statements<sp/>to<sp/>rename<sp/>the<sp/>conflicting<sp/>table<sp/>columns.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conflictingColumnNames);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a6fbca0af98e6388b4eca254286dccf8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Map&lt;Integer,<sp/>String&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a6fbca0af98e6388b4eca254286dccf8c" kindref="member">indexQuotedNameById</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref><sp/>schema)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>Function&lt;String,<sp/>String&gt;<sp/>quotingFunc<sp/>=<sp/>name<sp/>-&gt;<sp/>String.format(</highlight><highlight class="stringliteral">&quot;`%s`&quot;</highlight><highlight class="normal">,<sp/>name.replace(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;``&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil" kindref="compound">TypeUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1TypeUtil_1aaeeefcb7fb96091b3fa1ab4e6dab1496" kindref="member">indexQuotedNameById</ref>(schema.<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a6f726c07b15a68fc5cb6e1b1e185876c" kindref="member">asStruct</ref>(),<sp/>quotingFunc);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/SparkSchemaUtil.java"/>
  </compounddef>
</doxygen>
