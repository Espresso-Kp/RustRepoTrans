<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::BaseTransaction::TransactionTableOperations</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" prot="public" virt="non-virtual">org.apache.iceberg.TableOperations</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1af50a7cb77f327befee05aeb550ef7127" prot="private" static="no" mutable="no">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref></type>
        <definition>TableOperations org.apache.iceberg.BaseTransaction.TransactionTableOperations.tempOps</definition>
        <argsstring></argsstring>
        <name>tempOps</name>
        <initializer>= ops.temp(<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a8a268fe8cf4a41e81183672415aadcc0" kindref="member">current</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="542" column="29" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="542" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a8a268fe8cf4a41e81183672415aadcc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
        <definition>TableMetadata org.apache.iceberg.BaseTransaction.TransactionTableOperations.current</definition>
        <argsstring>()</argsstring>
        <name>current</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a96a251e76611125a2903eb608c97aa67">current</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the currently loaded table metadata, without checking for updates.</para>
<para><simplesect kind="return"><para>table metadata </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="545" column="26" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="545" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a3c0b3d8c7d80aa1a9cc7afb1814c9573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
        <definition>TableMetadata org.apache.iceberg.BaseTransaction.TransactionTableOperations.refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a7de2e0057f40bc6432f2febc6d041fa6">refresh</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the current table metadata after checking for updates.</para>
<para><simplesect kind="return"><para>table metadata </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="550" column="26" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="550" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1aca10c14454dc5f4ee9461104e4ff6d99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.BaseTransaction.TransactionTableOperations.commit</definition>
        <argsstring>(TableMetadata underlyingBase, TableMetadata metadata)</argsstring>
        <name>commit</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1ad8497b710d8b0f0363af5759543d7aca">commit</reimplements>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace the base table metadata with a new version.</para>
<para>This method should implement and document atomicity guarantees.</para>
<para>Implementations must check that the base metadata is current to avoid overwriting updates. Once the atomic commit operation succeeds, implementations must not perform any operations that may fail because failure in this method cannot be distinguished from commit failure.</para>
<para>Implementations must throw a {<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitStateUnknownException" kindref="compound">} in cases where it cannot be determined if the commit succeeded or failed. For example if a network partition causes the confirmation of the commit to be lost, the implementation should throw a CommitStateUnknownException. This is important because downstream users of this API need to know whether they can clean up the commit or not, if the state is unknown then it is not safe to remove any files. All other exceptions will be treated as if the commit has failed.  base table metadata on which changes were based  metadata new table metadata with updates </ref></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="556" column="17" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="556" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1ac580aa5d28313bddf29de19cafa47ca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref></type>
        <definition>FileIO org.apache.iceberg.BaseTransaction.TransactionTableOperations.io</definition>
        <argsstring>()</argsstring>
        <name>io</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a837621125cb806c9fe18fa8695d57e5a">io</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="" kindref="compound">FileIO</ref> to read and write table data and metadata files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="570" column="19" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="570" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a6129443e878f4f548de01f858bec201f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1encryption_1_1EncryptionManager" kindref="compound">EncryptionManager</ref></type>
        <definition>EncryptionManager org.apache.iceberg.BaseTransaction.TransactionTableOperations.encryption</definition>
        <argsstring>()</argsstring>
        <name>encryption</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1af8c45bfe2d92ccfb8bd85002c53424be">encryption</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1encryption_1_1EncryptionManager" kindref="compound">org.apache.iceberg.encryption.EncryptionManager</ref> to encrypt and decrypt data files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="575" column="30" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="575" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a657b01f780fa1585da721a26409092a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String org.apache.iceberg.BaseTransaction.TransactionTableOperations.metadataFileLocation</definition>
        <argsstring>(String fileName)</argsstring>
        <name>metadataFileLocation</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a69cfcd6cd1bd9c9206e84bab3c00178a">metadataFileLocation</reimplements>
        <param>
          <type>String</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given the name of a metadata file, obtain the full path of that file using an appropriate base location of the implementation&apos;s choosing.</para>
<para>The file may not exist yet, in which case the path should be returned as if it were to be created by e.g. <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO_1a2088493983fbb8c7f26bef51d3fa93de" kindref="member">FileIO#newOutputFile(String)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="580" column="19" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="580" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a5e22387f11857038b52df9aec479cd08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1LocationProvider" kindref="compound">LocationProvider</ref></type>
        <definition>LocationProvider org.apache.iceberg.BaseTransaction.TransactionTableOperations.locationProvider</definition>
        <argsstring>()</argsstring>
        <name>locationProvider</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a25bdac1888a151998df892de84c6028c">locationProvider</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="" kindref="compound">LocationProvider</ref> that supplies locations for new new data files.</para>
<para><simplesect kind="return"><para>a location provider configured for the current table state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="585" column="29" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="585" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1af5809ab99efabc8c1d570c8ab00bb8ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.BaseTransaction.TransactionTableOperations.newSnapshotId</definition>
        <argsstring>()</argsstring>
        <name>newSnapshotId</name>
        <reimplements refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a1da78707a4d5726cfd0d6fc09a5e1899">newSnapshotId</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new ID for a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Snapshot" kindref="compound">Snapshot</ref></para>
<para><simplesect kind="return"><para>a long snapshot ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="590" column="17" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="590" bodyend="592"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.apache.iceberg.TableOperations</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.BaseTransaction.TransactionTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>org.apache.iceberg.TableOperations</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.BaseTransaction.TransactionTableOperations</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>tempOps</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="core/src/main/java/org/apache/iceberg/BaseTransaction.java" line="541" column="58" bodyfile="core/src/main/java/org/apache/iceberg/BaseTransaction.java" bodystart="541" bodyend="593"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1aca10c14454dc5f4ee9461104e4ff6d99" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>commit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a8a268fe8cf4a41e81183672415aadcc0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>current</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a6129443e878f4f548de01f858bec201f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>encryption</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1ac580aa5d28313bddf29de19cafa47ca0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>io</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a5e22387f11857038b52df9aec479cd08" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>locationProvider</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a657b01f780fa1585da721a26409092a0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>metadataFileLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1af5809ab99efabc8c1d570c8ab00bb8ce" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>newSnapshotId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1a3c0b3d8c7d80aa1a9cc7afb1814c9573" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>refresh</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1ad929c931bb52ee6da72c476fdae6752d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>requireStrictCleanup</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a9e9a8c6707333cdbc8e36a3e0f422bc3" prot="public" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>temp</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1BaseTransaction_1_1TransactionTableOperations_1af50a7cb77f327befee05aeb550ef7127" prot="private" virt="non-virtual"><scope>org::apache::iceberg::BaseTransaction::TransactionTableOperations</scope><name>tempOps</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
