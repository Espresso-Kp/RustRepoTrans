<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::spark::source::SerializableTableWithSize</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable" prot="public" virt="non-virtual">org.apache.iceberg.SerializableTable</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">KnownSizeEstimation</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AutoCloseable</basecompoundref>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1_1SerializableMetadataTableWithSize" prot="public">org::apache::iceberg::spark::source::SerializableTableWithSize::SerializableMetadataTableWithSize</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aee2aede567e88faf2a2cafefc290d785" prot="private" static="yes" mutable="no">
        <type>final Logger</type>
        <definition>static final Logger org.apache.iceberg.spark.source.SerializableTableWithSize::LOG</definition>
        <argsstring></argsstring>
        <name>LOG</name>
        <initializer>= LoggerFactory.getLogger(SerializableTableWithSize.class)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="41" column="31" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a52198df70cf24d65a9e63ee6f60c3d70" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>static final long org.apache.iceberg.spark.source.SerializableTableWithSize::SIZE_ESTIMATE</definition>
        <argsstring></argsstring>
        <name>SIZE_ESTIMATE</name>
        <initializer>= 32_768L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="42" column="29" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a382e93249f879e6e0fb7d95d18335243" prot="private" static="no" mutable="no">
        <type>final transient Object</type>
        <definition>final transient Object org.apache.iceberg.spark.source.SerializableTableWithSize::serializationMarker</definition>
        <argsstring></argsstring>
        <name>serializationMarker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="44" column="34" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a110e512900d8af141c1d61be331651dc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SerializableTableWithSize.SerializableTableWithSize</definition>
        <argsstring>(Table table)</argsstring>
        <name>SerializableTableWithSize</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="46" column="13" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a110e512900d8af141c1d61be331651dc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SerializableTableWithSize.SerializableTableWithSize</definition>
        <argsstring>(Table table)</argsstring>
        <name>SerializableTableWithSize</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="47" column="13" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a110e512900d8af141c1d61be331651dc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.spark.source.SerializableTableWithSize.SerializableTableWithSize</definition>
        <argsstring>(Table table)</argsstring>
        <name>SerializableTableWithSize</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="47" column="13" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a36fca9d44fdcb24245fa7b6084ef7f64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SerializableTableWithSize.estimatedSize</definition>
        <argsstring>()</argsstring>
        <name>estimatedSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="52" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aedb1aa0119bb58f612e43c38b136e64f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SerializableTableWithSize.close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="65" column="15" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a36fca9d44fdcb24245fa7b6084ef7f64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SerializableTableWithSize.estimatedSize</definition>
        <argsstring>()</argsstring>
        <name>estimatedSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="53" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aedb1aa0119bb58f612e43c38b136e64f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SerializableTableWithSize.close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="66" column="15" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a36fca9d44fdcb24245fa7b6084ef7f64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long org.apache.iceberg.spark.source.SerializableTableWithSize.estimatedSize</definition>
        <argsstring>()</argsstring>
        <name>estimatedSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="53" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aedb1aa0119bb58f612e43c38b136e64f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.spark.source.SerializableTableWithSize.close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <exceptions> throws Exception </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="66" column="15" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="66" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a58ccfc5fb2baa1dd247cad10874034ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>static Table org.apache.iceberg.spark.source.SerializableTableWithSize.copyOf</definition>
        <argsstring>(Table table)</argsstring>
        <name>copyOf</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ae8117c53577233fd5ffde28e46a0bcf2">copyOf</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a read-only serializable table that can be sent to other nodes in a cluster.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the original table to copy the state from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a read-only serializable table reflecting the current state of the original table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="56" column="23" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a58ccfc5fb2baa1dd247cad10874034ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>static Table org.apache.iceberg.spark.source.SerializableTableWithSize.copyOf</definition>
        <argsstring>(Table table)</argsstring>
        <name>copyOf</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ae8117c53577233fd5ffde28e46a0bcf2">copyOf</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a read-only serializable table that can be sent to other nodes in a cluster.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the original table to copy the state from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a read-only serializable table reflecting the current state of the original table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="57" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a58ccfc5fb2baa1dd247cad10874034ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>static Table org.apache.iceberg.spark.source.SerializableTableWithSize.copyOf</definition>
        <argsstring>(Table table)</argsstring>
        <name>copyOf</name>
        <reimplements refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ae8117c53577233fd5ffde28e46a0bcf2">copyOf</reimplements>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a read-only serializable table that can be sent to other nodes in a cluster.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the original table to copy the state from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a read-only serializable table reflecting the current state of the original table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="57" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="57" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a41201e984c5cfac065fcb37c8e0a94d9" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.spark.source.SerializableTableWithSize.invalidateCache</definition>
        <argsstring>(String name)</argsstring>
        <name>invalidateCache</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="102" column="23" bodyfile="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a41201e984c5cfac065fcb37c8e0a94d9" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.spark.source.SerializableTableWithSize.invalidateCache</definition>
        <argsstring>(String name)</argsstring>
        <name>invalidateCache</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="102" column="23" bodyfile="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="102" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class provides a serializable table with a known size estimate. Spark calls its SizeEstimator class when broadcasting variables and this can be an expensive operation, so providing a known size estimate allows that operation to be skipped.</para>
<para>This class also implements AutoCloseable to avoid leaking resources upon broadcasting. Broadcast variables are destroyed and cleaned up on the driver and executors once they are garbage collected on the driver. The implementation ensures only resources used by copies of the main table are released. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.apache.iceberg.Table</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Table"/>
      </node>
      <node id="2">
        <label>org.apache.iceberg.SerializableTable</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>AutoCloseable</label>
      </node>
      <node id="5">
        <label>Serializable</label>
      </node>
      <node id="4">
        <label>org.apache.iceberg.HasTableOperations</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations"/>
      </node>
      <node id="6">
        <label>KnownSizeEstimation</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SerializableTableWithSize</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>org.apache.iceberg.Table</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1Table"/>
      </node>
      <node id="22">
        <label>List&lt; org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="2">
        <label>org.apache.iceberg.SerializableTable</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>lazySortOrder</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lazyTable</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>encryption</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>refs</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>specAsJsonMap</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>lazySchema</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>uuid</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>lazyLocationProvider</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>io</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>lazySpecs</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>Map&lt; String, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="31">
        <label>Map&lt; String, String &gt;</label>
      </node>
      <node id="36">
        <label>AutoCloseable</label>
      </node>
      <node id="27">
        <label>org.apache.iceberg.encryption.EncryptionManager</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1encryption_1_1EncryptionManager"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>org.apache.iceberg.NullOrder</label>
        <link refid="enumorg_1_1apache_1_1iceberg_1_1NullOrder"/>
      </node>
      <node id="18">
        <label>Map&lt; String, Integer &gt;</label>
      </node>
      <node id="11">
        <label>org.apache.iceberg.Schema</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1Schema"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>NEWLINE</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>aliasToId</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>identifierFieldIdSet</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>idToAccessor</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>idToName</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>idToField</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>nameToId</edgelabel>
          <edgelabel>lowerCaseNameToId</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>struct</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>idsToReassigned</edgelabel>
          <edgelabel>idsToOriginal</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>org.apache.iceberg.types.Types.StructType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1StructType"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>fieldList</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>FIELD_SEP</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>fieldsById</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>fieldsByLowerCaseName</edgelabel>
          <edgelabel>fieldsByName</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Serializable</label>
      </node>
      <node id="17">
        <label>Map&lt; Integer, org.apache.iceberg.types.Types.NestedField &gt;</label>
      </node>
      <node id="8">
        <label>org.apache.iceberg.SortDirection</label>
        <link refid="enumorg_1_1apache_1_1iceberg_1_1SortDirection"/>
      </node>
      <node id="4">
        <label>org.apache.iceberg.HasTableOperations</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations"/>
      </node>
      <node id="34">
        <label>Map&lt; Integer, org.apache.iceberg.PartitionSpec &gt;</label>
      </node>
      <node id="14">
        <label>Set&lt; Integer &gt;</label>
      </node>
      <node id="7">
        <label>org.apache.iceberg.SortField</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1SortField"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>direction</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>nullOrder</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>Map&lt; Integer, Integer &gt;</label>
      </node>
      <node id="37">
        <label>Logger</label>
      </node>
      <node id="13">
        <label>BiMap&lt; String, Integer &gt;</label>
      </node>
      <node id="28">
        <label>Map&lt; String, org.apache.iceberg.SnapshotRef &gt;</label>
      </node>
      <node id="20">
        <label>org.apache.iceberg.types.Type.NestedType</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Type_1_1NestedType"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org.apache.iceberg.SortOrder</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1SortOrder"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>UNSORTED_ORDER</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fields</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>fieldList</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>org.apache.iceberg.types.Types.NestedField</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1NestedField"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>KnownSizeEstimation</label>
      </node>
      <node id="1">
        <label>org.apache.iceberg.spark.source.SerializableTableWithSize</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>LOG</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>org.apache.iceberg.types.Type</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>org.apache.iceberg.io.FileIO</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>Map&lt; Integer, String &gt;</label>
      </node>
      <node id="26">
        <label>List&lt; org.apache.iceberg.SortField &gt;</label>
      </node>
      <node id="33">
        <label>Closeable</label>
      </node>
      <node id="29">
        <label>UUID</label>
      </node>
      <node id="9">
        <label>org.apache.iceberg.transforms.Transform&lt;?, ?&gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1transforms_1_1Transform"/>
      </node>
      <node id="30">
        <label>org.apache.iceberg.io.LocationProvider</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1LocationProvider"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>Map&lt; Integer, org.apache.iceberg.Accessor&lt; org.apache.iceberg.StructLike &gt; &gt;</label>
      </node>
      <node id="12">
        <label>Joiner</label>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" line="39" column="50" bodyfile="spark/v3.3/spark/src/main/java/org/apache/iceberg/spark/source/SerializableTableWithSize.java" bodystart="38" bodyend="98"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aedb1aa0119bb58f612e43c38b136e64f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>close</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aedb1aa0119bb58f612e43c38b136e64f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>close</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aedb1aa0119bb58f612e43c38b136e64f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>close</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a58ccfc5fb2baa1dd247cad10874034ae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>copyOf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a58ccfc5fb2baa1dd247cad10874034ae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>copyOf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a58ccfc5fb2baa1dd247cad10874034ae" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>copyOf</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ae04bd250efc50dd677f412a09c7b6b8d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>currentSnapshot</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a4feaf9949f4b617084a40391eaf17f61" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>defaultSpecId</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aef4280db048e441d697b8698df1b007e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>encryption</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a983922a6b9a9c8418c898e6679b4037c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>encryption</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a6c515d43a4870ad6f57386616763ec07" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>errorMsg</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a36fca9d44fdcb24245fa7b6084ef7f64" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>estimatedSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a36fca9d44fdcb24245fa7b6084ef7f64" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>estimatedSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a36fca9d44fdcb24245fa7b6084ef7f64" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>estimatedSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a11bbce60a95f257b18ca0f494a76e490" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>expireSnapshots</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ad2e4530ed8f41a342534fa1d85013556" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>fileIO</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a86d6e2182df2873219e8cd8c14e4a9df" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>history</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a41201e984c5cfac065fcb37c8e0a94d9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>invalidateCache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a41201e984c5cfac065fcb37c8e0a94d9" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>invalidateCache</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a1533583ad1328ee97a618945115ae97b" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>io</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a4114e08b1a2fc0d78ece2726935ba426" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>io</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1af20943105b8f5cedcbd816c8d6221e11" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>lazyLocationProvider</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a04d52d6b0d22e5689e0158738e843056" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>lazySchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aa546b2716128d5e1f61a0326fcd85252" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>lazySortOrder</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a8203112f3539213816cf58b71f395f67" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>lazySpecs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a603e1614d74631e9523aaf33c08de8bf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>lazyTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a66db08f1a0c4b08161469c808a62a97a" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>lazyTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a335c6ac9681dc4a6b9d44039ed0d8ffe" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>location</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a575ef5e1f33af020acfb7fb6b2631c11" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>location</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a2a6f7cc1425822152f9378dc6430c6b1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>locationProvider</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1aee2aede567e88faf2a2cafefc290d785" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>LOG</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ac559cebf3832a6865060dabf412bcfd5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>manageSnapshots</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aa21c63f01b2b05bc33e31cb9ca34fae3" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>metadataFileLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aef3835ef54f71dcdd6c00ae09a873fcd" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>metadataFileLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1af25dbc398fbed8872df038313ddb927e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>name</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a0e03891f4145dd6226e0de317af4ff7e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>name</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a167a6cde0833136ab29d4046ac158ddf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newAppend</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a491ff5f3f7c1d60ad04b8d1d1826797a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newBatchScan</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a88ea6b86ffc8cd21ab4a2347045fbea1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newDelete</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a9d0b6b8f0965ffa50c3db9657b6a5fa4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newFastAppend</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a5e309bc136c64bf2c0bdd98d03ad836f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newIncrementalAppendScan</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1af501da3c3f4c59daa9200a9d1081f265" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newIncrementalChangelogScan</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aa24fbfcfae9b6b2e8ce5e0f10dd921cb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newOverwrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a6527799309f5cd635361c0c9ab69b3d1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newReplacePartitions</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a966d9a6851c6697e1da9127b413ff7a2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newRewrite</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a8db8f52956a21b5b789516919fa639af" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newRowDelta</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a132d2517d3fade90a1334d3f80cba915" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newScan</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a5f0248df4ab3728dab325f52a493bfd0" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a60866c48e21d2ac0404a2a6d200f16d1" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>newTransaction</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aeb07010c0bb45fff193108fd338fe7de" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>operations</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aa09fab7ad797a5ab3973dbb828b9c078" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>partitionStatisticsFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1abeb61239ffbb051a1f7045a0fc98454d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>properties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a48b000235655053384f9b515bd7b7c75" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>properties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aaabb34bf08b6166c90832f3928ae635a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>refresh</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a4f7de066c15767a5eba3632b404c2906" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>refs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a61eb61e8ff2d3df56abf2aaef2e3b5de" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>refs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a019f93c39cea19c38419b53acb2e575d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>replaceSortOrder</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a06812962d64a312f7f63598c96d4057b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>rewriteManifests</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a58a5d11d72e0d9c18540a86e0cbff14e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>schema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a8a43ebe02d53d413c4ab24dc0411abaa" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>schemaAsJson</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a190daa95135b5e16bc29d4f67b5c883b" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>schemas</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ab45864891e666dcb65320a81ba25e915" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>SerializableTable</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a110e512900d8af141c1d61be331651dc" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>SerializableTableWithSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a110e512900d8af141c1d61be331651dc" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>SerializableTableWithSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a110e512900d8af141c1d61be331651dc" prot="protected" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>SerializableTableWithSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a382e93249f879e6e0fb7d95d18335243" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>serializationMarker</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SerializableTableWithSize_1a52198df70cf24d65a9e63ee6f60c3d70" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>SIZE_ESTIMATE</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a42ffe157683712580990304273b05a6f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>snapshot</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a7447a8e8fd8da42c7c7f2955046c9e9d" prot="public" virt="non-virtual" ambiguityscope="org::apache::iceberg::Table."><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>snapshot</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a5f243ad8ac64ecd0483f2df44b3f1763" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>snapshots</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a7600f31875df8b1061c530bbf725e492" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>sortOrder</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a1bf42607ead6ed7e86d1fd9dd0715c52" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>sortOrderAsJson</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a45f547ba9bd64d240cd5a5de5ea6fe50" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>sortOrders</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ab9c56f3d923721b82acf56d6aeedb7de" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>spec</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a964e1e1f75904b51ca252a2cb4c2131e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>specAsJsonMap</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1aebf03da259fb017b0a9afa887779d417" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>specs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a3e6291de8eb89c1ccf904c42ec3b7f53" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>statisticsFiles</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ab165a950c4720491cbca036bc0684b93" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>updateLocation</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a7d0c005d808c2b45b779c7ebad8261c4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>updatePartitionStatistics</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a6b0d4790cda31df125304bd7bf1c9b1e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>updateProperties</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ac18518df7779e09f0f708136529705dd" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>updateSchema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a76a92a055a890ae518b58d9506a3ecbb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>updateSpec</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a97a53c8bf3e87d443ff158d763f9404a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>updateStatistics</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1a4ec1fa08b9ce9765336564675d60cc54" prot="private" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>uuid</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1SerializableTable_1ad01d91724230c55e6817ad90bbf4f9da" prot="public" virt="non-virtual"><scope>org::apache::iceberg::spark::source::SerializableTableWithSize</scope><name>uuid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
