<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType" kind="enum" language="Java" prot="public">
    <compoundname>org::apache::iceberg::flink::sink::shuffle::StatisticsType</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType_1ac70e23140e61041b6d45cfba3b8bb115" prot="public" static="no" mutable="no">
        <type></type>
        <definition>org.apache.iceberg.flink.sink.shuffle.StatisticsType.Map</definition>
        <argsstring></argsstring>
        <name>Map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tracks the data statistics as<programlisting><codeline><highlight class="normal">Map&lt;SortKey,<sp/>Long&gt;<sp/></highlight></codeline>
</programlisting> frequency. It works better for low-cardinality scenarios (like country, event_type, etc.) where the cardinalities are in hundreds or thousands.</para>
<para><itemizedlist>
<listitem>
<para>Pro: accurate measurement on the statistics/weight of every key. </para>
</listitem>
<listitem>
<para>Con: memory footprint can be large if the key cardinality is high. </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" line="36" column="1" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType_1a86ff3fc07405eb783b8f3d85e82837f6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>org.apache.iceberg.flink.sink.shuffle.StatisticsType.Sketch</definition>
        <argsstring></argsstring>
        <name>Sketch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sample the sort keys via reservoir sampling. Then split the range partitions via range bounds from sampled values. It works better for high-cardinality scenarios (like device_id, user_id, uuid etc.) where the cardinalities can be in millions or billions.</para>
<para><itemizedlist>
<listitem>
<para>Pro: relatively low memory footprint for high-cardinality sort keys. </para>
</listitem>
<listitem>
<para>Con: non-precise approximation with potentially lower accuracy. </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" line="48" column="1" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType_1aab5836840089396e7c45e463c5b2853d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>org.apache.iceberg.flink.sink.shuffle.StatisticsType.Auto</definition>
        <argsstring></argsstring>
        <name>Auto</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initially use Map for statistics tracking. If key cardinality turns out to be high, automatically switch to sketch sampling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" line="55" column="1" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Range distribution requires gathering statistics on the sort keys to determine proper range boundaries to distribute/cluster rows before writer operators. </para>
    </detaileddescription>
    <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" line="25" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/sink/shuffle/StatisticsType.java" bodystart="25" bodyend="55"/>
    <listofallmembers>
      <member refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType_1aab5836840089396e7c45e463c5b2853d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::sink::shuffle::StatisticsType</scope><name>Auto</name></member>
      <member refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType_1ac70e23140e61041b6d45cfba3b8bb115" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::sink::shuffle::StatisticsType</scope><name>Map</name></member>
      <member refid="enumorg_1_1apache_1_1iceberg_1_1flink_1_1sink_1_1shuffle_1_1StatisticsType_1a86ff3fc07405eb783b8f3d85e82837f6" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::sink::shuffle::StatisticsType</scope><name>Sketch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
