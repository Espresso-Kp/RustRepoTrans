<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v3_84_2spark_2src_2main_2java_2org_2apache_2iceberg_2spark_2data_2SparkOrcValueWriters_8java" kind="file" language="Java">
    <compoundname>SparkOrcValueWriters.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters" prot="package">org::apache::iceberg::spark::data::SparkOrcValueWriters</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1StringWriter" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::StringWriter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1UUIDWriter" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::UUIDWriter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1TimestampTzWriter" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::TimestampTzWriter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::Decimal18Writer</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal38Writer" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::Decimal38Writer</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::ListWriter</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter" prot="private">org::apache::iceberg::spark::data::SparkOrcValueWriters::MapWriter</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1spark_1_1data">org::apache::iceberg::spark::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.spark.data;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.nio.ByteBuffer;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.UUID;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.stream.Stream;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1FieldMetrics" kindref="compound">FieldMetrics</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1orc" kindref="compound">orc</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1UUIDUtil" kindref="compound">UUIDUtil</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.TypeDescription;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.common.type.HiveDecimal;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.ql.exec.vector.BytesColumnVector;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.ql.exec.vector.ColumnVector;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.ql.exec.vector.DecimalColumnVector;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.ql.exec.vector.ListColumnVector;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.ql.exec.vector.MapColumnVector;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.orc.storage.ql.exec.vector.TimestampColumnVector;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.util.ArrayData;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.util.MapData;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.types.Decimal;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.unsafe.types.UTF8String;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SparkOrcValueWriters<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SparkOrcValueWriters()<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;?&gt;<sp/>strings()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringWriter.INSTANCE;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;?&gt;<sp/>uuids()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UUIDWriter.INSTANCE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;?&gt;<sp/>timestampTz()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TimestampTzWriter.INSTANCE;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;?&gt;<sp/>decimal(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(precision<sp/>&lt;=<sp/>18)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Decimal18Writer(scale);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Decimal38Writer();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;?&gt;<sp/>list(OrcValueWriter&lt;?&gt;<sp/>element,<sp/>List&lt;TypeDescription&gt;<sp/>orcType)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ListWriter&lt;&gt;(element,<sp/>orcType);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;?&gt;<sp/>map(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OrcValueWriter&lt;?&gt;<sp/>keyWriter,<sp/>OrcValueWriter&lt;?&gt;<sp/>valueWriter,<sp/>List&lt;TypeDescription&gt;<sp/>orcTypes)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MapWriter&lt;&gt;(keyWriter,<sp/>valueWriter,<sp/>orcTypes);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringWriter<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>OrcValueWriter&lt;UTF8String&gt;<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>StringWriter<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1StringWriter_1a89d795238531db9094b8e663452ebc6e" kindref="member">INSTANCE</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StringWriter();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="77" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1StringWriter_1a657b28ef265c8ae1b9922977a15f79a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1StringWriter_1a657b28ef265c8ae1b9922977a15f79a0" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>UTF8String<sp/>data,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>value<sp/>=<sp/>data.getBytes();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((BytesColumnVector)<sp/>output).setRef(rowId,<sp/>value,<sp/>0,<sp/>value.length);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UUIDWriter<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>&lt;UTF8String&gt;<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>UUIDWriter<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1UUIDWriter_1a5b07ffff957e839692f3355edafca649" kindref="member">INSTANCE</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UUIDWriter();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="87" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1UUIDWriter_1ae68e95658d2636b032ab9d47de3127c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1UUIDWriter_1ae68e95658d2636b032ab9d47de3127c4" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>UTF8String<sp/>data,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>((BytesColumnVector)<sp/>output).setRef(..)<sp/>just<sp/>stores<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>passed<sp/>byte[],<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>use<sp/>a<sp/>ThreadLocal<sp/>ByteBuffer<sp/>here<sp/>like<sp/>in<sp/>other<sp/>places<sp/>because<sp/>subsequent<sp/>writes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>then<sp/>overwrite<sp/>previous<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ByteBuffer<sp/>buffer<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1UUIDUtil" kindref="compound">UUIDUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1UUIDUtil_1a88955c8e2311aa6b93c0a5feec2c3c61" kindref="member">convertToByteBuffer</ref>(UUID.fromString(data.toString()));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((BytesColumnVector)<sp/>output).setRef(rowId,<sp/>buffer.array(),<sp/>0,<sp/>buffer.array().length);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TimestampTzWriter<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>&lt;Long&gt;<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>TimestampTzWriter<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1TimestampTzWriter_1ad1271a17cf23c4786645e5bdf7cef607" kindref="member">INSTANCE</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TimestampTzWriter();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="100" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1TimestampTzWriter_1a187e5d40aa4980629ff341244932f441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1TimestampTzWriter_1a187e5d40aa4980629ff341244932f441" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>Long<sp/>micros,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TimestampColumnVector<sp/>cv<sp/>=<sp/>(TimestampColumnVector)<sp/>output;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.time[rowId]<sp/>=<sp/>Math.floorDiv(micros,<sp/>1_000);<sp/></highlight><highlight class="comment">//<sp/>millis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.nanos[rowId]<sp/>=<sp/>(int)<sp/>Math.floorMod(micros,<sp/>1_000_000)<sp/>*<sp/>1_000;<sp/></highlight><highlight class="comment">//<sp/>nanos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Decimal18Writer<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>&lt;Decimal&gt;<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer_1a784166f205c4a372fed1bc6aa8403558" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Decimal18Writer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer_1a784166f205c4a372fed1bc6aa8403558" kindref="member">scale</ref>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.scale<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer_1a784166f205c4a372fed1bc6aa8403558" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="115" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer_1a5976597843b8ec7b731fd4d3b825bd0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer_1a5976597843b8ec7b731fd4d3b825bd0b" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>Decimal<sp/>decimal,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((DecimalColumnVector)<sp/>output)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.vector[rowId].setFromLongAndScale(decimal.toUnscaledLong(),<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal18Writer_1a784166f205c4a372fed1bc6aa8403558" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Decimal38Writer<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>&lt;Decimal&gt;<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="124" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal38Writer_1affdc4c49323f9cb2ee7fdb6aca4346cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1Decimal38Writer_1affdc4c49323f9cb2ee7fdb6aca4346cb" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>Decimal<sp/>decimal,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((DecimalColumnVector)<sp/>output)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.vector[rowId].set(HiveDecimal.create(decimal.toJavaBigDecimal()));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter" kindref="compound">ListWriter</ref>&lt;T&gt;<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>&lt;ArrayData&gt;<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter&lt;T&gt;</ref><sp/>writer;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kindref="compound">FieldGetter</ref>&lt;T&gt;<sp/>fieldGetter;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unchecked&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter" kindref="compound">ListWriter</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter&lt;T&gt;</ref><sp/>writer,<sp/>List&lt;TypeDescription&gt;<sp/>orcTypes)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orcTypes.size()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>one<sp/>(and<sp/>same)<sp/>ORC<sp/>type<sp/>for<sp/>list<sp/>elements,<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>orcTypes);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.writer<sp/>=<sp/>writer;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.fieldGetter<sp/>=</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kindref="compound">FieldGetter</ref>&lt;T&gt;)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.createFieldGetter(orcTypes.get(0));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="146" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter_1a3de4af168e0e26ca56f42abf39e28702" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter_1a3de4af168e0e26ca56f42abf39e28702" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>ArrayData<sp/>value,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ListColumnVector<sp/>cv<sp/>=<sp/>(ListColumnVector)<sp/>output;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>the<sp/>length<sp/>and<sp/>start<sp/>of<sp/>the<sp/>list<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.lengths[rowId]<sp/>=<sp/>value.numElements();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.offsets[rowId]<sp/>=<sp/>cv.childCount;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.childCount<sp/>=<sp/>(int)<sp/>(cv.childCount<sp/>+<sp/>cv.lengths[rowId]);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>child<sp/>is<sp/>big<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>growColumnVector(cv.child,<sp/>cv.childCount);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>each<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;<sp/>e<sp/>&lt;<sp/>cv.lengths[rowId];<sp/>++e)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter_1a23fc74da1171a636fb5f3656b5b4d2e4" kindref="member">write</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(e<sp/>+<sp/>cv.offsets[rowId]),<sp/>fieldGetter.getFieldOrNull(value,<sp/>e),<sp/>cv.child);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="161" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter_1a1012df5d931827f1439a558da1857290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Stream&lt;FieldMetrics&lt;?&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1ListWriter_1a1012df5d931827f1439a558da1857290" kindref="member">metrics</ref>()<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter_1a9825967f6d6d1cfab71c721595b5a423" kindref="member">metrics</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter" kindref="compound">MapWriter</ref>&lt;K,<sp/>V&gt;<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter</ref>&lt;MapData&gt;<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter&lt;K&gt;</ref><sp/>keyWriter;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter&lt;V&gt;</ref><sp/>valueWriter;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kindref="compound">FieldGetter</ref>&lt;K&gt;<sp/>keyFieldGetter;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kindref="compound">FieldGetter</ref>&lt;V&gt;<sp/>valueFieldGetter;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unchecked&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter" kindref="compound">MapWriter</ref>(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter&lt;K&gt;</ref><sp/>keyWriter,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter" kindref="compound">OrcValueWriter&lt;V&gt;</ref><sp/>valueWriter,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;TypeDescription&gt;<sp/>orcTypes)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orcTypes.size()<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>two<sp/>ORC<sp/>type<sp/>descriptions<sp/>for<sp/>a<sp/>map,<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>orcTypes);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.keyWriter<sp/>=<sp/>keyWriter;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.valueWriter<sp/>=<sp/>valueWriter;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.keyFieldGetter<sp/>=</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kindref="compound">FieldGetter</ref>&lt;K&gt;)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.createFieldGetter(orcTypes.get(0));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.valueFieldGetter<sp/>=</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter_1_1FieldGetter" kindref="compound">FieldGetter</ref>&lt;V&gt;)<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcWriter" kindref="compound">SparkOrcWriter</ref>.createFieldGetter(orcTypes.get(1));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="190" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter_1ad19e98a02fc70c000c2a7d7db36455d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter_1ad19e98a02fc70c000c2a7d7db36455d1" kindref="member">nonNullWrite</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowId,<sp/>MapData<sp/>map,<sp/>ColumnVector<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ArrayData<sp/>key<sp/>=<sp/>map.keyArray();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ArrayData<sp/>value<sp/>=<sp/>map.valueArray();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MapColumnVector<sp/>cv<sp/>=<sp/>(MapColumnVector)<sp/>output;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>the<sp/>length<sp/>and<sp/>start<sp/>of<sp/>the<sp/>list<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.lengths[rowId]<sp/>=<sp/>value.numElements();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.offsets[rowId]<sp/>=<sp/>cv.childCount;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.childCount<sp/>=<sp/>(int)<sp/>(cv.childCount<sp/>+<sp/>cv.lengths[rowId]);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>child<sp/>is<sp/>big<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>growColumnVector(cv.keys,<sp/>cv.childCount);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>growColumnVector(cv.values,<sp/>cv.childCount);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>each<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;<sp/>e<sp/>&lt;<sp/>cv.lengths[rowId];<sp/>++e)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>(int)<sp/>(e<sp/>+<sp/>cv.offsets[rowId]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWriter.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter_1a23fc74da1171a636fb5f3656b5b4d2e4" kindref="member">write</ref>(pos,<sp/>keyFieldGetter.getFieldOrNull(key,<sp/>e),<sp/>cv.keys);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueWriter.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter_1a23fc74da1171a636fb5f3656b5b4d2e4" kindref="member">write</ref>(pos,<sp/>valueFieldGetter.getFieldOrNull(value,<sp/>e),<sp/>cv.values);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="210" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter_1a2807d4156dbb9309130b524cb544d9c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Stream&lt;FieldMetrics&lt;?&gt;&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1data_1_1SparkOrcValueWriters_1_1MapWriter_1a2807d4156dbb9309130b524cb544d9c1" kindref="member">metrics</ref>()<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Stream.concat(keyWriter.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter_1a9825967f6d6d1cfab71c721595b5a423" kindref="member">metrics</ref>(),<sp/>valueWriter.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1orc_1_1OrcValueWriter_1a9825967f6d6d1cfab71c721595b5a423" kindref="member">metrics</ref>());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>growColumnVector(ColumnVector<sp/>cv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>requestedSize)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv.isNull.length<sp/>&lt;<sp/>requestedSize)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>growth<sp/>factor<sp/>of<sp/>3<sp/>to<sp/>avoid<sp/>frequent<sp/>array<sp/>allocations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv.ensureSize(requestedSize<sp/>*<sp/>3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="spark/v3.4/spark/src/main/java/org/apache/iceberg/spark/data/SparkOrcValueWriters.java"/>
  </compounddef>
</doxygen>
