<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters" kind="class" language="Java" prot="public">
    <compoundname>org::apache::iceberg::flink::FlinkFilters</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a80865c476e8bf57583702b70133f6e79" prot="private" static="yes" mutable="no">
        <type>final Pattern</type>
        <definition>static final Pattern org.apache.iceberg.flink.FlinkFilters::STARTS_WITH_PATTERN</definition>
        <argsstring></argsstring>
        <name>STARTS_WITH_PATTERN</name>
        <initializer>= Pattern.compile(&quot;([^%]+)%&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="47" column="32" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ac6315a77f53480ad230736a639592337" prot="private" static="yes" mutable="no">
        <type>final Map&lt; FunctionDefinition, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation" kindref="compound">Operation</ref> &gt;</type>
        <definition>static final Map&lt; FunctionDefinition, Operation &gt; org.apache.iceberg.flink.FlinkFilters::FILTERS</definition>
        <argsstring></argsstring>
        <name>FILTERS</name>
        <initializer>=
      ImmutableMap.&lt;FunctionDefinition, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation" kindref="compound">Operation</ref>&gt;builder()
          .put(BuiltInFunctionDefinitions.EQUALS, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a3524d6826a93f5be5976f3ff59fd360f" kindref="member">Operation.EQ</ref>)
          .put(BuiltInFunctionDefinitions.NOT_EQUALS, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a597353b8a2243894e5e9017aa7627680" kindref="member">Operation.NOT_EQ</ref>)
          .put(BuiltInFunctionDefinitions.GREATER_THAN, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1aea5d39ce0d8a35e36d676bafcd9fddb2" kindref="member">Operation.GT</ref>)
          .put(BuiltInFunctionDefinitions.GREATER_THAN_OR_EQUAL, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1aa8babb4213f679273c3fe7ebcb59c211" kindref="member">Operation.GT_EQ</ref>)
          .put(BuiltInFunctionDefinitions.LESS_THAN, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a17ecfc65b9e80f50a7e33fab146a87cc" kindref="member">Operation.LT</ref>)
          .put(BuiltInFunctionDefinitions.LESS_THAN_OR_EQUAL, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a8ee331c0beb1dcf5b06b3ec2ba2698dc" kindref="member">Operation.LT_EQ</ref>)
          .put(BuiltInFunctionDefinitions.IS_NULL, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1af33ecb4da30d45c9f3578311d8573976" kindref="member">Operation.IS_NULL</ref>)
          .put(BuiltInFunctionDefinitions.IS_NOT_NULL, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a27bbaff7508a8dbe1bd922dcbbe89af7" kindref="member">Operation.NOT_NULL</ref>)
          .put(BuiltInFunctionDefinitions.AND, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1adf1bdf5f905330fbb8301eb50a8023b9" kindref="member">Operation.AND</ref>)
          .put(BuiltInFunctionDefinitions.OR, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a97ff9f92bc6a352b90881a8973265248" kindref="member">Operation.OR</ref>)
          .put(BuiltInFunctionDefinitions.NOT, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a58314d37a0f0bf250a4526523b2d9d2f" kindref="member">Operation.NOT</ref>)
          .put(BuiltInFunctionDefinitions.LIKE, <ref refid="enumorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression_1_1Operation_1a7b3fc840a61eb03bb0ddc26c09c90f5d" kindref="member">Operation.STARTS_WITH</ref>)
          .buildOrThrow()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="49" column="28" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ad1222b22a5d2c05a6822b58f1849bf8d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.FlinkFilters.FlinkFilters</definition>
        <argsstring>()</argsstring>
        <name>FlinkFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="45" column="11" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ad1222b22a5d2c05a6822b58f1849bf8d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.FlinkFilters.FlinkFilters</definition>
        <argsstring>()</argsstring>
        <name>FlinkFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="45" column="11" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ad1222b22a5d2c05a6822b58f1849bf8d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.FlinkFilters.FlinkFilters</definition>
        <argsstring>()</argsstring>
        <name>FlinkFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="45" column="11" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a4db31c6d1912bf51963c6053511c5025" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convert</definition>
        <argsstring>(org.apache.flink.table.expressions.Expression flinkExpression)</argsstring>
        <name>convert</name>
        <param>
          <type>org.apache.flink.table.expressions.Expression</type>
          <declname>flinkExpression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert flink expression to iceberg expression.</para>
<para>the BETWEEN, NOT_BETWEEN, IN expression will be converted by flink automatically. the BETWEEN will be converted to (GT_EQ AND LT_EQ), the NOT_BETWEEN will be converted to (LT_EQ OR GT_EQ), the IN will be converted to OR, so we do not add the conversion here</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flinkExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>the flink expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the iceberg expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="75" column="26" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="75" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a4db31c6d1912bf51963c6053511c5025" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convert</definition>
        <argsstring>(org.apache.flink.table.expressions.Expression flinkExpression)</argsstring>
        <name>convert</name>
        <param>
          <type>org.apache.flink.table.expressions.Expression</type>
          <declname>flinkExpression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert flink expression to iceberg expression.</para>
<para>the BETWEEN, NOT_BETWEEN, IN expression will be converted by flink automatically. the BETWEEN will be converted to (GT_EQ AND LT_EQ), the NOT_BETWEEN will be converted to (LT_EQ OR GT_EQ), the IN will be converted to OR, so we do not add the conversion here</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flinkExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>the flink expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the iceberg expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="75" column="26" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="75" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a4db31c6d1912bf51963c6053511c5025" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convert</definition>
        <argsstring>(org.apache.flink.table.expressions.Expression flinkExpression)</argsstring>
        <name>convert</name>
        <param>
          <type>org.apache.flink.table.expressions.Expression</type>
          <declname>flinkExpression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert flink expression to iceberg expression.</para>
<para>the BETWEEN, NOT_BETWEEN, IN expression will be converted by flink automatically. the BETWEEN will be converted to (GT_EQ AND LT_EQ), the NOT_BETWEEN will be converted to (LT_EQ OR GT_EQ), the IN will be converted to OR, so we do not add the conversion here</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flinkExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>the flink expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the iceberg expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="75" column="26" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="75" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a72e284548d1b2b80d21c85cc2e891f34" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T extends ResolvedExpression &gt; Optional&lt; T &gt;</type>
        <definition>static &lt;T extends ResolvedExpression&gt; Optional&lt;T&gt; org.apache.iceberg.flink.FlinkFilters.onlyChildAs</definition>
        <argsstring>(CallExpression call, Class&lt; T &gt; expectedChildClass)</argsstring>
        <name>onlyChildAs</name>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <param>
          <type>Class&lt; T &gt;</type>
          <declname>expectedChildClass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="150" column="30" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="150" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a76c120c2ac91994573f4cbe496238d00" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertLike</definition>
        <argsstring>(CallExpression call)</argsstring>
        <name>convertLike</name>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="165" column="27" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="165" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a25fec9f6e65edaf95f2416c844acaa4e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertLogicExpression</definition>
        <argsstring>(BiFunction&lt; Expression, Expression, Expression &gt; function, CallExpression call)</argsstring>
        <name>convertLogicExpression</name>
        <param>
          <type>BiFunction&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="196" column="27" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="196" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a115257b3409f10763e386318416a2755" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; Object &gt;</type>
        <definition>static Optional&lt;Object&gt; org.apache.iceberg.flink.FlinkFilters.convertLiteral</definition>
        <argsstring>(ValueLiteralExpression expression)</argsstring>
        <name>convertLiteral</name>
        <param>
          <type>ValueLiteralExpression</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="212" column="27" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="212" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1aa6807916790a44974dad6385a7ecb441" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertFieldAndLiteral</definition>
        <argsstring>(BiFunction&lt; String, Object, Expression &gt; expr, CallExpression call)</argsstring>
        <name>convertFieldAndLiteral</name>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="232" column="27" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1acb2264d69fefc7f5c115b9a941910558" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertFieldAndLiteral</definition>
        <argsstring>(BiFunction&lt; String, Object, Expression &gt; convertLR, BiFunction&lt; String, Object, Expression &gt; convertRL, CallExpression call)</argsstring>
        <name>convertFieldAndLiteral</name>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>convertLR</declname>
        </param>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>convertRL</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="237" column="27" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="237" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a72e284548d1b2b80d21c85cc2e891f34" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T extends ResolvedExpression &gt; Optional&lt; T &gt;</type>
        <definition>static &lt;T extends ResolvedExpression&gt; Optional&lt;T&gt; org.apache.iceberg.flink.FlinkFilters.onlyChildAs</definition>
        <argsstring>(CallExpression call, Class&lt; T &gt; expectedChildClass)</argsstring>
        <name>onlyChildAs</name>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <param>
          <type>Class&lt; T &gt;</type>
          <declname>expectedChildClass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="150" column="30" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="150" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a76c120c2ac91994573f4cbe496238d00" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertLike</definition>
        <argsstring>(CallExpression call)</argsstring>
        <name>convertLike</name>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="165" column="27" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="165" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a25fec9f6e65edaf95f2416c844acaa4e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertLogicExpression</definition>
        <argsstring>(BiFunction&lt; Expression, Expression, Expression &gt; function, CallExpression call)</argsstring>
        <name>convertLogicExpression</name>
        <param>
          <type>BiFunction&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="196" column="27" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="196" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a115257b3409f10763e386318416a2755" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; Object &gt;</type>
        <definition>static Optional&lt;Object&gt; org.apache.iceberg.flink.FlinkFilters.convertLiteral</definition>
        <argsstring>(ValueLiteralExpression expression)</argsstring>
        <name>convertLiteral</name>
        <param>
          <type>ValueLiteralExpression</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="212" column="27" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="212" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1aa6807916790a44974dad6385a7ecb441" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertFieldAndLiteral</definition>
        <argsstring>(BiFunction&lt; String, Object, Expression &gt; expr, CallExpression call)</argsstring>
        <name>convertFieldAndLiteral</name>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="232" column="27" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1acb2264d69fefc7f5c115b9a941910558" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertFieldAndLiteral</definition>
        <argsstring>(BiFunction&lt; String, Object, Expression &gt; convertLR, BiFunction&lt; String, Object, Expression &gt; convertRL, CallExpression call)</argsstring>
        <name>convertFieldAndLiteral</name>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>convertLR</declname>
        </param>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>convertRL</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="237" column="27" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="237" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a72e284548d1b2b80d21c85cc2e891f34" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; T extends ResolvedExpression &gt; Optional&lt; T &gt;</type>
        <definition>static &lt;T extends ResolvedExpression&gt; Optional&lt;T&gt; org.apache.iceberg.flink.FlinkFilters.onlyChildAs</definition>
        <argsstring>(CallExpression call, Class&lt; T &gt; expectedChildClass)</argsstring>
        <name>onlyChildAs</name>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <param>
          <type>Class&lt; T &gt;</type>
          <declname>expectedChildClass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="150" column="30" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="150" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a76c120c2ac91994573f4cbe496238d00" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertLike</definition>
        <argsstring>(CallExpression call)</argsstring>
        <name>convertLike</name>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="165" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="165" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a25fec9f6e65edaf95f2416c844acaa4e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertLogicExpression</definition>
        <argsstring>(BiFunction&lt; Expression, Expression, Expression &gt; function, CallExpression call)</argsstring>
        <name>convertLogicExpression</name>
        <param>
          <type>BiFunction&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="196" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="196" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a115257b3409f10763e386318416a2755" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; Object &gt;</type>
        <definition>static Optional&lt;Object&gt; org.apache.iceberg.flink.FlinkFilters.convertLiteral</definition>
        <argsstring>(ValueLiteralExpression expression)</argsstring>
        <name>convertLiteral</name>
        <param>
          <type>ValueLiteralExpression</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="212" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="212" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1aa6807916790a44974dad6385a7ecb441" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertFieldAndLiteral</definition>
        <argsstring>(BiFunction&lt; String, Object, Expression &gt; expr, CallExpression call)</argsstring>
        <name>convertFieldAndLiteral</name>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="232" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1acb2264d69fefc7f5c115b9a941910558" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Optional&lt; <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>static Optional&lt;Expression&gt; org.apache.iceberg.flink.FlinkFilters.convertFieldAndLiteral</definition>
        <argsstring>(BiFunction&lt; String, Object, Expression &gt; convertLR, BiFunction&lt; String, Object, Expression &gt; convertRL, CallExpression call)</argsstring>
        <name>convertFieldAndLiteral</name>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>convertLR</declname>
        </param>
        <param>
          <type>BiFunction&lt; String, Object, <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>convertRL</declname>
        </param>
        <param>
          <type>CallExpression</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="237" column="27" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="237" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.flink.FlinkFilters</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters"/>
        <childnode refid="2" relation="usage">
          <edgelabel>FILTERS</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>STARTS_WITH_PATTERN</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Map&lt; FunctionDefinition, org.apache.iceberg.expressions.Expression.Operation &gt;</label>
      </node>
      <node id="3">
        <label>Pattern</label>
      </node>
    </collaborationgraph>
    <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" line="44" column="26" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/FlinkFilters.java" bodystart="44" bodyend="266"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a4db31c6d1912bf51963c6053511c5025" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a4db31c6d1912bf51963c6053511c5025" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a4db31c6d1912bf51963c6053511c5025" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convert</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1aa6807916790a44974dad6385a7ecb441" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertFieldAndLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1acb2264d69fefc7f5c115b9a941910558" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertFieldAndLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1aa6807916790a44974dad6385a7ecb441" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertFieldAndLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1acb2264d69fefc7f5c115b9a941910558" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertFieldAndLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1aa6807916790a44974dad6385a7ecb441" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertFieldAndLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1acb2264d69fefc7f5c115b9a941910558" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertFieldAndLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a76c120c2ac91994573f4cbe496238d00" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLike</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a76c120c2ac91994573f4cbe496238d00" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLike</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a76c120c2ac91994573f4cbe496238d00" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLike</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a115257b3409f10763e386318416a2755" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a115257b3409f10763e386318416a2755" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a115257b3409f10763e386318416a2755" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLiteral</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a25fec9f6e65edaf95f2416c844acaa4e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLogicExpression</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a25fec9f6e65edaf95f2416c844acaa4e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLogicExpression</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a25fec9f6e65edaf95f2416c844acaa4e" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>convertLogicExpression</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ac6315a77f53480ad230736a639592337" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>FILTERS</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ad1222b22a5d2c05a6822b58f1849bf8d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>FlinkFilters</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ad1222b22a5d2c05a6822b58f1849bf8d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>FlinkFilters</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1ad1222b22a5d2c05a6822b58f1849bf8d" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>FlinkFilters</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a72e284548d1b2b80d21c85cc2e891f34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>onlyChildAs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a72e284548d1b2b80d21c85cc2e891f34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>onlyChildAs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a72e284548d1b2b80d21c85cc2e891f34" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>onlyChildAs</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1FlinkFilters_1a80865c476e8bf57583702b70133f6e79" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::FlinkFilters</scope><name>STARTS_WITH_PATTERN</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
