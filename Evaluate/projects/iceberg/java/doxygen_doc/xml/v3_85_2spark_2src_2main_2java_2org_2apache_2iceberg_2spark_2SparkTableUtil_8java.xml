<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="v3_85_2spark_2src_2main_2java_2org_2apache_2iceberg_2spark_2SparkTableUtil_8java" kind="file" language="Java">
    <compoundname>SparkTableUtil.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil" prot="public">org::apache::iceberg::spark::SparkTableUtil</innerclass>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" prot="public">org::apache::iceberg::spark::SparkTableUtil::SparkPartition</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1spark">org::apache::iceberg::spark</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.spark;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.functions.col;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.IOException;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.Serializable;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.net.URI;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collections;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Iterator;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.UUID;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.stream.Collectors;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1hadoop" kindref="compound">hadoop</ref>.conf.Configuration;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1hadoop" kindref="compound">hadoop</ref>.fs.Path;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1AppendFiles" kindref="compound">AppendFiles</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestFiles" kindref="compound">ManifestFiles</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestWriter" kindref="compound">ManifestWriter</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataTableUtils" kindref="compound">MetadataTableUtils</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig" kindref="compound">MetricsConfig</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1data" kindref="compound">data</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1data_1_1TableMigrationUtil" kindref="compound">TableMigrationUtil</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1hadoop" kindref="compound">hadoop</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopFileIO" kindref="compound">HadoopFileIO</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1hadoop" kindref="compound">hadoop</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration" kindref="compound">SerializableConfiguration</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1hadoop" kindref="compound">hadoop</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1Util" kindref="compound">Util</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1io" kindref="compound">io</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1OutputFile" kindref="compound">OutputFile</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1mapping" kindref="compound">mapping</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMapping" kindref="compound">NameMapping</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1mapping" kindref="compound">mapping</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMappingParser" kindref="compound">NameMappingParser</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Joiner" kindref="compound">Joiner</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1MoreObjects" kindref="compound">MoreObjects</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.Objects;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.base.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1base_1_1Preconditions" kindref="compound">Preconditions</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableList;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.ImmutableMap;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.Lists;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.relocated.com.google.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1common" kindref="compound">common</ref>.collect.<ref refid="classorg_1_1apache_1_1iceberg_1_1relocated_1_1com_1_1google_1_1common_1_1collect_1_1Maps" kindref="compound">Maps</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1spark_1_1source" kindref="compound">source</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkTable" kindref="compound">SparkTable</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil" kindref="compound">PropertyUtil</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Tasks" kindref="compound">Tasks</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ThreadPools" kindref="compound">ThreadPools</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.TaskContext;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.api.java.JavaRDD;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.api.java.JavaSparkContext;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.api.java.function.FlatMapFunction;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.api.java.function.MapFunction;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.api.java.function.MapPartitionsFunction;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.AnalysisException;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.Column;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.Dataset;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.Encoders;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.Row;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.SparkSession;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.TableIdentifier;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst_1_1analysis" kindref="compound">analysis</ref>.NoSuchDatabaseException;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst_1_1analysis" kindref="compound">analysis</ref>.NoSuchTableException;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst_1_1analysis" kindref="compound">analysis</ref>.UnresolvedAttribute;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.catalog.CatalogTable;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.catalog.CatalogTablePartition;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.catalog.SessionCatalog;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.expressions.Expression;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.expressions.NamedExpression;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.parser.ParseException;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql_1_1catalyst" kindref="compound">catalyst</ref>.plans.logical.LogicalPlan;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.execution.datasources.v2.DataSourceV2Relation;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1spark" kindref="compound">spark</ref>.<ref refid="namespaceorg_1_1apache_1_1spark_1_1sql" kindref="compound">sql</ref>.util.CaseInsensitiveStringMap;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.Function2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.Option;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.Some;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.Tuple2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.collection.JavaConverters;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.collection.immutable.Map$;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.collection.immutable.Seq;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.collection.mutable.Builder;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scala.runtime.AbstractPartialFunction;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SparkTableUtil<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a701fbb8197f26a0464822d0aa3093efa" kindref="member">DUPLICATE_FILE_MESSAGE</ref><sp/>=</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>complete<sp/>import<sp/>because<sp/>data<sp/>files<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>be<sp/>imported<sp/>already<sp/>exist<sp/>within<sp/>the<sp/>target<sp/>table:<sp/>%s.<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>disabled<sp/>by<sp/>default<sp/>as<sp/>Iceberg<sp/>is<sp/>not<sp/>designed<sp/>for<sp/>multiple<sp/>references<sp/>to<sp/>the<sp/>same<sp/>file&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>within<sp/>the<sp/>same<sp/>table.<sp/><sp/>If<sp/>you<sp/>are<sp/>sure,<sp/>you<sp/>may<sp/>set<sp/>&apos;check_duplicate_files&apos;<sp/>to<sp/>false<sp/>to<sp/>force<sp/>the<sp/>import.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6c45180d23dac6c4b3a0e1073c08c91c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6c45180d23dac6c4b3a0e1073c08c91c" kindref="member">SparkTableUtil</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a8aa77951ef21354be135a05d05554cc7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Dataset&lt;Row&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a8aa77951ef21354be135a05d05554cc7" kindref="member">partitionDF</ref>(SparkSession<sp/>spark,<sp/>String<sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>partitions<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab0eeb735bbedd38bcd77ed09d0001eb8" kindref="member">getPartitions</ref>(spark,<sp/>table);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spark</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.createDataFrame(partitions,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref>.class)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.toDF(</highlight><highlight class="stringliteral">&quot;partition&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;uri&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1af5285fabfe5463601def6422b25c3096" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Dataset&lt;Row&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1af5285fabfe5463601def6422b25c3096" kindref="member">partitionDFByFilter</ref>(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/>String<sp/>table,<sp/>String<sp/>expression)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>partitions<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a96532ec81143af827a972c4d800cc96a" kindref="member">getPartitionsByFilter</ref>(spark,<sp/>table,<sp/>expression);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spark</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.createDataFrame(partitions,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref>.class)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.toDF(</highlight><highlight class="stringliteral">&quot;partition&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;uri&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab0eeb735bbedd38bcd77ed09d0001eb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;SparkPartition&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab0eeb735bbedd38bcd77ed09d0001eb8" kindref="member">getPartitions</ref>(SparkSession<sp/>spark,<sp/>String<sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>tableIdent<sp/>=<sp/>spark.sessionState().sqlParser().parseTableIdentifier(table);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab0eeb735bbedd38bcd77ed09d0001eb8" kindref="member">getPartitions</ref>(spark,<sp/>tableIdent,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(ParseException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>table<sp/>identifier:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>table);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a85b2c094f35664c1f2994ecb6949ae8f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;SparkPartition&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a85b2c094f35664c1f2994ecb6949ae8f" kindref="member">getPartitions</ref>(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>tableIdent,<sp/>Map&lt;String,<sp/>String&gt;<sp/>partitionFilter)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SessionCatalog<sp/>catalog<sp/>=<sp/>spark.sessionState().catalog();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CatalogTable<sp/>catalogTable<sp/>=<sp/>catalog.getTableMetadata(tableIdent);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Option&lt;scala.collection.immutable.Map&lt;String,<sp/>String&gt;&gt;<sp/>scalaPartitionFilter;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partitionFilter<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!partitionFilter.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Builder&lt;Tuple2&lt;String,<sp/>String&gt;,<sp/>scala.collection.immutable.Map&lt;String,<sp/>String&gt;&gt;<sp/>builder<sp/>=</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Map$.MODULE$.&lt;String,<sp/>String&gt;newBuilder();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitionFilter.forEach((key,<sp/>value)<sp/>-&gt;<sp/>builder.$plus$eq(Tuple2.apply(key,<sp/>value)));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalaPartitionFilter<sp/>=<sp/>Option.apply(builder.result());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalaPartitionFilter<sp/>=<sp/>Option.empty();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Seq&lt;CatalogTablePartition&gt;<sp/>partitions<sp/>=</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.listPartitions(tableIdent,<sp/>scalaPartitionFilter).toIndexedSeq();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JavaConverters.seqAsJavaListConverter(partitions).asJava().stream()</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.map(catalogPartition<sp/>-&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acda950032aa68094075046430a014fc9" kindref="member">toSparkPartition</ref>(catalogPartition,<sp/>catalogTable))</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(NoSuchDatabaseException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>table:<sp/>%s.<sp/>Database<sp/>not<sp/>found<sp/>in<sp/>catalog.&quot;</highlight><highlight class="normal">,<sp/>tableIdent);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchTableException" kindref="compound">NoSuchTableException</ref><sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>table:<sp/>%s.<sp/>Table<sp/>not<sp/>found<sp/>in<sp/>catalog.&quot;</highlight><highlight class="normal">,<sp/>tableIdent);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a96532ec81143af827a972c4d800cc96a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;SparkPartition&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a96532ec81143af827a972c4d800cc96a" kindref="member">getPartitionsByFilter</ref>(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/>String<sp/>table,<sp/>String<sp/>predicate)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>tableIdent;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tableIdent<sp/>=<sp/>spark.sessionState().sqlParser().parseTableIdentifier(table);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(ParseException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>the<sp/>table<sp/>identifier:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>table);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>unresolvedPredicateExpr;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unresolvedPredicateExpr<sp/>=<sp/>spark.sessionState().sqlParser().parseExpression(predicate);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(ParseException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>the<sp/>predicate<sp/>expression:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>predicate);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>resolvedPredicateExpr<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acf7cc94933d5d4d4d640da7e70a248e2" kindref="member">resolveAttrs</ref>(spark,<sp/>table,<sp/>unresolvedPredicateExpr);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a96532ec81143af827a972c4d800cc96a" kindref="member">getPartitionsByFilter</ref>(spark,<sp/>tableIdent,<sp/>resolvedPredicateExpr);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a84447c7f62390aa7558d5e3c8a8711d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;SparkPartition&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a84447c7f62390aa7558d5e3c8a8711d7" kindref="member">getPartitionsByFilter</ref>(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>tableIdent,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>predicateExpr)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SessionCatalog<sp/>catalog<sp/>=<sp/>spark.sessionState().catalog();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CatalogTable<sp/>catalogTable<sp/>=<sp/>catalog.getTableMetadata(tableIdent);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>resolvedPredicateExpr;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!predicateExpr.resolved())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolvedPredicateExpr<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acf7cc94933d5d4d4d640da7e70a248e2" kindref="member">resolveAttrs</ref>(spark,<sp/>tableIdent.quotedString(),<sp/>predicateExpr);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolvedPredicateExpr<sp/>=<sp/>predicateExpr;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Seq&lt;Expression&gt;<sp/>predicates<sp/>=</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JavaConverters.collectionAsScalaIterableConverter(ImmutableList.of(resolvedPredicateExpr))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.asScala()</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.toIndexedSeq();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Seq&lt;CatalogTablePartition&gt;<sp/>partitions<sp/>=</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.listPartitionsByFilter(tableIdent,<sp/>predicates).toIndexedSeq();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JavaConverters.seqAsJavaListConverter(partitions).asJava().stream()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.map(catalogPartition<sp/>-&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acda950032aa68094075046430a014fc9" kindref="member">toSparkPartition</ref>(catalogPartition,<sp/>catalogTable))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(NoSuchDatabaseException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>table:<sp/>%s.<sp/>Database<sp/>not<sp/>found<sp/>in<sp/>catalog.&quot;</highlight><highlight class="normal">,<sp/>tableIdent);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchTableException" kindref="compound">NoSuchTableException</ref><sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>table:<sp/>%s.<sp/>Table<sp/>not<sp/>found<sp/>in<sp/>catalog.&quot;</highlight><highlight class="normal">,<sp/>tableIdent);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1aeb1c47672ecf6f30a3ed9084f158c859" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;DataFile&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1aeb1c47672ecf6f30a3ed9084f158c859" kindref="member">listPartition</ref>(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref><sp/>partition,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration" kindref="compound">SerializableConfiguration</ref><sp/>conf,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig" kindref="compound">MetricsConfig</ref><sp/>metricsConfig,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMapping" kindref="compound">NameMapping</ref><sp/>mapping,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallelism)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1data_1_1TableMigrationUtil" kindref="compound">TableMigrationUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1data_1_1TableMigrationUtil_1a50f79b4b5d974cf88f182bd8e00e9c26" kindref="member">listPartition</ref>(</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration_1a6ed115fd3bf3ec7c4d4e66962272c680" kindref="member">get</ref>(),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metricsConfig,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelism);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acda950032aa68094075046430a014fc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acda950032aa68094075046430a014fc9" kindref="member">toSparkPartition</ref>(</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CatalogTablePartition<sp/>partition,<sp/>CatalogTable<sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Option&lt;URI&gt;<sp/>locationUri<sp/>=<sp/>partition.storage().locationUri();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Option&lt;String&gt;<sp/>serde<sp/>=<sp/>partition.storage().serde();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(locationUri.nonEmpty(),<sp/></highlight><highlight class="stringliteral">&quot;Partition<sp/>URI<sp/>should<sp/>be<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>Preconditions.checkArgument(</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serde.nonEmpty()<sp/>||<sp/>table.provider().nonEmpty(),<sp/></highlight><highlight class="stringliteral">&quot;Partition<sp/>format<sp/>should<sp/>be<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>uri<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1Util" kindref="compound">Util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1Util_1a6a3eeb35ab08237c26299df4b6dd97cb" kindref="member">uriToString</ref>(locationUri.get());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>format<sp/>=<sp/>serde.nonEmpty()<sp/>?<sp/>serde.get()<sp/>:<sp/>table.provider().get();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>partitionSpec<sp/>=</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JavaConverters.mapAsJavaMapConverter(partition.spec()).asJava();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref>(partitionSpec,<sp/>uri,<sp/>format);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acf7cc94933d5d4d4d640da7e70a248e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1acf7cc94933d5d4d4d640da7e70a248e2" kindref="member">resolveAttrs</ref>(SparkSession<sp/>spark,<sp/>String<sp/>table,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>expr)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>Function2&lt;String,<sp/>String,<sp/>Object&gt;<sp/>resolver<sp/>=<sp/>spark.sessionState().analyzer().resolver();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>LogicalPlan<sp/>plan<sp/>=<sp/>spark.table(table).queryExecution().analyzed();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expr.transform(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AbstractPartialFunction&lt;Expression,<sp/>Expression&gt;()<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>apply(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>attr)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnresolvedAttribute<sp/>unresolvedAttribute<sp/>=<sp/>(UnresolvedAttribute)<sp/>attr;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Option&lt;NamedExpression&gt;<sp/>namedExpressionOption<sp/>=</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.resolve(unresolvedAttribute.nameParts(),<sp/>resolver);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namedExpressionOption.isDefined())<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref>)<sp/>namedExpressionOption.get();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resolve<sp/>%s<sp/>using<sp/>columns:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>attr,<sp/>plan.output()));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isDefinedAt(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref><sp/>attr)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attr<sp/>instanceof<sp/>UnresolvedAttribute;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab027fe46415e862f3f17428a681b6629" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Iterator&lt;ManifestFile&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab027fe46415e862f3f17428a681b6629" kindref="member">buildManifest</ref>(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration" kindref="compound">SerializableConfiguration</ref><sp/>conf,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>basePath,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Iterator&lt;Tuple2&lt;String,<sp/>DataFile&gt;&gt;<sp/>fileTuples)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileTuples.hasNext())<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref><sp/>io<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopFileIO" kindref="compound">HadoopFileIO</ref>(conf.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration_1a6ed115fd3bf3ec7c4d4e66962272c680" kindref="member">get</ref>());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TaskContext<sp/>ctx<sp/>=<sp/>TaskContext.get();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>suffix<sp/>=</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stage-%d-task-%d-manifest-%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.stageId(),<sp/>ctx.taskAttemptId(),<sp/>UUID.randomUUID());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>location<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Path(basePath,<sp/>suffix);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>outputPath<sp/>=<sp/><ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat" kindref="compound">FileFormat</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1FileFormat_1a4802c026e1cface5760d2907d6017e5a" kindref="member">AVRO</ref>.addExtension(location.toString());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1OutputFile" kindref="compound">OutputFile</ref><sp/>outputFile<sp/>=<sp/>io.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO_1a2088493983fbb8c7f26bef51d3fa93de" kindref="member">newOutputFile</ref>(outputPath);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestWriter" kindref="compound">ManifestWriter&lt;DataFile&gt;</ref><sp/>writer<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestFiles" kindref="compound">ManifestFiles</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestFiles_1afe1a034d1f2fdcd32c6f88b859d6b294" kindref="member">write</ref>(spec,<sp/>outputFile);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestWriter" kindref="compound">ManifestWriter&lt;DataFile&gt;</ref><sp/>writerRef<sp/>=<sp/>writer)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileTuples.forEachRemaining(fileTuple<sp/>-&gt;<sp/>writerRef.add(fileTuple._2));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>close<sp/>the<sp/>manifest<sp/>writer:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>outputPath);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref><sp/>manifestFile<sp/>=<sp/>writer.<ref refid="classorg_1_1apache_1_1iceberg_1_1ManifestWriter_1a2f4b8a31cff85318de8e379950f5395c" kindref="member">toManifestFile</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImmutableList.of(manifestFile).iterator();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Collections.emptyIterator();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a3c42c33afb1e1998966a30b9b0e18e41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a3c42c33afb1e1998966a30b9b0e18e41" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>sourceTableIdent,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>stagingDir,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>partitionFilter,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>checkDuplicateFiles)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a3c42c33afb1e1998966a30b9b0e18e41" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark,<sp/>sourceTableIdent,<sp/>targetTable,<sp/>stagingDir,<sp/>partitionFilter,<sp/>checkDuplicateFiles,<sp/>1);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a4440d44b1523aa8e983c545f16da5a34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a4440d44b1523aa8e983c545f16da5a34" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>sourceTableIdent,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>stagingDir,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>partitionFilter,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>checkDuplicateFiles,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallelism)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>SessionCatalog<sp/>catalog<sp/>=<sp/>spark.sessionState().catalog();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>db<sp/>=</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceTableIdent.database().nonEmpty()</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>sourceTableIdent.database().get()</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>catalog.getCurrentDatabase();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>sourceTableIdentWithDB<sp/>=</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>(sourceTableIdent.table(),<sp/>Some.apply(db));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!catalog.tableExists(sourceTableIdentWithDB))<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchTableException" kindref="compound">NoSuchTableException</ref>(</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Table<sp/>%s<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">,<sp/>sourceTableIdentWithDB);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec<sp/>=</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil" kindref="compound">SparkSchemaUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSchemaUtil_1a241a8d6bc5a4bffaca61af876537bb62" kindref="member">specForTable</ref>(spark,<sp/>sourceTableIdentWithDB.unquotedString());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Objects.equal(spec,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec_1a0409de53f7357c6c70009d25ba61b2c5" kindref="member">unpartitioned</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ace67ee8b893f73b27e9943707e1b5a26" kindref="member">importUnpartitionedSparkTable</ref>(</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark,<sp/>sourceTableIdentWithDB,<sp/>targetTable,<sp/>checkDuplicateFiles,<sp/>parallelism);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>sourceTablePartitions<sp/>=</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab0eeb735bbedd38bcd77ed09d0001eb8" kindref="member">getPartitions</ref>(spark,<sp/>sourceTableIdent,<sp/>partitionFilter);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceTablePartitions.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a3e4c2e3f996cb79e412c3b779ee7442b" kindref="member">newAppend</ref>().commit();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6b6241fd3ad5fa54843c2d360e58b820" kindref="member">importSparkPartitions</ref>(</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceTablePartitions,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetTable,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stagingDir,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkDuplicateFiles,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelism);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(AnalysisException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>get<sp/>partition<sp/>spec<sp/>for<sp/>table:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sourceTableIdentWithDB);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ac625c44019a44479a6d6d7ac1e4eea95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ac625c44019a44479a6d6d7ac1e4eea95" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>sourceTableIdent,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>stagingDir,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>checkDuplicateFiles)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a3c42c33afb1e1998966a30b9b0e18e41" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceTableIdent,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetTable,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stagingDir,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collections.emptyMap(),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkDuplicateFiles,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a26dd40cc9b82d7ac74479dabd0a6cdf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a26dd40cc9b82d7ac74479dabd0a6cdf6" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>sourceTableIdent,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,<sp/>String<sp/>stagingDir)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a3c42c33afb1e1998966a30b9b0e18e41" kindref="member">importSparkTable</ref>(</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark,<sp/>sourceTableIdent,<sp/>targetTable,<sp/>stagingDir,<sp/>Collections.emptyMap(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a9ac662c5f7433fb60e37907c8d03fc4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a9ac662c5f7433fb60e37907c8d03fc4b" kindref="member">importUnpartitionedSparkTable</ref>(</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>sourceTableIdent,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>checkDuplicateFiles,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallelism)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CatalogTable<sp/>sourceTable<sp/>=<sp/>spark.sessionState().catalog().getTableMetadata(sourceTableIdent);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Option&lt;String&gt;<sp/>format<sp/>=</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceTable.storage().serde().nonEmpty()</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>sourceTable.storage().serde()</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sourceTable.provider();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkArgument(format.nonEmpty(),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>determine<sp/>table<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>partition<sp/>=<sp/>Collections.emptyMap();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec_1a0409de53f7357c6c70009d25ba61b2c5" kindref="member">unpartitioned</ref>();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Configuration<sp/>conf<sp/>=<sp/>spark.sessionState().newHadoopConf();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig" kindref="compound">MetricsConfig</ref><sp/>metricsConfig<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig" kindref="compound">MetricsConfig</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig_1acea89099768b0f10e57ed72de3a85cf0" kindref="member">forTable</ref>(targetTable);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>nameMappingString<sp/>=<sp/>targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>().get(<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ac1e3fbfa7d26cd55c41d1d51c6bbe0b7" kindref="member">DEFAULT_NAME_MAPPING</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMapping" kindref="compound">NameMapping</ref><sp/>nameMapping<sp/>=</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameMappingString<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMappingParser" kindref="compound">NameMappingParser</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMappingParser_1afeea97b0984ec884ef122edf92f018c2" kindref="member">fromJson</ref>(nameMappingString)<sp/>:<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;DataFile&gt;<sp/>files<sp/>=</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1data_1_1TableMigrationUtil" kindref="compound">TableMigrationUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1data_1_1TableMigrationUtil_1a50f79b4b5d974cf88f182bd8e00e9c26" kindref="member">listPartition</ref>(</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partition,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1Util" kindref="compound">Util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1Util_1a6a3eeb35ab08237c26299df4b6dd97cb" kindref="member">uriToString</ref>(sourceTable.location()),</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format.get(),</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metricsConfig,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameMapping,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelism);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkDuplicateFiles)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dataset&lt;Row&gt;<sp/>importedFiles<sp/>=</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.createDataset(Lists.transform(files,<sp/>f<sp/>-&gt;<sp/>f.path().toString()),<sp/>Encoders.STRING())</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.toDF(</highlight><highlight class="stringliteral">&quot;file_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dataset&lt;Row&gt;<sp/>existingFiles<sp/>=</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a48cfcab99444ffbf7f39245d9fb6de2b" kindref="member">loadMetadataTable</ref>(spark,<sp/>targetTable,<sp/><ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType_1a870a8913ec343610c6fd6019fc097087" kindref="member">ENTRIES</ref>).filter(</highlight><highlight class="stringliteral">&quot;status<sp/>!=<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Column<sp/>joinCond<sp/>=</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existingFiles.col(</highlight><highlight class="stringliteral">&quot;data_file.file_path&quot;</highlight><highlight class="normal">).equalTo(importedFiles.col(</highlight><highlight class="stringliteral">&quot;file_path&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dataset&lt;String&gt;<sp/>duplicates<sp/>=</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importedFiles.join(existingFiles,<sp/>joinCond).select(</highlight><highlight class="stringliteral">&quot;file_path&quot;</highlight><highlight class="normal">).as(Encoders.STRING());</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkState(</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplicates.isEmpty(),</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a701fbb8197f26a0464822d0aa3093efa" kindref="member">DUPLICATE_FILE_MESSAGE</ref>,<sp/>Joiner.on(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">).join((String[])<sp/>duplicates.take(10))));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1AppendFiles" kindref="compound">AppendFiles</ref><sp/>append<sp/>=<sp/>targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a3e4c2e3f996cb79e412c3b779ee7442b" kindref="member">newAppend</ref>();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>files.forEach(append::appendFile);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>append.commit();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(NoSuchDatabaseException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>table:<sp/>%s.<sp/>Database<sp/>not<sp/>found<sp/>in<sp/>catalog.&quot;</highlight><highlight class="normal">,<sp/>sourceTableIdent);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NoSuchTableException" kindref="compound">NoSuchTableException</ref><sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil" kindref="compound">SparkExceptionUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkExceptionUtil_1a16249af1622ee21e46fa755d0f68294d" kindref="member">toUncheckedException</ref>(</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>table:<sp/>%s.<sp/>Table<sp/>not<sp/>found<sp/>in<sp/>catalog.&quot;</highlight><highlight class="normal">,<sp/>sourceTableIdent);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6b6241fd3ad5fa54843c2d360e58b820" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6b6241fd3ad5fa54843c2d360e58b820" kindref="member">importSparkPartitions</ref>(</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>partitions,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>stagingDir,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>checkDuplicateFiles)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6b6241fd3ad5fa54843c2d360e58b820" kindref="member">importSparkPartitions</ref>(spark,<sp/>partitions,<sp/>targetTable,<sp/>spec,<sp/>stagingDir,<sp/>checkDuplicateFiles,<sp/>1);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ae75e0c8bb5e3cf4dd3f9f3a669d126ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ae75e0c8bb5e3cf4dd3f9f3a669d126ed" kindref="member">importSparkPartitions</ref>(</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>partitions,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>stagingDir,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>checkDuplicateFiles,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallelism)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>Configuration<sp/>conf<sp/>=<sp/>spark.sessionState().newHadoopConf();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration" kindref="compound">SerializableConfiguration</ref><sp/>serializableConf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1SerializableConfiguration" kindref="compound">SerializableConfiguration</ref>(conf);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listingParallelism<sp/>=</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Math.min(</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitions.size(),<sp/>spark.sessionState().conf().parallelPartitionDiscoveryParallelism());</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numShufflePartitions<sp/>=<sp/>spark.sessionState().conf().numShufflePartitions();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig" kindref="compound">MetricsConfig</ref><sp/>metricsConfig<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig" kindref="compound">MetricsConfig</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetricsConfig_1a65d5f9822e0ce11500ec4e4fd21819f1" kindref="member">fromProperties</ref>(targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>());</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>nameMappingString<sp/>=<sp/>targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>().get(<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1ac1e3fbfa7d26cd55c41d1d51c6bbe0b7" kindref="member">DEFAULT_NAME_MAPPING</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMapping" kindref="compound">NameMapping</ref><sp/>nameMapping<sp/>=</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameMappingString<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>?<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMappingParser" kindref="compound">NameMappingParser</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1mapping_1_1NameMappingParser_1afeea97b0984ec884ef122edf92f018c2" kindref="member">fromJson</ref>(nameMappingString)<sp/>:<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>JavaSparkContext<sp/>sparkContext<sp/>=<sp/>JavaSparkContext.fromSparkContext(spark.sparkContext());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>JavaRDD&lt;SparkPartition&gt;<sp/>partitionRDD<sp/>=<sp/>sparkContext.parallelize(partitions,<sp/>listingParallelism);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>Dataset&lt;SparkPartition&gt;<sp/>partitionDS<sp/>=</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark.createDataset(partitionRDD.rdd(),<sp/>Encoders.javaSerialization(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref>.class));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>Dataset&lt;DataFile&gt;<sp/>filesToImport<sp/>=</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitionDS.flatMap(</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(FlatMapFunction&lt;SparkPartition,<sp/>DataFile&gt;)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparkPartition<sp/>-&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a7b75e0408be23eda1b7dec6c73f0bb19" kindref="member">listPartition</ref>(</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparkPartition,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializableConf,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metricsConfig,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameMapping,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelism)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iterator(),</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoders.javaSerialization(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>.class));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkDuplicateFiles)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dataset&lt;Row&gt;<sp/>importedFiles<sp/>=</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filesToImport</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.map((MapFunction&lt;DataFile,<sp/>String&gt;)<sp/>f<sp/>-&gt;<sp/>f.path().toString(),<sp/>Encoders.STRING())</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.toDF(</highlight><highlight class="stringliteral">&quot;file_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dataset&lt;Row&gt;<sp/>existingFiles<sp/>=</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a48cfcab99444ffbf7f39245d9fb6de2b" kindref="member">loadMetadataTable</ref>(spark,<sp/>targetTable,<sp/><ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref>.<ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType_1a870a8913ec343610c6fd6019fc097087" kindref="member">ENTRIES</ref>).filter(</highlight><highlight class="stringliteral">&quot;status<sp/>!=<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Column<sp/>joinCond<sp/>=</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existingFiles.col(</highlight><highlight class="stringliteral">&quot;data_file.file_path&quot;</highlight><highlight class="normal">).equalTo(importedFiles.col(</highlight><highlight class="stringliteral">&quot;file_path&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dataset&lt;String&gt;<sp/>duplicates<sp/>=</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importedFiles.join(existingFiles,<sp/>joinCond).select(</highlight><highlight class="stringliteral">&quot;file_path&quot;</highlight><highlight class="normal">).as(Encoders.STRING());</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Preconditions.checkState(</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplicates.isEmpty(),</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.format(</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a701fbb8197f26a0464822d0aa3093efa" kindref="member">DUPLICATE_FILE_MESSAGE</ref>,<sp/>Joiner.on(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">).join((String[])<sp/>duplicates.take(10))));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;ManifestFile&gt;<sp/>manifests<sp/>=</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filesToImport</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.repartition(numShufflePartitions)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.map(</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MapFunction&lt;<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>,<sp/>Tuple2&lt;String,<sp/>DataFile&gt;&gt;)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>-&gt;<sp/>Tuple2.apply(file.path().toString(),<sp/>file),</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoders.tuple(Encoders.STRING(),<sp/>Encoders.javaSerialization(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1DataFile" kindref="compound">DataFile</ref>.class)))</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.orderBy(col(</highlight><highlight class="stringliteral">&quot;_1&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mapPartitions(</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MapPartitionsFunction&lt;Tuple2&lt;String,<sp/>DataFile&gt;,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref>&gt;)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileTuple<sp/>-&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1ab027fe46415e862f3f17428a681b6629" kindref="member">buildManifest</ref>(serializableConf,<sp/>spec,<sp/>stagingDir,<sp/>fileTuple),</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoders.javaSerialization(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1ManifestFile" kindref="compound">ManifestFile</ref>.class))</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collectAsList();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations" kindref="compound">TableOperations</ref><sp/>ops<sp/>=<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>targetTable).operations();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>formatVersion<sp/>=<sp/>ops.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1TableOperations_1a96a251e76611125a2903eb608c97aa67" kindref="member">current</ref>().<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata_1ae54894e715f34a59a65da8d17b0860dc" kindref="member">formatVersion</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>snapshotIdInheritanceEnabled<sp/>=</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil" kindref="compound">PropertyUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil_1a815bb60acfdf24932c858baa8afe18f2" kindref="member">propertyAsBoolean</ref>(</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>(),</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1abca624348222d4d1fc2e0f69ac794767" kindref="member">SNAPSHOT_ID_INHERITANCE_ENABLED</ref>,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a3a14a923fa645e03b9c423abc8b99256" kindref="member">SNAPSHOT_ID_INHERITANCE_ENABLED_DEFAULT</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1AppendFiles" kindref="compound">AppendFiles</ref><sp/>append<sp/>=<sp/>targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a3e4c2e3f996cb79e412c3b779ee7442b" kindref="member">newAppend</ref>();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>manifests.forEach(append::appendManifest);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>append.commit();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatVersion<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!snapshotIdInheritanceEnabled)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>original<sp/>manifests<sp/>as<sp/>they<sp/>were<sp/>rewritten<sp/>before<sp/>the<sp/>commit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a5f291d27b3d05e7c39e7c7b73e8e6181" kindref="member">deleteManifests</ref>(targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>(),<sp/>manifests);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Throwable<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a5f291d27b3d05e7c39e7c7b73e8e6181" kindref="member">deleteManifests</ref>(targetTable.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1aae6b533eb4c5f1d348a092dfce3c789b" kindref="member">io</ref>(),<sp/>manifests);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a8e1251944faaacb11d13bb3d9ac6d9d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a8e1251944faaacb11d13bb3d9ac6d9d1" kindref="member">importSparkPartitions</ref>(</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>partitions,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>targetTable,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref><sp/>spec,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>stagingDir)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a6b6241fd3ad5fa54843c2d360e58b820" kindref="member">importSparkPartitions</ref>(spark,<sp/>partitions,<sp/>targetTable,<sp/>spec,<sp/>stagingDir,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a115b4ddf4c8ca25dbeec69470aec4f16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;SparkPartition&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a115b4ddf4c8ca25dbeec69470aec4f16" kindref="member">filterPartitions</ref>(</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;SparkPartition&gt;<sp/>partitions,<sp/>Map&lt;String,<sp/>String&gt;<sp/>partitionFilter)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partitionFilter.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partitions;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partitions.stream()</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.filter(p<sp/>-&gt;<sp/>p.getValues().entrySet().containsAll(partitionFilter.entrySet()))</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.collect(Collectors.toList());</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a5f291d27b3d05e7c39e7c7b73e8e6181" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a5f291d27b3d05e7c39e7c7b73e8e6181" kindref="member">deleteManifests</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO" kindref="compound">FileIO</ref><sp/>io,<sp/>List&lt;ManifestFile&gt;<sp/>manifests)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Tasks" kindref="compound">Tasks</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1Tasks_1a4e02a04c6d01b1feceec7c0b1b4fbf12" kindref="member">foreach</ref>(manifests)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.executeWith(<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ThreadPools" kindref="compound">ThreadPools</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1ThreadPools_1a9e41cb156024d3230173e878c3319373" kindref="member">getWorkerPool</ref>())</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.noRetry()</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.suppressFailureWhenFinished()</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.run(item<sp/>-&gt;<sp/>io.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1io_1_1FileIO_1aacbe50a4caf1562d45d1e4134bbfeff0" kindref="member">deleteFile</ref>(item.path()));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a48cfcab99444ffbf7f39245d9fb6de2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Dataset&lt;Row&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a48cfcab99444ffbf7f39245d9fb6de2b" kindref="member">loadMetadataTable</ref>(</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table,<sp/><ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a48cfcab99444ffbf7f39245d9fb6de2b" kindref="member">loadMetadataTable</ref>(spark,<sp/>table,<sp/>type,<sp/>ImmutableMap.of());</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a5923b06525772b75ea4f984348971513" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Dataset&lt;Row&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a5923b06525772b75ea4f984348971513" kindref="member">loadMetadataTable</ref>(</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SparkSession<sp/>spark,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table,<sp/><ref refid="enumorg_1_1apache_1_1iceberg_1_1MetadataTableType" kindref="compound">MetadataTableType</ref><sp/>type,<sp/>Map&lt;String,<sp/>String&gt;<sp/>extraOptions)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkTable" kindref="compound">SparkTable</ref><sp/>metadataTable<sp/>=</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkTable" kindref="compound">SparkTable</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataTableUtils" kindref="compound">MetadataTableUtils</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1MetadataTableUtils_1a334656a1e1b9a2597b5acee048cad410" kindref="member">createMetadataTableInstance</ref>(table,<sp/>type),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>CaseInsensitiveStringMap<sp/>options<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CaseInsensitiveStringMap(extraOptions);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dataset.ofRows(</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spark,<sp/>DataSourceV2Relation.create(metadataTable,<sp/>Some.empty(),<sp/>Some.empty(),<sp/>options));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a34aec7242776222e4d2df57f291bccf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a34aec7242776222e4d2df57f291bccf1" kindref="member">determineWriteBranch</ref>(SparkSession<sp/>spark,<sp/>String<sp/>branch)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>wapId<sp/>=<sp/>spark.conf().get(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSQLProperties" kindref="compound">SparkSQLProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSQLProperties_1ad3d898a6755f6eff1f17c89d2270e681" kindref="member">WAP_ID</ref>,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>wapBranch<sp/>=<sp/>spark.conf().get(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSQLProperties" kindref="compound">SparkSQLProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkSQLProperties_1ae2f3886f22fad16eab8a6f193a2a979f" kindref="member">WAP_BRANCH</ref>,<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException_1a67cd18a4bc1ec478ffba008a6c62b79c" kindref="member">check</ref>(</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wapId<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>||<sp/>wapBranch<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>set<sp/>both<sp/>WAP<sp/>ID<sp/>and<sp/>branch,<sp/>but<sp/>got<sp/>ID<sp/>[%s]<sp/>and<sp/>branch<sp/>[%s]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wapId,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wapBranch);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wapBranch<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException_1a67cd18a4bc1ec478ffba008a6c62b79c" kindref="member">check</ref>(</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>both<sp/>branch<sp/>and<sp/>WAP<sp/>branch,<sp/>but<sp/>got<sp/>branch<sp/>[%s]<sp/>and<sp/>WAP<sp/>branch<sp/>[%s]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wapBranch);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wapBranch;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>branch;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a8b0b3df097da20bc496607bd63177cdb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1a8b0b3df097da20bc496607bd63177cdb" kindref="member">wapEnabled</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil" kindref="compound">PropertyUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1util_1_1PropertyUtil_1a815bb60acfdf24932c858baa8afe18f2" kindref="member">propertyAsBoolean</ref>(</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a6dc0d000ddb7a7285fc7fdc6383922d5" kindref="member">properties</ref>(),</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a44e3a039934e6c957ad4da06990841f4" kindref="member">WRITE_AUDIT_PUBLISH_ENABLED</ref>,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Boolean.parseBoolean(<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties" kindref="compound">TableProperties</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableProperties_1a159970ae3f00062945f1b4927482ded6" kindref="member">WRITE_AUDIT_PUBLISH_ENABLED_DEFAULT</ref>));</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref><sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>Serializable<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>Map&lt;String,<sp/>String&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a0d3ce0915be50f66d3ebe66f1a4298d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a0d3ce0915be50f66d3ebe66f1a4298d3" kindref="member">SparkPartition</ref>(Map&lt;String,<sp/>String&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>,<sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>,<sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.values<sp/>=<sp/>Maps.newHashMap(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.uri<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.format<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a730a386bb7e723359d15d5a0e26bdb07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Map&lt;String,<sp/>String&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a730a386bb7e723359d15d5a0e26bdb07" kindref="member">getValues</ref>()<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1aa384a77dddb0fc59dce9df5a46e850d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1aa384a77dddb0fc59dce9df5a46e850d0" kindref="member">getUri</ref>()<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1aaf06a1c1237a7c1c278c7bc3aab51d10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1aaf06a1c1237a7c1c278c7bc3aab51d10" kindref="member">getFormat</ref>()<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="801" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a1ba822df4db55dcb75ce36482d86b957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a1ba822df4db55dcb75ce36482d86b957" kindref="member">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MoreObjects.toStringHelper(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add(</highlight><highlight class="stringliteral">&quot;values&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add(</highlight><highlight class="stringliteral">&quot;uri&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add(</highlight><highlight class="stringliteral">&quot;format&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.toString();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="810" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a5b50d3560dd1cb030b53e384a4fb705a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a5b50d3560dd1cb030b53e384a4fb705a" kindref="member">equals</ref>(Object<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>||<sp/>getClass()<sp/>!=<sp/>o.getClass())<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition" kindref="compound">SparkPartition</ref><sp/>that<sp/>=<sp/>(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a0d3ce0915be50f66d3ebe66f1a4298d3" kindref="member">SparkPartition</ref>)<sp/>o;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Objects.equal(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>,<sp/>that.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>Objects.equal(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>,<sp/>that.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>Objects.equal(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>,<sp/>that.<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="824" refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a562fa53655a99cccad0b390dd6068eec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a562fa53655a99cccad0b390dd6068eec" kindref="member">hashCode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Objects.hashCode(<ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1acbdfb72350da250785866752fca3d43e" kindref="member">values</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a92abe119d0eef1acbda7fffa9de2c06c" kindref="member">uri</ref>,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1SparkTableUtil_1_1SparkPartition_1a898b425fe3b8c67dbd53d19177c7bce0" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="spark/v3.5/spark/src/main/java/org/apache/iceberg/spark/SparkTableUtil.java"/>
  </compounddef>
</doxygen>
