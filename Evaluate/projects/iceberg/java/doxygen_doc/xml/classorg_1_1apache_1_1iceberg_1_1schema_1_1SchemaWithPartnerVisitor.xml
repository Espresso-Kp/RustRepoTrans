<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor" kind="class" language="Java" prot="public" abstract="yes">
    <compoundname>org::apache::iceberg::schema::SchemaWithPartnerVisitor</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1Deserializer_1_1DeserializerVisitor" prot="public" virt="non-virtual">org.apache.iceberg.mr.hive.Deserializer.DeserializerVisitor</derivedcompoundref>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1_1PartnerAccessors" prot="public">org::apache::iceberg::schema::SchemaWithPartnerVisitor::PartnerAccessors</innerclass>
    <templateparamlist>
      <param>
        <type>P</type>
      </param>
      <param>
        <type>R</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a02590705ae2b5ebda74e00a0d7e565f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; P, T &gt; T</type>
        <definition>static &lt;P, T&gt; T org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.visit</definition>
        <argsstring>(Schema schema, P partner, SchemaWithPartnerVisitor&lt; P, T &gt; visitor, PartnerAccessors&lt; P &gt; accessors)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor" kindref="compound">SchemaWithPartnerVisitor</ref>&lt; P, T &gt;</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1_1PartnerAccessors" kindref="compound">PartnerAccessors</ref>&lt; P &gt;</type>
          <declname>accessors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="40" column="21" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a89198b3e25723d7dbab7d83aac542af5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static&lt; P, T &gt; T</type>
        <definition>static &lt;P, T&gt; T org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.visit</definition>
        <argsstring>(Type type, P partner, SchemaWithPartnerVisitor&lt; P, T &gt; visitor, PartnerAccessors&lt; P &gt; accessors)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1types_1_1Type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor" kindref="compound">SchemaWithPartnerVisitor</ref>&lt; P, T &gt;</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1_1PartnerAccessors" kindref="compound">PartnerAccessors</ref>&lt; P &gt;</type>
          <declname>accessors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="48" column="21" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="48" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a0770e8f7856321c7d91b450565f0da69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.beforeField</definition>
        <argsstring>(Types.NestedField field, P partnerField)</argsstring>
        <name>beforeField</name>
        <param>
          <type>Types.NestedField</type>
          <declname>field</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="115" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a4a03f74d780ac1365bde9a912d2a036e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.afterField</definition>
        <argsstring>(Types.NestedField field, P partnerField)</argsstring>
        <name>afterField</name>
        <param>
          <type>Types.NestedField</type>
          <declname>field</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="117" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1ab81aa7cfe905cd611cacb260cdd12440" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.beforeListElement</definition>
        <argsstring>(Types.NestedField elementField, P partnerField)</argsstring>
        <name>beforeListElement</name>
        <param>
          <type>Types.NestedField</type>
          <declname>elementField</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="119" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1acfb14111ec81b29ef86b3a2d3d348c69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.afterListElement</definition>
        <argsstring>(Types.NestedField elementField, P partnerField)</argsstring>
        <name>afterListElement</name>
        <param>
          <type>Types.NestedField</type>
          <declname>elementField</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="123" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1aebb3a0828f1635dcd2a6bb405dca81cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.beforeMapKey</definition>
        <argsstring>(Types.NestedField keyField, P partnerField)</argsstring>
        <name>beforeMapKey</name>
        <param>
          <type>Types.NestedField</type>
          <declname>keyField</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="127" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1ac74e14e8d531996b10b40d8034bd8e99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.afterMapKey</definition>
        <argsstring>(Types.NestedField keyField, P partnerField)</argsstring>
        <name>afterMapKey</name>
        <param>
          <type>Types.NestedField</type>
          <declname>keyField</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="131" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a212e489bcfef4c97148e4af4e3f1e366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.beforeMapValue</definition>
        <argsstring>(Types.NestedField valueField, P partnerField)</argsstring>
        <name>beforeMapValue</name>
        <param>
          <type>Types.NestedField</type>
          <declname>valueField</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="135" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a16ca2318649d8dc29013e508685d890e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.afterMapValue</definition>
        <argsstring>(Types.NestedField valueField, P partnerField)</argsstring>
        <name>afterMapValue</name>
        <param>
          <type>Types.NestedField</type>
          <declname>valueField</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partnerField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="139" column="15" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a0024d625832fdd0018af3464aedadb52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.schema</definition>
        <argsstring>(Schema schema, P partner, R structResult)</argsstring>
        <name>schema</name>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type>R</type>
          <declname>structResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="143" column="12" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a547a15651028d3421ddbe4b3d2da3747" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.struct</definition>
        <argsstring>(Types.StructType struct, P partner, List&lt; R &gt; fieldResults)</argsstring>
        <name>struct</name>
        <param>
          <type>Types.StructType</type>
          <declname>struct</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type>List&lt; R &gt;</type>
          <declname>fieldResults</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="147" column="12" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a2a85d6fe5b10f6298427c3331ca1b589" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.field</definition>
        <argsstring>(Types.NestedField field, P partner, R fieldResult)</argsstring>
        <name>field</name>
        <param>
          <type>Types.NestedField</type>
          <declname>field</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type>R</type>
          <declname>fieldResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="151" column="12" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a59e6abac790c6256ae1121786be8b18d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.list</definition>
        <argsstring>(Types.ListType list, P partner, R elementResult)</argsstring>
        <name>list</name>
        <param>
          <type>Types.ListType</type>
          <declname>list</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type>R</type>
          <declname>elementResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="155" column="12" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a5b851823da87d5390b36baaabcb5742f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.map</definition>
        <argsstring>(Types.MapType map, P partner, R keyResult, R valueResult)</argsstring>
        <name>map</name>
        <param>
          <type>Types.MapType</type>
          <declname>map</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <param>
          <type>R</type>
          <declname>keyResult</declname>
        </param>
        <param>
          <type>R</type>
          <declname>valueResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="159" column="12" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a511b95a2675b23d0e4df1bcd0b020498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;.primitive</definition>
        <argsstring>(Type.PrimitiveType primitive, P partner)</argsstring>
        <name>primitive</name>
        <param>
          <type>Type.PrimitiveType</type>
          <declname>primitive</declname>
        </param>
        <param>
          <type>P</type>
          <declname>partner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="163" column="12" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="163" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org::apache::iceberg::mr::hive::Deserializer::DeserializerVisitor&lt; ObjectInspectorPair, FieldDeserializer &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1mr_1_1hive_1_1Deserializer_1_1DeserializerVisitor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.schema.SchemaWithPartnerVisitor&lt; P, R &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor"/>
      </node>
    </inheritancegraph>
    <location file="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" line="27" column="48" bodyfile="core/src/main/java/org/apache/iceberg/schema/SchemaWithPartnerVisitor.java" bodystart="27" bodyend="166"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a4a03f74d780ac1365bde9a912d2a036e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>afterField</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1acfb14111ec81b29ef86b3a2d3d348c69" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>afterListElement</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1ac74e14e8d531996b10b40d8034bd8e99" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>afterMapKey</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a16ca2318649d8dc29013e508685d890e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>afterMapValue</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a0770e8f7856321c7d91b450565f0da69" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>beforeField</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1ab81aa7cfe905cd611cacb260cdd12440" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>beforeListElement</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1aebb3a0828f1635dcd2a6bb405dca81cb" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>beforeMapKey</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a212e489bcfef4c97148e4af4e3f1e366" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>beforeMapValue</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a2a85d6fe5b10f6298427c3331ca1b589" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>field</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a59e6abac790c6256ae1121786be8b18d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>list</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a5b851823da87d5390b36baaabcb5742f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>map</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a511b95a2675b23d0e4df1bcd0b020498" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>primitive</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a0024d625832fdd0018af3464aedadb52" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>schema</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a547a15651028d3421ddbe4b3d2da3747" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>struct</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a02590705ae2b5ebda74e00a0d7e565f2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>visit</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1schema_1_1SchemaWithPartnerVisitor_1a89198b3e25723d7dbab7d83aac542af5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::schema::SchemaWithPartnerVisitor</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
