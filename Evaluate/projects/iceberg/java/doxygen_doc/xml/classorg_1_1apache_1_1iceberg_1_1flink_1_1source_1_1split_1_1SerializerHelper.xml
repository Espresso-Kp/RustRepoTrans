<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper" kind="class" language="Java" prot="package">
    <compoundname>org::apache::iceberg::flink::source::split::SerializerHelper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a94fd8e557274785ffd7a11b229fa5fee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.split.SerializerHelper.SerializerHelper</definition>
        <argsstring>()</argsstring>
        <name>SerializerHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="34" column="11" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a94fd8e557274785ffd7a11b229fa5fee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.split.SerializerHelper.SerializerHelper</definition>
        <argsstring>()</argsstring>
        <name>SerializerHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="34" column="11" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a94fd8e557274785ffd7a11b229fa5fee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.iceberg.flink.source.split.SerializerHelper.SerializerHelper</definition>
        <argsstring>()</argsstring>
        <name>SerializerHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="34" column="11" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a48f27ad55d27da3b93a615201b863f25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.flink.source.split.SerializerHelper.writeLongUTF</definition>
        <argsstring>(DataOutputSerializer out, String str)</argsstring>
        <name>writeLongUTF</name>
        <param>
          <type>DataOutputSerializer</type>
          <declname>out</declname>
        </param>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="" kindref="compound">DataOutputSerializer#writeUTF(String)</ref>. Except this supports larger payloads which is up to max integer value.</para>
<para>Note: This method can be removed when the method which does similar thing within the {<ref refid="" kindref="compound">} already which does the same thing, so use that one instead once that is released on Flink version 1.20. </ref>See * <ulink url="https://issues.apache.org/jira/browse/FLINK-34228">FLINK-34228</ulink> * <ulink url="https://github.com/apache/flink/pull/24191">https://github.com/apache/flink/pull/24191</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream to write the string to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string value to be written. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="50" column="22" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="50" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1ac1d1ad557e222f1156f4d6fe77ab84d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String org.apache.iceberg.flink.source.split.SerializerHelper.readLongUTF</definition>
        <argsstring>(DataInputDeserializer in)</argsstring>
        <name>readLongUTF</name>
        <param>
          <type>DataInputDeserializer</type>
          <declname>in</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="" kindref="compound">DataInputDeserializer#readUTF()</ref>. Except this supports larger payloads which is up to max integer value.</para>
<para>Note: This method can be removed when the method which does similar thing within the {<ref refid="" kindref="compound">} already which does the same thing, so use that one instead once that is released on Flink version 1.20. </ref>See * <ulink url="https://issues.apache.org/jira/browse/FLINK-34228">FLINK-34228</ulink> * <ulink url="https://github.com/apache/flink/pull/24191">https://github.com/apache/flink/pull/24191</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream to read the string from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string value read from the input stream. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if an I/O error occurs when reading from the input stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="88" column="24" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="88" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a48f27ad55d27da3b93a615201b863f25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.flink.source.split.SerializerHelper.writeLongUTF</definition>
        <argsstring>(DataOutputSerializer out, String str)</argsstring>
        <name>writeLongUTF</name>
        <param>
          <type>DataOutputSerializer</type>
          <declname>out</declname>
        </param>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="" kindref="compound">DataOutputSerializer#writeUTF(String)</ref>. Except this supports larger payloads which is up to max integer value.</para>
<para>Note: This method can be removed when the method which does similar thing within the {<ref refid="" kindref="compound">} already which does the same thing, so use that one instead once that is released on Flink version 1.20. </ref>See * <ulink url="https://issues.apache.org/jira/browse/FLINK-34228">FLINK-34228</ulink> * <ulink url="https://github.com/apache/flink/pull/24191">https://github.com/apache/flink/pull/24191</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream to write the string to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string value to be written. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="50" column="22" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="50" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1ac1d1ad557e222f1156f4d6fe77ab84d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String org.apache.iceberg.flink.source.split.SerializerHelper.readLongUTF</definition>
        <argsstring>(DataInputDeserializer in)</argsstring>
        <name>readLongUTF</name>
        <param>
          <type>DataInputDeserializer</type>
          <declname>in</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="" kindref="compound">DataInputDeserializer#readUTF()</ref>. Except this supports larger payloads which is up to max integer value.</para>
<para>Note: This method can be removed when the method which does similar thing within the {<ref refid="" kindref="compound">} already which does the same thing, so use that one instead once that is released on Flink version 1.20. </ref>See * <ulink url="https://issues.apache.org/jira/browse/FLINK-34228">FLINK-34228</ulink> * <ulink url="https://github.com/apache/flink/pull/24191">https://github.com/apache/flink/pull/24191</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream to read the string from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string value read from the input stream. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if an I/O error occurs when reading from the input stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="88" column="24" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="88" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a48f27ad55d27da3b93a615201b863f25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.flink.source.split.SerializerHelper.writeLongUTF</definition>
        <argsstring>(DataOutputSerializer out, String str)</argsstring>
        <name>writeLongUTF</name>
        <param>
          <type>DataOutputSerializer</type>
          <declname>out</declname>
        </param>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="" kindref="compound">DataOutputSerializer#writeUTF(String)</ref>. Except this supports larger payloads which is up to max integer value.</para>
<para>Note: This method can be removed when the method which does similar thing within the {<ref refid="" kindref="compound">} already which does the same thing, so use that one instead once that is released on Flink version 1.20. </ref>See * <ulink url="https://issues.apache.org/jira/browse/FLINK-34228">FLINK-34228</ulink> * <ulink url="https://github.com/apache/flink/pull/24191">https://github.com/apache/flink/pull/24191</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream to write the string to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string value to be written. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="50" column="22" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="50" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1ac1d1ad557e222f1156f4d6fe77ab84d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String org.apache.iceberg.flink.source.split.SerializerHelper.readLongUTF</definition>
        <argsstring>(DataInputDeserializer in)</argsstring>
        <name>readLongUTF</name>
        <param>
          <type>DataInputDeserializer</type>
          <declname>in</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="" kindref="compound">DataInputDeserializer#readUTF()</ref>. Except this supports larger payloads which is up to max integer value.</para>
<para>Note: This method can be removed when the method which does similar thing within the {<ref refid="" kindref="compound">} already which does the same thing, so use that one instead once that is released on Flink version 1.20. </ref>See * <ulink url="https://issues.apache.org/jira/browse/FLINK-34228">FLINK-34228</ulink> * <ulink url="https://github.com/apache/flink/pull/24191">https://github.com/apache/flink/pull/24191</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream to read the string from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string value read from the input stream. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if an I/O error occurs when reading from the input stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="88" column="24" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="88" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1acc5f9cb32013e1e9e69d6418cbe645cf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.flink.source.split.SerializerHelper.getUTFBytesSize</definition>
        <argsstring>(int ch)</argsstring>
        <name>getUTFBytesSize</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="161" column="22" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1af95153cccaf344691c8b1cd7a0bebe23" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.flink.source.split.SerializerHelper.writeUTFBytes</definition>
        <argsstring>(DataOutputSerializer out, String str, int utflen)</argsstring>
        <name>writeUTFBytes</name>
        <param>
          <type>DataOutputSerializer</type>
          <declname>out</declname>
        </param>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>utflen</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="171" column="23" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="171" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1acc5f9cb32013e1e9e69d6418cbe645cf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.flink.source.split.SerializerHelper.getUTFBytesSize</definition>
        <argsstring>(int ch)</argsstring>
        <name>getUTFBytesSize</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="161" column="22" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1af95153cccaf344691c8b1cd7a0bebe23" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.flink.source.split.SerializerHelper.writeUTFBytes</definition>
        <argsstring>(DataOutputSerializer out, String str, int utflen)</argsstring>
        <name>writeUTFBytes</name>
        <param>
          <type>DataOutputSerializer</type>
          <declname>out</declname>
        </param>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>utflen</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="171" column="23" bodyfile="flink/v1.18/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="171" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1acc5f9cb32013e1e9e69d6418cbe645cf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.iceberg.flink.source.split.SerializerHelper.getUTFBytesSize</definition>
        <argsstring>(int ch)</argsstring>
        <name>getUTFBytesSize</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="161" column="22" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1af95153cccaf344691c8b1cd7a0bebe23" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.iceberg.flink.source.split.SerializerHelper.writeUTFBytes</definition>
        <argsstring>(DataOutputSerializer out, String str, int utflen)</argsstring>
        <name>writeUTFBytes</name>
        <param>
          <type>DataOutputSerializer</type>
          <declname>out</declname>
        </param>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>utflen</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="171" column="23" bodyfile="flink/v1.19/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="171" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper class to serialize and deserialize strings longer than 65K. The inspiration is mostly taken from the class org.apache.flink.core.memory.DataInputSerializer.readUTF and org.apache.flink.core.memory.DataOutputSerializer.writeUTF. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.apache.iceberg.flink.source.split.SerializerHelper</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Serializable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.apache.iceberg.flink.source.split.SerializerHelper</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Serializable</label>
      </node>
    </collaborationgraph>
    <location file="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" line="32" column="36" bodyfile="flink/v1.17/flink/src/main/java/org/apache/iceberg/flink/source/split/SerializerHelper.java" bodystart="32" bodyend="206"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1acc5f9cb32013e1e9e69d6418cbe645cf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>getUTFBytesSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1acc5f9cb32013e1e9e69d6418cbe645cf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>getUTFBytesSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1acc5f9cb32013e1e9e69d6418cbe645cf" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>getUTFBytesSize</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1ac1d1ad557e222f1156f4d6fe77ab84d9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>readLongUTF</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1ac1d1ad557e222f1156f4d6fe77ab84d9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>readLongUTF</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1ac1d1ad557e222f1156f4d6fe77ab84d9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>readLongUTF</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a94fd8e557274785ffd7a11b229fa5fee" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>SerializerHelper</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a94fd8e557274785ffd7a11b229fa5fee" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>SerializerHelper</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a94fd8e557274785ffd7a11b229fa5fee" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>SerializerHelper</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a48f27ad55d27da3b93a615201b863f25" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>writeLongUTF</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a48f27ad55d27da3b93a615201b863f25" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>writeLongUTF</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1a48f27ad55d27da3b93a615201b863f25" prot="public" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>writeLongUTF</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1af95153cccaf344691c8b1cd7a0bebe23" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>writeUTFBytes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1af95153cccaf344691c8b1cd7a0bebe23" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>writeUTFBytes</name></member>
      <member refid="classorg_1_1apache_1_1iceberg_1_1flink_1_1source_1_1split_1_1SerializerHelper_1af95153cccaf344691c8b1cd7a0bebe23" prot="private" virt="non-virtual"><scope>org::apache::iceberg::flink::source::split::SerializerHelper</scope><name>writeUTFBytes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
