<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::spark::sql::connector::iceberg::write::DeltaWriter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">org::apache::spark::sql::connector::write::DataWriter&lt; T &gt;</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkPositionDeltaWrite_1_1BaseDeltaWriter" prot="public" virt="non-virtual">org.apache.iceberg.spark.source.SparkPositionDeltaWrite.BaseDeltaWriter</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1a8bcf2c9d2a7634008ab50d5629763dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.spark.sql.connector.iceberg.write.DeltaWriter&lt; T &gt;.delete</definition>
        <argsstring>(T metadata, T id)</argsstring>
        <name>delete</name>
        <param>
          <type>T</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>T</type>
          <declname>id</declname>
        </param>
        <exceptions> throws IOException</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes information for a row that must be deleted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>values for metadata columns that were projected but are not part of the row ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>a row ID to delete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the write process encounters an error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" line="33" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1a9ec010f0e49df436d3a6eb2ed88391bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.spark.sql.connector.iceberg.write.DeltaWriter&lt; T &gt;.update</definition>
        <argsstring>(T metadata, T id, T row)</argsstring>
        <name>update</name>
        <param>
          <type>T</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>T</type>
          <declname>id</declname>
        </param>
        <param>
          <type>T</type>
          <declname>row</declname>
        </param>
        <exceptions> throws IOException</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes information for a row that must be updated together with the updated row.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>values for metadata columns that were projected but are not part of the row ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>a row ID to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>a row with updated values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the write process encounters an error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" line="43" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1a6304f3415ecfa828c50a3a0f78f82958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.spark.sql.connector.iceberg.write.DeltaWriter&lt; T &gt;.insert</definition>
        <argsstring>(T row)</argsstring>
        <name>insert</name>
        <param>
          <type>T</type>
          <declname>row</declname>
        </param>
        <exceptions> throws IOException</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Passes a row to insert.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>a row to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the write process encounters an error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" line="51" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1abff6bbd8171de41590fd1fd3ed3cc074" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default void</type>
        <definition>default void org.apache.spark.sql.connector.iceberg.write.DeltaWriter&lt; T &gt;.write</definition>
        <argsstring>(T row)</argsstring>
        <name>write</name>
        <param>
          <type>T</type>
          <declname>row</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" line="54" column="16" bodyfile="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" bodystart="54" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A data writer responsible for writing a delta of rows. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org::apache::iceberg::spark::source::SparkPositionDeltaWrite::BaseDeltaWriter&lt; InternalRow &gt;</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkPositionDeltaWrite_1_1BaseDeltaWriter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org::apache::spark::sql::connector::write::DataWriter&lt; T &gt;</label>
      </node>
      <node id="4">
        <label>org.apache.iceberg.spark.source.SparkPositionDeltaWrite.DeleteAndDataDeltaWriter</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkPositionDeltaWrite_1_1DeleteAndDataDeltaWriter"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org.apache.iceberg.spark.source.SparkPositionDeltaWrite.UnpartitionedDeltaWriter</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkPositionDeltaWrite_1_1UnpartitionedDeltaWriter"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>org.apache.iceberg.spark.source.SparkPositionDeltaWrite.DeleteOnlyDeltaWriter</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkPositionDeltaWrite_1_1DeleteOnlyDeltaWriter"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>org.apache.iceberg.spark.source.SparkPositionDeltaWrite.PartitionedDeltaWriter</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1source_1_1SparkPositionDeltaWrite_1_1PartitionedDeltaWriter"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.spark.sql.connector.iceberg.write.DeltaWriter&lt; T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>org::apache::spark::sql::connector::write::DataWriter&lt; T &gt;</label>
      </node>
      <node id="1">
        <label>org.apache.spark.sql.connector.iceberg.write.DeltaWriter&lt; T &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" line="25" column="42" bodyfile="spark/v3.3/spark/src/main/java/org/apache/spark/sql/connector/iceberg/write/DeltaWriter.java" bodystart="25" bodyend="57"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1a8bcf2c9d2a7634008ab50d5629763dc3" prot="public" virt="non-virtual"><scope>org::apache::spark::sql::connector::iceberg::write::DeltaWriter</scope><name>delete</name></member>
      <member refid="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1a6304f3415ecfa828c50a3a0f78f82958" prot="public" virt="non-virtual"><scope>org::apache::spark::sql::connector::iceberg::write::DeltaWriter</scope><name>insert</name></member>
      <member refid="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1a9ec010f0e49df436d3a6eb2ed88391bf" prot="public" virt="non-virtual"><scope>org::apache::spark::sql::connector::iceberg::write::DeltaWriter</scope><name>update</name></member>
      <member refid="interfaceorg_1_1apache_1_1spark_1_1sql_1_1connector_1_1iceberg_1_1write_1_1DeltaWriter_1abff6bbd8171de41590fd1fd3ed3cc074" prot="public" virt="non-virtual"><scope>org::apache::spark::sql::connector::iceberg::write::DeltaWriter</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
