<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::actions::RewriteDataFiles</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1SnapshotUpdate" prot="public" virt="non-virtual">org.apache.iceberg.actions.SnapshotUpdate&lt; RewriteDataFiles, RewriteDataFiles.Result &gt;</basecompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1BaseRewriteDataFiles" prot="public" virt="non-virtual">org.apache.iceberg.actions.BaseRewriteDataFiles</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction" prot="public" virt="non-virtual">org.apache.iceberg.spark.actions.RewriteDataFilesSparkAction</derivedcompoundref>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1_1FileGroupFailureResult" prot="public">org::apache::iceberg::actions::RewriteDataFiles::FileGroupFailureResult</innerclass>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1_1FileGroupInfo" prot="public">org::apache::iceberg::actions::RewriteDataFiles::FileGroupInfo</innerclass>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1_1FileGroupRewriteResult" prot="public">org::apache::iceberg::actions::RewriteDataFiles::FileGroupRewriteResult</innerclass>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1_1Result" prot="public">org::apache::iceberg::actions::RewriteDataFiles::Result</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a80c92481ed2c97677ea68d9e27faaea0" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.PARTIAL_PROGRESS_ENABLED</definition>
        <argsstring></argsstring>
        <name>PARTIAL_PROGRESS_ENABLED</name>
        <initializer>= &quot;partial-progress.enabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable committing groups of files (see max-file-group-size-bytes) prior to the entire rewrite completing. This will produce additional commits but allow for progress even if some groups fail to commit. This setting will not change the correctness of the rewrite operation as file groups can be compacted independently.</para>
<para>The default is false, which produces a single commit when the entire job has completed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="43" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a4fbfecf68a8b5d5fad3e0330a49ef61a" prot="public" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.actions.RewriteDataFiles.PARTIAL_PROGRESS_ENABLED_DEFAULT</definition>
        <argsstring></argsstring>
        <name>PARTIAL_PROGRESS_ENABLED_DEFAULT</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="45" column="11" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a792298ea627c7a4dfe368946dc1f0186" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.PARTIAL_PROGRESS_MAX_COMMITS</definition>
        <argsstring></argsstring>
        <name>PARTIAL_PROGRESS_MAX_COMMITS</name>
        <initializer>= &quot;partial-progress.max-commits&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum amount of Iceberg commits that this rewrite is allowed to produce if partial progress is enabled. This setting has no effect if partial progress is disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="51" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1ae563e8b0c86d8e04f3c15e9623fe997d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.iceberg.actions.RewriteDataFiles.PARTIAL_PROGRESS_MAX_COMMITS_DEFAULT</definition>
        <argsstring></argsstring>
        <name>PARTIAL_PROGRESS_MAX_COMMITS_DEFAULT</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="53" column="7" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a77e6cfa8ef7130d3f0acc65bd48ac743" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.PARTIAL_PROGRESS_MAX_FAILED_COMMITS</definition>
        <argsstring></argsstring>
        <name>PARTIAL_PROGRESS_MAX_FAILED_COMMITS</name>
        <initializer>= &quot;partial-progress.max-failed-commits&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum amount of failed commits that this rewrite is allowed if partial progress is enabled. By default, all commits are allowed to fail. This setting has no effect if partial progress is disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="60" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1aadf8107a49500c9c9a67f2e390a105a7" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.MAX_FILE_GROUP_SIZE_BYTES</definition>
        <argsstring></argsstring>
        <name>MAX_FILE_GROUP_SIZE_BYTES</name>
        <initializer>= &quot;max-file-group-size-bytes&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The entire rewrite operation is broken down into pieces based on partitioning and within partitions based on size into groups. These sub-units of the rewrite are referred to as file groups. The largest amount of data that should be compacted in a single group is controlled by <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1aadf8107a49500c9c9a67f2e390a105a7" kindref="member">MAX_FILE_GROUP_SIZE_BYTES</ref>. This helps with breaking down the rewriting of very large partitions which may not be rewritable otherwise due to the resource constraints of the cluster. For example a sort based rewrite may not scale to terabyte sized partitions, those partitions need to be worked on in small subsections to avoid exhaustion of resources.</para>
<para>When grouping files, the underlying rewrite strategy will use this value as to limit the files which will be included in a single file group. A group will be processed by a single framework &quot;action&quot;. For example, in Spark this means that each group would be rewritten in its own Spark action. A group will never contain files for multiple output partitions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="76" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1ad0ca27cff50e3e295bece0a468176dff" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long org.apache.iceberg.actions.RewriteDataFiles.MAX_FILE_GROUP_SIZE_BYTES_DEFAULT</definition>
        <argsstring></argsstring>
        <name>MAX_FILE_GROUP_SIZE_BYTES_DEFAULT</name>
        <initializer>= 1024L * 1024L * 1024L * 100L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="78" column="8" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a25c9e1979d5699d2b572185409392b79" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.MAX_CONCURRENT_FILE_GROUP_REWRITES</definition>
        <argsstring></argsstring>
        <name>MAX_CONCURRENT_FILE_GROUP_REWRITES</name>
        <initializer>= &quot;max-concurrent-file-group-rewrites&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The max number of file groups to be simultaneously rewritten by the rewrite strategy. The structure and contents of the group is determined by the rewrite strategy. Each file group will be rewritten independently and asynchronously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="85" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a4607f96debc8b0cf03f01de2d22f0ac8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.iceberg.actions.RewriteDataFiles.MAX_CONCURRENT_FILE_GROUP_REWRITES_DEFAULT</definition>
        <argsstring></argsstring>
        <name>MAX_CONCURRENT_FILE_GROUP_REWRITES_DEFAULT</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="87" column="7" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a9cfad14acde2bda45229e8998cf37baf" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.TARGET_FILE_SIZE_BYTES</definition>
        <argsstring></argsstring>
        <name>TARGET_FILE_SIZE_BYTES</name>
        <initializer>= &quot;target-file-size-bytes&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The output file size that this rewrite strategy will attempt to generate when rewriting files. By default this will use the &quot;write.target-file-size-bytes value&quot; in the table properties of the table being updated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="94" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1acbac59660c1162644fc3eba73ff61329" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.USE_STARTING_SEQUENCE_NUMBER</definition>
        <argsstring></argsstring>
        <name>USE_STARTING_SEQUENCE_NUMBER</name>
        <initializer>= &quot;use-starting-sequence-number&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the compaction should use the sequence number of the snapshot at compaction start time for new data files, instead of using the sequence number of the newly produced snapshot.</para>
<para>This avoids commit conflicts with updates that add newer equality deletes at a higher sequence number.</para>
<para>Defaults to true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="105" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a89a29a5ec4ca1a5faedfb06a2498adf2" prot="public" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.actions.RewriteDataFiles.USE_STARTING_SEQUENCE_NUMBER_DEFAULT</definition>
        <argsstring></argsstring>
        <name>USE_STARTING_SEQUENCE_NUMBER_DEFAULT</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="107" column="11" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a692f9279478e8e3619a3a08f2d455fca" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.REWRITE_JOB_ORDER</definition>
        <argsstring></argsstring>
        <name>REWRITE_JOB_ORDER</name>
        <initializer>= &quot;rewrite-job-order&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forces the rewrite job order based on the value.</para>
<para><itemizedlist>
<listitem>
<para>If rewrite-job-order=bytes-asc, then rewrite the smallest job groups first. </para>
</listitem>
<listitem>
<para>If rewrite-job-order=bytes-desc, then rewrite the largest job groups first. </para>
</listitem>
<listitem>
<para>If rewrite-job-order=files-asc, then rewrite the job groups with the least files first. </para>
</listitem>
<listitem>
<para>If rewrite-job-order=files-desc, then rewrite the job groups with the most files first. </para>
</listitem>
<listitem>
<para>If rewrite-job-order=none, then rewrite job groups in the order they were planned (no specific ordering). </para>
</listitem>
</itemizedlist>
</para>
<para>Defaults to none. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="125" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a8bed03cb0fa2486280b227d2dcfc4819" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.REWRITE_JOB_ORDER_DEFAULT</definition>
        <argsstring></argsstring>
        <name>REWRITE_JOB_ORDER_DEFAULT</name>
        <initializer>= RewriteJobOrder.NONE.orderName()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="127" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a4a7e332a5b1033af1901e56f601b1c6a" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String org.apache.iceberg.actions.RewriteDataFiles.OUTPUT_SPEC_ID</definition>
        <argsstring></argsstring>
        <name>OUTPUT_SPEC_ID</name>
        <initializer>= &quot;output-spec-id&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The partition specification ID to be used for rewritten files</para>
<para>output-spec-id ID is used by the file rewriter during the rewrite operation to identify the specific output partition spec. Data will be reorganized during the rewrite to align with the output partitioning. Defaults to the current table specification. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="136" column="10" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a855a44dcdc3ddea4054da40a69953e90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles" kindref="compound">RewriteDataFiles</ref></type>
        <definition>default RewriteDataFiles org.apache.iceberg.actions.RewriteDataFiles.binPack</definition>
        <argsstring>()</argsstring>
        <name>binPack</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a9f7e1aa6a0b6f30596490a1611ff9ebd">binPack</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a9f7e1aa6a0b6f30596490a1611ff9ebd">binPack</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a9f7e1aa6a0b6f30596490a1611ff9ebd">binPack</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose BINPACK as a strategy for this rewrite operation</para>
<para><simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="143" column="28" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1af9b5d3daca2af78d6c69ff070c6b91fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles" kindref="compound">RewriteDataFiles</ref></type>
        <definition>default RewriteDataFiles org.apache.iceberg.actions.RewriteDataFiles.sort</definition>
        <argsstring>()</argsstring>
        <name>sort</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a3b3a867c6d62678f2b830248228e7f96">sort</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a3b3a867c6d62678f2b830248228e7f96">sort</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a3b3a867c6d62678f2b830248228e7f96">sort</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose SORT as a strategy for this rewrite operation using the table&apos;s sortOrder</para>
<para><simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="152" column="28" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a060ac0d4e97aec3edeb5774e355e9e2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles" kindref="compound">RewriteDataFiles</ref></type>
        <definition>default RewriteDataFiles org.apache.iceberg.actions.RewriteDataFiles.sort</definition>
        <argsstring>(SortOrder sortOrder)</argsstring>
        <name>sort</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1aafe0247605506187983c969b6a9ee726">sort</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1aafe0247605506187983c969b6a9ee726">sort</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1aafe0247605506187983c969b6a9ee726">sort</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1SortOrder" kindref="compound">SortOrder</ref></type>
          <declname>sortOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose SORT as a strategy for this rewrite operation and manually specify the sortOrder to use</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sortOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>user defined sortOrder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="163" column="28" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1aaed4e534797f514e062486b8641c45a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles" kindref="compound">RewriteDataFiles</ref></type>
        <definition>default RewriteDataFiles org.apache.iceberg.actions.RewriteDataFiles.zOrder</definition>
        <argsstring>(String... columns)</argsstring>
        <name>zOrder</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1ac08d4e5c0bb4cc76678731764a9316e0">zOrder</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1ac08d4e5c0bb4cc76678731764a9316e0">zOrder</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1ac08d4e5c0bb4cc76678731764a9316e0">zOrder</reimplementedby>
        <param>
          <type>String...</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose Z-ORDER as a strategy for this rewrite operation with a specified list of columns to use</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>columns</parametername>
</parameternamelist>
<parameterdescription>
<para>Columns to be used to generate Z-Values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for method chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="174" column="28" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1ade6f2d9ab0b10c454716cb7d61c1b5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles" kindref="compound">RewriteDataFiles</ref></type>
        <definition>RewriteDataFiles org.apache.iceberg.actions.RewriteDataFiles.filter</definition>
        <argsstring>(Expression expression)</argsstring>
        <name>filter</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a4a18364af82fa46330aadd9cd7e68a35">filter</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a4a18364af82fa46330aadd9cd7e68a35">filter</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction_1a4a18364af82fa46330aadd9cd7e68a35">filter</reimplementedby>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1expressions_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A user provided filter for determining which files will be considered by the rewrite strategy. This will be used in addition to whatever rules the rewrite strategy generates. For example this would be used for providing a restriction to only run rewrite on a specific partition.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>An iceberg expression used to determine which files will be considered for rewriting </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this for chaining </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="188" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An action for rewriting data files according to a rewrite strategy. Generally used for optimizing the sizing and layout of data files within a table. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.apache.iceberg.actions.BaseRewriteDataFiles</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.spark.actions.RewriteDataFilesSparkAction</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1spark_1_1actions_1_1RewriteDataFilesSparkAction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.actions.SnapshotUpdate&lt; RewriteDataFiles, RewriteDataFiles.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1SnapshotUpdate"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.actions.RewriteDataFiles</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>org.apache.iceberg.actions.SnapshotUpdate&lt; RewriteDataFiles, RewriteDataFiles.Result &gt;</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1SnapshotUpdate"/>
      </node>
      <node id="1">
        <label>org.apache.iceberg.actions.RewriteDataFiles</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" line="33" column="18" bodyfile="api/src/main/java/org/apache/iceberg/actions/RewriteDataFiles.java" bodystart="32" bodyend="259"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a855a44dcdc3ddea4054da40a69953e90" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>binPack</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1ade6f2d9ab0b10c454716cb7d61c1b5f7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>filter</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a25c9e1979d5699d2b572185409392b79" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>MAX_CONCURRENT_FILE_GROUP_REWRITES</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a4607f96debc8b0cf03f01de2d22f0ac8" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>MAX_CONCURRENT_FILE_GROUP_REWRITES_DEFAULT</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1aadf8107a49500c9c9a67f2e390a105a7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>MAX_FILE_GROUP_SIZE_BYTES</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1ad0ca27cff50e3e295bece0a468176dff" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>MAX_FILE_GROUP_SIZE_BYTES_DEFAULT</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a4a7e332a5b1033af1901e56f601b1c6a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>OUTPUT_SPEC_ID</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a80c92481ed2c97677ea68d9e27faaea0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>PARTIAL_PROGRESS_ENABLED</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a4fbfecf68a8b5d5fad3e0330a49ef61a" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>PARTIAL_PROGRESS_ENABLED_DEFAULT</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a792298ea627c7a4dfe368946dc1f0186" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>PARTIAL_PROGRESS_MAX_COMMITS</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1ae563e8b0c86d8e04f3c15e9623fe997d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>PARTIAL_PROGRESS_MAX_COMMITS_DEFAULT</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a77e6cfa8ef7130d3f0acc65bd48ac743" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>PARTIAL_PROGRESS_MAX_FAILED_COMMITS</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a692f9279478e8e3619a3a08f2d455fca" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>REWRITE_JOB_ORDER</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a8bed03cb0fa2486280b227d2dcfc4819" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>REWRITE_JOB_ORDER_DEFAULT</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1SnapshotUpdate_1a6716c73569a04fab8c65a3269440187e" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>snapshotProperty</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1af9b5d3daca2af78d6c69ff070c6b91fc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>sort</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a060ac0d4e97aec3edeb5774e355e9e2f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>sort</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a9cfad14acde2bda45229e8998cf37baf" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>TARGET_FILE_SIZE_BYTES</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1acbac59660c1162644fc3eba73ff61329" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>USE_STARTING_SEQUENCE_NUMBER</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1a89a29a5ec4ca1a5faedfb06a2498adf2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>USE_STARTING_SEQUENCE_NUMBER_DEFAULT</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1actions_1_1RewriteDataFiles_1aaed4e534797f514e062486b8641c45a4" prot="public" virt="non-virtual"><scope>org::apache::iceberg::actions::RewriteDataFiles</scope><name>zOrder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
