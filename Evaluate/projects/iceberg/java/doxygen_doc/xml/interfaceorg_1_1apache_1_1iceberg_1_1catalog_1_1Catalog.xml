<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog" kind="interface" language="Java" prot="public">
    <compoundname>org::apache::iceberg::catalog::Catalog</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog" prot="public" virt="non-virtual">org.apache.iceberg.BaseMetastoreCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog" prot="public" virt="non-virtual">org.apache.iceberg.CachingCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog" prot="public" virt="non-virtual">org.apache.iceberg.catalog.BaseSessionCatalog.AsCatalog</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog" prot="public" virt="non-virtual">org.apache.iceberg.rest.RESTCatalog</derivedcompoundref>
    <innerclass refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1_1TableBuilder" prot="public">org::apache::iceberg::catalog::Catalog::TableBuilder</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a4fdbd0ddec7d7827d9bbfe19842c6cb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default String</type>
        <definition>default String org.apache.iceberg.catalog.Catalog.name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1view_1_1BaseMetastoreViewCatalog_1a49b3a3f8cd4fa68420f30879fb71dba4">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a748fe173d4db2dc1858a3a596aba0995">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a20a9d46edde9f0eb0e32a83539945674">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a4bf006d5a3379b98548e0f42f6cabf91">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a8f99c74d6cf667208f9a7a284a8e9ea0">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a6ae01d82f00104eca088766585ff2db1">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1a0e6d1318470d9b4622591fbebd3d13b3">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1abecac588335f10d0076b4ddf6b0ff88a">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1a6ab4b0c426a22a8a69e139c986148476">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1a110b995692793e9ea9d776c4f33d6114">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a979f02f03f9385c0d15e00c625a302fc">name</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a1aaa6c097bd2c3a31ac894ad673c72d5">name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the name for this catalog.</para>
<para><simplesect kind="return"><para>this catalog&apos;s name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="40" column="18" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a7789d56c7b96208d4d3e064979862a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>List&lt; <ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref> &gt;</type>
        <definition>List&lt;TableIdentifier&gt; org.apache.iceberg.catalog.Catalog.listTables</definition>
        <argsstring>(Namespace namespace)</argsstring>
        <name>listTables</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a5a039eac5a83ccabb6f6c97a134a1835">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1afe8abe15a2c80d9c25992ab6dc18bd9f">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1a95199ee2854905f162c7d738582cd84d">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a2fb1dbef4075826e9bfc7e5967d10d14">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a61905df4d3b2d60220660a7bed1cc379">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a9140e6356d95e1e95f862c2cabd36722">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a53e8ce76f78ae33199ef9e416a4cb0fa">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ace6e74682a05beb511d68940b76dae04">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a47d61d146f875a4ce34f2c29cb95c31b">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1aa2f1fef3e64754c823c13de7cff8c0fa">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1a5f2ca8f9393352efc152a38bbb044e37">listTables</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a11d3497e69f8d4baccdb853a8f100327">listTables</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1Namespace" kindref="compound">Namespace</ref></type>
          <declname>namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return all the identifiers under this namespace.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>a namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of identifiers for tables </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchNamespaceException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the namespace is not found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="51" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aea32d4b815e8eb8618888eb827451bbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>default Table org.apache.iceberg.catalog.Catalog.createTable</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, String location, Map&lt; String, String &gt; properties)</argsstring>
        <name>createTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a347b9c185434e3607987a458b2991252">createTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a location for the table; leave null if unspecified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> instance </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="64" column="17" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="64" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a73f6a6c06823e5d7ad4353ac1c65caf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>default Table org.apache.iceberg.catalog.Catalog.createTable</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, Map&lt; String, String &gt; properties)</argsstring>
        <name>createTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a4e288b25ee4fdfba30b129483987f950">createTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> instance </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="88" column="17" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a5746e73c8f380ac0b85f89f0cda93979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>default Table org.apache.iceberg.catalog.Catalog.createTable</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec)</argsstring>
        <name>createTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a04b9cf4bfb74b96538f16f204c9171f4">createTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> instance </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="105" column="17" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ae258d93320592d2af6c3ae13add82e45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>default Table org.apache.iceberg.catalog.Catalog.createTable</definition>
        <argsstring>(TableIdentifier identifier, Schema schema)</argsstring>
        <name>createTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a4f3b3b8bfa1e0740790954e45343f946">createTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an unpartitioned table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> instance </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="117" column="17" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1af0bab969f8a8e02ecfe62658d4d2466c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newCreateTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, String location, Map&lt; String, String &gt; properties)</argsstring>
        <name>newCreateTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a48b9894fce9c31ed5c03dae5716dd63e">newCreateTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a location for the table; leave null if unspecified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to create the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="132" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="132" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aee3e8fb4bc990c89185c52c82ecfceac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newCreateTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, Map&lt; String, String &gt; properties)</argsstring>
        <name>newCreateTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1ac4fb8512b9ec30e5abb11a308cb7ff1a">newCreateTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to create the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="156" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a988b98707e3a9aa0b19852ed82db1847" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newCreateTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec)</argsstring>
        <name>newCreateTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1aea931f44d4c7b4ec944245a8f49df6e4">newCreateTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to create the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="173" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aff739fd6878a26f713ad704930e1b3e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newCreateTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema)</argsstring>
        <name>newCreateTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a34e13a93bb68b9812a3de08513cd6ad8">newCreateTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to create a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to create the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="186" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aa9a6ce4f5cc841b7c334ce39f2f2c717" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newReplaceTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, String location, Map&lt; String, String &gt; properties, boolean orCreate)</argsstring>
        <name>newReplaceTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a76ae1621796659ac07185a46f0659d29">newReplaceTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>location</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>orCreate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to replace a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>a location for the table; leave null if unspecified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orCreate</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create the table if not exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to replace the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table doesn&apos;t exist and orCreate is false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="202" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="202" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a385713b058a4578259102ae031b154fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newReplaceTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, Map&lt; String, String &gt; properties, boolean orCreate)</argsstring>
        <name>newReplaceTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a30bca2f356a9f3203b966da937dbf207">newReplaceTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>orCreate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to replace a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>a string map of table properties </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orCreate</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create the table if not exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to replace the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table doesn&apos;t exist and orCreate is false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="234" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="234" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a7c0db2a10f6c755113270bc28f0f2b0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newReplaceTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, PartitionSpec spec, boolean orCreate)</argsstring>
        <name>newReplaceTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a90cb3d14c8a8f316b55b82e3ecf245bf">newReplaceTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1PartitionSpec" kindref="compound">PartitionSpec</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>orCreate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to replace a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>a partition spec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orCreate</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create the table if not exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to replace the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table doesn&apos;t exist and orCreate is false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="253" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2d524ee8f75f3c520b4075f3cba566d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref></type>
        <definition>default Transaction org.apache.iceberg.catalog.Catalog.newReplaceTableTransaction</definition>
        <argsstring>(TableIdentifier identifier, Schema schema, boolean orCreate)</argsstring>
        <name>newReplaceTableTransaction</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1af8a44736c95f29c27c7dd81997effe00">newReplaceTableTransaction</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>orCreate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction to replace a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orCreate</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create the table if not exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Transaction" kindref="compound">Transaction</ref> to replace the table </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table doesn&apos;t exist and orCreate is false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="267" column="23" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="267" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a8b4b9fdc68d8862f4fdc349bd7383a40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.catalog.Catalog.tableExists</definition>
        <argsstring>(TableIdentifier identifier)</argsstring>
        <name>tableExists</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a0c91356cba6a95cdf4f11b5ddf5f31a6">tableExists</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a7b5ba6822c42bcd913d3846b660e5b2b">tableExists</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a478bf5a8d0b005c72d108df52c038518">tableExists</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether table exists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table exists, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="279" column="19" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="279" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ad42e74e5b4ab4b2f59d75a00426eafb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default boolean</type>
        <definition>default boolean org.apache.iceberg.catalog.Catalog.dropTable</definition>
        <argsstring>(TableIdentifier identifier)</argsstring>
        <name>dropTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a52d819d243ba3756b05855641abc183a">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a09b1f096b714188957d4d90f9fd0d3a5">dropTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a table and delete all data and metadata files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table was dropped, false if the table did not exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="294" column="19" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aebc37cb952146e50e3c43abc3c386dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.iceberg.catalog.Catalog.dropTable</definition>
        <argsstring>(TableIdentifier identifier, boolean purge)</argsstring>
        <name>dropTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a0898371c193ab6571d06d56ed07ba5cf">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a7767d417e2bc3745148e677e9350cff9">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1ab32e09b2b5adec5d0ef55e89a9491529">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a7c2c79af62d9f9778dc4abcb2cb175cf">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1afa5fe919cfc73a49c34a3acbd37bce43">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a387ad680ca0c7ad042a818c5d2d163ff">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a04073afc291a428d17f8c04732701cac">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1a9230709fca61dd2824b572175b1253ff">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1a2399c1c7fe868172e7e890cabc364089">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1a61479231255d871cf18fea6110b60773">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1ac04ea3aa15859bd33a706dc2b7ee9d59">dropTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a3e0f79c7d521beb900d8df4ed325e4a8">dropTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>purge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop a table; optionally delete data and metadata files.</para>
<para>If purge is set to true the implementation should delete all data and metadata files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>purge</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, delete all data and metadata files in the table </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table was dropped, false if the table did not exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="307" column="11"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a65b9a525b88f6e743dbfa652d1c27cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.iceberg.catalog.Catalog.renameTable</definition>
        <argsstring>(TableIdentifier from, TableIdentifier to)</argsstring>
        <name>renameTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1aa61b2e8622394e111c282d8106ec7ad2">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a20d6f25b62a8c2fbba3ad123b7d3dfd9">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1ab168511bb58e484ab0e43aa4965f0b7a">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1a5710bcc80b8c90698a5e1536f3804c4b">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1aff2c34118536d2edb95f54d8a577a7b2">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a894b04a299be0b6248321bf85d8275a8">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a835cfa9af8670f654bcbf8d15b368d49">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a264bcec30227414fa9bef95e0affa29f">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1a79671711f0938302fd792fe810de323b">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1ac7942e8178b16579e6397113f9b96f0a">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ad7eeb4054990b7190acc106db8c56289">renameTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1acd8642c42aec61f3f723b9845d5802b0">renameTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>identifier of the table to rename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>new table name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the from table does not exist </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the to table already exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="317" column="8"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ae0f2c034e81cc13f0ff5782e749d192d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>Table org.apache.iceberg.catalog.Catalog.loadTable</definition>
        <argsstring>(TableIdentifier identifier)</argsstring>
        <name>loadTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a0590fda0d9f9c8f2987898f9522ef8f2">loadTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1ac59837f52cfedb30e0d30de3289a0fa1">loadTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a8c1d2e71d2584dae91aee1a4ea10e2b7">loadTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac">loadTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>instance of <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> implementation referred by<programlisting><codeline><highlight class="normal">tableIdentifier<sp/></highlight></codeline>
</programlisting> </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NoSuchTableException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table does not exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="326" column="9"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a114c5529e87135758ede702633d85b12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default void</type>
        <definition>default void org.apache.iceberg.catalog.Catalog.invalidateTable</definition>
        <argsstring>(TableIdentifier identifier)</argsstring>
        <name>invalidateTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a0d77b4e6df4ebdae75cb744b475a1b10">invalidateTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1ab6bb1d03d8337615dbcf732a84373e7b">invalidateTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a374777a390c70180332891b58825ba78">invalidateTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalidate cached table metadata from current catalog.</para>
<para>If the table is already loaded or cached, drop cached data. If the table does not exist or is not cached, do nothing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="336" column="16" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2fe0af717f867dffad934fba3b425001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref></type>
        <definition>default Table org.apache.iceberg.catalog.Catalog.registerTable</definition>
        <argsstring>(TableIdentifier identifier, String metadataFileLocation)</argsstring>
        <name>registerTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1ad65a4c0b55965d26efc8d772aa7ebc51">registerTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1ac043cdf1cb0db1e57f8944ef0080ee7d">registerTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a9ab61d90a39c54a2a36501c84a963442">registerTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a4b04ef2209bd9426b8072a4119e28472">registerTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>String</type>
          <declname>metadataFileLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a table with the catalog if it does not exist.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metadataFileLocation</parametername>
</parameternamelist>
<parameterdescription>
<para>the location of a metadata file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref> instance </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>AlreadyExistsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the table already exists in the catalog. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="346" column="17" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="346" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2c01afeef7c14c4a305054ae2954df10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1_1TableBuilder" kindref="compound">TableBuilder</ref></type>
        <definition>default TableBuilder org.apache.iceberg.catalog.Catalog.buildTable</definition>
        <argsstring>(TableIdentifier identifier, Schema schema)</argsstring>
        <name>buildTable</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog_1a24d4d25da6090b621fe77ed727c25b83">buildTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a2ad8ae42aa83e9399bdfb70098cd99ae">buildTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1a7c40e5ddce4c6520f65b07663c57b1ba">buildTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog_1a5ffecda886967f01000b313d415a81a3">buildTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1view_1_1BaseMetastoreViewCatalog_1a342615a2a4a6558a45a4a64a19b36f81">buildTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a2e8e3acc1613f7679390ac9af6b2db39">buildTable</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1ab209be1e46a04937a2adf64eaafdd39a">buildTable</reimplementedby>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref></type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1apache_1_1iceberg_1_1Schema" kindref="compound">Schema</ref></type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>/** Instantiate a builder to either create a table or start a create/replace transaction.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a table identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>a schema </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the builder to create a table or start a create/replace transaction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="357" column="24" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a346e8e360ab496ede7684abaab13ea02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>default void</type>
        <definition>default void org.apache.iceberg.catalog.Catalog.initialize</definition>
        <argsstring>(String name, Map&lt; String, String &gt; properties)</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog_1a9e22cdd6d876770c6368fda896fa2de3">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog_1ae733a28af289416360049cca40703568">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1view_1_1BaseMetastoreViewCatalog_1a378b9f25d072c2e015a5b82b146f84c8">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog_1adf7657cd962afb3032b642d5fb9d2ccf">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog_1a0fa3245aecb3a2b7b0fbbf31936b4717">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog_1a811abbde4fc1a68cb8d79cf248971f7f">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog_1a96fbe3622b347b6d58d2839601a02e82">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog_1a194230df04c093d8f685ef7783b8bea9">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1afe47dda0a5fd429403d338d5011a5056">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog_1afaf7a0bfeff49e34a18e80ea62ea6742">initialize</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog_1a30bfdfc3e16c7edc6d130133516dcf7a">initialize</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Map&lt; String, String &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a catalog given a custom name and a map of catalog properties.</para>
<para>A custom <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog" kindref="compound">Catalog</ref> implementation must have a no-arg constructor. A compute engine like Spark or Flink will first initialize the catalog without any arguments, and then call this method to complete catalog initialization with properties passed into the engine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>a custom name for the catalog </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>catalog properties </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="372" column="16" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="372" bodyend="372"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog" kindref="compound">Catalog</ref> API for table create, drop, and load operations. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>org.apache.iceberg.snowflake.SnowflakeCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1snowflake_1_1SnowflakeCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org.apache.iceberg.hadoop.HadoopCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hadoop_1_1HadoopCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.apache.iceberg.aws.glue.GlueCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.apache.iceberg.aws.dynamodb.DynamoDbCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1dynamodb_1_1DynamoDbCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>org.apache.iceberg.rest.RESTCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1rest_1_1RESTCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.apache.iceberg.catalog.Catalog</label>
        <link refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog"/>
      </node>
      <node id="11">
        <label>org.apache.iceberg.jdbc.JdbcCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1jdbc_1_1JdbcCatalog"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>org.apache.iceberg.inmemory.InMemoryCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1inmemory_1_1InMemoryCatalog"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>org.apache.iceberg.hive.HiveCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1hive_1_1HiveCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>org.apache.iceberg.nessie.NessieCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1nessie_1_1NessieCatalog"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>org.apache.iceberg.view.BaseMetastoreViewCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1view_1_1BaseMetastoreViewCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>org.apache.iceberg.CachingCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1CachingCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>org.apache.iceberg.dell.ecs.EcsCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1dell_1_1ecs_1_1EcsCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.apache.iceberg.BaseMetastoreCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>org.apache.iceberg.catalog.BaseSessionCatalog.AsCatalog</label>
        <link refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1BaseSessionCatalog_1_1AsCatalog"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" line="33" column="25" bodyfile="api/src/main/java/org/apache/iceberg/catalog/Catalog.java" bodystart="33" bodyend="450"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2c01afeef7c14c4a305054ae2954df10" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>buildTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aea32d4b815e8eb8618888eb827451bbc" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a73f6a6c06823e5d7ad4353ac1c65caf2" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a5746e73c8f380ac0b85f89f0cda93979" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ae258d93320592d2af6c3ae13add82e45" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>createTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ad42e74e5b4ab4b2f59d75a00426eafb7" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>dropTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aebc37cb952146e50e3c43abc3c386dd9" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>dropTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a346e8e360ab496ede7684abaab13ea02" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>initialize</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a114c5529e87135758ede702633d85b12" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>invalidateTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a7789d56c7b96208d4d3e064979862a19" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>listTables</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1ae0f2c034e81cc13f0ff5782e749d192d" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>loadTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a4fdbd0ddec7d7827d9bbfe19842c6cb5" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>name</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1af0bab969f8a8e02ecfe62658d4d2466c" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aee3e8fb4bc990c89185c52c82ecfceac" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a988b98707e3a9aa0b19852ed82db1847" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aff739fd6878a26f713ad704930e1b3e0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newCreateTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1aa9a6ce4f5cc841b7c334ce39f2f2c717" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a385713b058a4578259102ae031b154fa" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a7c0db2a10f6c755113270bc28f0f2b0f" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2d524ee8f75f3c520b4075f3cba566d0" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>newReplaceTableTransaction</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a2fe0af717f867dffad934fba3b425001" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>registerTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a65b9a525b88f6e743dbfa652d1c27cab" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>renameTable</name></member>
      <member refid="interfaceorg_1_1apache_1_1iceberg_1_1catalog_1_1Catalog_1a8b4b9fdc68d8862f4fdc349bd7383a40" prot="public" virt="non-virtual"><scope>org::apache::iceberg::catalog::Catalog</scope><name>tableExists</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
