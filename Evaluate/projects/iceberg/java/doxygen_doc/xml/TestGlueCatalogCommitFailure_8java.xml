<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="TestGlueCatalogCommitFailure_8java" kind="file" language="Java">
    <compoundname>TestGlueCatalogCommitFailure.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure" prot="public">org::apache::iceberg::aws::glue::TestGlueCatalogCommitFailure</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1iceberg_1_1aws_1_1glue">org::apache::iceberg::aws::glue</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.iceberg.aws.glue;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThat;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.assertj.core.api.Assertions.assertThatThrownBy;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.File;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Map;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations" kindref="compound">BaseMetastoreTableOperations</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1aws" kindref="compound">aws</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1aws_1_1s3" kindref="compound">s3</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil" kindref="compound">S3TestUtil</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1aws" kindref="compound">aws</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1aws_1_1util" kindref="compound">util</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1util_1_1RetryDetector" kindref="compound">RetryDetector</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1catalog" kindref="compound">catalog</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitStateUnknownException" kindref="compound">CommitStateUnknownException</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ForbiddenException" kindref="compound">ForbiddenException</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NotFoundException" kindref="compound">NotFoundException</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1types" kindref="compound">types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.junit.jupiter.api.Test;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespaceorg" kindref="compound">org</ref>.mockito.Mockito;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.core.metrics.CoreMetric;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.metrics.MetricCollector;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.AccessDeniedException;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.ConcurrentModificationException;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.EntityNotFoundException;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.GlueException;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.glue.model.ValidationException;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.s3.model.HeadObjectRequest;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.s3.model.ListObjectsV2Request;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.s3.model.NoSuchKeyException;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>software.amazon.awssdk.services.s3.model.S3Exception;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure" kindref="compound">TestGlueCatalogCommitFailure</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase" kindref="compound">GlueTestBase</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="55" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a98d3dae10edbe3b122f09401f9bb7680" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a98d3dae10edbe3b122f09401f9bb7680" kindref="member">testFailedCommit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>.class)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="77" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ac9889f578b244c6d9b63f4f549794cdf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ac9889f578b244c6d9b63f4f549794cdf" kindref="member">testFailedCommitThrowsUnknownException</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitStateUnknownException" kindref="compound">CommitStateUnknownException</ref>.class)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.verify(spyOps,<sp/>Mockito.times(1)).refresh();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;Client<sp/>could<sp/>not<sp/>determine<sp/>outcome<sp/>so<sp/>new<sp/>metadata<sp/>file<sp/>should<sp/>also<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(3);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="100" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ae92b58f7a6a66bd9ab1efb8c088882c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ae92b58f7a6a66bd9ab1efb8c088882c2" kindref="member">testConcurrentModificationExceptionDoesNotCheckCommitStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/>ConcurrentModificationException.builder().build());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>.class)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Glue<sp/>detected<sp/>concurrent<sp/>update&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cause()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(ConcurrentModificationException.class);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.verify(spyOps,<sp/>Mockito.times(0)).refresh();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="125" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a407c04d54ba42b779d79fe28005f7739" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a407c04d54ba42b779d79fe28005f7739" kindref="member">testCheckCommitStatusAfterRetries</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>tableName<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1a2882e051f95256144ade18ac44ee34c9" kindref="member">createTable</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>tableId<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">,<sp/>tableName);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mockito.spy((GlueTableOperations)<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ab312c2bebde6b312eebba176654aa7f1" kindref="member">newTableOps</ref>(tableId));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog" kindref="compound">GlueCatalog</ref><sp/>spyCatalog<sp/>=<sp/>Mockito.spy(glueCatalog);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doReturn(spyOps).when(spyCatalog).<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ab312c2bebde6b312eebba176654aa7f1" kindref="member">newTableOps</ref>(Mockito.eq(tableId));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/>spyCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(tableId);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>spyOps.current();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a753ea2d6f7b24c596a5aa98fbcc66d36" kindref="member">simulateRetriedCommit</ref>(spyOps,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>report<sp/>retry<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>spyOps);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(spyOps.current())</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isNotEqualTo(metadataV1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(spyOps.current())).isTrue();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(spyOps.current()))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="150" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a7e45c96de8d8418d5a1e86253e429d41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a7e45c96de8d8418d5a1e86253e429d41" kindref="member">testNoRetryAwarenessCorruptsTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>exists<sp/>to<sp/>replicate<sp/>the<sp/>issue<sp/>the<sp/>prior<sp/>test<sp/>validates<sp/>the<sp/>fix<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/apache/iceberg/issues/7151</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>tableName<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1a2882e051f95256144ade18ac44ee34c9" kindref="member">createTable</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref><sp/>tableId<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">,<sp/>tableName);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mockito.spy((GlueTableOperations)<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ab312c2bebde6b312eebba176654aa7f1" kindref="member">newTableOps</ref>(tableId));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog" kindref="compound">GlueCatalog</ref><sp/>spyCatalog<sp/>=<sp/>Mockito.spy(glueCatalog);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doReturn(spyOps).when(spyCatalog).<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueCatalog_1ab312c2bebde6b312eebba176654aa7f1" kindref="member">newTableOps</ref>(Mockito.eq(tableId));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/>spyCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(tableId);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>possible<sp/>that<sp/>Glue<sp/>or<sp/>DynamoDB<sp/>might<sp/>someday<sp/>make<sp/>changes<sp/>that<sp/>render<sp/>the<sp/>retry<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mechanism<sp/>unnecessary.<sp/>At<sp/>that<sp/>time,<sp/>this<sp/>test<sp/>would<sp/>start<sp/>failing<sp/>while<sp/>the<sp/>prior<sp/>one<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>still<sp/>work.<sp/>If<sp/>or<sp/>when<sp/>that<sp/>happens,<sp/>we<sp/>can<sp/>re-evaluate<sp/>whether<sp/>the<sp/>mechanism<sp/>is<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a753ea2d6f7b24c596a5aa98fbcc66d36" kindref="member">simulateRetriedCommit</ref>(spyOps,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>hide<sp/>retry<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>spyOps))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;Hidden<sp/>retry<sp/>causes<sp/>writer<sp/>to<sp/>conflict<sp/>with<sp/>itself&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>.class)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Glue<sp/>detected<sp/>concurrent<sp/>update&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cause()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(ConcurrentModificationException.class);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(tableId))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;Table<sp/>still<sp/>accessible<sp/>despite<sp/>hidden<sp/>retry,<sp/>underlying<sp/>assumptions<sp/>may<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NotFoundException" kindref="compound">NotFoundException</ref>.class)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Location<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a753ea2d6f7b24c596a5aa98fbcc66d36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a753ea2d6f7b24c596a5aa98fbcc66d36" kindref="member">simulateRetriedCommit</ref>(GlueTableOperations<sp/>spyOps,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>reportRetry)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>successful<sp/>commit,<sp/>then<sp/>call<sp/>it<sp/>again,<sp/>optionally<sp/>letting<sp/>the<sp/>retryDetector<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>about<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doAnswer(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>MetricCollector<sp/>metrics<sp/>=<sp/>MetricCollector.create(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metrics.reportMetric(CoreMetric.RETRY_COUNT,<sp/>reportRetry<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.callRealMethod();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(3,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1util_1_1RetryDetector" kindref="compound">RetryDetector</ref>.class).publish(metrics.collect());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.callRealMethod();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.when(spyOps)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.persistGlueTable(Mockito.any(),<sp/>Mockito.anyMap(),<sp/>Mockito.any(),<sp/>Mockito.any());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="199" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ad63351cb2211bc6ced1ce42733d19991" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ad63351cb2211bc6ced1ce42733d19991" kindref="member">testCommitThrowsExceptionWhileSucceeded</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>a<sp/>communication<sp/>error<sp/>after<sp/>a<sp/>successful<sp/>commit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1aceb3ffdffbb7bea146914bbabea49cf1" kindref="member">commitAndThrowException</ref>(ops,<sp/>spyOps);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shouldn&apos;t<sp/>throw<sp/>because<sp/>the<sp/>commit<sp/>actually<sp/>succeeds<sp/>even<sp/>though<sp/>persistTable<sp/>throws<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>spyOps.commit(metadataV2,<sp/>metadataV1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isNotEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(ops.current())).isTrue();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;Commit<sp/>should<sp/>have<sp/>been<sp/>successful<sp/>and<sp/>new<sp/>metadata<sp/>file<sp/>should<sp/>be<sp/>made&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(3);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="224" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ace3c2b697f46fa64216636166557a115" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1ace3c2b697f46fa64216636166557a115" kindref="member">testFailedCommitThrowsUnknownExceptionWhenStatusCheckFails</ref>()<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1b7cf767a7f33acf0e8fc4c9bfafcca8" kindref="member">breakFallbackCatalogCommitCheck</ref>(spyOps);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitStateUnknownException" kindref="compound">CommitStateUnknownException</ref>.class)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(ops.current())).isTrue();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;Client<sp/>could<sp/>not<sp/>determine<sp/>outcome<sp/>so<sp/>new<sp/>metadata<sp/>file<sp/>should<sp/>also<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(3);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="248" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1aca8b1bb945f90d4b83dac898a61e4134" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1aca8b1bb945f90d4b83dac898a61e4134" kindref="member">testSucceededCommitThrowsUnknownException</ref>()<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1aceb3ffdffbb7bea146914bbabea49cf1" kindref="member">commitAndThrowException</ref>(ops,<sp/>spyOps);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1b7cf767a7f33acf0e8fc4c9bfafcca8" kindref="member">breakFallbackCatalogCommitCheck</ref>(spyOps);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitStateUnknownException" kindref="compound">CommitStateUnknownException</ref>.class)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isNotEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(ops.current())).isTrue();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="281" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a2c4b8ddac48914ee46bac8f487c3feac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a2c4b8ddac48914ee46bac8f487c3feac" kindref="member">testExceptionThrownInConcurrentCommit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a87a865529bded22c0af172c8098b46b6" kindref="member">concurrentCommitAndThrowException</ref>(ops,<sp/>spyOps,<sp/>table);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>commit<sp/>and<sp/>our<sp/>concurrent<sp/>commit<sp/>should<sp/>succeed<sp/>even<sp/>though<sp/>this<sp/>commit<sp/>throws<sp/>an<sp/>exception</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>after<sp/>the<sp/>persist<sp/>operation<sp/>succeeds</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>spyOps.commit(metadataV2,<sp/>metadataV1);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isNotEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(ops.current())).isTrue();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current().schema().columns())</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;The<sp/>column<sp/>addition<sp/>from<sp/>the<sp/>concurrent<sp/>commit<sp/>should<sp/>have<sp/>been<sp/>successful&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasSize(2);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unchecked&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a87a865529bded22c0af172c8098b46b6" refkind="member"><highlight class="normal"><sp/><sp/>private<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a87a865529bded22c0af172c8098b46b6" kindref="member">concurrentCommitAndThrowException</ref>(</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>realOps,<sp/>GlueTableOperations<sp/>spyOperations,<sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>a<sp/>communication<sp/>error<sp/>after<sp/>a<sp/>successful<sp/>commit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doAnswer(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>String&gt;<sp/>mapProperties<sp/>=<sp/>i.getArgument(1,<sp/>Map.class);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realOps.persistGlueTable(</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(0,<sp/>software.amazon.awssdk.services.glue.model.Table.class),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapProperties,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(2,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref>.class),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(3,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1util_1_1RetryDetector" kindref="compound">RetryDetector</ref>.class));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>metadata<sp/>location<sp/>is<sp/>stored<sp/>in<sp/>map<sp/>property,<sp/>and<sp/>used<sp/>for<sp/>locking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>newMetadataLocation<sp/>=</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapProperties.get(<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations" kindref="compound">BaseMetastoreTableOperations</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreTableOperations_1ae6ecf867c33b33b2201e79db9df4d069" kindref="member">METADATA_LOCATION_PROP</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>lock<sp/>expiration<sp/>or<sp/>removal,<sp/>use<sp/>commit<sp/>status<sp/>null<sp/>to<sp/>avoid<sp/>deleting<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realOps.cleanupMetadataAndUnlock(</highlight><highlight class="keyword">null</highlight><highlight class="normal">,<sp/>newMetadataLocation);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.refresh();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.updateSchema().addColumn(</highlight><highlight class="stringliteral">&quot;newCol&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1IntegerType" kindref="compound">IntegerType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1IntegerType_1aad0f881e22d81f4abd78e2bc97689003" kindref="member">get</ref>()).commit();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RuntimeException(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.when(spyOperations)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.persistGlueTable(Mockito.any(),<sp/>Mockito.anyMap(),<sp/>Mockito.any(),<sp/>Mockito.any());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="334" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1af040b500bdd01e4110deb6a2e25ef16f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1af040b500bdd01e4110deb6a2e25ef16f" kindref="member">testCreateTableWithInvalidDB</ref>()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/>EntityNotFoundException.builder().build());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1NotFoundException" kindref="compound">NotFoundException</ref>.class)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;because<sp/>Glue<sp/>cannot<sp/>find<sp/>the<sp/>requested<sp/>entity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="356" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a40ff56f1ecb5c7f5054d721eac4c1c58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a40ff56f1ecb5c7f5054d721eac4c1c58" kindref="member">testGlueAccessDeniedException</ref>()<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/>AccessDeniedException.builder().build());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ForbiddenException" kindref="compound">ForbiddenException</ref>.class)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight><highlight class="stringliteral">&quot;because<sp/>Glue<sp/>cannot<sp/>access<sp/>the<sp/>requested<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="377" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1af50c87df626a92046f4ec30adae0c380" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1af50c87df626a92046f4ec30adae0c380" kindref="member">testGlueValidationException</ref>()<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>.builder().build());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="namespaceorg" kindref="compound">org</ref>.<ref refid="namespaceorg_1_1apache" kindref="compound">apache</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg" kindref="compound">iceberg</ref>.<ref refid="namespaceorg_1_1apache_1_1iceberg_1_1exceptions" kindref="compound">exceptions</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1ValidationException" kindref="compound">ValidationException</ref>.class)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessageContaining(</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;because<sp/>Glue<sp/>encountered<sp/>a<sp/>validation<sp/>exception<sp/>while<sp/>accessing<sp/>requested<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="400" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a150c012d9e56e5abb6149d7d8c9225ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a150c012d9e56e5abb6149d7d8c9225ad" kindref="member">testS3Exception</ref>()<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/>S3Exception.builder().statusCode(300).build());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(S3Exception.class)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessage(</highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="421" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a5c57beeac84186ae2bbe379e751444cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a5c57beeac84186ae2bbe379e751444cd" kindref="member">testOtherGlueException</ref>()<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/>GlueException.builder().statusCode(300).build());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(GlueException.class)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessage(</highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="443" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a52ff851cc48e8c58083048a8f135444f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a52ff851cc48e8c58083048a8f135444f" kindref="member">testInternalServerErrorRetryCommit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>ops<sp/>=<sp/>(GlueTableOperations)<sp/>((<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1HasTableOperations" kindref="compound">HasTableOperations</ref>)<sp/>table).operations();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV1<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(table,<sp/>ops);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>GlueTableOperations<sp/>spyOps<sp/>=<sp/>Mockito.spy(ops);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/>GlueException.builder().statusCode(500).build());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>spyOps.commit(metadataV2,<sp/>metadataV1))</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isInstanceOf(<ref refid="classorg_1_1apache_1_1iceberg_1_1exceptions_1_1CommitFailedException" kindref="compound">CommitFailedException</ref>.class)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hasMessage(</highlight><highlight class="keyword">null</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(ops.current()).as(</highlight><highlight class="stringliteral">&quot;Current<sp/>metadata<sp/>should<sp/>not<sp/>have<sp/>changed&quot;</highlight><highlight class="normal">).isEqualTo(metadataV2);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(metadataV2)).isTrue();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(ops.current()))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.as(</highlight><highlight class="stringliteral">&quot;No<sp/>new<sp/>metadata<sp/>files<sp/>should<sp/>exist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.isEqualTo(2);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1615206f204c584e6c2534bf376b21c3" kindref="member">setupTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1aac78b22b3bb5f48c57bcc9ccdea82230" kindref="member">createNamespace</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>tableName<sp/>=<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1GlueTestBase_1a2882e051f95256144ade18ac44ee34c9" kindref="member">createTable</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glueCatalog.<ref refid="classorg_1_1apache_1_1iceberg_1_1BaseMetastoreCatalog_1af1d51f4bab551d700f6696f93d2982ac" kindref="member">loadTable</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier" kindref="compound">TableIdentifier</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1catalog_1_1TableIdentifier_1a76db86a1aa530669397f2c4de5e9497d" kindref="member">of</ref>(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">,<sp/>tableName));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1abc7dac4bf180eff031da043bf050b729" kindref="member">updateTable</ref>(<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table" kindref="compound">Table</ref><sp/>table,<sp/>GlueTableOperations<sp/>ops)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>table.<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1Table_1a406a6efa9c249e7792a1b42c843ddfe2" kindref="member">updateSchema</ref>().<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1UpdateSchema_1ac371093e91b6b33c3d048c1f4322c37f" kindref="member">addColumn</ref>(</highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types" kindref="compound">Types</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1IntegerType" kindref="compound">IntegerType</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1types_1_1Types_1_1IntegerType_1aad0f881e22d81f4abd78e2bc97689003" kindref="member">get</ref>()).<ref refid="interfaceorg_1_1apache_1_1iceberg_1_1PendingUpdate_1ad6dacd11d0a1497f19f165ebf554d08f" kindref="member">commit</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>ops.refresh();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadataV2<sp/>=<sp/>ops.current();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>assertThat(metadataV2.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata_1aa6aa3163273a7b1df14219ff178ed5c2" kindref="member">schema</ref>().<ref refid="classorg_1_1apache_1_1iceberg_1_1Schema_1a503ecd80a74c35c4b05435bb6afc9415" kindref="member">columns</ref>()).hasSize(2);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadataV2;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unchecked&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="482" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1aceb3ffdffbb7bea146914bbabea49cf1" refkind="member"><highlight class="normal"><sp/><sp/>private<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1aceb3ffdffbb7bea146914bbabea49cf1" kindref="member">commitAndThrowException</ref>(GlueTableOperations<sp/>realOps,<sp/>GlueTableOperations<sp/>spyOps)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doAnswer(</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realOps.persistGlueTable(</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(0,<sp/>software.amazon.awssdk.services.glue.model.Table.class),</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(1,<sp/>Map.class),</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(2,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref>.class),</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.getArgument(3,<sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1util_1_1RetryDetector" kindref="compound">RetryDetector</ref>.class));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RuntimeException(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.when(spyOps)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.persistGlueTable(Mockito.any(),<sp/>Mockito.anyMap(),<sp/>Mockito.any(),<sp/>Mockito.any());</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(GlueTableOperations<sp/>spyOps)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a526e73b5b5e6ba76b5f4aac753dc6369" kindref="member">failCommitAndThrowException</ref>(spyOps,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RuntimeException(</highlight><highlight class="stringliteral">&quot;Datacenter<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a9ffdc6b47fd9d8cf8b872b4a5f6f7b43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a9ffdc6b47fd9d8cf8b872b4a5f6f7b43" kindref="member">failCommitAndThrowException</ref>(GlueTableOperations<sp/>spyOps,<sp/>Exception<sp/>exceptionToThrow)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.doThrow(exceptionToThrow)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.when(spyOps)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.persistGlueTable(Mockito.any(),<sp/>Mockito.anyMap(),<sp/>Mockito.any(),<sp/>Mockito.any());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1b7cf767a7f33acf0e8fc4c9bfafcca8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a1b7cf767a7f33acf0e8fc4c9bfafcca8" kindref="member">breakFallbackCatalogCommitCheck</ref>(GlueTableOperations<sp/>spyOperations)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>Mockito.when(spyOperations.refresh())</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.thenThrow(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RuntimeException(</highlight><highlight class="stringliteral">&quot;Still<sp/>on<sp/>fire&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//<sp/>Failure<sp/>on<sp/>commit<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a92363f279b03e9d602e2a3d1b8127afb" kindref="member">metadataFileExists</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadata)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s3.headObject(</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeadObjectRequest.builder()</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bucket(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil" kindref="compound">S3TestUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil_1a1e79c269a32ae0dc7bd69a1f257f0ecf" kindref="member">getBucketFromUri</ref>(metadata.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata_1ac705dac4a1961c8c6ca368efed8824ca" kindref="member">metadataFileLocation</ref>()))</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil" kindref="compound">S3TestUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil_1a5b136d37148698e5b1afa23eba65549e" kindref="member">getKeyFromUri</ref>(metadata.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata_1ac705dac4a1961c8c6ca368efed8824ca" kindref="member">metadataFileLocation</ref>()))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(NoSuchKeyException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1glue_1_1TestGlueCatalogCommitFailure_1a53f0d72b04f17074332aed3cc30fa9a9" kindref="member">metadataFileCount</ref>(<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref><sp/>metadata)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.listObjectsV2(</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ListObjectsV2Request.builder()</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bucket(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil" kindref="compound">S3TestUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil_1a1e79c269a32ae0dc7bd69a1f257f0ecf" kindref="member">getBucketFromUri</ref>(metadata.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata_1ac705dac4a1961c8c6ca368efed8824ca" kindref="member">metadataFileLocation</ref>()))</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prefix(</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil" kindref="compound">S3TestUtil</ref>.<ref refid="classorg_1_1apache_1_1iceberg_1_1aws_1_1s3_1_1S3TestUtil_1a5b136d37148698e5b1afa23eba65549e" kindref="member">getKeyFromUri</ref>(metadata.<ref refid="classorg_1_1apache_1_1iceberg_1_1TableMetadata_1ac705dac4a1961c8c6ca368efed8824ca" kindref="member">metadataFileLocation</ref>()))</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.getParent())</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build())</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contents().stream()</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.filter(s3Object<sp/>-&gt;<sp/>s3Object.key().endsWith(</highlight><highlight class="stringliteral">&quot;metadata.json&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.count();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="aws/src/integration/java/org/apache/iceberg/aws/glue/TestGlueCatalogCommitFailure.java"/>
  </compounddef>
</doxygen>
