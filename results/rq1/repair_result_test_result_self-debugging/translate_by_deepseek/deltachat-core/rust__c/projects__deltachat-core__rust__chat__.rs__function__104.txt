Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `message` is defined multiple times
  --> src/chat.rs:46:22
   |
8  | use crate::message::{self, Message, MsgId, MessageState};
   |                      ---- previous import of the module `message` here
...
46 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                      ^^^^--
   |                      |
   |                      `message` reimported here
   |                      help: remove unnecessary import
   |
   = note: `message` must be defined only once in the type namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> src/chat.rs:20:50
   |
11 | use anyhow::Result;
   |     -------------- previous import of the type `Result` here
...
20 | use anyhow::{anyhow, bail, ensure, Context as _, Result};
   |                                                  ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `Message` is defined multiple times
  --> src/chat.rs:46:28
   |
8  | use crate::message::{self, Message, MsgId, MessageState};
   |                            ------- previous import of the type `Message` here
...
46 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                            ^^^^^^^--
   |                            |
   |                            `Message` reimported here
   |                            help: remove unnecessary import
   |
   = note: `Message` must be defined only once in the type namespace of this module

error[E0252]: the name `MessageState` is defined multiple times
  --> src/chat.rs:46:37
   |
8  | use crate::message::{self, Message, MsgId, MessageState};
   |                                            ------------ previous import of the type `MessageState` here
...
46 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                     ^^^^^^^^^^^^--
   |                                     |
   |                                     `MessageState` reimported here
   |                                     help: remove unnecessary import
   |
   = note: `MessageState` must be defined only once in the type namespace of this module

error[E0252]: the name `MsgId` is defined multiple times
  --> src/chat.rs:46:51
   |
8  | use crate::message::{self, Message, MsgId, MessageState};
   |                                     ----- previous import of the type `MsgId` here
...
46 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                                   ^^^^^--
   |                                                   |
   |                                                   `MsgId` reimported here
   |                                                   help: remove unnecessary import
   |
   = note: `MsgId` must be defined only once in the type namespace of this module

error[E0252]: the name `Param` is defined multiple times
  --> src/chat.rs:49:20
   |
9  | use crate::param::Param;
   |     ------------------- previous import of the type `Param` here
...
49 | use crate::param::{Param, Params};
   |                    ^^^^^--
   |                    |
   |                    `Param` reimported here
   |                    help: remove unnecessary import
   |
   = note: `Param` must be defined only once in the type namespace of this module

error[E0432]: unresolved imports `crate::constants::DC_CONTEXT_MAGIC`, `crate::constants::DC_PARAM_PREP_FORWARDS`, `crate::constants::DC_PARAM_GUARANTEE_E2EE`, `crate::constants::DC_PARAM_FORCE_PLAINTEXT`, `crate::constants::DC_STATE_OUT_PREPARING`, `crate::constants::DC_STATE_UNDEFINED`
 --> src/chat.rs:5:5
  |
5 |     DC_CONTEXT_MAGIC, DC_PARAM_PREP_FORWARDS, DC_PARAM_GUARANTEE_E2EE, DC_PARAM_FORCE_PLAINTEXT,
  |     ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^ no `DC_PARAM_FORCE_PLAINTEXT` in `constants`
  |     |                 |                       |
  |     |                 |                       no `DC_PARAM_GUARANTEE_E2EE` in `constants`
  |     |                 no `DC_PARAM_PREP_FORWARDS` in `constants`
  |     no `DC_CONTEXT_MAGIC` in `constants`
6 |     DC_STATE_OUT_PREPARING, DC_STATE_UNDEFINED,
  |     ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^ no `DC_STATE_UNDEFINED` in `constants`
  |     |
  |     no `DC_STATE_OUT_PREPARING` in `constants`

error[E0432]: unresolved import `crate::Context`
  --> src/chat.rs:10:5
   |
10 | use crate::Context;
   |     ^^^^^^^^^^^^^^ no `Context` in the root
   |
help: a similar name exists in the module
   |
10 | use crate::context;
   |            ~~~~~~~
help: consider importing one of these items instead
   |
10 | use anyhow::Context;
   |     ~~~~~~~~~~~~~~~
10 | use core::task::Context;
   |     ~~~~~~~~~~~~~~~~~~~
10 | use crate::context::Context;
   |     ~~~~~~~~~~~~~~~~~~~~~~~
10 | use exif::Context;
   |     ~~~~~~~~~~~~~
     and 2 other candidates

warning: unused import: `anyhow::Result`
  --> src/chat.rs:11:5
   |
11 | use anyhow::Result;
   |     ^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `MessageState`, `Message`, `MsgId`, `self`
  --> src/chat.rs:46:22
   |
46 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                      ^^^^  ^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `Param`
  --> src/chat.rs:49:20
   |
49 | use crate::param::{Param, Params};
   |                    ^^^^^

error[E0609]: no field `magic` on type `Arc<InnerContext>`
    --> src/chat.rs:2806:22
     |
2806 |     if context.inner.magic != DC_CONTEXT_MAGIC || msg.is_null() {
     |                      ^^^^^ unknown field
     |
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `is_null` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2806:55
     |
2806 |     if context.inner.magic != DC_CONTEXT_MAGIC || msg.is_null() {
     |                                                       ^^^^^^^ method not found in `&mut Message`

error[E0425]: cannot find function `dc_get_msg` in this scope
    --> src/chat.rs:2817:39
     |
2817 |                     if let Ok(copy) = dc_get_msg(context, MsgId::new(id as u32)).await {
     |                                       ^^^^^^^^^^ not found in this scope

error[E0599]: no method named `split_off` found for reference `&str` in the current scope
    --> src/chat.rs:2821:23
     |
2821 |                 p = p.split_off(p.find(',').unwrap_or(p.len()));
     |                       ^^^^^^^^^ help: there is a method with a similar name: `split`

error[E0277]: `std::option::Option<_>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:2823:51
     |
2823 |             msg.param.set(DC_PARAM_PREP_FORWARDS, None);
     |                       ---                         ^^^^ `std::option::Option<_>` cannot be formatted with the default formatter
     |                       |
     |                       required by a bound introduced by this call
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<_>`, which is required by `std::option::Option<_>: ToString`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: required for `std::option::Option<_>` to implement `ToString`
note: required by a bound in `param::Params::set`
    --> src/param.rs:287:51
     |
287  |     pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {
     |                                                   ^^^^^^^^ required by this bound in `Params::set`

error[E0599]: no method named `save_param_to_disk` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2824:17
     |
2824 |             msg.save_param_to_disk().await?;
     |                 ^^^^^^^^^^^^^^^^^^ method not found in `&mut Message`

error[E0277]: `std::option::Option<_>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:2832:48
     |
2832 |         msg.param.set(DC_PARAM_GUARANTEE_E2EE, None);
     |                   ---                          ^^^^ `std::option::Option<_>` cannot be formatted with the default formatter
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<_>`, which is required by `std::option::Option<_>: ToString`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: required for `std::option::Option<_>` to implement `ToString`
note: required by a bound in `param::Params::set`
    --> src/param.rs:287:51
     |
287  |     pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {
     |                                                   ^^^^^^^^ required by this bound in `Params::set`

error[E0277]: `std::option::Option<_>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:2833:49
     |
2833 |         msg.param.set(DC_PARAM_FORCE_PLAINTEXT, None);
     |                   ---                           ^^^^ `std::option::Option<_>` cannot be formatted with the default formatter
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<_>`, which is required by `std::option::Option<_>: ToString`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: required for `std::option::Option<_>` to implement `ToString`
note: required by a bound in `param::Params::set`
    --> src/param.rs:287:51
     |
287  |     pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {
     |                                                   ^^^^^^^^ required by this bound in `Params::set`

error[E0599]: no method named `save_param_to_disk` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2834:13
     |
2834 |         msg.save_param_to_disk().await?;
     |             ^^^^^^^^^^^^^^^^^^ method not found in `&mut Message`

Some errors have detailed explanations: E0252, E0277, E0425, E0432, E0599, E0609.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 3 warnings
error: could not compile `deltachat` (lib) due to 17 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 3 warnings (3 duplicates)
error: could not compile `deltachat` (lib test) due to 17 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

