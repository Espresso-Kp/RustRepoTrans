Fail
file path is :
projects/deltachat-core/rust/src/qr.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0423]: expected function, found crate `anyhow`
   --> src/qr.rs:265:44
    |
265 |                         None => return Err(anyhow("Unsupported QR code scheme")),
    |                                            ^^^^^^ not a function

error[E0599]: no method named `transpose` found for enum `std::option::Option<std::string::String>` in the current scope
   --> src/qr.rs:289:64
    |
289 |     let addr = param.get("a").map(|addr| addr_normalize(addr)).transpose()??;
    |                      --------                                  ^^^^^^^^^ method not found in `Option<String>`
    |                      |
    |                      method `transpose` is available on `std::option::Option<&&str>`
    |
    = note: the method was found for
            - `std::option::Option<std::result::Result<T, E>>`

error[E0308]: mismatched types
   --> src/qr.rs:303:58
    |
303 |     let peerstate = Peerstate::from_fingerprint(context, fingerprint).await?;
    |                     ---------------------------          ^^^^^^^^^^^ expected `&Fingerprint`, found `&str`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&key::Fingerprint`
               found reference `&str`
note: associated function defined here
   --> src/peerstate.rs:187:18
    |
187 |     pub async fn from_fingerprint(
    |                  ^^^^^^^^^^^^^^^^
188 |         context: &Context,
189 |         fingerprint: &Fingerprint,
    |         -------------------------

error[E0308]: mismatched types
   --> src/qr.rs:307:58
    |
307 |         let contact_id = Contact::add_or_lookup(context, name.as_deref(), &addr, Origin::UnhandledQrScan).await?;
    |                          ----------------------          ^^^^^^^^^^^^^^^ expected `&str`, found `Option<&str>`
    |                          |
    |                          arguments to this function are incorrect
    |
    = note: expected reference `&str`
                    found enum `std::option::Option<&str>`
note: associated function defined here
   --> src/contact.rs:757:25
    |
757 |     pub(crate) async fn add_or_lookup(
    |                         ^^^^^^^^^^^^^
758 |         context: &Context,
759 |         name: &str,
    |         ----------
help: consider using `Option::expect` to unwrap the `std::option::Option<&str>` value, panicking if the value is an `Option::None`
    |
307 |         let contact_id = Contact::add_or_lookup(context, name.as_deref().expect("REASON"), &addr, Origin::UnhandledQrScan).await?;
    |                                                                         +++++++++++++++++

error[E0308]: mismatched types
   --> src/qr.rs:313:17
    |
313 |                 contact_id,
    |                 ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `ContactId`
                found tuple `(ContactId, Modifier)`

error[E0308]: mismatched types
   --> src/qr.rs:320:17
    |
320 |                 contact_id,
    |                 ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `ContactId`
                found tuple `(ContactId, Modifier)`

error[E0308]: mismatched types
   --> src/qr.rs:329:62
    |
329 |             let contact_id = Contact::add_or_lookup(context, name.as_deref(), &peerstate_addr, Origin::UnhandledQrScan).await?;
    |                              ----------------------          ^^^^^^^^^^^^^^^ expected `&str`, found `Option<&str>`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&str`
                    found enum `std::option::Option<&str>`
note: associated function defined here
   --> src/contact.rs:757:25
    |
757 |     pub(crate) async fn add_or_lookup(
    |                         ^^^^^^^^^^^^^
758 |         context: &Context,
759 |         name: &str,
    |         ----------
help: consider using `Option::expect` to unwrap the `std::option::Option<&str>` value, panicking if the value is an `Option::None`
    |
329 |             let contact_id = Contact::add_or_lookup(context, name.as_deref().expect("REASON"), &peerstate_addr, Origin::UnhandledQrScan).await?;
    |                                                                             +++++++++++++++++

error[E0308]: mismatched types
   --> src/qr.rs:330:28
    |
330 |             Ok(Qr::FprOk { contact_id })
    |                            ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `ContactId`
                found tuple `(ContactId, Modifier)`

error[E0061]: this function takes 3 arguments but 2 arguments were supplied
   --> src/qr.rs:332:30
    |
332 |             let contact_id = Contact::lookup_id_by_addr(context, addr).await?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^--------------- an argument of type `contact::Origin` is missing
    |
note: associated function defined here
   --> src/contact.rs:688:18
    |
688 |     pub async fn lookup_id_by_addr(
    |                  ^^^^^^^^^^^^^^^^^
689 |         context: &Context,
    |         -----------------
690 |         addr: &str,
    |         ----------
691 |         min_origin: Origin,
    |         ------------------
help: provide the argument
    |
332 |             let contact_id = Contact::lookup_id_by_addr(context, addr, /* contact::Origin */).await?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0423]: expected function, found crate `anyhow`
   --> src/qr.rs:336:13
    |
336 |         Err(anyhow("No valid address or fingerprint found in QR code"))
    |             ^^^^^^ not a function

Some errors have detailed explanations: E0061, E0308, E0423, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0308]: mismatched types
   --> src/qr.rs:313:17
    |
313 |                 contact_id,
    |                 ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `contact::ContactId`
                found tuple `(contact::ContactId, contact::Modifier)`

error[E0308]: mismatched types
   --> src/qr.rs:320:17
    |
320 |                 contact_id,
    |                 ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `contact::ContactId`
                found tuple `(contact::ContactId, contact::Modifier)`

error[E0308]: mismatched types
   --> src/qr.rs:330:28
    |
330 |             Ok(Qr::FprOk { contact_id })
    |                            ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `contact::ContactId`
                found tuple `(contact::ContactId, contact::Modifier)`

error: could not compile `deltachat` (lib test) due to 10 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

