Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0428]: the name `alphabet_languages` is defined multiple times
   --> src/cd.rs:253:1
    |
92  | / pub(crate) fn alphabet_languages(
93  | |     characters: &[char],
94  | |     ignore_non_latin: bool,
95  | | ) -> Vec<&'static Language> {
...   |
122 | |     languages.iter().map(|&lang| lang.0).collect()
123 | | }
    | |_- previous definition of the value `alphabet_languages` here
...
253 | / fn alphabet_languages(
254 | |     characters: &[char],
255 | |     ignore_non_latin: bool,
256 | | ) -> Vec<&'static Language> {
...   |
281 | |     languages.iter().map(|&lang| lang.0).collect()
282 | | }
    | |_^ `alphabet_languages` redefined here
    |
    = note: `alphabet_languages` must be defined only once in the value namespace of this module

error[E0428]: the name `characters_popularity_compare` is defined multiple times
   --> src/cd.rs:283:1
    |
150 | / pub(crate) fn characters_popularity_compare(
151 | |     language: &Language,
152 | |     ordered_characters: &str,
153 | | ) -> Result<f32, String> {
154 | |     let language_data = get_language_data(language)?;
155 | |     Ok(jaro(ordered_characters, language_data.0) as f32)
156 | | }
    | |_- previous definition of the value `characters_popularity_compare` here
...
283 | / fn characters_popularity_compare(
284 | |     language: &Language,
285 | |     ordered_characters: &[char],
286 | | ) -> Result<f32, String> {
287 | |     let language_data = get_language_data(language)?;
288 | |     Ok(jaro(ordered_characters, &language_data.0) as f32)
289 | | }
    | |_^ `characters_popularity_compare` redefined here
    |
    = note: `characters_popularity_compare` must be defined only once in the value namespace of this module

error[E0428]: the name `filter_alt_coherence_matches` is defined multiple times
   --> src/cd.rs:290:1
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    | ------------------------------------------------------------------------------------------ previous definition of the value `filter_alt_coherence_matches` here
...
290 | pub(crate) fn filter_alt_coherence_matches(results: &[(String, f32)]) -> CoherenceMatches {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `filter_alt_coherence_matches` redefined here
    |
    = note: `filter_alt_coherence_matches` must be defined only once in the value namespace of this module

error[E0599]: no variant or associated item named `LatinBased` found for enum `Language` in the current scope
   --> src/cd.rs:209:45
    |
209 |         if lg_inclusion.contains(&Language::LatinBased) {
    |                                             ^^^^^^^^^^ variant or associated item not found in `Language`
    |
   ::: src/entity.rs:23:1
    |
23  | pub enum Language {
    | ----------------- variant or associated item `LatinBased` not found for this enum

error[E0599]: no variant or associated item named `LatinBased` found for enum `Language` in the current scope
   --> src/cd.rs:211:28
    |
211 |             vec![Language::LatinBased]
    |                            ^^^^^^^^^^ variant or associated item not found in `Language`
    |
   ::: src/entity.rs:23:1
    |
23  | pub enum Language {
    | ----------------- variant or associated item `LatinBased` not found for this enum

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/cd.rs:220:51
    |
220 |         let sequence_frequencies: Counter<char> = Counter::new(layer.chars());
    |                                                   ^^^^^^^^^^^^ -------------
    |                                                                |
    |                                                                unexpected argument of type `Chars<'_>`
    |                                                                help: remove the extra argument
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/counter-0.5.7/src/lib.rs:337:12
    |
337 |     pub fn new() -> Counter<T, N> {
    |            ^^^

error[E0308]: mismatched types
   --> src/cd.rs:232:13
    |
232 |             alphabet_languages(&popular_character_ordered, ignore_non_latin)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[&Language]`, found `Vec<&Language>`
    |
    = note: expected reference `&[&Language]`
                  found struct `Vec<&'static Language>`
help: consider borrowing here
    |
232 |             &alphabet_languages(&popular_character_ordered, ignore_non_latin)
    |             +

error[E0308]: mismatched types
   --> src/cd.rs:234:70
    |
234 |             let ratio: f32 = characters_popularity_compare(language, &popular_character_ordered)?;
    |                              -----------------------------           ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&Vec<char>`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&Vec<char>`
note: function defined here
   --> src/cd.rs:150:15
    |
150 | pub(crate) fn characters_popularity_compare(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
151 |     language: &Language,
152 |     ordered_characters: &str,
    |     ------------------------

error[E0308]: mismatched types
   --> src/cd.rs:250:57
    |
250 |     let filtered_results = filter_alt_coherence_matches(&results);
    |                            ---------------------------- ^^^^^^^^ expected `&Vec<CoherenceMatch>`, found `&Vec<(String, f32)>`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&Vec<CoherenceMatch>`
               found reference `&Vec<(std::string::String, f32)>`
note: function defined here
   --> src/cd.rs:160:15
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------

error[E0308]: mismatched types
   --> src/cd.rs:288:13
    |
288 |     Ok(jaro(ordered_characters, &language_data.0) as f32)
    |        ---- ^^^^^^^^^^^^^^^^^^ expected `&str`, found `&[char]`
    |        |
    |        arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&[char]`
note: function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/strsim-0.10.0/src/lib.rs:153:8
    |
153 | pub fn jaro(a: &str, b: &str) -> f64 {
    |        ^^^^

error[E0277]: the trait bound `str: AsRef<Language>` is not satisfied
   --> src/cd.rs:299:32
    |
299 |             language: language.as_ref() as &'static Language,
    |                                ^^^^^^ the trait `AsRef<Language>` is not implemented for `str`
    |
    = help: the following other types implement trait `AsRef<T>`:
              <str as AsRef<std::ffi::OsStr>>
              <str as AsRef<Path>>
              <str as AsRef<str>>
              <str as AsRef<[u8]>>

Some errors have detailed explanations: E0061, E0277, E0308, E0428, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `charset-normalizer-rs` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `charset-normalizer-rs` (lib test) due to 11 previous errors

