Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:305:77
    |
305 |             .database_name(convert_to_database(&namespace_name, self.config.skip_name_validation))
    |                                                                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:305:48
    |
305 |             .database_name(convert_to_database(&namespace_name, self.config.skip_name_validation))
    |                            ------------------- ^^^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `&String`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&std::string::String`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0277]: the trait bound `std::string::String: From<std::result::Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:305:28
    |
305 |             .database_name(convert_to_database(&namespace_name, self.config.skip_name_validation))
    |              ------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::result::Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `std::result::Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::result::Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesFluentBuilder::database_name`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:306:25
    |
306 |             .next_token(next_token.as_deref())
    |              ---------- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesFluentBuilder::next_token`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/builders.rs:154:45
    |
154 |     pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesFluentBuilder::next_token`

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:308:19
    |
308 |             .await?;
    |                   ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<Vec<TableIdent>, iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:312:16
    |
312 |         if let Some(table_list) = response.table_list() {
    |                ^^^^^^^^^^^^^^^^   --------------------- this expression has type `&[aws_sdk_glue::types::Table]`
    |                |
    |                expected `[Table]`, found `Option<_>`
    |
    = note: expected slice `[aws_sdk_glue::types::Table]`
                found enum `std::option::Option<_>`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:313:39
    |
313 |             results.extend(table_list.iter()
    |                                       ^^^^ cannot infer type for type parameter `T` declared on the enum `Option`

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:314:38
    |
314 |                 .filter(|table| self.is_glue_iceberg_table(table))
    |                                      ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0433]: failed to resolve: use of undeclared type `GlueToIcebergConverter`
   --> crates/catalog/glue/src/catalog.rs:315:30
    |
315 |                 .map(|table| GlueToIcebergConverter::to_table_id(table))
    |                              ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `GlueToIcebergConverter`

Some errors have detailed explanations: E0277, E0282, E0308, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:305:77
    |
305 |             .database_name(convert_to_database(&namespace_name, self.config.skip_name_validation))
    |                                                                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:305:48
    |
305 |             .database_name(convert_to_database(&namespace_name, self.config.skip_name_validation))
    |                            ------------------- ^^^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `&String`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&std::string::String`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0277]: the trait bound `std::string::String: From<Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:305:28
    |
305 |             .database_name(convert_to_database(&namespace_name, self.config.skip_name_validation))
    |              ------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesFluentBuilder::database_name`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:306:25
    |
306 |             .next_token(next_token.as_deref())
    |              ---------- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesFluentBuilder::next_token`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/builders.rs:154:45
    |
154 |     pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesFluentBuilder::next_token`

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:308:19
    |
308 |             .await?;
    |                   ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `Result<Vec<TableIdent>, iceberg::Error>: FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:312:16
    |
312 |         if let Some(table_list) = response.table_list() {
    |                ^^^^^^^^^^^^^^^^   --------------------- this expression has type `&[aws_sdk_glue::types::Table]`
    |                |
    |                expected `[Table]`, found `Option<_>`
    |
    = note: expected slice `[aws_sdk_glue::types::Table]`
                found enum `std::option::Option<_>`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:313:39
    |
313 |             results.extend(table_list.iter()
    |                                       ^^^^ cannot infer type for type parameter `T` declared on the enum `Option`

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:314:38
    |
314 |                 .filter(|table| self.is_glue_iceberg_table(table))
    |                                      ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0433]: failed to resolve: use of undeclared type `GlueToIcebergConverter`
   --> crates/catalog/glue/src/catalog.rs:315:30
    |
315 |                 .map(|table| GlueToIcebergConverter::to_table_id(table))
    |                              ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `GlueToIcebergConverter`

Some errors have detailed explanations: E0277, E0282, E0308, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

