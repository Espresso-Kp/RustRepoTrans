Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:17
    |
527 |                 src, dest, dest.namespace
    |                 ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:22
    |
527 |                 src, dest, dest.namespace
    |                      ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:28
    |
527 |                 src, dest, dest.namespace
    |                            ^^^^^^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:533:30
    |
533 |     let from_table_db_name = IcebergToGlueConverter::get_database_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:533:90
    |
533 |     let from_table_db_name = IcebergToGlueConverter::get_database_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:534:27
    |
534 |     let from_table_name = IcebergToGlueConverter::get_table_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:534:84
    |
534 |     let from_table_name = IcebergToGlueConverter::get_table_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:535:28
    |
535 |     let to_table_db_name = IcebergToGlueConverter::get_database_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                            ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:535:89
    |
535 |     let to_table_db_name = IcebergToGlueConverter::get_database_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:536:25
    |
536 |     let to_table_name = IcebergToGlueConverter::get_table_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:536:83
    |
536 |     let to_table_name = IcebergToGlueConverter::get_table_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0599]: no method named `get_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:538:27
    |
538 |     let from_table = self.get_table(&from_table_db_name, &from_table_name).await.map_err(|e| {
    |                           ^^^^^^^^^ method not found in `&GlueCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
538 |     let from_table = self.client.0.get_table(&from_table_db_name, &from_table_name).await.map_err(|e| {
    |                           +++++++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:541:86
    |
541 |             format!("Cannot rename {} because the table does not exist in Glue: {}", src, e),
    |                                                                                      ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:549:10
    |
549 |         .parameters(from_table.parameters())
    |          ^^^^^^^^^^------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
549 |         .parameters(from_table.parameters(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0063]: missing fields `partition_spec`, `schema` and `sort_order` in initializer of `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:552:40
    |
552 |     self.create_table(&dest.namespace, TableCreation {
    |                                        ^^^^^^^^^^^^^ missing `partition_spec`, `schema` and `sort_order`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:567:77
    |
567 |             format!("Failed to drop old table {} after renaming to {}: {}", src, dest, e),
    |                                                                             ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:567:82
    |
567 |             format!("Failed to drop old table {} after renaming to {}: {}", src, dest, e),
    |                                                                                  ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0063, E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 17 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:17
    |
527 |                 src, dest, dest.namespace
    |                 ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:22
    |
527 |                 src, dest, dest.namespace
    |                      ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:28
    |
527 |                 src, dest, dest.namespace
    |                            ^^^^^^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:533:30
    |
533 |     let from_table_db_name = IcebergToGlueConverter::get_database_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:533:90
    |
533 |     let from_table_db_name = IcebergToGlueConverter::get_database_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:534:27
    |
534 |     let from_table_name = IcebergToGlueConverter::get_table_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:534:84
    |
534 |     let from_table_name = IcebergToGlueConverter::get_table_name(src, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:535:28
    |
535 |     let to_table_db_name = IcebergToGlueConverter::get_database_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                            ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:535:89
    |
535 |     let to_table_db_name = IcebergToGlueConverter::get_database_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:536:25
    |
536 |     let to_table_name = IcebergToGlueConverter::get_table_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:536:83
    |
536 |     let to_table_name = IcebergToGlueConverter::get_table_name(dest, &self.config.glue_catalog_skip_name_validation)?;
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0599]: no method named `get_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:538:27
    |
538 |     let from_table = self.get_table(&from_table_db_name, &from_table_name).await.map_err(|e| {
    |                           ^^^^^^^^^ method not found in `&GlueCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
538 |     let from_table = self.client.0.get_table(&from_table_db_name, &from_table_name).await.map_err(|e| {
    |                           +++++++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:541:86
    |
541 |             format!("Cannot rename {} because the table does not exist in Glue: {}", src, e),
    |                                                                                      ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:549:10
    |
549 |         .parameters(from_table.parameters())
    |          ^^^^^^^^^^------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
549 |         .parameters(from_table.parameters(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0063]: missing fields `partition_spec`, `schema` and `sort_order` in initializer of `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:552:40
    |
552 |     self.create_table(&dest.namespace, TableCreation {
    |                                        ^^^^^^^^^^^^^ missing `partition_spec`, `schema` and `sort_order`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:567:77
    |
567 |             format!("Failed to drop old table {} after renaming to {}: {}", src, dest, e),
    |                                                                             ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:567:82
    |
567 |             format!("Failed to drop old table {} after renaming to {}: {}", src, dest, e),
    |                                                                                  ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0063, E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 17 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

