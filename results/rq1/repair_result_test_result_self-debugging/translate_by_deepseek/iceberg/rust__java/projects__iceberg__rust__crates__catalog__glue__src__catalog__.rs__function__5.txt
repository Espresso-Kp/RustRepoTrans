Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:153:71
    |
153 | ...e_database().set_catalog_id(Some(self.config.catalog_id.clone())).set_database_input(Some(database_input));
    |                                ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`
help: the type constructed contains `std::option::Option<std::string::String>` due to the type of the argument passed
   --> crates/catalog/glue/src/catalog.rs:153:66
    |
153 | ..._database().set_catalog_id(Some(self.config.catalog_id.clone())).set_database_input(Some(database_input));
    |                               ^^^^^------------------------------^
    |                                    |
    |                                    this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/option.rs:578:5
help: consider using `Option::expect` to unwrap the `std::option::Option<std::string::String>` value, panicking if the value is an `Option::None`
    |
153 |     let request = self.client.0.create_database().set_catalog_id(Some(self.config.catalog_id.clone().expect("REASON"))).set_database_input(Some(database_input));
    |                                                                                                     +++++++++++++++++

error[E0599]: no method named `is_a` found for enum `aws_smithy_runtime_api::client::result::SdkError` in the current scope
   --> crates/catalog/glue/src/catalog.rs:160:18
    |
160 |             if e.is_a(&aws_sdk_glue::Error::AlreadyExistsException) {
    |                  ^^^^ method not found in `SdkError<CreateDatabaseError, Response>`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:161:43
    |
161 | ...   Err(Error::new(ErrorKind::AlreadyExists, format!("Cannot create namespace {} because it already exists in Glue", namespace)))
    |                                 ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:161:130
    |
161 | ... already exists in Glue", namespace)))
    |                              ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `iceberg::Error: From<aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:163:23
    |
163 |                 Err(e.into())
    |                       ^^^^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>: Into<_>`
    |
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>` to implement `Into<iceberg::Error>`

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:153:71
    |
153 | ...e_database().set_catalog_id(Some(self.config.catalog_id.clone())).set_database_input(Some(database_input));
    |                                ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`
help: the type constructed contains `std::option::Option<std::string::String>` due to the type of the argument passed
   --> crates/catalog/glue/src/catalog.rs:153:66
    |
153 | ..._database().set_catalog_id(Some(self.config.catalog_id.clone())).set_database_input(Some(database_input));
    |                               ^^^^^------------------------------^
    |                                    |
    |                                    this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/option.rs:578:5
help: consider using `Option::expect` to unwrap the `std::option::Option<std::string::String>` value, panicking if the value is an `Option::None`
    |
153 |     let request = self.client.0.create_database().set_catalog_id(Some(self.config.catalog_id.clone().expect("REASON"))).set_database_input(Some(database_input));
    |                                                                                                     +++++++++++++++++

error[E0599]: no method named `is_a` found for enum `aws_smithy_runtime_api::client::result::SdkError` in the current scope
   --> crates/catalog/glue/src/catalog.rs:160:18
    |
160 |             if e.is_a(&aws_sdk_glue::Error::AlreadyExistsException) {
    |                  ^^^^ method not found in `SdkError<CreateDatabaseError, Response>`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:161:43
    |
161 | ...   Err(Error::new(ErrorKind::AlreadyExists, format!("Cannot create namespace {} because it already exists in Glue", namespace)))
    |                                 ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:161:130
    |
161 | ...e it already exists in Glue", namespace)))
    |                                  ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `iceberg::Error: From<aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:163:23
    |
163 |                 Err(e.into())
    |                       ^^^^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>: Into<_>`
    |
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `aws_smithy_runtime_api::client::result::SdkError<CreateDatabaseError, aws_smithy_runtime_api::http::response::Response>` to implement `Into<iceberg::Error>`

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

