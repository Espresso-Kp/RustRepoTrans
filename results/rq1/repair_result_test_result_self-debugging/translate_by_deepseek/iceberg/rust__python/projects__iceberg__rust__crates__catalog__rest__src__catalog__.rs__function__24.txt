Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `identifier_to_tuple_without_catalog` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:33
    |
490 |     let identifier_tuple = self.identifier_to_tuple_without_catalog(table)?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `url_prefixed` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:20
    |
491 |     let url = self.url_prefixed(&[
    |               -----^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
491 |     let url = self.config.url_prefixed(&[
    |                    +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:28
    |
497 |     let request = Request::delete(&url);
    |                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `0` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:498:25
    |
498 |     let response = self.0.execute(request).await?;
    |                         ^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
498 |     let response = self.client.0.execute(request).await?;
    |                         +++++++

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:13
    |
504 |         let text = response.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:20
    |
504 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:20
    |
504 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:42
    |
504 |         let text = response.bytes().await?;
    |                                          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:514:28
    |
514 |         Err(error_response.error.into())
    |                            ^^^^^ private field

Some errors have detailed explanations: E0277, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `identifier_to_tuple_without_catalog` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:33
    |
490 |     let identifier_tuple = self.identifier_to_tuple_without_catalog(table)?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `url_prefixed` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:20
    |
491 |     let url = self.url_prefixed(&[
    |               -----^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
491 |     let url = self.config.url_prefixed(&[
    |                    +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:28
    |
497 |     let request = Request::delete(&url);
    |                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `0` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:498:25
    |
498 |     let response = self.0.execute(request).await?;
    |                         ^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
498 |     let response = self.client.0.execute(request).await?;
    |                         +++++++

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:13
    |
504 |         let text = response.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:20
    |
504 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:20
    |
504 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:504:42
    |
504 |         let text = response.bytes().await?;
    |                                          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:514:28
    |
514 |         Err(error_response.error.into())
    |                            ^^^^^ private field

Some errors have detailed explanations: E0277, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

