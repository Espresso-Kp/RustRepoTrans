Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `field` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:232:1
    |
222 | fn field(&mut self, _field: &Field) -> Result<()> {
    | ------------------------------------------------- previous definition of the value `field` here
...
232 | fn field(&mut self, field: &Field) -> Result<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `field` redefined here
    |
    = note: `field` must be defined only once in the value namespace of this module

error[E0428]: the name `visit_schema` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:251:1
    |
196 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- previous definition of the value `visit_schema` here
...
251 | fn visit_schema<V: SchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_schema` redefined here
    |
    = note: `visit_schema` must be defined only once in the value namespace of this module

error[E0428]: the name `visit_type` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:261:1
    |
108 | fn visit_type<V: ArrowSchemaVisitor>(r#type: &DataType, visitor: &mut V) -> Result<V::T> {
    | ---------------------------------------------------------------------------------------- previous definition of the value `visit_type` here
...
261 | fn visit_type(data_type: &DataType, visitor: &mut dyn SchemaVisitor) -> Result<Arc<dyn DataType>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_type` redefined here
    |
    = note: `visit_type` must be defined only once in the value namespace of this module

error[E0252]: the name `SchemaVisitor` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:27:5
   |
21 | use crate::spec::{Schema, SchemaVisitor};
   |                           ------------- previous import of the trait `SchemaVisitor` here
...
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `SchemaVisitor` reimported here
   |     help: remove unnecessary import
   |
   = note: `SchemaVisitor` must be defined only once in the type namespace of this module

error[E0252]: the name `DataType` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:34:20
   |
22 | use arrow_schema::{DataType, Field, Schema as ArrowSchema};
   |                    -------- previous import of the type `DataType` here
...
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                    ^^^^^^^^--
   |                    |
   |                    `DataType` reimported here
   |                    help: remove unnecessary import
   |
   = note: `DataType` must be defined only once in the type namespace of this module

error[E0252]: the name `Field` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:34:30
   |
22 | use arrow_schema::{DataType, Field, Schema as ArrowSchema};
   |                              ----- previous import of the type `Field` here
...
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                              ^^^^^--
   |                              |
   |                              `Field` reimported here
   |                              help: remove unnecessary import
   |
   = note: `Field` must be defined only once in the type namespace of this module

error[E0252]: the name `ArrowSchema` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:34:45
   |
22 | use arrow_schema::{DataType, Field, Schema as ArrowSchema};
   |                                     --------------------- previous import of the type `ArrowSchema` here
...
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                                             ^^^^^^^^^^^^^^^^^^^^^--
   |                                             |
   |                                             `ArrowSchema` reimported here
   |                                             help: remove unnecessary import
   |
   = note: `ArrowSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `Schema` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:93
   |
21 | use crate::spec::{Schema, SchemaVisitor};
   |                   ------ previous import of the type `Schema` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                                                                             ^^^^^^-
   |                                                                                             |
   |                                                                                             `Schema` reimported here
   |                                                                                             help: remove unnecessary import
   |
   = note: `Schema` must be defined only once in the type namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:222:10
    |
222 | fn field(&mut self, _field: &Field) -> Result<()> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:232:10
    |
232 | fn field(&mut self, field: &Field) -> Result<()> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:236:11
    |
236 | fn schema(&mut self, schema: &ArrowSchema, fields: Vec<Arc<dyn DataType>>) -> Result<Schema> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0422]: cannot find struct, variant or union type `_HasIds` in this scope
   --> crates/iceberg/src/arrow/schema.rs:212:45
    |
212 |     let has_ids = visit_schema(schema, &mut _HasIds {})?;
    |                                             ^^^^^^^ not found in this scope

error[E0425]: cannot find value `name_mapping` in this scope
   --> crates/iceberg/src/arrow/schema.rs:215:30
    |
215 |     } else if let Some(_) = &name_mapping {
    |                              ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `name_mapping` in this scope
   --> crates/iceberg/src/arrow/schema.rs:216:50
    |
216 |         _ConvertToIceberg::new_with_name_mapping(name_mapping)
    |                                                  ^^^^^^^^^^^^ not found in this scope

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:226:13
    |
226 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0411]: cannot find struct, variant or union type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:227:9
    |
226 | fn new() -> Self {
    |    --- `Self` not allowed in a function
227 |         Self { name_mapping: None }
    |         ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0412]: cannot find type `NameMapping` in this scope
   --> crates/iceberg/src/arrow/schema.rs:229:47
    |
229 | fn new_with_name_mapping(name_mapping: Option<NameMapping>) -> Self {
    |                                               ^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
229 | fn new_with_name_mapping<NameMapping>(name_mapping: Option<NameMapping>) -> Self {
    |                         +++++++++++++

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:229:64
    |
229 | fn new_with_name_mapping(name_mapping: Option<NameMapping>) -> Self {
    |    --------------------- `Self` not allowed in a function      ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0411]: cannot find struct, variant or union type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:230:9
    |
229 | fn new_with_name_mapping(name_mapping: Option<NameMapping>) -> Self {
    |    --------------------- `Self` not allowed in a function
230 |         Self { name_mapping }
    |         ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0404]: expected trait, found enum `DataType`
   --> crates/iceberg/src/arrow/schema.rs:236:64
    |
236 | fn schema(&mut self, schema: &ArrowSchema, fields: Vec<Arc<dyn DataType>>) -> Result<Schema> {
    |                                                                ^^^^^^^^ not a trait
    |
help: consider importing this trait instead
    |
21  + use parquet::data_type::DataType;
    |

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:240:24
    |
240 |             schema_id: SchemaId::default(),
    |                        ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
240 |             schema_id: Schema::default(),
    |                        ~~~~~~
help: consider importing this type alias through its public re-export
    |
21  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:242:35
    |
242 |             identifier_field_ids: HashSet::new(),
    |                                   ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
21  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:243:26
    |
243 |             alias_to_id: BiHashMap::new(),
    |                          ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
243 |             alias_to_id: HashMap::new(),
    |                          ~~~~~~~
help: consider importing this struct
    |
21  + use bimap::BiHashMap;
    |

error[E0404]: expected trait, found enum `DataType`
   --> crates/iceberg/src/arrow/schema.rs:261:88
    |
261 | fn visit_type(data_type: &DataType, visitor: &mut dyn SchemaVisitor) -> Result<Arc<dyn DataType>> {
    |                                                                                        ^^^^^^^^ not a trait
    |
help: consider importing this trait instead
    |
21  + use parquet::data_type::DataType;
    |

warning: unused imports: `SchemaVisitor`, `Schema`
  --> crates/iceberg/src/arrow/schema.rs:26:93
   |
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                                                                             ^^^^^^
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `DataType`, `Field`, `Schema as ArrowSchema`
  --> crates/iceberg/src/arrow/schema.rs:34:20
   |
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                    ^^^^^^^^  ^^^^^          ^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `_ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:214:9
    |
214 |         _ConvertToIceberg::new()
    |         ^^^^^^^^^^^^^^^^^ use of undeclared crate or module `_ConvertToIceberg`

error[E0433]: failed to resolve: use of undeclared crate or module `_ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:216:9
    |
216 |         _ConvertToIceberg::new_with_name_mapping(name_mapping)
    |         ^^^^^^^^^^^^^^^^^ use of undeclared crate or module `_ConvertToIceberg`

Some errors have detailed explanations: E0252, E0404, E0411, E0412, E0422, E0425, E0428, E0433.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg` (lib) generated 2 warnings
error: could not compile `iceberg` (lib) due to 26 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `iceberg` (lib test) due to 26 previous errors; 2 warnings emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `field` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:232:1
    |
222 | fn field(&mut self, _field: &Field) -> Result<()> {
    | ------------------------------------------------- previous definition of the value `field` here
...
232 | fn field(&mut self, field: &Field) -> Result<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `field` redefined here
    |
    = note: `field` must be defined only once in the value namespace of this module

error[E0428]: the name `visit_schema` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:251:1
    |
196 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- previous definition of the value `visit_schema` here
...
251 | fn visit_schema<V: SchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_schema` redefined here
    |
    = note: `visit_schema` must be defined only once in the value namespace of this module

error[E0428]: the name `visit_type` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:261:1
    |
108 | fn visit_type<V: ArrowSchemaVisitor>(r#type: &DataType, visitor: &mut V) -> Result<V::T> {
    | ---------------------------------------------------------------------------------------- previous definition of the value `visit_type` here
...
261 | fn visit_type(data_type: &DataType, visitor: &mut dyn SchemaVisitor) -> Result<Arc<dyn DataType>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_type` redefined here
    |
    = note: `visit_type` must be defined only once in the value namespace of this module

error[E0252]: the name `SchemaVisitor` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:27:5
   |
21 | use crate::spec::{Schema, SchemaVisitor};
   |                           ------------- previous import of the trait `SchemaVisitor` here
...
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `SchemaVisitor` reimported here
   |     help: remove unnecessary import
   |
   = note: `SchemaVisitor` must be defined only once in the type namespace of this module

error[E0252]: the name `DataType` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:34:20
   |
22 | use arrow_schema::{DataType, Field, Schema as ArrowSchema};
   |                    -------- previous import of the type `DataType` here
...
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                    ^^^^^^^^--
   |                    |
   |                    `DataType` reimported here
   |                    help: remove unnecessary import
   |
   = note: `DataType` must be defined only once in the type namespace of this module

error[E0252]: the name `Field` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:34:30
   |
22 | use arrow_schema::{DataType, Field, Schema as ArrowSchema};
   |                              ----- previous import of the type `Field` here
...
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                              ^^^^^--
   |                              |
   |                              `Field` reimported here
   |                              help: remove unnecessary import
   |
   = note: `Field` must be defined only once in the type namespace of this module

error[E0252]: the name `ArrowSchema` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:34:45
   |
22 | use arrow_schema::{DataType, Field, Schema as ArrowSchema};
   |                                     --------------------- previous import of the type `ArrowSchema` here
...
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                                             ^^^^^^^^^^^^^^^^^^^^^--
   |                                             |
   |                                             `ArrowSchema` reimported here
   |                                             help: remove unnecessary import
   |
   = note: `ArrowSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `Schema` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:93
   |
21 | use crate::spec::{Schema, SchemaVisitor};
   |                   ------ previous import of the type `Schema` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                                                                             ^^^^^^-
   |                                                                                             |
   |                                                                                             `Schema` reimported here
   |                                                                                             help: remove unnecessary import
   |
   = note: `Schema` must be defined only once in the type namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:222:10
    |
222 | fn field(&mut self, _field: &Field) -> Result<()> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:232:10
    |
232 | fn field(&mut self, field: &Field) -> Result<()> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:236:11
    |
236 | fn schema(&mut self, schema: &ArrowSchema, fields: Vec<Arc<dyn DataType>>) -> Result<Schema> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0422]: cannot find struct, variant or union type `_HasIds` in this scope
   --> crates/iceberg/src/arrow/schema.rs:212:45
    |
212 |     let has_ids = visit_schema(schema, &mut _HasIds {})?;
    |                                             ^^^^^^^ not found in this scope

error[E0425]: cannot find value `name_mapping` in this scope
   --> crates/iceberg/src/arrow/schema.rs:215:30
    |
215 |     } else if let Some(_) = &name_mapping {
    |                              ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `name_mapping` in this scope
   --> crates/iceberg/src/arrow/schema.rs:216:50
    |
216 |         _ConvertToIceberg::new_with_name_mapping(name_mapping)
    |                                                  ^^^^^^^^^^^^ not found in this scope

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:226:13
    |
226 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0411]: cannot find struct, variant or union type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:227:9
    |
226 | fn new() -> Self {
    |    --- `Self` not allowed in a function
227 |         Self { name_mapping: None }
    |         ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0412]: cannot find type `NameMapping` in this scope
   --> crates/iceberg/src/arrow/schema.rs:229:47
    |
229 | fn new_with_name_mapping(name_mapping: Option<NameMapping>) -> Self {
    |                                               ^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
229 | fn new_with_name_mapping<NameMapping>(name_mapping: Option<NameMapping>) -> Self {
    |                         +++++++++++++

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:229:64
    |
229 | fn new_with_name_mapping(name_mapping: Option<NameMapping>) -> Self {
    |    --------------------- `Self` not allowed in a function      ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0411]: cannot find struct, variant or union type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:230:9
    |
229 | fn new_with_name_mapping(name_mapping: Option<NameMapping>) -> Self {
    |    --------------------- `Self` not allowed in a function
230 |         Self { name_mapping }
    |         ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0404]: expected trait, found enum `DataType`
   --> crates/iceberg/src/arrow/schema.rs:236:64
    |
236 | fn schema(&mut self, schema: &ArrowSchema, fields: Vec<Arc<dyn DataType>>) -> Result<Schema> {
    |                                                                ^^^^^^^^ not a trait
    |
help: consider importing this trait instead
    |
21  + use parquet::data_type::DataType;
    |

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:240:24
    |
240 |             schema_id: SchemaId::default(),
    |                        ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
240 |             schema_id: Schema::default(),
    |                        ~~~~~~
help: consider importing this type alias through its public re-export
    |
21  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:242:35
    |
242 |             identifier_field_ids: HashSet::new(),
    |                                   ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
21  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:243:26
    |
243 |             alias_to_id: BiHashMap::new(),
    |                          ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
243 |             alias_to_id: HashMap::new(),
    |                          ~~~~~~~
help: consider importing this struct
    |
21  + use bimap::BiHashMap;
    |

error[E0404]: expected trait, found enum `DataType`
   --> crates/iceberg/src/arrow/schema.rs:261:88
    |
261 | fn visit_type(data_type: &DataType, visitor: &mut dyn SchemaVisitor) -> Result<Arc<dyn DataType>> {
    |                                                                                        ^^^^^^^^ not a trait
    |
help: consider importing this trait instead
    |
21  + use parquet::data_type::DataType;
    |

warning: unused imports: `SchemaVisitor`, `Schema`
  --> crates/iceberg/src/arrow/schema.rs:26:93
   |
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                                                                             ^^^^^^
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `DataType`, `Field`, `Schema as ArrowSchema`
  --> crates/iceberg/src/arrow/schema.rs:34:20
   |
34 | use arrow_schema::{DataType, Field, Fields, Schema as ArrowSchema, TimeUnit};
   |                    ^^^^^^^^  ^^^^^          ^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `_ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:214:9
    |
214 |         _ConvertToIceberg::new()
    |         ^^^^^^^^^^^^^^^^^ use of undeclared crate or module `_ConvertToIceberg`

error[E0433]: failed to resolve: use of undeclared crate or module `_ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:216:9
    |
216 |         _ConvertToIceberg::new_with_name_mapping(name_mapping)
    |         ^^^^^^^^^^^^^^^^^ use of undeclared crate or module `_ConvertToIceberg`

Some errors have detailed explanations: E0252, E0404, E0411, E0412, E0422, E0425, E0428, E0433.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg` (lib) generated 2 warnings
error: could not compile `iceberg` (lib) due to 26 previous errors; 2 warnings emitted

