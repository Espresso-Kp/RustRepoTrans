Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/glue/src/catalog.rs:295:1
    |
295 | pub(crate) async fn list_tables(&self, namespace: &NamespaceIdent) -> Result<Vec<TableIdent>> {
    | ^^^^^^^^^^
    |
    = note: trait items always share the visibility of their trait

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:302:114
    |
302 |             Some(token) => self.client.0.get_tables().database_name(database_name).next_token(token).send().await?,
    |                                                                                                                  ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<Vec<TableIdent>, iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:303:89
    |
303 |             None => self.client.0.get_tables().database_name(database_name).send().await?,
    |                                                                                         ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<Vec<TableIdent>, iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0609]: no field `tables` on type `GetTablesOutput`
   --> crates/catalog/glue/src/catalog.rs:306:36
    |
306 |         table_list.extend(response.tables.unwrap_or_default());
    |                                    ^^^^^^ unknown field
    |
    = note: available fields are: `table_list`, `next_token`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
   --> crates/catalog/glue/src/catalog.rs:317:30
    |
317 |             name: table.name.unwrap_or_default(),
    |                              ^^^^^^^^^^^^^^^^^ method not found in `String`

Some errors have detailed explanations: E0277, E0449, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/glue/src/catalog.rs:295:1
    |
295 | pub(crate) async fn list_tables(&self, namespace: &NamespaceIdent) -> Result<Vec<TableIdent>> {
    | ^^^^^^^^^^
    |
    = note: trait items always share the visibility of their trait

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:302:114
    |
302 |             Some(token) => self.client.0.get_tables().database_name(database_name).next_token(token).send().await?,
    |                                                                                                                  ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `Result<Vec<TableIdent>, iceberg::Error>: FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:303:89
    |
303 |             None => self.client.0.get_tables().database_name(database_name).send().await?,
    |                                                                                         ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `Result<Vec<TableIdent>, iceberg::Error>: FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0609]: no field `tables` on type `GetTablesOutput`
   --> crates/catalog/glue/src/catalog.rs:306:36
    |
306 |         table_list.extend(response.tables.unwrap_or_default());
    |                                    ^^^^^^ unknown field
    |
    = note: available fields are: `table_list`, `next_token`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
   --> crates/catalog/glue/src/catalog.rs:317:30
    |
317 |             name: table.name.unwrap_or_default(),
    |                              ^^^^^^^^^^^^^^^^^ method not found in `String`

Some errors have detailed explanations: E0277, E0449, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

