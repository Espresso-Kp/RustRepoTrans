Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0252]: the name `Client` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:31:15
   |
21 | use reqwest::Client;
   |     --------------- previous import of the type `Client` here
...
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |               ^^^^^^--
   |               |
   |               `Client` reimported here
   |               help: remove unnecessary import
   |
   = note: `Client` must be defined only once in the type namespace of this module

error[E0252]: the name `NamespaceIdent` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:43
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                              -------------- previous import of the type `NamespaceIdent` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                                           ^^^^^^^^^^^^^^--
   |                                           |
   |                                           `NamespaceIdent` reimported here
   |                                           help: remove unnecessary import
   |
   = note: `NamespaceIdent` must be defined only once in the type namespace of this module

error[E0252]: the name `Namespace` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:32
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                              --------- previous import of the type `Namespace` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                                ^^^^^^^^^--
   |                                |
   |                                `Namespace` reimported here
   |                                help: remove unnecessary import
   |
   = note: `Namespace` must be defined only once in the type namespace of this module

error[E0252]: the name `Error` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:14
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                                                        ----- previous import of the type `Error` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |              ^^^^^--
   |              |
   |              `Error` reimported here
   |              help: remove unnecessary import
   |
   = note: `Error` must be defined only once in the type namespace of this module

error[E0252]: the name `ErrorKind` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:21
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                                                               --------- previous import of the type `ErrorKind` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                     ^^^^^^^^^--
   |                     |
   |                     `ErrorKind` reimported here
   |                     help: remove unnecessary import
   |
   = note: `ErrorKind` must be defined only once in the type namespace of this module

error[E0255]: the name `RestCatalog` is defined multiple times
   --> crates/catalog/rest/src/catalog.rs:286:1
    |
23  | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
    |                      ----------- previous import of the type `RestCatalog` here
...
286 | pub struct RestCatalog {
    | ^^^^^^^^^^^^^^^^^^^^^^ `RestCatalog` redefined here
    |
    = note: `RestCatalog` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
    |
23  | use crate::catalog::{RestCatalog as OtherRestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
    |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0252]: the name `ErrorResponse` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:47:20
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                                         ------------- previous import of the type `ErrorResponse` here
...
47 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                    ^^^^^^^^^^^^^--
   |                    |
   |                    `ErrorResponse` reimported here
   |                    help: remove unnecessary import
   |
   = note: `ErrorResponse` must be defined only once in the type namespace of this module

error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/rest/src/catalog.rs:317:1
    |
317 | pub async fn create_namespace(
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0432]: unresolved import `crate::catalog::Endpoints`
  --> crates/catalog/rest/src/catalog.rs:23:35
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                   ^^^^^^^^^ no `Endpoints` in `catalog`

warning: unused imports: `Deserialize`, `Serialize`
  --> crates/catalog/rest/src/catalog.rs:22:13
   |
22 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `ErrorKind`, `ErrorResponse`, `Error`, `NamespaceIdent`, `Namespace`, `RestCatalog`
  --> crates/catalog/rest/src/catalog.rs:23:22
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                      ^^^^^^^^^^^             ^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^  ^^^^^^^^^

warning: unused import: `Client`
  --> crates/catalog/rest/src/catalog.rs:31:15
   |
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |               ^^^^^^

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/rest/src/catalog.rs:321:10
    |
321 |     ) -> Result<Namespace, Error> {
    |          ^^^^^^            ----- help: remove this generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:322:36
    |
322 |         let namespace_tuple = self._check_valid_namespace_identifier(namespace).await?;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:328:29
    |
328 |         let response = self._session.post(self.url(Endpoints::create_namespace))
    |                             ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `url` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:328:48
    |
328 |         let response = self._session.post(self.url(Endpoints::create_namespace))
    |                                                ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0599]: no variant or associated item named `Other` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:338:39
    |
338 |             Err(Error::new(ErrorKind::Other, error_response.error.message).into())
    |                                       ^^^^^ variant or associated item not found in `ErrorKind`

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:338:61
    |
338 |             Err(Error::new(ErrorKind::Other, error_response.error.message).into())
    |                                                             ^^^^^ private field

Some errors have detailed explanations: E0107, E0252, E0255, E0432, E0449, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0107`.
warning: `iceberg-catalog-rest` (lib test) generated 3 warnings
error: could not compile `iceberg-catalog-rest` (lib test) due to 15 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0252]: the name `Client` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:31:15
   |
21 | use reqwest::Client;
   |     --------------- previous import of the type `Client` here
...
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |               ^^^^^^--
   |               |
   |               `Client` reimported here
   |               help: remove unnecessary import
   |
   = note: `Client` must be defined only once in the type namespace of this module

error[E0252]: the name `NamespaceIdent` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:43
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                              -------------- previous import of the type `NamespaceIdent` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                                           ^^^^^^^^^^^^^^--
   |                                           |
   |                                           `NamespaceIdent` reimported here
   |                                           help: remove unnecessary import
   |
   = note: `NamespaceIdent` must be defined only once in the type namespace of this module

error[E0252]: the name `Namespace` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:32
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                              --------- previous import of the type `Namespace` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                                ^^^^^^^^^--
   |                                |
   |                                `Namespace` reimported here
   |                                help: remove unnecessary import
   |
   = note: `Namespace` must be defined only once in the type namespace of this module

error[E0252]: the name `Error` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:14
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                                                        ----- previous import of the type `Error` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |              ^^^^^--
   |              |
   |              `Error` reimported here
   |              help: remove unnecessary import
   |
   = note: `Error` must be defined only once in the type namespace of this module

error[E0252]: the name `ErrorKind` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:43:21
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                                                               --------- previous import of the type `ErrorKind` here
...
43 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                     ^^^^^^^^^--
   |                     |
   |                     `ErrorKind` reimported here
   |                     help: remove unnecessary import
   |
   = note: `ErrorKind` must be defined only once in the type namespace of this module

error[E0255]: the name `RestCatalog` is defined multiple times
   --> crates/catalog/rest/src/catalog.rs:286:1
    |
23  | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
    |                      ----------- previous import of the type `RestCatalog` here
...
286 | pub struct RestCatalog {
    | ^^^^^^^^^^^^^^^^^^^^^^ `RestCatalog` redefined here
    |
    = note: `RestCatalog` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
    |
23  | use crate::catalog::{RestCatalog as OtherRestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
    |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0252]: the name `ErrorResponse` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:47:20
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                                                         ------------- previous import of the type `ErrorResponse` here
...
47 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                    ^^^^^^^^^^^^^--
   |                    |
   |                    `ErrorResponse` reimported here
   |                    help: remove unnecessary import
   |
   = note: `ErrorResponse` must be defined only once in the type namespace of this module

error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/rest/src/catalog.rs:317:1
    |
317 | pub async fn create_namespace(
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0432]: unresolved import `crate::catalog::Endpoints`
  --> crates/catalog/rest/src/catalog.rs:23:35
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                                   ^^^^^^^^^ no `Endpoints` in `catalog`

warning: unused imports: `Deserialize`, `Serialize`
  --> crates/catalog/rest/src/catalog.rs:22:13
   |
22 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `ErrorKind`, `ErrorResponse`, `Error`, `NamespaceIdent`, `Namespace`, `RestCatalog`
  --> crates/catalog/rest/src/catalog.rs:23:22
   |
23 | use crate::catalog::{RestCatalog, Endpoints, NamespaceIdent, Namespace, ErrorResponse, Error, ErrorKind};
   |                      ^^^^^^^^^^^             ^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^  ^^^^^^^^^

warning: unused import: `Client`
  --> crates/catalog/rest/src/catalog.rs:31:15
   |
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |               ^^^^^^

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/rest/src/catalog.rs:321:10
    |
321 |     ) -> Result<Namespace, Error> {
    |          ^^^^^^            ----- help: remove this generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:322:36
    |
322 |         let namespace_tuple = self._check_valid_namespace_identifier(namespace).await?;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:328:29
    |
328 |         let response = self._session.post(self.url(Endpoints::create_namespace))
    |                             ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `url` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:328:48
    |
328 |         let response = self._session.post(self.url(Endpoints::create_namespace))
    |                                                ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0599]: no variant or associated item named `Other` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:338:39
    |
338 |             Err(Error::new(ErrorKind::Other, error_response.error.message).into())
    |                                       ^^^^^ variant or associated item not found in `ErrorKind`

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:338:61
    |
338 |             Err(Error::new(ErrorKind::Other, error_response.error.message).into())
    |                                                             ^^^^^ private field

Some errors have detailed explanations: E0107, E0252, E0255, E0432, E0449, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0107`.
warning: `iceberg-catalog-rest` (lib) generated 3 warnings
error: could not compile `iceberg-catalog-rest` (lib) due to 15 previous errors; 3 warnings emitted

