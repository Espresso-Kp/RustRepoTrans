Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error: unknown start of token: \
   --> src/cd.rs:180:92
    |
180 | pub(crate) fn merge_coherence_ratios(results: &Vec<CoherenceMatches>) -> CoherenceMatches {\n    let mut per_language_ratios: HashMap<&La...
    |                                                                                            ^

error: unknown start of token: \
   --> src/cd.rs:180:173
    |
180 | ...er_language_ratios: HashMap<&Language, Vec<f32>> = HashMap::new();\n\n    for result in results {\n        for sub_result in result {\...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:175
    |
180 | ..._language_ratios: HashMap<&Language, Vec<f32>> = HashMap::new();\n\n    for result in results {\n        for sub_result in result {\n ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:204
    |
180 | ...nguage, Vec<f32>> = HashMap::new();\n\n    for result in results {\n        for sub_result in result {\n            let (language, rat...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:240
    |
180 | ...n\n    for result in results {\n        for sub_result in result {\n            let (language, ratio) = (sub_result.language, sub_resu...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:318
    |
180 | ...  let (language, ratio) = (sub_result.language, sub_result.score);\n            if !per_language_ratios.contains_key(language) {\n    ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:380
    |
180 | ...re);\n            if !per_language_ratios.contains_key(language) {\n                per_language_ratios.insert(language, vec![ratio]);...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:448
    |
180 | ...                per_language_ratios.insert(language, vec![ratio]);\n            } else {\n                if let Some(ratios) = per_la...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:470
    |
180 | ...nguage_ratios.insert(language, vec![ratio]);\n            } else {\n                if let Some(ratios) = per_language_ratios.get_mut(...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:549
    |
180 | ...     if let Some(ratios) = per_language_ratios.get_mut(language) {\n                    ratios.push(ratio);\n                }\n      ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:590
    |
180 | ...atios.get_mut(language) {\n                    ratios.push(ratio);\n                }\n            }\n        }\n    }\n\n    let mut ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:609
    |
180 | ...age) {\n                    ratios.push(ratio);\n                }\n            }\n        }\n    }\n\n    let mut merge: Vec<Coherenc...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:624
    |
180 | ...             ratios.push(ratio);\n                }\n            }\n        }\n    }\n\n    let mut merge: Vec<CoherenceMatch> = per_l...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:635
    |
180 | ...  ratios.push(ratio);\n                }\n            }\n        }\n    }\n\n    let mut merge: Vec<CoherenceMatch> = per_language_rat...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:642
    |
180 | ...s.push(ratio);\n                }\n            }\n        }\n    }\n\n    let mut merge: Vec<CoherenceMatch> = per_language_ratios\n  ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:644
    |
180 | ...push(ratio);\n                }\n            }\n        }\n    }\n\n    let mut merge: Vec<CoherenceMatch> = per_language_ratios\n    ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:706
    |
180 | ... }\n\n    let mut merge: Vec<CoherenceMatch> = per_language_ratios\n        .iter()\n        .map(|(language, ratios)| -> CoherenceMat...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:723
    |
180 | ... merge: Vec<CoherenceMatch> = per_language_ratios\n        .iter()\n        .map(|(language, ratios)| -> CoherenceMatch {\n           ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:778
    |
180 | ...    .iter()\n        .map(|(language, ratios)| -> CoherenceMatch {\n            let sum: f32 = ratios.iter().sum();\n            let a...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:827
    |
180 | ... CoherenceMatch {\n            let sum: f32 = ratios.iter().sum();\n            let avg_ratio = sum / (ratios.len() as f32);\n        ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:885
    |
180 | ...).sum();\n            let avg_ratio = sum / (ratios.len() as f32);\n            CoherenceMatch {\n                language: *language,...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:915
    |
180 | ...ratio = sum / (ratios.len() as f32);\n            CoherenceMatch {\n                language: *language,\n                score: avg_r...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:953
    |
180 | ...            CoherenceMatch {\n                language: *language,\n                score: avg_ratio,\n            }\n        })\n    ...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:988
    |
180 | ...           language: *language,\n                score: avg_ratio,\n            }\n        })\n        .collect();\n\n    merge.sort_b...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1003
    |
180 | ...uage: *language,\n                score: avg_ratio,\n            }\n        })\n        .collect();\n\n    merge.sort_by(|a, b| b.scor...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1015
    |
180 | ...age,\n                score: avg_ratio,\n            }\n        })\n        .collect();\n\n    merge.sort_by(|a, b| b.score.partial_cm...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1036
    |
180 | ... score: avg_ratio,\n            }\n        })\n        .collect();\n\n    merge.sort_by(|a, b| b.score.partial_cmp(&a.score).unwrap_or...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1038
    |
180 | ...core: avg_ratio,\n            }\n        })\n        .collect();\n\n    merge.sort_by(|a, b| b.score.partial_cmp(&a.score).unwrap_or(O...
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1123
    |
180 | ...(|a, b| b.score.partial_cmp(&a.score).unwrap_or(Ordering::Equal));\n\n    return CoherenceMatches{items: merge};\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1125
    |
180 | ...a, b| b.score.partial_cmp(&a.score).unwrap_or(Ordering::Equal));\n\n    return CoherenceMatches{items: merge};\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/cd.rs:180:1169
    |
180 | ...r(Ordering::Equal));\n\n    return CoherenceMatches{items: merge};\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> src/cd.rs:180:98
    |
180 | pub(crate) fn merge_coherence_ratios(results: &Vec<CoherenceMatches>) -> CoherenceMatches {\n    let mut per_language_ratios: HashMap<&La...
    |                                                                                                  ^^^ expected one of 8 possible tokens

error[E0252]: the name `HashMap` is defined multiple times
  --> src/cd.rs:13:13
   |
3  | use std::collections::HashMap;
   |     ------------------------- previous import of the type `HashMap` here
...
13 | use ahash::{HashMap, HashMapExt, HashSet};
   |             ^^^^^^^ `HashMap` reimported here
   |
   = note: `HashMap` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
13 | use ahash::{HashMap as OtherHashMap, HashMapExt, HashSet};
   |             ~~~~~~~~~~~~~~~~~~~~~~~

warning: unused import: `std::cmp::Ordering`
 --> src/cd.rs:4:5
  |
4 | use std::cmp::Ordering;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `HashMap`
  --> src/cd.rs:13:13
   |
13 | use ahash::{HashMap, HashMapExt, HashSet};
   |             ^^^^^^^

warning: unused import: `HashMapExt`
  --> src/cd.rs:13:22
   |
13 | use ahash::{HashMap, HashMapExt, HashSet};
   |                      ^^^^^^^^^^

For more information about this error, try `rustc --explain E0252`.
warning: `charset-normalizer-rs` (lib) generated 3 warnings
error: could not compile `charset-normalizer-rs` (lib) due to 33 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `charset-normalizer-rs` (lib test) generated 3 warnings (3 duplicates)
error: could not compile `charset-normalizer-rs` (lib test) due to 33 previous errors; 3 warnings emitted

