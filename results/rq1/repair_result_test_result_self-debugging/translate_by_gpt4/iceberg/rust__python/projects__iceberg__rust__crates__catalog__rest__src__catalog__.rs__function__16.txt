Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0252]: the name `Request` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:36:23
   |
24 | use reqwest::Request;
   |     ---------------- previous import of the type `Request` here
...
36 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^--
   |                       |
   |                       `Request` reimported here
   |                       help: remove unnecessary import
   |
   = note: `Request` must be defined only once in the type namespace of this module

error[E0252]: the name `ErrorResponse` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:52:20
   |
25 | use crate::catalog::_serde::ErrorResponse;
   |     ------------------------------------- previous import of the type `ErrorResponse` here
...
52 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                    ^^^^^^^^^^^^^--
   |                    |
   |                    `ErrorResponse` reimported here
   |                    help: remove unnecessary import
   |
   = note: `ErrorResponse` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::http`
  --> crates/catalog/rest/src/catalog.rs:21:12
   |
21 | use crate::http::HttpClient;
   |            ^^^^ could not find `http` in the crate root

error[E0432]: unresolved import `crate::http`
  --> crates/catalog/rest/src/catalog.rs:22:12
   |
22 | use crate::http::ErrorResponse;
   |            ^^^^ could not find `http` in the crate root

error[E0432]: unresolved import `anyhow`
  --> crates/catalog/rest/src/catalog.rs:23:5
   |
23 | use anyhow::Result;
   |     ^^^^^^ use of undeclared crate or module `anyhow`

error[E0432]: unresolved import `crate::ErrorKind`
  --> crates/catalog/rest/src/catalog.rs:26:5
   |
26 | use crate::ErrorKind;
   |     ^^^^^^^^^^^^^^^^ no `ErrorKind` in the root
   |
help: consider importing one of these items instead
   |
26 | use iceberg::ErrorKind;
   |     ~~~~~~~~~~~~~~~~~~
26 | use mockito::ErrorKind;
   |     ~~~~~~~~~~~~~~~~~~
26 | use std::io::ErrorKind;
   |     ~~~~~~~~~~~~~~~~~~
26 | use tokio::io::ErrorKind;
   |     ~~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::Namespace`
  --> crates/catalog/rest/src/catalog.rs:27:5
   |
27 | use crate::Namespace;
   |     ^^^^^^^^^^^^^^^^ no `Namespace` in the root
   |
help: consider importing this struct instead
   |
27 | use iceberg::Namespace;
   |     ~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::NamespaceIdent`
  --> crates/catalog/rest/src/catalog.rs:28:5
   |
28 | use crate::NamespaceIdent;
   |     ^^^^^^^^^^^^^^^^^^^^^ no `NamespaceIdent` in the root
   |
help: consider importing this struct instead
   |
28 | use iceberg::NamespaceIdent;
   |     ~~~~~~~~~~~~~~~~~~~~~~~

error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:329:19
    |
329 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
21  + use serde_json::json;
    |

warning: unused import: `Request`
  --> crates/catalog/rest/src/catalog.rs:36:23
   |
36 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ErrorResponse`
  --> crates/catalog/rest/src/catalog.rs:52:20
   |
52 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                    ^^^^^^^^^^^^^

error[E0599]: no method named `try_from` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:327:32
    |
327 |     let namespace_tuple = self.try_from(namespace.to_owned())?;
    |                           -----^^^^^^^^----------------------
    |                           |    |
    |                           |    this is an associated function, not a method
    |                           help: use associated function syntax instead: `catalog::RestCatalog::try_from(namespace.to_owned())`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in the trait `TryFrom`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/convert/mod.rs:686:5

error[E0599]: no function or associated item named `post` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:334:28
    |
334 |     let request = Request::post(self.namespaces_endpoint())
    |                            ^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `namespaces_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:334:38
    |
334 |     let request = Request::post(self.namespaces_endpoint())
    |                                      ^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
334 |     let request = Request::post(self.config.namespaces_endpoint())
    |                                      +++++++

error[E0599]: no method named `query` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:338:25
    |
338 |     let response = self.query::<_, ErrorResponse, OK>(request).await?;
    |                         ^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
338 |     let response = self.client.query::<_, ErrorResponse, OK>(request).await?;
    |                         +++++++

Some errors have detailed explanations: E0252, E0432, E0599.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg-catalog-rest` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-rest` (lib test) due to 13 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0252]: the name `Request` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:36:23
   |
24 | use reqwest::Request;
   |     ---------------- previous import of the type `Request` here
...
36 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^--
   |                       |
   |                       `Request` reimported here
   |                       help: remove unnecessary import
   |
   = note: `Request` must be defined only once in the type namespace of this module

error[E0252]: the name `ErrorResponse` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:52:20
   |
25 | use crate::catalog::_serde::ErrorResponse;
   |     ------------------------------------- previous import of the type `ErrorResponse` here
...
52 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                    ^^^^^^^^^^^^^--
   |                    |
   |                    `ErrorResponse` reimported here
   |                    help: remove unnecessary import
   |
   = note: `ErrorResponse` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::http`
  --> crates/catalog/rest/src/catalog.rs:21:12
   |
21 | use crate::http::HttpClient;
   |            ^^^^ could not find `http` in the crate root

error[E0432]: unresolved import `crate::http`
  --> crates/catalog/rest/src/catalog.rs:22:12
   |
22 | use crate::http::ErrorResponse;
   |            ^^^^ could not find `http` in the crate root

error[E0432]: unresolved import `anyhow`
  --> crates/catalog/rest/src/catalog.rs:23:5
   |
23 | use anyhow::Result;
   |     ^^^^^^ use of undeclared crate or module `anyhow`

error[E0432]: unresolved import `crate::ErrorKind`
  --> crates/catalog/rest/src/catalog.rs:26:5
   |
26 | use crate::ErrorKind;
   |     ^^^^^^^^^^^^^^^^ no `ErrorKind` in the root
   |
help: consider importing one of these items instead
   |
26 | use iceberg::ErrorKind;
   |     ~~~~~~~~~~~~~~~~~~
26 | use std::io::ErrorKind;
   |     ~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::Namespace`
  --> crates/catalog/rest/src/catalog.rs:27:5
   |
27 | use crate::Namespace;
   |     ^^^^^^^^^^^^^^^^ no `Namespace` in the root
   |
help: consider importing this struct instead
   |
27 | use iceberg::Namespace;
   |     ~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::NamespaceIdent`
  --> crates/catalog/rest/src/catalog.rs:28:5
   |
28 | use crate::NamespaceIdent;
   |     ^^^^^^^^^^^^^^^^^^^^^ no `NamespaceIdent` in the root
   |
help: consider importing this struct instead
   |
28 | use iceberg::NamespaceIdent;
   |     ~~~~~~~~~~~~~~~~~~~~~~~

error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:329:19
    |
329 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
21  + use serde_json::json;
    |

warning: unused import: `Request`
  --> crates/catalog/rest/src/catalog.rs:36:23
   |
36 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ErrorResponse`
  --> crates/catalog/rest/src/catalog.rs:52:20
   |
52 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                    ^^^^^^^^^^^^^

error[E0599]: no method named `try_from` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:327:32
    |
327 |     let namespace_tuple = self.try_from(namespace.to_owned())?;
    |                           -----^^^^^^^^----------------------
    |                           |    |
    |                           |    this is an associated function, not a method
    |                           help: use associated function syntax instead: `RestCatalog::try_from(namespace.to_owned())`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in the trait `TryFrom`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/convert/mod.rs:686:5

error[E0599]: no function or associated item named `post` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:334:28
    |
334 |     let request = Request::post(self.namespaces_endpoint())
    |                            ^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `namespaces_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:334:38
    |
334 |     let request = Request::post(self.namespaces_endpoint())
    |                                      ^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
334 |     let request = Request::post(self.config.namespaces_endpoint())
    |                                      +++++++

error[E0599]: no method named `query` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:338:25
    |
338 |     let response = self.query::<_, ErrorResponse, OK>(request).await?;
    |                         ^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
338 |     let response = self.client.query::<_, ErrorResponse, OK>(request).await?;
    |                         +++++++

Some errors have detailed explanations: E0252, E0432, E0599.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg-catalog-rest` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-rest` (lib) due to 13 previous errors; 2 warnings emitted

