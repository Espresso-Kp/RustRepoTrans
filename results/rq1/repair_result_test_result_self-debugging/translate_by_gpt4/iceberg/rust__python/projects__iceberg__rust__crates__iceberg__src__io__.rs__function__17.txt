Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:53
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                     ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:81
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                                                 ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:129
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                                                                                                 ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:155
    |
312 | ...tch self.op.write(bs.as_slice()).await {\n        Ok(_) => Ok(()),\n        Err(e) => Err(Error::new(ErrorKind::Io(e), "Failed to writ...
    |                                                                      ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:234
    |
312 | ...(e) => Err(Error::new(ErrorKind::Io(e), "Failed to write bytes")),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:241
    |
312 | ...Err(Error::new(ErrorKind::Io(e), "Failed to write bytes")),\n    }\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> crates/iceberg/src/io.rs:312:59
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                           ^^^ expected one of 8 possible tokens

error: unexpected token, expected `;`
   --> crates/iceberg/src/io.rs:312:59
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                           ^^^

error[E0277]: the trait bound `opendal::Writer: FileWrite` is not satisfied
   --> crates/iceberg/src/io.rs:372:12
    |
372 |           Ok(Box::new(
    |  ____________^
373 | |             self.op.writer(&self.path[self.relative_path_pos..]).await?,
374 | |         ))
    | |_________^ the trait `FileWrite` is not implemented for `opendal::Writer`
    |
    = help: the trait `FileWrite` is implemented for `TrackWriter`
    = note: required for the cast from `Box<opendal::Writer>` to `Box<dyn FileWrite>`

error[E0277]: the trait bound `opendal::Writer: io::FileWrite` is not satisfied
   --> crates/iceberg/src/io.rs:372:12
    |
372 |           Ok(Box::new(
    |  ____________^
373 | |             self.op.writer(&self.path[self.relative_path_pos..]).await?,
374 | |         ))
    | |_________^ the trait `io::FileWrite` is not implemented for `opendal::Writer`
    |
    = help: the trait `io::FileWrite` is implemented for `TrackWriter`
    = note: required for the cast from `Box<opendal::Writer>` to `Box<dyn io::FileWrite>`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 9 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:53
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                     ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:81
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                                                 ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:129
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                                                                                                 ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:155
    |
312 | ...tch self.op.write(bs.as_slice()).await {\n        Ok(_) => Ok(()),\n        Err(e) => Err(Error::new(ErrorKind::Io(e), "Failed to writ...
    |                                                                      ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:234
    |
312 | ...(e) => Err(Error::new(ErrorKind::Io(e), "Failed to write bytes")),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/iceberg/src/io.rs:312:241
    |
312 | ...Err(Error::new(ErrorKind::Io(e), "Failed to write bytes")),\n    }\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> crates/iceberg/src/io.rs:312:59
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                           ^^^ expected one of 8 possible tokens

error: unexpected token, expected `;`
   --> crates/iceberg/src/io.rs:312:59
    |
312 | async fn write(&mut self, bs: Bytes) -> Result<()> {\n    let bs = bs.to_vec(); \n    match self.op.write(bs.as_slice()).await {\n       ...
    |                                                           ^^^

error[E0277]: the trait bound `opendal::Writer: FileWrite` is not satisfied
   --> crates/iceberg/src/io.rs:372:12
    |
372 |           Ok(Box::new(
    |  ____________^
373 | |             self.op.writer(&self.path[self.relative_path_pos..]).await?,
374 | |         ))
    | |_________^ the trait `FileWrite` is not implemented for `opendal::Writer`
    |
    = help: the trait `FileWrite` is implemented for `TrackWriter`
    = note: required for the cast from `Box<opendal::Writer>` to `Box<dyn FileWrite>`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 9 previous errors

