Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0252]: the name `NestedFieldRef` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:44
   |
21 | use crate::spec::{NestedField, NestedFieldRef, Schema};
   |                                -------------- previous import of the type `NestedFieldRef` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                            ^^^^^^^^^^^^^^--
   |                                            |
   |                                            `NestedFieldRef` reimported here
   |                                            help: remove unnecessary import
   |
   = note: `NestedFieldRef` must be defined only once in the type namespace of this module

error[E0252]: the name `NestedField` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:31
   |
21 | use crate::spec::{NestedField, NestedFieldRef, Schema};
   |                   ----------- previous import of the type `NestedField` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                               ^^^^^^^^^^^--
   |                               |
   |                               `NestedField` reimported here
   |                               help: remove unnecessary import
   |
   = note: `NestedField` must be defined only once in the type namespace of this module

error[E0252]: the name `Schema` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:93
   |
21 | use crate::spec::{NestedField, NestedFieldRef, Schema};
   |                                                ------ previous import of the type `Schema` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                                                                             ^^^^^^-
   |                                                                                             |
   |                                                                                             `Schema` reimported here
   |                                                                                             help: remove unnecessary import
   |
   = note: `Schema` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::arrow::arrow_schema_to_schema`
  --> crates/iceberg/src/arrow/schema.rs:22:19
   |
22 | use crate::arrow::arrow_schema_to_schema::Visitor;
   |                   ^^^^^^^^^^^^^^^^^^^^^^ expected type, found function `arrow_schema_to_schema` in `arrow`

warning: unused imports: `NestedFieldRef`, `NestedField`, `Schema`
  --> crates/iceberg/src/arrow/schema.rs:26:31
   |
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                               ^^^^^^^^^^^  ^^^^^^^^^^^^^^                                   ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:643:9
    |
643 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:211:8
    |
211 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
643 |         arrow_schema_to_schema(schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:211:8
    |
211 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `HasIds`
   --> crates/iceberg/src/arrow/schema.rs:213:62
    |
213 |         let has_ids = visit_schema.visit_schema(schema, &mut HasIds::new())?;
    |                                                              ^^^^^^ use of undeclared type `HasIds`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:215:22
    |
215 |             Box::new(ConvertToIceberg::new())
    |                      ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:217:31
    |
217 |             let mut visitor = ConvertToIceberg::new();
    |                               ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

Some errors have detailed explanations: E0061, E0252, E0432, E0433.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 9 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:643:9
    |
643 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:211:8
    |
211 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
643 |         arrow_schema_to_schema(schema, /* std::option::Option<std::collections::HashMap<std::string::String, std::string::String>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
    --> crates/iceberg/src/arrow/schema.rs:1029:32
     |
1029 |         let converted_schema = arrow_schema_to_schema(&arrow_schema).unwrap();
     |                                ^^^^^^^^^^^^^^^^^^^^^^--------------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` is missing
     |
note: function defined here
    --> crates/iceberg/src/arrow/schema.rs:211:8
     |
211  | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
     |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
     |
1029 |         let converted_schema = arrow_schema_to_schema(&arrow_schema, /* std::option::Option<std::collections::HashMap<std::string::String, std::string::String>> */).unwrap();
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:211:8
    |
211 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<std::collections::HashMap<std::string::String, std::string::String>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 10 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0252]: the name `NestedFieldRef` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:44
   |
21 | use crate::spec::{NestedField, NestedFieldRef, Schema};
   |                                -------------- previous import of the type `NestedFieldRef` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                            ^^^^^^^^^^^^^^--
   |                                            |
   |                                            `NestedFieldRef` reimported here
   |                                            help: remove unnecessary import
   |
   = note: `NestedFieldRef` must be defined only once in the type namespace of this module

error[E0252]: the name `NestedField` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:31
   |
21 | use crate::spec::{NestedField, NestedFieldRef, Schema};
   |                   ----------- previous import of the type `NestedField` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                               ^^^^^^^^^^^--
   |                               |
   |                               `NestedField` reimported here
   |                               help: remove unnecessary import
   |
   = note: `NestedField` must be defined only once in the type namespace of this module

error[E0252]: the name `Schema` is defined multiple times
  --> crates/iceberg/src/arrow/schema.rs:26:93
   |
21 | use crate::spec::{NestedField, NestedFieldRef, Schema};
   |                                                ------ previous import of the type `Schema` here
...
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                                                                                             ^^^^^^-
   |                                                                                             |
   |                                                                                             `Schema` reimported here
   |                                                                                             help: remove unnecessary import
   |
   = note: `Schema` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::arrow::arrow_schema_to_schema`
  --> crates/iceberg/src/arrow/schema.rs:22:19
   |
22 | use crate::arrow::arrow_schema_to_schema::Visitor;
   |                   ^^^^^^^^^^^^^^^^^^^^^^ expected type, found function `arrow_schema_to_schema` in `arrow`

warning: unused imports: `NestedFieldRef`, `NestedField`, `Schema`
  --> crates/iceberg/src/arrow/schema.rs:26:31
   |
26 |     Datum, ListType, MapType, NestedField, NestedFieldRef, PrimitiveLiteral, PrimitiveType, Schema,
   |                               ^^^^^^^^^^^  ^^^^^^^^^^^^^^                                   ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:643:9
    |
643 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:211:8
    |
211 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
643 |         arrow_schema_to_schema(schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:211:8
    |
211 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `HasIds`
   --> crates/iceberg/src/arrow/schema.rs:213:62
    |
213 |         let has_ids = visit_schema.visit_schema(schema, &mut HasIds::new())?;
    |                                                              ^^^^^^ use of undeclared type `HasIds`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:215:22
    |
215 |             Box::new(ConvertToIceberg::new())
    |                      ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:217:31
    |
217 |             let mut visitor = ConvertToIceberg::new();
    |                               ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

Some errors have detailed explanations: E0061, E0252, E0432, E0433.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 9 previous errors; 1 warning emitted

