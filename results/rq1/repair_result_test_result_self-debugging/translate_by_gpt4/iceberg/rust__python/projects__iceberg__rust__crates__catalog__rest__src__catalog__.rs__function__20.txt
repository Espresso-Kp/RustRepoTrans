Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:75
    |
390 | async fn drop_namespace(&self, namespace: &NamespaceIdent) -> Result<()> {\n    let namespace_endpoint = self.namespace_endpoint(namespac...
    |                                                                           ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:141
    |
390 | ...\n    let namespace_endpoint = self.namespace_endpoint(namespace);\n\n    let request = Request::new(Url::from_str(&namespace_endpoint...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:143
    |
390 | ...    let namespace_endpoint = self.namespace_endpoint(namespace);\n\n    let request = Request::new(Url::from_str(&namespace_endpoint)....
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:250
    |
390 | ...m_str(&namespace_endpoint).expect("Invalid URL"), Method::DELETE);\n\n    match self.execute::<ErrorResponse, NO_CONTENT>(request).awa...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:252
    |
390 | ...str(&namespace_endpoint).expect("Invalid URL"), Method::DELETE);\n\n    match self.execute::<ErrorResponse, NO_CONTENT>(request).await...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:322
    |
390 | ...  match self.execute::<ErrorResponse, NO_CONTENT>(request).await {\n        Ok(()) => Ok(()),\n        Err(reqwest::Error::Status(Stat...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:349
    |
390 | ...rResponse, NO_CONTENT>(request).await {\n        Ok(()) => Ok(()),\n        Err(reqwest::Error::Status(StatusCode::NOT_FOUND, _)) => {...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:417
    |
390 | ...        Err(reqwest::Error::Status(StatusCode::NOT_FOUND, _)) => {\n            Err(Error::from(NoSuchNamespaceError))\n        },\n  ...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:469
    |
390 | ...OUND, _)) => {\n            Err(Error::from(NoSuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:481
    |
390 | ... {\n            Err(Error::from(NoSuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:508
    |
390 | ...from(NoSuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:515
    |
390 | ...SuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> crates/catalog/rest/src/catalog.rs:390:81
    |
390 | async fn drop_namespace(&self, namespace: &NamespaceIdent) -> Result<()> {\n    let namespace_endpoint = self.namespace_endpoint(namespac...
    |                                                                                 ^^^ expected one of 8 possible tokens

error[E0252]: the name `Request` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:33:23
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |               ------- previous import of the type `Request` here
...
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^--
   |                       |
   |                       `Request` reimported here
   |                       help: remove unnecessary import
   |
   = note: `Request` must be defined only once in the type namespace of this module

error[E0252]: the name `StatusCode` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:33:42
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |                                     ---------- previous import of the type `StatusCode` here
...
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                                          ^^^^^^^^^^--
   |                                          |
   |                                          `StatusCode` reimported here
   |                                          help: remove unnecessary import
   |
   = note: `StatusCode` must be defined only once in the type namespace of this module

error[E0252]: the name `Url` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:33:54
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |                                --- previous import of the type `Url` here
...
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                                                      ^^^ `Url` reimported here
   |
   = note: `Url` must be defined only once in the type namespace of this module

error: unexpected token, expected `;`
   --> crates/catalog/rest/src/catalog.rs:390:81
    |
390 | async fn drop_namespace(&self, namespace: &NamespaceIdent) -> Result<()> {\n    let namespace_endpoint = self.namespace_endpoint(namespac...
    |                                                                                 ^^^

error[E0432]: unresolved import `crate::catalog::_serde::NoSuchNamespaceError`
  --> crates/catalog/rest/src/catalog.rs:22:5
   |
22 | use crate::catalog::_serde::NoSuchNamespaceError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `NoSuchNamespaceError` in `catalog::_serde`

error[E0432]: unresolved import `crate::RestfulCatalog`
  --> crates/catalog/rest/src/catalog.rs:23:5
   |
23 | use crate::RestfulCatalog;
   |     ^^^^^^^--------------
   |     |      |
   |     |      help: a similar name exists in the module: `RestCatalog`
   |     no `RestfulCatalog` in the root

error[E0432]: unresolved import `crate::NamespaceIdent`
  --> crates/catalog/rest/src/catalog.rs:24:5
   |
24 | use crate::NamespaceIdent;
   |     ^^^^^^^^^^^^^^^^^^^^^ no `NamespaceIdent` in the root
   |
help: consider importing this struct instead
   |
24 | use iceberg::NamespaceIdent;
   |     ~~~~~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::Result`
  --> crates/catalog/rest/src/catalog.rs:25:5
   |
25 | use crate::Result;
   |     ^^^^^^^^^^^^^ no `Result` in the root
   |
help: consider importing one of these items instead
   |
25 | use core::fmt::Result;
   |     ~~~~~~~~~~~~~~~~~
25 | use core::result::Result;
   |     ~~~~~~~~~~~~~~~~~~~~
25 | use iceberg::Result;
   |     ~~~~~~~~~~~~~~~
25 | use reqwest::Result;
   |     ~~~~~~~~~~~~~~~
     and 6 other candidates

warning: unused imports: `Method`, `StatusCode`
  --> crates/catalog/rest/src/catalog.rs:21:24
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |                        ^^^^^^       ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Request`, `StatusCode`, `Url`
  --> crates/catalog/rest/src/catalog.rs:33:23
   |
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^            ^^^^^^^^^^  ^^^

warning: unused imports: `CommitTableRequest`, `CommitTableResponse`, `CreateTableRequest`
  --> crates/catalog/rest/src/catalog.rs:39:5
   |
39 |     CommitTableRequest, CommitTableResponse, CreateTableRequest, LoadTableResponse,
   |     ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^

warning: unused import: `TableCommit`
  --> crates/catalog/rest/src/catalog.rs:45:59
   |
45 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |                                                           ^^^^^^^^^^^

warning: unused imports: `ListNamespaceResponse`, `ListTableResponse`, `NO_CONTENT`, `NamespaceSerde`, `RenameTableRequest`
  --> crates/catalog/rest/src/catalog.rs:49:35
   |
49 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                                   ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
50 |     RenameTableRequest, TokenResponse, NO_CONTENT, OK,
   |     ^^^^^^^^^^^^^^^^^^                 ^^^^^^^^^^

error[E0599]: no method named `list_namespaces` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1151:35
     |
288  | pub struct RestCatalog {
     | ---------------------- method `list_namespaces` not found for this struct
...
1151 |         let _namespaces = catalog.list_namespaces(None).await.unwrap();
     |                                   ^^^^^^^^^^^^^^^ method not found in `RestCatalog`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `list_namespaces`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `list_namespaces` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1180:34
     |
288  | pub struct RestCatalog {
     | ---------------------- method `list_namespaces` not found for this struct
...
1180 |         let namespaces = catalog.list_namespaces(None).await.unwrap();
     |                                  ^^^^^^^^^^^^^^^ method not found in `RestCatalog`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `list_namespaces`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `create_namespace` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1217:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `create_namespace` not found for this struct
...
1216 |           let namespaces = catalog
     |  __________________________-
1217 | |             .create_namespace(
     | |             -^^^^^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `create_namespace`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `get_namespace` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1259:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `get_namespace` not found for this struct
...
1258 |           let namespaces = catalog
     |  __________________________-
1259 | |             .get_namespace(&NamespaceIdent::new("ns1".to_string()))
     | |             -^^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `get_namespace`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `namespace_exists` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1291:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `namespace_exists` not found for this struct
...
1290 |           assert!(catalog
     |  _________________-
1291 | |             .namespace_exists(&NamespaceIdent::new("ns1".to_string()))
     | |             -^^^^^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `namespace_exists`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `drop_namespace` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1316:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `drop_namespace` not found for this struct
...
1315 | /         catalog
1316 | |             .drop_namespace(&NamespaceIdent::new("ns1".to_string()))
     | |             -^^^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `drop_namespace`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `list_tables` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1355:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `list_tables` not found for this struct
...
1354 |           let tables = catalog
     |  ______________________-
1355 | |             .list_tables(&NamespaceIdent::new("ns1".to_string()))
     | |             -^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `list_tables`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `drop_table` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1387:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `drop_table` not found for this struct
...
1386 | /         catalog
1387 | |             .drop_table(&TableIdent::new(
     | |             -^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `drop_table`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `table_exists` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1415:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `table_exists` not found for this struct
...
1414 |           assert!(catalog
     |  _________________-
1415 | |             .table_exists(&TableIdent::new(
     | |             -^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `table_exists`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `rename_table` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1443:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `rename_table` not found for this struct
...
1442 | /         catalog
1443 | |             .rename_table(
     | |             -^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `rename_table`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `load_table` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1476:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `load_table` not found for this struct
...
1475 |           let table = catalog
     |  _____________________-
1476 | |             .load_table(&TableIdent::new(
     | |             -^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `load_table`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `load_table` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1589:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `load_table` not found for this struct
...
1588 |           let table = catalog
     |  _____________________-
1589 | |             .load_table(&TableIdent::new(
     | |             -^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `load_table`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `create_table` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1670:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `create_table` not found for this struct
...
1669 |           let table = catalog
     |  _____________________-
1670 | |             .create_table(&NamespaceIdent::from_strs(["ns1"]).unwrap(), table_creation)
     | |             -^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `create_table`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0599]: no method named `create_table` found for struct `catalog::RestCatalog` in the current scope
    --> crates/catalog/rest/src/catalog.rs:1789:14
     |
288  |   pub struct RestCatalog {
     |   ---------------------- method `create_table` not found for this struct
...
1788 |           let table_result = catalog
     |  ____________________________-
1789 | |             .create_table(&NamespaceIdent::from_strs(["ns1"]).unwrap(), table_creation)
     | |             -^^^^^^^^^^^^ method not found in `RestCatalog`
     | |_____________|
     | 
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `create_table`, perhaps you need to implement it:
             candidate #1: `iceberg::Catalog`

error[E0277]: the trait bound `catalog::RestCatalog: iceberg::Catalog` is not satisfied
    --> crates/catalog/rest/src/catalog.rs:1845:21
     |
1845 |             .commit(&catalog)
     |              ------ ^^^^^^^^ the trait `iceberg::Catalog` is not implemented for `catalog::RestCatalog`
     |              |
     |              required by a bound introduced by this call
     |
note: required by a bound in `Transaction::<'a>::commit`
    --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/transaction.rs:113:46
     |
113  |     pub async fn commit(self, catalog: &impl Catalog) -> Result<Table> {
     |                                              ^^^^^^^ required by this bound in `Transaction::<'a>::commit`

error[E0277]: the trait bound `catalog::RestCatalog: iceberg::Catalog` is not satisfied
    --> crates/catalog/rest/src/catalog.rs:1967:21
     |
1967 |             .commit(&catalog)
     |              ------ ^^^^^^^^ the trait `iceberg::Catalog` is not implemented for `catalog::RestCatalog`
     |              |
     |              required by a bound introduced by this call
     |
note: required by a bound in `Transaction::<'a>::commit`
    --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/transaction.rs:113:46
     |
113  |     pub async fn commit(self, catalog: &impl Catalog) -> Result<Table> {
     |                                              ^^^^^^^ required by this bound in `Transaction::<'a>::commit`

warning: unused import: `Catalog`
  --> crates/catalog/rest/src/catalog.rs:45:5
   |
45 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |     ^^^^^^^

Some errors have detailed explanations: E0252, E0277, E0432, E0599.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg-catalog-rest` (lib test) generated 6 warnings
error: could not compile `iceberg-catalog-rest` (lib test) due to 37 previous errors; 6 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:75
    |
390 | async fn drop_namespace(&self, namespace: &NamespaceIdent) -> Result<()> {\n    let namespace_endpoint = self.namespace_endpoint(namespac...
    |                                                                           ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:141
    |
390 | ...\n    let namespace_endpoint = self.namespace_endpoint(namespace);\n\n    let request = Request::new(Url::from_str(&namespace_endpoint...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:143
    |
390 | ...    let namespace_endpoint = self.namespace_endpoint(namespace);\n\n    let request = Request::new(Url::from_str(&namespace_endpoint)....
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:250
    |
390 | ...m_str(&namespace_endpoint).expect("Invalid URL"), Method::DELETE);\n\n    match self.execute::<ErrorResponse, NO_CONTENT>(request).awa...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:252
    |
390 | ...str(&namespace_endpoint).expect("Invalid URL"), Method::DELETE);\n\n    match self.execute::<ErrorResponse, NO_CONTENT>(request).await...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:322
    |
390 | ...  match self.execute::<ErrorResponse, NO_CONTENT>(request).await {\n        Ok(()) => Ok(()),\n        Err(reqwest::Error::Status(Stat...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:349
    |
390 | ...rResponse, NO_CONTENT>(request).await {\n        Ok(()) => Ok(()),\n        Err(reqwest::Error::Status(StatusCode::NOT_FOUND, _)) => {...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:417
    |
390 | ...        Err(reqwest::Error::Status(StatusCode::NOT_FOUND, _)) => {\n            Err(Error::from(NoSuchNamespaceError))\n        },\n  ...
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:469
    |
390 | ...OUND, _)) => {\n            Err(Error::from(NoSuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:481
    |
390 | ... {\n            Err(Error::from(NoSuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:508
    |
390 | ...from(NoSuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: unknown start of token: \
   --> crates/catalog/rest/src/catalog.rs:390:515
    |
390 | ...SuchNamespaceError))\n        },\n        Err(e) => Err(e),\n    }\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> crates/catalog/rest/src/catalog.rs:390:81
    |
390 | async fn drop_namespace(&self, namespace: &NamespaceIdent) -> Result<()> {\n    let namespace_endpoint = self.namespace_endpoint(namespac...
    |                                                                                 ^^^ expected one of 8 possible tokens

error[E0252]: the name `Request` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:33:23
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |               ------- previous import of the type `Request` here
...
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^--
   |                       |
   |                       `Request` reimported here
   |                       help: remove unnecessary import
   |
   = note: `Request` must be defined only once in the type namespace of this module

error[E0252]: the name `StatusCode` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:33:42
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |                                     ---------- previous import of the type `StatusCode` here
...
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                                          ^^^^^^^^^^--
   |                                          |
   |                                          `StatusCode` reimported here
   |                                          help: remove unnecessary import
   |
   = note: `StatusCode` must be defined only once in the type namespace of this module

error[E0252]: the name `Url` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:33:54
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |                                --- previous import of the type `Url` here
...
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                                                      ^^^ `Url` reimported here
   |
   = note: `Url` must be defined only once in the type namespace of this module

error: unexpected token, expected `;`
   --> crates/catalog/rest/src/catalog.rs:390:81
    |
390 | async fn drop_namespace(&self, namespace: &NamespaceIdent) -> Result<()> {\n    let namespace_endpoint = self.namespace_endpoint(namespac...
    |                                                                                 ^^^

error[E0432]: unresolved import `crate::catalog::_serde::NoSuchNamespaceError`
  --> crates/catalog/rest/src/catalog.rs:22:5
   |
22 | use crate::catalog::_serde::NoSuchNamespaceError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `NoSuchNamespaceError` in `catalog::_serde`

error[E0432]: unresolved import `crate::RestfulCatalog`
  --> crates/catalog/rest/src/catalog.rs:23:5
   |
23 | use crate::RestfulCatalog;
   |     ^^^^^^^--------------
   |     |      |
   |     |      help: a similar name exists in the module: `RestCatalog`
   |     no `RestfulCatalog` in the root

error[E0432]: unresolved import `crate::NamespaceIdent`
  --> crates/catalog/rest/src/catalog.rs:24:5
   |
24 | use crate::NamespaceIdent;
   |     ^^^^^^^^^^^^^^^^^^^^^ no `NamespaceIdent` in the root
   |
help: consider importing this struct instead
   |
24 | use iceberg::NamespaceIdent;
   |     ~~~~~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::Result`
  --> crates/catalog/rest/src/catalog.rs:25:5
   |
25 | use crate::Result;
   |     ^^^^^^^^^^^^^ no `Result` in the root
   |
help: consider importing one of these items instead
   |
25 | use core::fmt::Result;
   |     ~~~~~~~~~~~~~~~~~
25 | use core::result::Result;
   |     ~~~~~~~~~~~~~~~~~~~~
25 | use iceberg::Result;
   |     ~~~~~~~~~~~~~~~
25 | use reqwest::Result;
   |     ~~~~~~~~~~~~~~~
     and 5 other candidates

warning: unused imports: `Method`, `StatusCode`
  --> crates/catalog/rest/src/catalog.rs:21:24
   |
21 | use reqwest::{Request, Method, Url, StatusCode};
   |                        ^^^^^^       ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Request`, `StatusCode`, `Url`
  --> crates/catalog/rest/src/catalog.rs:33:23
   |
33 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^            ^^^^^^^^^^  ^^^

warning: unused imports: `CommitTableRequest`, `CommitTableResponse`, `CreateTableRequest`, `LoadTableResponse`
  --> crates/catalog/rest/src/catalog.rs:39:5
   |
39 |     CommitTableRequest, CommitTableResponse, CreateTableRequest, LoadTableResponse,
   |     ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: unused import: `iceberg::table::Table`
  --> crates/catalog/rest/src/catalog.rs:42:5
   |
42 | use iceberg::table::Table;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Catalog`, `TableCommit`, `TableCreation`
  --> crates/catalog/rest/src/catalog.rs:45:5
   |
45 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, TableCommit, TableCreation, TableIdent,
   |     ^^^^^^^                                               ^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused imports: `ListNamespaceResponse`, `ListTableResponse`, `NO_CONTENT`, `NamespaceSerde`, `RenameTableRequest`
  --> crates/catalog/rest/src/catalog.rs:49:35
   |
49 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                                   ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
50 |     RenameTableRequest, TokenResponse, NO_CONTENT, OK,
   |     ^^^^^^^^^^^^^^^^^^                 ^^^^^^^^^^

Some errors have detailed explanations: E0252, E0432.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg-catalog-rest` (lib) generated 6 warnings
error: could not compile `iceberg-catalog-rest` (lib) due to 21 previous errors; 6 warnings emitted
warning: build failed, waiting for other jobs to finish...

