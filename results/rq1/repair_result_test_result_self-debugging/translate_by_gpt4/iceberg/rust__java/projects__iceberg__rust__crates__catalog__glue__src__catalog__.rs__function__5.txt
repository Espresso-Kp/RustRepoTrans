Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0252]: the name `Catalog` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:5
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |               ------- previous import of the trait `Catalog` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |     ^^^^^^^--
   |     |
   |     `Catalog` reimported here
   |     help: remove unnecessary import
   |
   = note: `Catalog` must be defined only once in the type namespace of this module

error[E0252]: the name `Error` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:14
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                        ----- previous import of the type `Error` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |              ^^^^^--
   |              |
   |              `Error` reimported here
   |              help: remove unnecessary import
   |
   = note: `Error` must be defined only once in the type namespace of this module

error[E0252]: the name `ErrorKind` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:21
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                               --------- previous import of the type `ErrorKind` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                     ^^^^^^^^^--
   |                     |
   |                     `ErrorKind` reimported here
   |                     help: remove unnecessary import
   |
   = note: `ErrorKind` must be defined only once in the type namespace of this module

error[E0252]: the name `Namespace` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:32
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                          --------- previous import of the type `Namespace` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                ^^^^^^^^^--
   |                                |
   |                                `Namespace` reimported here
   |                                help: remove unnecessary import
   |
   = note: `Namespace` must be defined only once in the type namespace of this module

error[E0252]: the name `NamespaceIdent` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:43
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                     -------------- previous import of the type `NamespaceIdent` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                           ^^^^^^^^^^^^^^--
   |                                           |
   |                                           `NamespaceIdent` reimported here
   |                                           help: remove unnecessary import
   |
   = note: `NamespaceIdent` must be defined only once in the type namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:59
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                     ------ previous import of the type `Result` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                           ^^^^^^--
   |                                                           |
   |                                                           `Result` reimported here
   |                                                           help: remove unnecessary import
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `TableCommit` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:67
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                                            ----------- previous import of the type `TableCommit` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                                   ^^^^^^^^^^^--
   |                                                                   |
   |                                                                   `TableCommit` reimported here
   |                                                                   help: remove unnecessary import
   |
   = note: `TableCommit` must be defined only once in the type namespace of this module

error[E0252]: the name `TableCreation` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:80
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                             ------------- previous import of the type `TableCreation` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                                                ^^^^^^^^^^^^^-
   |                                                                                |
   |                                                                                `TableCreation` reimported here
   |                                                                                help: remove unnecessary import
   |
   = note: `TableCreation` must be defined only once in the type namespace of this module

error[E0252]: the name `TableIdent` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:33:5
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                                                         ---------- previous import of the type `TableIdent` here
...
33 |     TableIdent,
   |     ^^^^^^^^^^-
   |     |
   |     `TableIdent` reimported here
   |     help: remove unnecessary import
   |
   = note: `TableIdent` must be defined only once in the type namespace of this module

error[E0252]: the name `HashMap` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:35:11
   |
24 | use std::collections::HashMap;
   |     ------------------------- previous import of the type `HashMap` here
...
35 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^--
   |           |
   |           `HashMap` reimported here
   |           help: remove unnecessary import
   |
   = note: `HashMap` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `aws_sdk_glue::operation::create_database::Error`
  --> crates/catalog/glue/src/catalog.rs:22:5
   |
22 | use aws_sdk_glue::operation::create_database::Error as AwsError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `Error` in `operation::create_database`
   |
help: consider importing one of these items instead
   |
22 | use anyhow::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~
22 | use aws_config::retry::RetryKind::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
22 | use aws_sdk_glue::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
22 | use aws_sdk_glue::types::CrawlState::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     and 16 other candidates

error[E0433]: failed to resolve: could not find `Error` in `create_database`
   --> crates/catalog/glue/src/catalog.rs:175:63
    |
175 |                     aws_sdk_glue::operation::create_database::Error::AlreadyExists(_),
    |                                                               ^^^^^ could not find `Error` in `create_database`
    |
help: consider importing one of these items
    |
19  + use anyhow::Error;
    |
19  + use aws_sdk_glue::Error;
    |
19  + use core::error::Error;
    |
19  + use core::fmt::Error;
    |
      and 8 other candidates
help: if you import `Error`, refer to it directly
    |
175 -                     aws_sdk_glue::operation::create_database::Error::AlreadyExists(_),
175 +                     Error::AlreadyExists(_),
    |

warning: unused imports: `Catalog`, `ErrorKind`, `Error`, `NamespaceIdent`, `Namespace`, `Result`, `TableCommit`, `TableCreation`, `TableIdent`
  --> crates/catalog/glue/src/catalog.rs:32:5
   |
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |     ^^^^^^^  ^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^
33 |     TableIdent,
   |     ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `collections::HashMap`
  --> crates/catalog/glue/src/catalog.rs:35:11
   |
35 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:167:58
    |
167 |     match self.client.0.create_database().database_input(create_database_request.build()).send().await {
    |                                           -------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `DatabaseInput`, found `Result<CreateDatabaseInput, ...>`
    |                                           |
    |                                           arguments to this method are incorrect
    |
    = note: expected struct `DatabaseInput`
                 found enum `std::result::Result<CreateDatabaseInput, aws_sdk_glue::error::BuildError>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_database/builders.rs:126:12
    |
126 |     pub fn database_input(mut self, input: crate::types::DatabaseInput) -> Self {
    |            ^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:170:37
    |
170 |             Ok(convert_to_namespace(create_database_request))  // Provided convert_to_namespace does not return a Result.
    |                -------------------- ^^^^^^^^^^^^^^^^^^^^^^^ expected `&Database`, found `CreateDatabaseInputBuilder`
    |                |
    |                arguments to this function are incorrect
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0164]: expected tuple struct or tuple variant, found associated function `AwsError::from`
   --> crates/catalog/glue/src/catalog.rs:174:17
    |
174 | /                 AwsError::from(
175 | |                     aws_sdk_glue::operation::create_database::Error::AlreadyExists(_),
176 | |                 ) => {
    | |_________________^ `fn` calls are not allowed in patterns
    |
    = help: for more information, visit https://doc.rust-lang.org/book/ch18-00-patterns.html

error[E0599]: no variant or associated item named `DatabaseAlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:181:50
    |
181 |                     Err(Error::new(AwsErrorKind::DatabaseAlreadyExists(error_msg), None)) // Change error type to existing enum variant.
    |                                                  ^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<_>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:181:84
    |
181 |                     Err(Error::new(AwsErrorKind::DatabaseAlreadyExists(error_msg), None)) // Change error type to existing enum variant.
    |                         ---------- required by a bound introduced by this call     ^^^^ the trait `From<std::option::Option<_>>` is not implemented for `std::string::String`, which is required by `std::option::Option<_>: Into<std::string::String>`
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<_>` to implement `Into<std::string::String>`
note: required by a bound in `iceberg::Error::new`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:183:45
    |
183 |                 _ => Err(from_aws_sdk_error(error.to_string())),  // Convert error to string for matching function signature.
    |                          ------------------ ^^^^^^^^^^^^^^^^^ expected `SdkError<_, Response>`, found `String`
    |                          |
    |                          arguments to this function are incorrect
    |
    = note: expected enum `aws_smithy_runtime_api::client::result::SdkError<_, aws_smithy_runtime_api::http::response::Response>`
             found struct `std::string::String`
note: function defined here
   --> crates/catalog/glue/src/error.rs:24:15
    |
24  | pub(crate) fn from_aws_sdk_error<T>(error: aws_sdk_glue::error::SdkError<T>) -> Error
    |               ^^^^^^^^^^^^^^^^^^    ---------------------------------------
help: try removing the method call
    |
183 -                 _ => Err(from_aws_sdk_error(error.to_string())),  // Convert error to string for matching function signature.
183 +                 _ => Err(from_aws_sdk_error(error)),  // Convert error to string for matching function signature.
    |

Some errors have detailed explanations: E0164, E0252, E0277, E0308, E0432, E0433, E0599.
For more information about an error, try `rustc --explain E0164`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 18 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0252]: the name `Catalog` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:5
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |               ------- previous import of the trait `Catalog` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |     ^^^^^^^--
   |     |
   |     `Catalog` reimported here
   |     help: remove unnecessary import
   |
   = note: `Catalog` must be defined only once in the type namespace of this module

error[E0252]: the name `Error` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:14
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                        ----- previous import of the type `Error` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |              ^^^^^--
   |              |
   |              `Error` reimported here
   |              help: remove unnecessary import
   |
   = note: `Error` must be defined only once in the type namespace of this module

error[E0252]: the name `ErrorKind` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:21
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                               --------- previous import of the type `ErrorKind` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                     ^^^^^^^^^--
   |                     |
   |                     `ErrorKind` reimported here
   |                     help: remove unnecessary import
   |
   = note: `ErrorKind` must be defined only once in the type namespace of this module

error[E0252]: the name `Namespace` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:32
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                          --------- previous import of the type `Namespace` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                ^^^^^^^^^--
   |                                |
   |                                `Namespace` reimported here
   |                                help: remove unnecessary import
   |
   = note: `Namespace` must be defined only once in the type namespace of this module

error[E0252]: the name `NamespaceIdent` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:43
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                     -------------- previous import of the type `NamespaceIdent` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                           ^^^^^^^^^^^^^^--
   |                                           |
   |                                           `NamespaceIdent` reimported here
   |                                           help: remove unnecessary import
   |
   = note: `NamespaceIdent` must be defined only once in the type namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:59
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                     ------ previous import of the type `Result` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                           ^^^^^^--
   |                                                           |
   |                                                           `Result` reimported here
   |                                                           help: remove unnecessary import
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `TableCommit` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:67
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                                            ----------- previous import of the type `TableCommit` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                                   ^^^^^^^^^^^--
   |                                                                   |
   |                                                                   `TableCommit` reimported here
   |                                                                   help: remove unnecessary import
   |
   = note: `TableCommit` must be defined only once in the type namespace of this module

error[E0252]: the name `TableCreation` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:32:80
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                             ------------- previous import of the type `TableCreation` here
...
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                                                ^^^^^^^^^^^^^-
   |                                                                                |
   |                                                                                `TableCreation` reimported here
   |                                                                                help: remove unnecessary import
   |
   = note: `TableCreation` must be defined only once in the type namespace of this module

error[E0252]: the name `TableIdent` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:33:5
   |
21 | use iceberg::{Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCreation, TableCommit, TableIdent};
   |                                                                                                         ---------- previous import of the type `TableIdent` here
...
33 |     TableIdent,
   |     ^^^^^^^^^^-
   |     |
   |     `TableIdent` reimported here
   |     help: remove unnecessary import
   |
   = note: `TableIdent` must be defined only once in the type namespace of this module

error[E0252]: the name `HashMap` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:35:11
   |
24 | use std::collections::HashMap;
   |     ------------------------- previous import of the type `HashMap` here
...
35 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^--
   |           |
   |           `HashMap` reimported here
   |           help: remove unnecessary import
   |
   = note: `HashMap` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `aws_sdk_glue::operation::create_database::Error`
  --> crates/catalog/glue/src/catalog.rs:22:5
   |
22 | use aws_sdk_glue::operation::create_database::Error as AwsError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `Error` in `operation::create_database`
   |
help: consider importing one of these items instead
   |
22 | use anyhow::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~
22 | use aws_config::retry::RetryKind::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
22 | use aws_sdk_glue::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
22 | use aws_sdk_glue::types::CrawlState::Error as AwsError;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     and 16 other candidates

error[E0433]: failed to resolve: could not find `Error` in `create_database`
   --> crates/catalog/glue/src/catalog.rs:175:63
    |
175 |                     aws_sdk_glue::operation::create_database::Error::AlreadyExists(_),
    |                                                               ^^^^^ could not find `Error` in `create_database`
    |
help: consider importing one of these items
    |
19  + use anyhow::Error;
    |
19  + use aws_sdk_glue::Error;
    |
19  + use core::error::Error;
    |
19  + use core::fmt::Error;
    |
      and 8 other candidates
help: if you import `Error`, refer to it directly
    |
175 -                     aws_sdk_glue::operation::create_database::Error::AlreadyExists(_),
175 +                     Error::AlreadyExists(_),
    |

warning: unused imports: `Catalog`, `ErrorKind`, `Error`, `NamespaceIdent`, `Namespace`, `Result`, `TableCommit`, `TableCreation`, `TableIdent`
  --> crates/catalog/glue/src/catalog.rs:32:5
   |
32 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |     ^^^^^^^  ^^^^^  ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^
33 |     TableIdent,
   |     ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `collections::HashMap`
  --> crates/catalog/glue/src/catalog.rs:35:11
   |
35 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:167:58
    |
167 |     match self.client.0.create_database().database_input(create_database_request.build()).send().await {
    |                                           -------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `DatabaseInput`, found `Result<CreateDatabaseInput, ...>`
    |                                           |
    |                                           arguments to this method are incorrect
    |
    = note: expected struct `DatabaseInput`
                 found enum `Result<CreateDatabaseInput, aws_sdk_glue::error::BuildError>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_database/builders.rs:126:12
    |
126 |     pub fn database_input(mut self, input: crate::types::DatabaseInput) -> Self {
    |            ^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:170:37
    |
170 |             Ok(convert_to_namespace(create_database_request))  // Provided convert_to_namespace does not return a Result.
    |                -------------------- ^^^^^^^^^^^^^^^^^^^^^^^ expected `&Database`, found `CreateDatabaseInputBuilder`
    |                |
    |                arguments to this function are incorrect
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0164]: expected tuple struct or tuple variant, found associated function `AwsError::from`
   --> crates/catalog/glue/src/catalog.rs:174:17
    |
174 | /                 AwsError::from(
175 | |                     aws_sdk_glue::operation::create_database::Error::AlreadyExists(_),
176 | |                 ) => {
    | |_________________^ `fn` calls are not allowed in patterns
    |
    = help: for more information, visit https://doc.rust-lang.org/book/ch18-00-patterns.html

error[E0599]: no variant or associated item named `DatabaseAlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:181:50
    |
181 |                     Err(Error::new(AwsErrorKind::DatabaseAlreadyExists(error_msg), None)) // Change error type to existing enum variant.
    |                                                  ^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<_>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:181:84
    |
181 |                     Err(Error::new(AwsErrorKind::DatabaseAlreadyExists(error_msg), None)) // Change error type to existing enum variant.
    |                         ---------- required by a bound introduced by this call     ^^^^ the trait `From<std::option::Option<_>>` is not implemented for `std::string::String`, which is required by `std::option::Option<_>: Into<std::string::String>`
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<_>` to implement `Into<std::string::String>`
note: required by a bound in `iceberg::Error::new`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:183:45
    |
183 |                 _ => Err(from_aws_sdk_error(error.to_string())),  // Convert error to string for matching function signature.
    |                          ------------------ ^^^^^^^^^^^^^^^^^ expected `SdkError<_, Response>`, found `String`
    |                          |
    |                          arguments to this function are incorrect
    |
    = note: expected enum `aws_smithy_runtime_api::client::result::SdkError<_, aws_smithy_runtime_api::http::response::Response>`
             found struct `std::string::String`
note: function defined here
   --> crates/catalog/glue/src/error.rs:24:15
    |
24  | pub(crate) fn from_aws_sdk_error<T>(error: aws_sdk_glue::error::SdkError<T>) -> Error
    |               ^^^^^^^^^^^^^^^^^^    ---------------------------------------
help: try removing the method call
    |
183 -                 _ => Err(from_aws_sdk_error(error.to_string())),  // Convert error to string for matching function signature.
183 +                 _ => Err(from_aws_sdk_error(error)),  // Convert error to string for matching function signature.
    |

Some errors have detailed explanations: E0164, E0252, E0277, E0308, E0432, E0433, E0599.
For more information about an error, try `rustc --explain E0164`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 18 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

