Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0277]: the trait bound `Vec<&dyn rusqlite::ToSql>: rusqlite::Params` is not satisfied
    --> src/chat.rs:3401:9
     |
3399 |     let res = context.inner.sql.query_map(
     |                                 --------- required by a bound introduced by this call
3400 |         "SELECT id FROM msgs WHERE chat_id=? AND chat_id != ? AND (type=? OR type=? OR type=?) ORDER BY timestamp, id;",
3401 |         params,
     |         ^^^^^^ the trait `rusqlite::Params` is not implemented for `Vec<&dyn rusqlite::ToSql>`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `Sql::query_map`
    --> src/sql.rs:428:22
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_map`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:3401:9
     |
3399 |     let res = context.inner.sql.query_map(
     |                                 --------- required by a bound introduced by this call
3400 |         "SELECT id FROM msgs WHERE chat_id=? AND chat_id != ? AND (type=? OR type=? OR type=?) ORDER BY timestamp, id;",
3401 |         params,
     |         ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `Vec<&dyn rusqlite::ToSql>: std::marker::Send`
     = note: required for `&dyn rusqlite::ToSql` to implement `std::marker::Send`
     = note: 1 redundant requirement hidden
     = note: required for `Unique<&dyn rusqlite::ToSql>` to implement `std::marker::Send`
note: required because it appears within the type `smallvec::alloc::raw_vec::RawVec<&dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:61:19
     |
61   | pub(crate) struct RawVec<T, A: Allocator = Global> {
     |                   ^^^^^^
note: required because it appears within the type `Vec<&dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:12
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |            ^^^
note: required by a bound in `Sql::query_map`
    --> src/sql.rs:428:41
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_map`

error[E0277]: `?` couldn't convert the error to `rusqlite::Error`
    --> src/chat.rs:3404:44
     |
3404 |             Ok(MsgId::new(msg_id.try_into()?))
     |                                            ^ the trait `From<TryFromIntError>` is not implemented for `rusqlite::Error`, which is required by `std::result::Result<_, rusqlite::Error>: FromResidual<std::result::Result<Infallible, _>>`
     |
     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
     = help: the following other types implement trait `From<T>`:
               <rusqlite::Error as From<FromSqlError>>
               <rusqlite::Error as From<std::ffi::NulError>>
               <rusqlite::Error as From<std::str::Utf8Error>>
     = note: required for `std::result::Result<_, rusqlite::Error>` to implement `FromResidual<std::result::Result<Infallible, TryFromIntError>>`

error[E0277]: the trait bound `Vec<&dyn rusqlite::ToSql>: rusqlite::Params` is not satisfied
    --> src/chat.rs:3401:9
     |
3399 |     let res = context.inner.sql.query_map(
     |                                 --------- required by a bound introduced by this call
3400 |         "SELECT id FROM msgs WHERE chat_id=? AND chat_id != ? AND (type=? OR type=? OR type=?) ORDER BY timestamp, id;",
3401 |         params,
     |         ^^^^^^ the trait `rusqlite::Params` is not implemented for `Vec<&dyn rusqlite::ToSql>`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `sql::Sql::query_map`
    --> src/sql.rs:428:22
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_map`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:3401:9
     |
3399 |     let res = context.inner.sql.query_map(
     |                                 --------- required by a bound introduced by this call
3400 |         "SELECT id FROM msgs WHERE chat_id=? AND chat_id != ? AND (type=? OR type=? OR type=?) ORDER BY timestamp, id;",
3401 |         params,
     |         ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `Vec<&dyn rusqlite::ToSql>: std::marker::Send`
     = note: required for `&dyn rusqlite::ToSql` to implement `std::marker::Send`
     = note: 1 redundant requirement hidden
     = note: required for `Unique<&dyn rusqlite::ToSql>` to implement `std::marker::Send`
note: required because it appears within the type `smallvec::alloc::raw_vec::RawVec<&dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:61:19
     |
61   | pub(crate) struct RawVec<T, A: Allocator = Global> {
     |                   ^^^^^^
note: required because it appears within the type `Vec<&dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:12
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |            ^^^
note: required by a bound in `sql::Sql::query_map`
    --> src/sql.rs:428:41
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_map`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 3 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

