Fail
file path is :
projects/deltachat-core/rust/src/context.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: unknown start of token: \
   --> src/context.rs:671:67
    |
671 | pub(crate) async fn alloc_ongoing(&self) -> Result<Receiver<()>> {\n    let context = &self.inner;\n\n    let mut state = context.running...
    |                                                                   ^

error: unknown start of token: \
   --> src/context.rs:671:99
    |
671 | pub(crate) async fn alloc_ongoing(&self) -> Result<Receiver<()>> {\n    let context = &self.inner;\n\n    let mut state = context.running...
    |                                                                                                   ^

error: unknown start of token: \
   --> src/context.rs:671:101
    |
671 | pub(crate) async fn alloc_ongoing(&self) -> Result<Receiver<()>> {\n    let context = &self.inner;\n\n    let mut state = context.running...
    |                                                                                                     ^

error: unknown start of token: \
   --> src/context.rs:671:159
    |
671 | ...inner;\n\n    let mut state = context.running_state.write().await;\n    match &*state {\n        RunningState::Running { .. } => {\n  ...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:180
    |
671 | ... state = context.running_state.write().await;\n    match &*state {\n        RunningState::Running { .. } => {\n            context.emi...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:223
    |
671 | ...t;\n    match &*state {\n        RunningState::Running { .. } => {\n            context.emit_event(EventType::Warning,"There is alread...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:328
    |
671 | ...ype::Warning,"There is already another ongoing process running.");\n            bail!("Cannot allocate a new process");\n        }\n  ...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:381
    |
671 | ...s running.");\n            bail!("Cannot allocate a new process");\n        }\n        _ => {}\n    }\n\n    let (sender, receiver) = ...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:392
    |
671 | ...);\n            bail!("Cannot allocate a new process");\n        }\n        _ => {}\n    }\n\n    let (sender, receiver) = channel::bo...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:409
    |
671 | ...ail!("Cannot allocate a new process");\n        }\n        _ => {}\n    }\n\n    let (sender, receiver) = channel::bounded(1);\n    *s...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:416
    |
671 | ...annot allocate a new process");\n        }\n        _ => {}\n    }\n\n    let (sender, receiver) = channel::bounded(1);\n    *state = ...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:418
    |
671 | ...not allocate a new process");\n        }\n        _ => {}\n    }\n\n    let (sender, receiver) = channel::bounded(1);\n    *state = Ru...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:469
    |
671 | ... => {}\n    }\n\n    let (sender, receiver) = channel::bounded(1);\n    *state = RunningState::Running {\n        cancel_sender: sende...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:507
    |
671 | ...iver) = channel::bounded(1);\n    *state = RunningState::Running {\n        cancel_sender: sender.clone(),\n    };\n  \n    Ok(receive...
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:547
    |
671 | ... = RunningState::Running {\n        cancel_sender: sender.clone(),\n    };\n  \n    Ok(receiver)\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:555
    |
671 | ...ngState::Running {\n        cancel_sender: sender.clone(),\n    };\n  \n    Ok(receiver)\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:559
    |
671 | ...ate::Running {\n        cancel_sender: sender.clone(),\n    };\n  \n    Ok(receiver)\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/context.rs:671:577
    |
671 | ...      cancel_sender: sender.clone(),\n    };\n  \n    Ok(receiver)\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> src/context.rs:671:73
    |
671 | pub(crate) async fn alloc_ongoing(&self) -> Result<Receiver<()>> {\n    let context = &self.inner;\n\n    let mut state = context.running...
    |                                                                         ^^^ expected one of 8 possible tokens

error: could not compile `deltachat` (lib) due to 19 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 19 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

