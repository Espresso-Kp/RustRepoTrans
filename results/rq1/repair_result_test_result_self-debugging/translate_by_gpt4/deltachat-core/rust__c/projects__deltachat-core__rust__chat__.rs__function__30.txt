Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: unexpected token: `...`
   --> src/chat.rs:765:5
    |
765 |     ...
    |     ^^^
    |
help: use `..` for an exclusive range
    |
765 |     ..
    |
help: or `..=` for an inclusive range
    |
765 |     ..=
    |

error: unexpected token: `...`
   --> src/chat.rs:770:5
    |
770 |     ...
    |     ^^^
    |
help: use `..` for an exclusive range
    |
770 |     ..
    |
help: or `..=` for an inclusive range
    |
770 |     ..=
    |

error: unexpected token: `...`
   --> src/chat.rs:774:5
    |
774 |     ...
    |     ^^^
    |
help: use `..` for an exclusive range
    |
774 |     ..
    |
help: or `..=` for an inclusive range
    |
774 |     ..=
    |

error: unexpected token: `...`
   --> src/chat.rs:776:5
    |
776 |     ...
    |     ^^^
    |
help: use `..` for an exclusive range
    |
776 |     ..
    |
help: or `..=` for an inclusive range
    |
776 |     ..=
    |

error: expected expression, found `let` statement
   --> src/chat.rs:777:5
    |
777 |     let job_id = (self.0 as i64).into();
    |     ^^^
    |
    = note: only supported directly in conditions of `if` and `while` expressions

error: unexpected token: `...`
   --> src/chat.rs:781:5
    |
781 |     ...
    |     ^^^
    |
help: use `..` for an exclusive range
    |
781 |     ..
    |
help: or `..=` for an inclusive range
    |
781 |     ..=
    |

error[E0425]: cannot find function `delete_msgs` in this scope
   --> src/chat.rs:775:5
    |
775 |     delete_msgs(context, &context.get_msgs(self, 0, None, 0).await?).await?;
    |     ^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::message::delete_msgs;
    |

error[E0433]: failed to resolve: use of undeclared crate or module `job`
   --> src/chat.rs:778:28
    |
778 |     if context.kill_action(job::Action::Housekeeping, job_id).await {
    |                            ^^^ use of undeclared crate or module `job`
    |
help: consider importing this struct
    |
3   + use reqwest::redirect::Action;
    |
help: if you import `Action`, refer to it directly
    |
778 -     if context.kill_action(job::Action::Housekeeping, job_id).await {
778 +     if context.kill_action(Action::Housekeeping, job_id).await {
    |

error[E0433]: failed to resolve: use of undeclared crate or module `job`
   --> src/chat.rs:779:36
    |
779 |         job::add(context, Job::new(job::Action::Housekeeping, job_id, "", 0)).await;
    |                                    ^^^ use of undeclared crate or module `job`
    |
help: consider importing this struct
    |
3   + use reqwest::redirect::Action;
    |
help: if you import `Action`, refer to it directly
    |
779 -         job::add(context, Job::new(job::Action::Housekeeping, job_id, "", 0)).await;
779 +         job::add(context, Job::new(Action::Housekeeping, job_id, "", 0)).await;
    |

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:768:51
    |
768 |         .execute("DELETE FROM chats WHERE id=?;", params![self.0])
    |          -------                                  ^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |          |
    |          required by a bound introduced by this call
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:772:65
    |
772 |         .execute("DELETE FROM chats_contacts WHERE chat_id=?;", params![self.0])
    |          ------- required by a bound introduced by this call    ^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0599]: no method named `get_msgs` found for reference `&context::Context` in the current scope
   --> src/chat.rs:775:35
    |
775 |     delete_msgs(context, &context.get_msgs(self, 0, None, 0).await?).await?;
    |                                   ^^^^^^^^ help: there is a method with a similar name: `get_next_msgs`

error[E0599]: no method named `kill_action` found for reference `&context::Context` in the current scope
   --> src/chat.rs:778:16
    |
778 |     if context.kill_action(job::Action::Housekeeping, job_id).await {
    |                ^^^^^^^^^^^ method not found in `&Context`

error[E0433]: failed to resolve: use of undeclared crate or module `job`
   --> src/chat.rs:779:9
    |
779 |         job::add(context, Job::new(job::Action::Housekeeping, job_id, "", 0)).await;
    |         ^^^ use of undeclared crate or module `job`

error[E0433]: failed to resolve: use of undeclared type `Job`
   --> src/chat.rs:779:27
    |
779 |         job::add(context, Job::new(job::Action::Housekeeping, job_id, "", 0)).await;
    |                           ^^^ use of undeclared type `Job`

error[E0308]: mismatched types
   --> src/chat.rs:781:5
    |
781 | /     ...
782 | |     Ok(())
    | |__________^ expected `Result<(), Error>`, found `RangeToInclusive<Result<(), _>>`
    |
    = note: expected enum `std::result::Result<_, anyhow::Error>`
             found struct `RangeToInclusive<std::result::Result<_, _>>`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:768:51
    |
768 |         .execute("DELETE FROM chats WHERE id=?;", params![self.0])
    |          -------                                  ^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |          |
    |          required by a bound introduced by this call
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:772:65
    |
772 |         .execute("DELETE FROM chats_contacts WHERE chat_id=?;", params![self.0])
    |          ------- required by a bound introduced by this call    ^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 16 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 16 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

