Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: unknown start of token: \
   --> src/contact.rs:965:85
    |
965 | pub async fn add_address_book(context: &Context, addr_book: &str) -> Result<usize> {\n    if !context.sql.is_open() {\n        warn!(cont...
    |                                                                                     ^

error: unknown start of token: \
   --> src/contact.rs:965:118
    |
965 | pub async fn add_address_book(context: &Context, addr_book: &str) -> Result<usize> {\n    if !context.sql.is_open() {\n        warn!(cont...
    |                                                                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:184
    |
965 | ...\n        warn!(context, "Not ready, cannot add to address book");\n        return Ok(0);\n    }\n\n    let book: Vec<(&str, &str)> = ...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:207
    |
965 | ..., "Not ready, cannot add to address book");\n        return Ok(0);\n    }\n\n    let book: Vec<(&str, &str)> = split_address_book(addr...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:214
    |
965 | ...ready, cannot add to address book");\n        return Ok(0);\n    }\n\n    let book: Vec<(&str, &str)> = split_address_book(addr_book);...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:216
    |
965 | ...ady, cannot add to address book");\n        return Ok(0);\n    }\n\n    let book: Vec<(&str, &str)> = split_address_book(addr_book);\n...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:282
    |
965 | ...\n    let book: Vec<(&str, &str)> = split_address_book(addr_book);\n    let mut modify_cnt = 0;\n\n    for (name, addr) in book {\n   ...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:311
    |
965 | ...tr)> = split_address_book(addr_book);\n    let mut modify_cnt = 0;\n\n    for (name, addr) in book {\n        let name = contact_tools...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:313
    |
965 | ...)> = split_address_book(addr_book);\n    let mut modify_cnt = 0;\n\n    for (name, addr) in book {\n        let name = contact_tools::...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:345
    |
965 | ...k);\n    let mut modify_cnt = 0;\n\n    for (name, addr) in book {\n        let name = contact_tools::normalize_name(name);\n        l...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:402
    |
965 | ...in book {\n        let name = contact_tools::normalize_name(name);\n        let addr = ContactAddress::new(addr)?;\n        match add_...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:450
    |
965 | ...malize_name(name);\n        let addr = ContactAddress::new(addr)?;\n        match add_or_lookup(context, &name, &addr, Origin::Address...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:531
    |
965 | ... add_or_lookup(context, &name, &addr, Origin::AddressBook).await {\n            Ok((_, Modifier::Modified)) => modify_cnt += 1,\n     ...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:592
    |
965 | ...ait {\n            Ok((_, Modifier::Modified)) => modify_cnt += 1,\n            _ => {}\n        };\n    }\n\n    if modify_cnt > 0 {\...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:613
    |
965 | ...((_, Modifier::Modified)) => modify_cnt += 1,\n            _ => {}\n        };\n    }\n\n    if modify_cnt > 0 {\n        context.emit...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:625
    |
965 | ...r::Modified)) => modify_cnt += 1,\n            _ => {}\n        };\n    }\n\n    if modify_cnt > 0 {\n        context.emit_event(Event...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:632
    |
965 | ...fied)) => modify_cnt += 1,\n            _ => {}\n        };\n    }\n\n    if modify_cnt > 0 {\n        context.emit_event(EventType::C...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:634
    |
965 | ...ed)) => modify_cnt += 1,\n            _ => {}\n        };\n    }\n\n    if modify_cnt > 0 {\n        context.emit_event(EventType::Con...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:659
    |
965 | ...n            _ => {}\n        };\n    }\n\n    if modify_cnt > 0 {\n        context.emit_event(EventType::ContactsChanged(None));\n   ...
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:722
    |
965 | ...0 {\n        context.emit_event(EventType::ContactsChanged(None));\n    }\n\n    Ok(modify_cnt)\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:729
    |
965 | ...      context.emit_event(EventType::ContactsChanged(None));\n    }\n\n    Ok(modify_cnt)\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:731
    |
965 | ...    context.emit_event(EventType::ContactsChanged(None));\n    }\n\n    Ok(modify_cnt)\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/contact.rs:965:751
    |
965 | ...nt(EventType::ContactsChanged(None));\n    }\n\n    Ok(modify_cnt)\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `if`
   --> src/contact.rs:965:91
    |
965 | pub async fn add_address_book(context: &Context, addr_book: &str) -> Result<usize> {\n    if !context.sql.is_open() {\n        warn!(cont...
    |                                                                                           ^^ expected one of 8 possible tokens

error: could not compile `deltachat` (lib) due to 24 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 24 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

