Fail
file path is :
projects/deltachat-core/rust/src/param.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: unknown start of token: \
   --> src/param.rs:289:71
    |
289 | pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {\n    let value_string = value.to_string();\n\n    if key == 0 || v...
    |                                                                       ^

error: unknown start of token: \
   --> src/param.rs:289:114
    |
289 | pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {\n    let value_string = value.to_string();\n\n    if key == 0 || v...
    |                                                                                                                  ^

error: unknown start of token: \
   --> src/param.rs:289:116
    |
289 | pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {\n    let value_string = value.to_string();\n\n    if key == 0 || v...
    |                                                                                                                    ^

error: unknown start of token: \
   --> src/param.rs:289:162
    |
289 | ...value.to_string();\n\n    if key == 0 || value_string.is_empty() {\n        return self;\n    }\n\n    if let Some(old_value) = self.i...
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:184
    |
289 | ...    if key == 0 || value_string.is_empty() {\n        return self;\n    }\n\n    if let Some(old_value) = self.inner.get_mut(&key) {\n...
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:191
    |
289 | ...key == 0 || value_string.is_empty() {\n        return self;\n    }\n\n    if let Some(old_value) = self.inner.get_mut(&key) {\n       ...
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:193
    |
289 | ...y == 0 || value_string.is_empty() {\n        return self;\n    }\n\n    if let Some(old_value) = self.inner.get_mut(&key) {\n        *...
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:250
    |
289 | ...\n    }\n\n    if let Some(old_value) = self.inner.get_mut(&key) {\n        *old_value = value_string;\n    } else {\n        self.inn...
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:286
    |
289 | ...) = self.inner.get_mut(&key) {\n        *old_value = value_string;\n    } else {\n        self.inner.insert(key, value_string);\n    }...
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:300
    |
289 | ....get_mut(&key) {\n        *old_value = value_string;\n    } else {\n        self.inner.insert(key, value_string);\n    }\n\n    self\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:347
    |
289 | ...ring;\n    } else {\n        self.inner.insert(key, value_string);\n    }\n\n    self\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:354
    |
289 | ...    } else {\n        self.inner.insert(key, value_string);\n    }\n\n    self\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:356
    |
289 | ...  } else {\n        self.inner.insert(key, value_string);\n    }\n\n    self\n}
    |                                                                      ^

error: unknown start of token: \
   --> src/param.rs:289:366
    |
289 | ...\n        self.inner.insert(key, value_string);\n    }\n\n    self\n}
    |                                                                      ^

error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found keyword `let`
   --> src/param.rs:289:77
    |
289 | pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {\n    let value_string = value.to_string();\n\n    if key == 0 || v...
    |                                                                             ^^^ expected one of 8 possible tokens

error: could not compile `deltachat` (lib) due to 15 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 15 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

