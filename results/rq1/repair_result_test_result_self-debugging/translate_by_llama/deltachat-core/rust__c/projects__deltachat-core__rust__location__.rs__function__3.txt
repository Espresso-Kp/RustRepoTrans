Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `stock_str` is defined multiple times
  --> src/location.rs:40:30
   |
22 | use crate::stock_str;
   |     ---------------- previous import of the module `stock_str` here
...
40 | use crate::{chatlist_events, stock_str};
   |                              ^^^^^^^^^ `stock_str` reimported here
   |
   = note: `stock_str` must be defined only once in the type namespace of this module

error[E0252]: the name `ChatId` is defined multiple times
  --> src/location.rs:32:25
   |
20 | use crate::chat::ChatId;
   |     ------------------- previous import of the type `ChatId` here
...
32 | use crate::chat::{self, ChatId};
   |                         ^^^^^^ `ChatId` reimported here
   |
   = note: `ChatId` must be defined only once in the type namespace of this module

error[E0252]: the name `Message` is defined multiple times
  --> src/location.rs:37:22
   |
19 | use crate::message::Message;
   |     ----------------------- previous import of the type `Message` here
...
37 | use crate::message::{Message, MsgId, Viewtype};
   |                      ^^^^^^^--
   |                      |
   |                      `Message` reimported here
   |                      help: remove unnecessary import
   |
   = note: `Message` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `std::collections::Vec`
  --> src/location.rs:17:5
   |
17 | use std::collections::Vec;
   |     ^^^^^^^^^^^^^^^^^^^^^ no `Vec` in `collections`
   |
help: consider importing this struct instead
   |
17 | use std::vec::Vec;
   |     ~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::chatlist_events::chatlist_events`
  --> src/location.rs:21:5
   |
21 | use crate::chatlist_events::chatlist_events;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `chatlist_events` in `events::chatlist_events`
   |
help: consider importing this module through its public re-export instead
   |
21 | use crate::chatlist_events;
   |     ~~~~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `super`
  --> src/location.rs:23:5
   |
23 | use super;
   |     ^^^^^ no `super` in the root

error[E0603]: module `time` is private
  --> src/location.rs:14:16
   |
14 | use std::time::time;
   |                ^^^^ private module
   |
note: the module `time` is defined here
  --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/time.rs:40:5
   |
40 | use crate::sys::time;
   |     ^^^^^^^^^^^^^^^^
help: import `time` directly
   |
14 | use std::sys::pal::unix::time;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unused import: `std::mem`
  --> src/location.rs:15:5
   |
15 | use std::mem;
   |     ^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::io`
  --> src/location.rs:16:5
   |
16 | use std::io;
   |     ^^^^^^^

warning: unused import: `chrono::NaiveDateTime`
  --> src/location.rs:18:5
   |
18 | use chrono::NaiveDateTime;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChatId`
  --> src/location.rs:32:25
   |
32 | use crate::chat::{self, ChatId};
   |                         ^^^^^^

warning: unused import: `Message`
  --> src/location.rs:37:22
   |
37 | use crate::message::{Message, MsgId, Viewtype};
   |                      ^^^^^^^

warning: unused import: `stock_str`
  --> src/location.rs:40:30
   |
40 | use crate::{chatlist_events, stock_str};
   |                              ^^^^^^^^^

error[E0432]: unresolved import `crate::chatlist_events::chatlist_events`
  --> src/location.rs:21:5
   |
21 | use crate::chatlist_events::chatlist_events;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `chatlist_events` in `events::chatlist_events`
   |
help: a similar name exists in the module
   |
21 | use crate::chatlist_events::test_chatlist_events;
   |                             ~~~~~~~~~~~~~~~~~~~~
help: consider importing this module through its public re-export instead
   |
21 | use crate::chatlist_events;
   |     ~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `parse` found for struct `Kml` in the current scope
    --> src/mimeparser.rs:1246:45
     |
1246 |                 let parsed = location::Kml::parse(decoded_data)
     |                                             ^^^^^ function or associated item not found in `Kml`
     |
    ::: src/location.rs:88:1
     |
88   | pub struct Kml {
     | -------------- function or associated item `parse` not found for this struct
     |
note: if you're trying to build a new `Kml`, consider using `Kml::new` which returns `Kml`
    --> src/location.rs:115:5
     |
115  |     pub fn new() -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `parse`, perhaps you need to implement one of them:
             candidate #1: `nom::internal::Parser`
             candidate #2: `nom::sequence::Tuple`
             candidate #3: `time::parsing::parsable::sealed::Sealed`
             candidate #4: `pest::parser::Parser`
             candidate #5: `netlink_packet_utils::traits::Parseable`
             candidate #6: `winnow::parser::Parser`
             candidate #7: `object::coff::CoffHeader`
             candidate #8: `object::read::elf::FileHeader`
             candidate #9: `object::read::macho::MachHeader`
             candidate #10: `object::read::pe::ImageNtHeaders`
             candidate #11: `object::read::xcoff::FileHeader`

error[E0599]: no function or associated item named `parse` found for struct `location::Kml` in the current scope
    --> src/mimeparser.rs:1246:45
     |
1246 |                 let parsed = location::Kml::parse(decoded_data)
     |                                             ^^^^^ function or associated item not found in `Kml`
     |
    ::: src/location.rs:88:1
     |
88   | pub struct Kml {
     | -------------- function or associated item `parse` not found for this struct
     |
note: if you're trying to build a new `location::Kml`, consider using `location::Kml::new` which returns `location::Kml`
    --> src/location.rs:115:5
     |
115  |     pub fn new() -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `parse`, perhaps you need to implement one of them:
             candidate #1: `nom::internal::Parser`
             candidate #2: `nom::sequence::Tuple`
             candidate #3: `time::parsing::parsable::sealed::Sealed`
             candidate #4: `object::read::coff::file::CoffHeader`
             candidate #5: `object::read::elf::file::FileHeader`
             candidate #6: `object::read::macho::file::MachHeader`
             candidate #7: `object::read::pe::file::ImageNtHeaders`
             candidate #8: `object::read::xcoff::file::FileHeader`
             candidate #9: `pest::parser::Parser`
             candidate #10: `netlink_packet_utils::traits::Parseable`
             candidate #11: `winnow::parser::Parser`
             candidate #12: `clap::Parser`
             candidate #13: `clap::builder::TypedValueParser`
             candidate #14: `ciborium_ll::seg::Parser`

Some errors have detailed explanations: E0252, E0432, E0599, E0603.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 6 warnings
error: could not compile `deltachat` (lib) due to 8 previous errors; 6 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no function or associated item named `parse` found for struct `location::Kml` in the current scope
   --> src/location.rs:885:24
    |
88  | pub struct Kml {
    | -------------- function or associated item `parse` not found for this struct
...
885 |         let kml = Kml::parse(xml).expect("parsing failed");
    |                        ^^^^^ function or associated item not found in `Kml`
    |
note: if you're trying to build a new `location::Kml`, consider using `location::Kml::new` which returns `location::Kml`
   --> src/location.rs:115:5
    |
115 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `parse`, perhaps you need to implement one of them:
            candidate #1: `nom::internal::Parser`
            candidate #2: `nom::sequence::Tuple`
            candidate #3: `time::parsing::parsable::sealed::Sealed`
            candidate #4: `object::read::coff::file::CoffHeader`
            candidate #5: `object::read::elf::file::FileHeader`
            candidate #6: `object::read::macho::file::MachHeader`
            candidate #7: `object::read::pe::file::ImageNtHeaders`
            candidate #8: `object::read::xcoff::file::FileHeader`
            candidate #9: `pest::parser::Parser`
            candidate #10: `netlink_packet_utils::traits::Parseable`
            candidate #11: `winnow::parser::Parser`
            candidate #12: `clap::Parser`
            candidate #13: `clap::builder::TypedValueParser`
            candidate #14: `ciborium_ll::seg::Parser`

error[E0599]: no function or associated item named `parse` found for struct `location::Kml` in the current scope
   --> src/location.rs:913:22
    |
88  | pub struct Kml {
    | -------------- function or associated item `parse` not found for this struct
...
913 |         assert!(Kml::parse(xml).is_err());
    |                      ^^^^^ function or associated item not found in `Kml`
    |
note: if you're trying to build a new `location::Kml`, consider using `location::Kml::new` which returns `location::Kml`
   --> src/location.rs:115:5
    |
115 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `parse`, perhaps you need to implement one of them:
            candidate #1: `nom::internal::Parser`
            candidate #2: `nom::sequence::Tuple`
            candidate #3: `time::parsing::parsable::sealed::Sealed`
            candidate #4: `object::read::coff::file::CoffHeader`
            candidate #5: `object::read::elf::file::FileHeader`
            candidate #6: `object::read::macho::file::MachHeader`
            candidate #7: `object::read::pe::file::ImageNtHeaders`
            candidate #8: `object::read::xcoff::file::FileHeader`
            candidate #9: `pest::parser::Parser`
            candidate #10: `netlink_packet_utils::traits::Parseable`
            candidate #11: `winnow::parser::Parser`
            candidate #12: `clap::Parser`
            candidate #13: `clap::builder::TypedValueParser`
            candidate #14: `ciborium_ll::seg::Parser`

error[E0599]: no function or associated item named `parse` found for struct `location::Kml` in the current scope
   --> src/location.rs:921:24
    |
88  | pub struct Kml {
    | -------------- function or associated item `parse` not found for this struct
...
921 |         let kml = Kml::parse(xml.as_bytes()).expect("parsing failed");
    |                        ^^^^^ function or associated item not found in `Kml`
    |
note: if you're trying to build a new `location::Kml`, consider using `location::Kml::new` which returns `location::Kml`
   --> src/location.rs:115:5
    |
115 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `parse`, perhaps you need to implement one of them:
            candidate #1: `nom::internal::Parser`
            candidate #2: `nom::sequence::Tuple`
            candidate #3: `time::parsing::parsable::sealed::Sealed`
            candidate #4: `object::read::coff::file::CoffHeader`
            candidate #5: `object::read::elf::file::FileHeader`
            candidate #6: `object::read::macho::file::MachHeader`
            candidate #7: `object::read::pe::file::ImageNtHeaders`
            candidate #8: `object::read::xcoff::file::FileHeader`
            candidate #9: `pest::parser::Parser`
            candidate #10: `netlink_packet_utils::traits::Parseable`
            candidate #11: `winnow::parser::Parser`
            candidate #12: `clap::Parser`
            candidate #13: `clap::builder::TypedValueParser`
            candidate #14: `ciborium_ll::seg::Parser`

warning: `deltachat` (lib test) generated 6 warnings (6 duplicates)
error: could not compile `deltachat` (lib test) due to 11 previous errors; 6 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

