Fail
file path is :
projects/deltachat-core/rust/src/pgp.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:157:22
    |
157 |     let mut pubkey = composed::PublicKeyParamsBuilder::new()
    |                      ^^^^^^^^ use of undeclared crate or module `composed`

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:173:22
    |
173 |     let mut pubmem = composed::Memory::new();
    |                      ^^^^^^^^ use of undeclared crate or module `composed`

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:174:22
    |
174 |     let mut secmem = composed::Memory::new();
    |                      ^^^^^^^^ use of undeclared crate or module `composed`

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:150:22
    |
150 |     let mut seckey = composed::SecretKeyParamsBuilder::new()
    |                      ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this struct
    |
3   + use pgp::SecretKeyParamsBuilder;
    |
help: if you import `SecretKeyParamsBuilder`, refer to it directly
    |
150 -     let mut seckey = composed::SecretKeyParamsBuilder::new()
150 +     let mut seckey = SecretKeyParamsBuilder::new()
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:151:18
    |
151 |        .key_type(composed::KeyType::RSA)
    |                  ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this enum
    |
3   + use pgp::KeyType;
    |
help: if you import `KeyType`, refer to it directly
    |
151 -        .key_type(composed::KeyType::RSA)
151 +        .key_type(KeyType::RSA)
    |

error[E0433]: failed to resolve: use of undeclared crate or module `crypto`
   --> src/pgp.rs:153:24
    |
153 |        .hash_algorithm(crypto::hash::HashAlgorithm::SHA1)
    |                        ^^^^^^ use of undeclared crate or module `crypto`
    |
help: consider importing this enum
    |
3   + use pgp::crypto::hash::HashAlgorithm;
    |
help: if you import `HashAlgorithm`, refer to it directly
    |
153 -        .hash_algorithm(crypto::hash::HashAlgorithm::SHA1)
153 +        .hash_algorithm(HashAlgorithm::SHA1)
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:158:18
    |
158 |        .key_type(composed::KeyType::RSA)
    |                  ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this enum
    |
3   + use pgp::KeyType;
    |
help: if you import `KeyType`, refer to it directly
    |
158 -        .key_type(composed::KeyType::RSA)
158 +        .key_type(KeyType::RSA)
    |

error[E0433]: failed to resolve: use of undeclared crate or module `crypto`
   --> src/pgp.rs:160:24
    |
160 |        .hash_algorithm(crypto::hash::HashAlgorithm::SHA1)
    |                        ^^^^^^ use of undeclared crate or module `crypto`
    |
help: consider importing this enum
    |
3   + use pgp::crypto::hash::HashAlgorithm;
    |
help: if you import `HashAlgorithm`, refer to it directly
    |
160 -        .hash_algorithm(crypto::hash::HashAlgorithm::SHA1)
160 +        .hash_algorithm(HashAlgorithm::SHA1)
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:164:22
    |
164 |     let mut subkey = composed::SecretKeyParamsBuilder::new()
    |                      ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this struct
    |
3   + use pgp::SecretKeyParamsBuilder;
    |
help: if you import `SecretKeyParamsBuilder`, refer to it directly
    |
164 -     let mut subkey = composed::SecretKeyParamsBuilder::new()
164 +     let mut subkey = SecretKeyParamsBuilder::new()
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:165:18
    |
165 |        .key_type(composed::KeyType::RSA)
    |                  ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this enum
    |
3   + use pgp::KeyType;
    |
help: if you import `KeyType`, refer to it directly
    |
165 -        .key_type(composed::KeyType::RSA)
165 +        .key_type(KeyType::RSA)
    |

error[E0433]: failed to resolve: use of undeclared crate or module `crypto`
   --> src/pgp.rs:167:24
    |
167 |        .hash_algorithm(crypto::hash::HashAlgorithm::SHA1)
    |                        ^^^^^^ use of undeclared crate or module `crypto`
    |
help: consider importing this enum
    |
3   + use pgp::crypto::hash::HashAlgorithm;
    |
help: if you import `HashAlgorithm`, refer to it directly
    |
167 -        .hash_algorithm(crypto::hash::HashAlgorithm::SHA1)
167 +        .hash_algorithm(HashAlgorithm::SHA1)
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:175:22
    |
175 |     let mut pubout = composed::Output::new();
    |                      ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this struct
    |
3   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
175 -     let mut pubout = composed::Output::new();
175 +     let mut pubout = Output::new();
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:176:22
    |
176 |     let mut secout = composed::Output::new();
    |                      ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing this struct
    |
3   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
176 -     let mut secout = composed::Output::new();
176 +     let mut secout = Output::new();
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:190:18
    |
190 |     let public = composed::SignedPublicKey::from_key(&pubkey, &pubmem);
    |                  ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing one of these items
    |
3   + use crate::key::SignedPublicKey;
    |
3   + use pgp::SignedPublicKey;
    |
help: if you import `SignedPublicKey`, refer to it directly
    |
190 -     let public = composed::SignedPublicKey::from_key(&pubkey, &pubmem);
190 +     let public = SignedPublicKey::from_key(&pubkey, &pubmem);
    |

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:191:18
    |
191 |     let secret = composed::SignedSecretKey::from_key(&seckey, &secmem);
    |                  ^^^^^^^^ use of undeclared crate or module `composed`
    |
help: consider importing one of these items
    |
3   + use crate::key::SignedSecretKey;
    |
3   + use pgp::SignedSecretKey;
    |
help: if you import `SignedSecretKey`, refer to it directly
    |
191 -     let secret = composed::SignedSecretKey::from_key(&seckey, &secmem);
191 +     let secret = SignedSecretKey::from_key(&seckey, &secmem);
    |

error[E0422]: cannot find struct, variant or union type `OkKeyPair` in this scope
   --> src/pgp.rs:193:5
    |
129 | pub struct KeyPair {
    | ------------------ similarly named struct `KeyPair` defined here
...
193 |     OkKeyPair {
    |     ^^^^^^^^^ help: a struct with a similar name exists: `KeyPair`

warning: unused `#[macro_use]` import
  --> src/lib.rs:31:1
   |
31 | #[macro_use]
   | ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `KeyType as PgpKeyType`, `SecretKeyParamsBuilder`, `SubkeyParamsBuilder`
  --> src/pgp.rs:11:21
   |
11 |     Deserializable, KeyType as PgpKeyType, Message, SecretKeyParamsBuilder, SignedPublicKey,
   |                     ^^^^^^^^^^^^^^^^^^^^^           ^^^^^^^^^^^^^^^^^^^^^^
12 |     SignedPublicSubKey, SignedSecretKey, StandaloneSignature, SubkeyParamsBuilder,
   |                                                               ^^^^^^^^^^^^^^^^^^^

warning: unused import: `SecretKeyTrait`
  --> src/pgp.rs:17:58
   |
17 |     CompressionAlgorithm, KeyTrait, Mpi, PublicKeyTrait, SecretKeyTrait, StringToKey,
   |                                                          ^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `composed`
   --> src/pgp.rs:178:8
    |
178 |     if composed::rsa_generate_keypair(
    |        ^^^^^^^^ use of undeclared crate or module `composed`

Some errors have detailed explanations: E0422, E0433.
For more information about an error, try `rustc --explain E0422`.
warning: `deltachat` (lib) generated 3 warnings
error: could not compile `deltachat` (lib) due to 17 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 3 warnings (3 duplicates)
error: could not compile `deltachat` (lib test) due to 17 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

