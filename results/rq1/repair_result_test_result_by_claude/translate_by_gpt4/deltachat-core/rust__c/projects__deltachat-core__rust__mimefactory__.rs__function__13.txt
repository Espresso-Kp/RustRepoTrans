Fail
file path is :
projects/deltachat-core/rust/src/mimefactory.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
warning: unused import: `Address`
 --> src/mimefactory.rs:9:20
  |
9 | use lettre_email::{Address, Header, MimeMultipartType, PartBuilder};
  |                    ^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `crate::e2ee::EncryptHelper`
  --> src/mimefactory.rs:18:5
   |
18 | use crate::e2ee::EncryptHelper;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ephemeral::Timer as EphemeralTimer`
  --> src/mimefactory.rs:19:5
   |
19 | use crate::ephemeral::Timer as EphemeralTimer;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `create_outgoing_rfc724_mid`
  --> src/mimefactory.rs:31:5
   |
31 |     create_outgoing_rfc724_mid, create_smeared_timestamp, remove_subject_prefix, time,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::e2ee::EncryptHelper`
  --> src/mimefactory.rs:18:5
   |
18 | use crate::e2ee::EncryptHelper;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0433]: failed to resolve: use of undeclared crate or module `constants`
   --> src/mimefactory.rs:512:24
    |
512 |     let min_verified = constants::DC_NOT_VERIFIED;
    |                        ^^^^^^^^^ use of undeclared crate or module `constants`

error[E0599]: no method named `is_empty` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:514:13
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `is_empty` not found for this struct
...
514 |     if self.is_empty() {
    |             ^^^^^^^^ method not found in `MimeFactory<'_>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `is_empty`, perhaps you need to implement one of them:
            candidate #1: `ExactSizeIterator`
            candidate #2: `bitflags::traits::Flags`
            candidate #3: `SampleRange`
            candidate #4: `aead::Buffer`
            candidate #5: `nix::NixPath`
            candidate #6: `governor::state::keyed::ShrinkableKeyedStateStore`
            candidate #7: `toml_edit::table::TableLike`
            candidate #8: `gimli::Reader`
help: some of the expressions' fields have a method of the same name
    |
514 |     if self.from_addr.is_empty() {
    |             ++++++++++
514 |     if self.from_displayname.is_empty() {
    |             +++++++++++++++++
514 |     if self.in_reply_to.is_empty() {
    |             ++++++++++++
514 |     if self.msg.text.is_empty() {
    |             +++++++++
      and 3 other candidates

error[E0615]: attempted to take value of method `content_type` on type `PartBuilder`
   --> src/mimefactory.rs:519:13
    |
519 |     message.content_type = ContentType::new_matching(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |             ^^^^^^^^^^^^ method, not a field
    |
    = help: methods are immutable and cannot be assigned to

error[E0433]: failed to resolve: use of undeclared type `ContentType`
   --> src/mimefactory.rs:519:28
    |
519 |     message.content_type = ContentType::new_matching(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |                            ^^^^^^^^^^^ use of undeclared type `ContentType`
    |
help: there is an enum variant `crate::mimefactory::HeaderDef::ContentType`; try using the variant's enum
    |
519 |     message.content_type = crate::mimefactory::HeaderDef(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `msg_type` on type `MimeFactory<'_>`
   --> src/mimefactory.rs:519:78
    |
519 |     message.content_type = ContentType::new_matching(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |                                                                              ^^^^^^^^ unknown field
    |
    = note: available fields are: `from_addr`, `from_displayname`, `sender_displayname`, `selfstatus`, `recipients` ... and 9 others

error[E0308]: mismatched types
   --> src/mimefactory.rs:522:12
    |
522 |     if let Some(ref from_addr) = self.from_addr {
    |            ^^^^^^^^^^^^^^^^^^^   -------------- this expression has type `std::string::String`
    |            |
    |            expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0599]: no method named `lookup_address` found for reference `&context::Context` in the current scope
   --> src/mimefactory.rs:523:34
    |
523 |         let from = match context.lookup_address(from_addr) {
    |                                  ^^^^^^^^^^^^^^ method not found in `&Context`

error[E0599]: no method named `add_address` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:524:32
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_address` not found for this struct
...
524 |             Some(part) => self.add_address(&mut message.headers, "From", &part.display_name, &part.address),
    |                                ^^^^^^^^^^^ method not found in `MimeFactory<'_>`

error[E0609]: no field `headers` on type `PartBuilder`
   --> src/mimefactory.rs:524:57
    |
524 |             Some(part) => self.add_address(&mut message.headers, "From", &part.display_name, &part.address),
    |                                                         ^^^^^^^ unknown field

error[E0599]: no method named `add_address` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:525:26
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_address` not found for this struct
...
525 |             None => self.add_address(&mut message.headers, "From", "", from_addr),
    |                          ^^^^^^^^^^^ method not found in `MimeFactory<'_>`

error[E0609]: no field `headers` on type `PartBuilder`
   --> src/mimefactory.rs:525:51
    |
525 |             None => self.add_address(&mut message.headers, "From", "", from_addr),
    |                                                   ^^^^^^^ unknown field

error[E0599]: no method named `iter` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:529:33
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `iter` not found for this struct
...
529 |     for (contact_id, _) in self.iter() {
    |                                 ^^^^ method not found in `MimeFactory<'_>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `iter`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `IntoEnumIterator`
            candidate #3: `VariantIterator`
            candidate #4: `struct_iterable_internal::Iterable`
            candidate #5: `toml_edit::table::TableLike`
help: some of the expressions' fields have a method of the same name
    |
529 |     for (contact_id, _) in self.last_added_location_id.iter() {
    |                                 +++++++++++++++++++++++
529 |     for (contact_id, _) in self.msg.in_reply_to.iter() {
    |                                 ++++++++++++++++
529 |     for (contact_id, _) in self.recipients.iter() {
    |                                 +++++++++++
529 |     for (contact_id, _) in self.sender_displayname.iter() {
    |                                 +++++++++++++++++++
      and 1 other candidate

error[E0599]: no function or associated item named `load_from_db` found for struct `Contact` in the current scope
   --> src/mimefactory.rs:530:41
    |
530 |         if let Some(contact) = Contact::load_from_db(context, *contact_id).await.ok() {
    |                                         ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0599]: no method named `add_address` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:531:32
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_address` not found for this struct
...
531 |             let to_part = self.add_address(&mut message.headers, "To", &contact.get_display_name(), &contact.get_addr(context));
    |                                ^^^^^^^^^^^ method not found in `MimeFactory<'_>`

error[E0609]: no field `headers` on type `PartBuilder`
   --> src/mimefactory.rs:531:57
    |
531 |             let to_part = self.add_address(&mut message.headers, "To", &contact.get_display_name(), &contact.get_addr(context));
    |                                                         ^^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/mimefactory.rs:535:12
    |
535 |     if let Some(ref references) = self.references {
    |            ^^^^^^^^^^^^^^^^^^^^   --------------- this expression has type `std::string::String`
    |            |
    |            expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0599]: no method named `add_message_references` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:536:24
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_message_references` not found for this struct
...
536 |         message = self.add_message_references(message, &references);
    |                        ^^^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `add_message_text`

error[E0308]: mismatched types
   --> src/mimefactory.rs:539:12
    |
539 |     if let Some(ref in_reply_to) = self.in_reply_to {
    |            ^^^^^^^^^^^^^^^^^^^^^   ---------------- this expression has type `std::string::String`
    |            |
    |            expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0599]: no method named `add_message_references` found for struct `MimeFactory` in the current scope
   --> src/mimefactory.rs:540:24
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_message_references` not found for this struct
...
540 |         message = self.add_message_references(message, &in_reply_to);
    |                        ^^^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `add_message_text`

error[E0609]: no field `chat` on type `MimeFactory<'_>`
   --> src/mimefactory.rs:543:36
    |
543 |     let subject = get_subject(self.chat, self.msg, self.afwd_email);
    |                                    ^^^^ unknown field
    |
    = note: available fields are: `from_addr`, `from_displayname`, `sender_displayname`, `selfstatus`, `recipients` ... and 9 others

error[E0609]: no field `afwd_email` on type `MimeFactory<'_>`
   --> src/mimefactory.rs:543:57
    |
543 |     let subject = get_subject(self.chat, self.msg, self.afwd_email);
    |                                                         ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `from_addr`, `from_displayname`, `sender_displayname`, `selfstatus`, `recipients` ... and 9 others

error[E0425]: cannot find function `get_subject` in this scope
   --> src/mimefactory.rs:543:19
    |
543 |     let subject = get_subject(self.chat, self.msg, self.afwd_email);
    |                   ^^^^^^^^^^^ not found in this scope

error[E0277]: the trait bound `Vec<u8>: From<lettre_email::MimeMessage>` is not satisfied
   --> src/mimefactory.rs:567:51
    |
567 |     let rendered_email: Vec<u8> = message.build().into();
    |                                                   ^^^^ the trait `From<lettre_email::MimeMessage>` is not implemented for `Vec<u8>`, which is required by `lettre_email::MimeMessage: Into<_>`
    |
    = help: the following other types implement trait `From<T>`:
              <Vec<u8> as From<tokio_util::bytes::Bytes>>
              <Vec<u8> as From<BytesMut>>
              <Vec<u8> as From<Uuid>>
              <Vec<u8> as From<bstr::bstring::BString>>
              <Vec<u8> as From<CString>>
              <Vec<u8> as From<std::string::String>>
              <Vec<u8> as From<&str>>
    = note: required for `lettre_email::MimeMessage` to implement `Into<Vec<u8>>`

error[E0560]: struct `RenderedEmail` has no field named `encrypted`
   --> src/mimefactory.rs:570:9
    |
570 |         encrypted,
    |         ^^^^^^^^^ unknown field
    |
help: a field with a similar name exists
    |
570 |         is_encrypted,
    |         ~~~~~~~~~~~~

error[E0609]: no field `rfc724_mid` on type `MimeFactory<'_>`
   --> src/mimefactory.rs:571:45
    |
571 |         rfc724_mid: render_rfc724_mid(&self.rfc724_mid)
    |                                             ^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
571 |         rfc724_mid: render_rfc724_mid(&self.msg.rfc724_mid)
    |                                             ++++

error[E0599]: no method named `is_empty` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:514:13
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `is_empty` not found for this struct
...
514 |     if self.is_empty() {
    |             ^^^^^^^^ method not found in `MimeFactory<'_>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `is_empty`, perhaps you need to implement one of them:
            candidate #1: `ExactSizeIterator`
            candidate #2: `bitflags::traits::Flags`
            candidate #3: `SampleRange`
            candidate #4: `gimli::read::reader::Reader`
            candidate #5: `aead::Buffer`
            candidate #6: `nix::NixPath`
            candidate #7: `governor::state::keyed::ShrinkableKeyedStateStore`
            candidate #8: `toml_edit::table::TableLike`
help: some of the expressions' fields have a method of the same name
    |
514 |     if self.from_addr.is_empty() {
    |             ++++++++++
514 |     if self.from_displayname.is_empty() {
    |             +++++++++++++++++
514 |     if self.in_reply_to.is_empty() {
    |             ++++++++++++
514 |     if self.msg.text.is_empty() {
    |             +++++++++
      and 3 other candidates

error[E0433]: failed to resolve: use of undeclared type `ContentType`
   --> src/mimefactory.rs:519:28
    |
519 |     message.content_type = ContentType::new_matching(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |                            ^^^^^^^^^^^ use of undeclared type `ContentType`
    |
help: there is an enum variant `crate::peer_channels::tests::HeaderDef::ContentType`; try using the variant's enum
    |
519 |     message.content_type = crate::peer_channels::tests::HeaderDef(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `msg_type` on type `mimefactory::MimeFactory<'_>`
   --> src/mimefactory.rs:519:78
    |
519 |     message.content_type = ContentType::new_matching(&mime::TEXT_PLAIN, self.msg_type == Viewtype::Audio);
    |                                                                              ^^^^^^^^ unknown field
    |
    = note: available fields are: `from_addr`, `from_displayname`, `sender_displayname`, `selfstatus`, `recipients` ... and 9 others

error[E0599]: no method named `add_address` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:524:32
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_address` not found for this struct
...
524 |             Some(part) => self.add_address(&mut message.headers, "From", &part.display_name, &part.address),
    |                                ^^^^^^^^^^^ method not found in `MimeFactory<'_>`

error[E0599]: no method named `add_address` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:525:26
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_address` not found for this struct
...
525 |             None => self.add_address(&mut message.headers, "From", "", from_addr),
    |                          ^^^^^^^^^^^ method not found in `MimeFactory<'_>`

error[E0599]: no method named `iter` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:529:33
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `iter` not found for this struct
...
529 |     for (contact_id, _) in self.iter() {
    |                                 ^^^^ method not found in `MimeFactory<'_>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `iter`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `IntoEnumIterator`
            candidate #3: `VariantIterator`
            candidate #4: `sysinfo::traits::NetworksExt`
            candidate #5: `struct_iterable_internal::Iterable`
            candidate #6: `toml_edit::table::TableLike`
help: some of the expressions' fields have a method of the same name
    |
529 |     for (contact_id, _) in self.last_added_location_id.iter() {
    |                                 +++++++++++++++++++++++
529 |     for (contact_id, _) in self.msg.in_reply_to.iter() {
    |                                 ++++++++++++++++
529 |     for (contact_id, _) in self.recipients.iter() {
    |                                 +++++++++++
529 |     for (contact_id, _) in self.sender_displayname.iter() {
    |                                 +++++++++++++++++++
      and 1 other candidate

error[E0599]: no function or associated item named `load_from_db` found for struct `contact::Contact` in the current scope
   --> src/mimefactory.rs:530:41
    |
530 |         if let Some(contact) = Contact::load_from_db(context, *contact_id).await.ok() {
    |                                         ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0599]: no method named `add_address` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:531:32
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_address` not found for this struct
...
531 |             let to_part = self.add_address(&mut message.headers, "To", &contact.get_display_name(), &contact.get_addr(context));
    |                                ^^^^^^^^^^^ method not found in `MimeFactory<'_>`

error[E0599]: no method named `add_message_references` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:536:24
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_message_references` not found for this struct
...
536 |         message = self.add_message_references(message, &references);
    |                        ^^^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `add_message_text`

error[E0599]: no method named `add_message_references` found for struct `mimefactory::MimeFactory` in the current scope
   --> src/mimefactory.rs:540:24
    |
48  | pub struct MimeFactory<'a> {
    | -------------------------- method `add_message_references` not found for this struct
...
540 |         message = self.add_message_references(message, &in_reply_to);
    |                        ^^^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `add_message_text`

error[E0609]: no field `chat` on type `mimefactory::MimeFactory<'_>`
   --> src/mimefactory.rs:543:36
    |
543 |     let subject = get_subject(self.chat, self.msg, self.afwd_email);
    |                                    ^^^^ unknown field
    |
    = note: available fields are: `from_addr`, `from_displayname`, `sender_displayname`, `selfstatus`, `recipients` ... and 9 others

error[E0609]: no field `afwd_email` on type `mimefactory::MimeFactory<'_>`
   --> src/mimefactory.rs:543:57
    |
543 |     let subject = get_subject(self.chat, self.msg, self.afwd_email);
    |                                                         ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `from_addr`, `from_displayname`, `sender_displayname`, `selfstatus`, `recipients` ... and 9 others

error[E0277]: the trait bound `Vec<u8>: From<lettre_email::MimeMessage>` is not satisfied
   --> src/mimefactory.rs:567:51
    |
567 |     let rendered_email: Vec<u8> = message.build().into();
    |                                                   ^^^^ the trait `From<lettre_email::MimeMessage>` is not implemented for `Vec<u8>`, which is required by `lettre_email::MimeMessage: Into<_>`
    |
    = help: the following other types implement trait `From<T>`:
              <Vec<u8> as From<tokio_util::bytes::Bytes>>
              <Vec<u8> as From<BytesMut>>
              <Vec<u8> as From<Uuid>>
              <Vec<u8> as From<bstr::bstring::BString>>
              <Vec<u8> as From<clap::builder::Str>>
              <Vec<u8> as From<CString>>
              <Vec<u8> as From<std::string::String>>
              <Vec<u8> as From<&str>>
    = note: required for `lettre_email::MimeMessage` to implement `Into<Vec<u8>>`

error[E0609]: no field `rfc724_mid` on type `mimefactory::MimeFactory<'_>`
   --> src/mimefactory.rs:571:45
    |
571 |         rfc724_mid: render_rfc724_mid(&self.rfc724_mid)
    |                                             ^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
571 |         rfc724_mid: render_rfc724_mid(&self.msg.rfc724_mid)
    |                                             ++++

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0560, E0599, E0609, E0615.
For more information about an error, try `rustc --explain E0277`.
warning: `deltachat` (lib) generated 4 warnings
error: could not compile `deltachat` (lib) due to 25 previous errors; 4 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 3 warnings (2 duplicates)
error: could not compile `deltachat` (lib test) due to 25 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

