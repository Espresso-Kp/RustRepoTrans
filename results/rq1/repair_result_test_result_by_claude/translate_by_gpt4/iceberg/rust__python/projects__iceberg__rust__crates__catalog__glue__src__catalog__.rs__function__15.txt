Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0599]: no variant or associated item named `NoSuchTableError` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:533:24
    |
533 |             ErrorKind::NoSuchTableError,
    |                        ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: the trait bound `std::option::Option<std::string::String>: AsRef<str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:540:34
    |
540 |         self.file_io.new_output(&glue_table.storage_descriptor.unwrap().location)
    |                      ----------  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `AsRef<str>` is not implemented for `std::option::Option<std::string::String>`, which is required by `&std::option::Option<std::string::String>: AsRef<str>`
    |                      |
    |                      required by a bound introduced by this call
    |
    = note: required for `&std::option::Option<std::string::String>` to implement `AsRef<str>`
note: required by a bound in `FileIO::new_output`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/io.rs:196:41
    |
196 |     pub fn new_output(&self, path: impl AsRef<str>) -> Result<OutputFile> {
    |                                         ^^^^^^^^^^ required by this bound in `FileIO::new_output`

error[E0599]: no variant or associated item named `NoSuchIcebergTableError` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:541:48
    |
541 |             .map_err(|_| Error::new(ErrorKind::NoSuchIcebergTableError,
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: the trait bound `TableCreation: Default` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:550:15
    |
550 |             ..Default::default()
    |               ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `TableCreation`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:553:48
    |
553 |         self.create_table(&NamespaceIdent::new(vec![dest_db.clone()]), creation).await?;
    |                            ------------------- ^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Vec<String>`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected struct `std::string::String`
               found struct `Vec<std::string::String>`
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:106:12
    |
106 |     pub fn new(name: String) -> Self {
    |            ^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:559:37
    |
559 |                 .storage_descriptor(glue_table.storage_descriptor)
    |                  ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `Option<StorageDescriptor>`
    |                  |
    |                  arguments to this method are incorrect
    |
    = note: expected struct `StorageDescriptor`
                 found enum `std::option::Option<StorageDescriptor>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::option::Option<StorageDescriptor>` value, panicking if the value is an `Option::None`
    |
559 |                 .storage_descriptor(glue_table.storage_descriptor.expect("REASON"))
    |                                                                  +++++++++++++++++

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:560:29
    |
560 |                 .table_type(glue_table.table_type)
    |                  ---------- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |                  |
    |                  required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::table_type`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:327:45
    |
327 |     pub fn table_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::table_type`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<HashMap<std::string::String, std::string::String>>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:561:29
    |
561 |                 .parameters(glue_table.parameters)
    |                  ---------- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<HashMap<std::string::String, std::string::String>>>` is not implemented for `std::string::String`, which is required by `std::option::Option<HashMap<std::string::String, std::string::String>>: Into<std::string::String>`
    |                  |
    |                  required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<HashMap<std::string::String, std::string::String>>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:561:18
    |
561 |                 .parameters(glue_table.parameters)
    |                  ^^^^^^^^^^----------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
561 |                 .parameters(glue_table.parameters, /* v */)
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0599]: no variant or associated item named `NoSuchTableError` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:533:24
    |
533 |             ErrorKind::NoSuchTableError,
    |                        ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: the trait bound `std::option::Option<std::string::String>: AsRef<str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:540:34
    |
540 |         self.file_io.new_output(&glue_table.storage_descriptor.unwrap().location)
    |                      ----------  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `AsRef<str>` is not implemented for `std::option::Option<std::string::String>`, which is required by `&std::option::Option<std::string::String>: AsRef<str>`
    |                      |
    |                      required by a bound introduced by this call
    |
    = note: required for `&std::option::Option<std::string::String>` to implement `AsRef<str>`
note: required by a bound in `FileIO::new_output`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/io.rs:196:41
    |
196 |     pub fn new_output(&self, path: impl AsRef<str>) -> Result<OutputFile> {
    |                                         ^^^^^^^^^^ required by this bound in `FileIO::new_output`

error[E0599]: no variant or associated item named `NoSuchIcebergTableError` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:541:48
    |
541 |             .map_err(|_| Error::new(ErrorKind::NoSuchIcebergTableError,
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: the trait bound `TableCreation: Default` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:550:15
    |
550 |             ..Default::default()
    |               ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `TableCreation`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:553:48
    |
553 |         self.create_table(&NamespaceIdent::new(vec![dest_db.clone()]), creation).await?;
    |                            ------------------- ^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Vec<String>`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected struct `std::string::String`
               found struct `Vec<std::string::String>`
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:106:12
    |
106 |     pub fn new(name: String) -> Self {
    |            ^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:559:37
    |
559 |                 .storage_descriptor(glue_table.storage_descriptor)
    |                  ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `Option<StorageDescriptor>`
    |                  |
    |                  arguments to this method are incorrect
    |
    = note: expected struct `StorageDescriptor`
                 found enum `std::option::Option<StorageDescriptor>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::option::Option<StorageDescriptor>` value, panicking if the value is an `Option::None`
    |
559 |                 .storage_descriptor(glue_table.storage_descriptor.expect("REASON"))
    |                                                                  +++++++++++++++++

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:560:29
    |
560 |                 .table_type(glue_table.table_type)
    |                  ---------- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |                  |
    |                  required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::table_type`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:327:45
    |
327 |     pub fn table_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::table_type`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<HashMap<std::string::String, std::string::String>>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:561:29
    |
561 |                 .parameters(glue_table.parameters)
    |                  ---------- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<HashMap<std::string::String, std::string::String>>>` is not implemented for `std::string::String`, which is required by `std::option::Option<HashMap<std::string::String, std::string::String>>: Into<std::string::String>`
    |                  |
    |                  required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<HashMap<std::string::String, std::string::String>>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:561:18
    |
561 |                 .parameters(glue_table.parameters)
    |                  ^^^^^^^^^^----------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
561 |                 .parameters(glue_table.parameters, /* v */)
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 9 previous errors

