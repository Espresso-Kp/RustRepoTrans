Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0599]: no variant or associated item named `NoSuchTable` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:537:44
    |
537 |         .map_err(|e| Error::new(ErrorKind::NoSuchTable, format!("Table does not exist: {}.{}", from_database_name, from_table_name)))?;
    |                                            ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `NoSuchTable` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:539:85
    |
539 |     let glue_table = get_table_response.table().ok_or_else(|| Error::new(ErrorKind::NoSuchTable, "Table response is empty"))?;
    |                                                                                     ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:542:51
    |
542 |     let metadata_location = get_metadata_location(glue_table)?;
    |                             --------------------- ^^^^^^^^^^ expected `&Option<HashMap<String, String>>`, found `&Table`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected reference `&std::option::Option<HashMap<std::string::String, std::string::String>>`
               found reference `&aws_sdk_glue::types::Table`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:257:15
    |
257 | pub(crate) fn get_metadata_location(
    |               ^^^^^^^^^^^^^^^^^^^^^
258 |     parameters: &Option<HashMap<String, String>>,
    |     --------------------------------------------

error[E0599]: no method named `data` found for struct `InputFile` in the current scope
   --> crates/catalog/glue/src/catalog.rs:543:104
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                                                                        ^^^^ help: there is a method with a similar name: `metadata`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/glue/src/catalog.rs:543:60
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/glue/src/catalog.rs:543:60
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/glue/src/catalog.rs:543:116
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                                                                                    ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:551:49
    |
551 |         rename_table_input = rename_table_input.description(description.to_string());
    |                                                 ^^^^^^^^^^^ -----------------------
    |                                                             |
    |                                                             unexpected argument of type `std::string::String`
    |                                                             help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:60:12
    |
60  |     pub fn description(&self) -> ::std::option::Option<&str> {
    |            ^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:551:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
551 |           rename_table_input = rename_table_input.description(description.to_string());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&str>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&str>`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:555:49
    |
555 |         rename_table_input = rename_table_input.table_type(table_type.to_string());
    |                                                 ^^^^^^^^^^ ----------------------
    |                                                            |
    |                                                            unexpected argument of type `std::string::String`
    |                                                            help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:115:12
    |
115 |     pub fn table_type(&self) -> ::std::option::Option<&str> {
    |            ^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:555:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
555 |           rename_table_input = rename_table_input.table_type(table_type.to_string());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&str>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&str>`

error[E0061]: this method takes 0 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:560:53
    |
560 |             rename_table_input = rename_table_input.parameters(k, v);
    |                                                     ^^^^^^^^^^ -  - unexpected argument of type `&std::string::String`
    |                                                                |
    |                                                                unexpected argument of type `&std::string::String`
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:119:12
    |
119 |     pub fn parameters(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
    |            ^^^^^^^^^^
help: remove the extra arguments
    |
560 -             rename_table_input = rename_table_input.parameters(k, v);
560 +             rename_table_input = rename_table_input.parameters();
    |

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:560:34
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
560 |               rename_table_input = rename_table_input.parameters(k, v);
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&HashMap<String, String>>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&HashMap<std::string::String, std::string::String>>`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:565:49
    |
565 |         rename_table_input = rename_table_input.storage_descriptor(storage_descriptor.clone());
    |                                                 ^^^^^^^^^^^^^^^^^^ --------------------------
    |                                                                    |
    |                                                                    unexpected argument of type `StorageDescriptor`
    |                                                                    help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:80:12
    |
80  |     pub fn storage_descriptor(&self) -> ::std::option::Option<&crate::types::StorageDescriptor> {
    |            ^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:565:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
565 |           rename_table_input = rename_table_input.storage_descriptor(storage_descriptor.clone());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&StorageDescriptor>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&StorageDescriptor>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:568:12
    |
568 |     if let Some(partition_keys) = glue_table.partition_keys() {
    |            ^^^^^^^^^^^^^^^^^^^^   --------------------------- this expression has type `&[aws_sdk_glue::types::Column]`
    |            |
    |            expected `[Column]`, found `Option<_>`
    |
    = note: expected slice `[aws_sdk_glue::types::Column]`
                found enum `std::option::Option<_>`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:569:79
    |
569 |         rename_table_input = rename_table_input.partition_keys(partition_keys.to_vec());
    |                                                                               ^^^^^^ cannot infer type for type parameter `T` declared on the enum `Option`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:569:49
    |
569 |         rename_table_input = rename_table_input.partition_keys(partition_keys.to_vec());
    |                                                 ^^^^^^^^^^^^^^ -----------------------
    |                                                                |
    |                                                                unexpected argument
    |                                                                help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:88:12
    |
88  |     pub fn partition_keys(&self) -> &[crate::types::Column] {
    |            ^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:569:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
569 |           rename_table_input = rename_table_input.partition_keys(partition_keys.to_vec());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `&[Column]`
    |
    = note: expected struct `TableInput`
            found reference `&[aws_sdk_glue::types::Column]`

Some errors have detailed explanations: E0061, E0277, E0282, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 19 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0599]: no variant or associated item named `NoSuchTable` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:537:44
    |
537 |         .map_err(|e| Error::new(ErrorKind::NoSuchTable, format!("Table does not exist: {}.{}", from_database_name, from_table_name)))?;
    |                                            ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `NoSuchTable` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:539:85
    |
539 |     let glue_table = get_table_response.table().ok_or_else(|| Error::new(ErrorKind::NoSuchTable, "Table response is empty"))?;
    |                                                                                     ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:542:51
    |
542 |     let metadata_location = get_metadata_location(glue_table)?;
    |                             --------------------- ^^^^^^^^^^ expected `&Option<HashMap<String, String>>`, found `&Table`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected reference `&std::option::Option<HashMap<std::string::String, std::string::String>>`
               found reference `&aws_sdk_glue::types::Table`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:257:15
    |
257 | pub(crate) fn get_metadata_location(
    |               ^^^^^^^^^^^^^^^^^^^^^
258 |     parameters: &Option<HashMap<String, String>>,
    |     --------------------------------------------

error[E0599]: no method named `data` found for struct `InputFile` in the current scope
   --> crates/catalog/glue/src/catalog.rs:543:104
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                                                                        ^^^^ help: there is a method with a similar name: `metadata`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/glue/src/catalog.rs:543:60
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/glue/src/catalog.rs:543:60
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/glue/src/catalog.rs:543:116
    |
543 |     let _metadata: TableMetadata = serde_json::from_slice(&self.file_io.new_input(&metadata_location)?.data().await?)?;
    |                                                                                                                    ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:551:49
    |
551 |         rename_table_input = rename_table_input.description(description.to_string());
    |                                                 ^^^^^^^^^^^ -----------------------
    |                                                             |
    |                                                             unexpected argument of type `std::string::String`
    |                                                             help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:60:12
    |
60  |     pub fn description(&self) -> ::std::option::Option<&str> {
    |            ^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:551:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
551 |           rename_table_input = rename_table_input.description(description.to_string());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&str>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&str>`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:555:49
    |
555 |         rename_table_input = rename_table_input.table_type(table_type.to_string());
    |                                                 ^^^^^^^^^^ ----------------------
    |                                                            |
    |                                                            unexpected argument of type `std::string::String`
    |                                                            help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:115:12
    |
115 |     pub fn table_type(&self) -> ::std::option::Option<&str> {
    |            ^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:555:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
555 |           rename_table_input = rename_table_input.table_type(table_type.to_string());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&str>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&str>`

error[E0061]: this method takes 0 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:560:53
    |
560 |             rename_table_input = rename_table_input.parameters(k, v);
    |                                                     ^^^^^^^^^^ -  - unexpected argument of type `&std::string::String`
    |                                                                |
    |                                                                unexpected argument of type `&std::string::String`
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:119:12
    |
119 |     pub fn parameters(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
    |            ^^^^^^^^^^
help: remove the extra arguments
    |
560 -             rename_table_input = rename_table_input.parameters(k, v);
560 +             rename_table_input = rename_table_input.parameters();
    |

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:560:34
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
560 |               rename_table_input = rename_table_input.parameters(k, v);
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&HashMap<String, String>>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&HashMap<std::string::String, std::string::String>>`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:565:49
    |
565 |         rename_table_input = rename_table_input.storage_descriptor(storage_descriptor.clone());
    |                                                 ^^^^^^^^^^^^^^^^^^ --------------------------
    |                                                                    |
    |                                                                    unexpected argument of type `StorageDescriptor`
    |                                                                    help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:80:12
    |
80  |     pub fn storage_descriptor(&self) -> ::std::option::Option<&crate::types::StorageDescriptor> {
    |            ^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:565:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
565 |           rename_table_input = rename_table_input.storage_descriptor(storage_descriptor.clone());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `Option<&StorageDescriptor>`
    |
    = note: expected struct `TableInput`
                 found enum `std::option::Option<&StorageDescriptor>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:568:12
    |
568 |     if let Some(partition_keys) = glue_table.partition_keys() {
    |            ^^^^^^^^^^^^^^^^^^^^   --------------------------- this expression has type `&[aws_sdk_glue::types::Column]`
    |            |
    |            expected `[Column]`, found `Option<_>`
    |
    = note: expected slice `[aws_sdk_glue::types::Column]`
                found enum `std::option::Option<_>`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:569:79
    |
569 |         rename_table_input = rename_table_input.partition_keys(partition_keys.to_vec());
    |                                                                               ^^^^^^ cannot infer type for type parameter `T` declared on the enum `Option`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:569:49
    |
569 |         rename_table_input = rename_table_input.partition_keys(partition_keys.to_vec());
    |                                                 ^^^^^^^^^^^^^^ -----------------------
    |                                                                |
    |                                                                unexpected argument
    |                                                                help: remove the extra argument
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:88:12
    |
88  |     pub fn partition_keys(&self) -> &[crate::types::Column] {
    |            ^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:569:30
    |
545 |       let mut rename_table_input = TableInput::builder()
    |  __________________________________-
546 | |         .name(to_table_name)
547 | |         .build()
548 | |         .map_err(from_aws_build_error)?;
    | |_______________________________________- expected due to this value
...
569 |           rename_table_input = rename_table_input.partition_keys(partition_keys.to_vec());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `TableInput`, found `&[Column]`
    |
    = note: expected struct `TableInput`
            found reference `&[aws_sdk_glue::types::Column]`

Some errors have detailed explanations: E0061, E0277, E0282, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 19 previous errors

