Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/spec/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:822:16
    |
822 | fn struct_type(&mut self, struct_type: &StructType, _: usize) -> Result<Self::T> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:837:13
    |
837 |             &mut self,
    |             ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:844:9
    |
844 | fn list(&mut self, _list: &ListType, _element_result: Option<Type>) -> Result<Option<Type>> {
    |         ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:849:13
    |
849 |             &mut self,
    |             ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:857:14
    |
857 | fn primitive(&mut self, _primitive: &PrimitiveType) -> Result<Option<Type>> {
    |              ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0407]: method `struct_type` is not a member of trait `SchemaVisitor`
   --> crates/iceberg/src/spec/schema.rs:753:9
    |
753 | /         fn struct_type(&mut self, struct_type: &StructType, _: usize) -> Result<Self::T> {
754 | |             let pruned_fields: Vec<NestedFieldRef> = struct_type
755 | |                 .fields()
756 | |                 .iter()
...   |
765 | |             }
766 | |         }
    | |_________^ not a member of trait `SchemaVisitor`

error[E0053]: method `field` has an incompatible type for trait
   --> crates/iceberg/src/spec/schema.rs:770:21
    |
770 |             _field: &NestedField,
    |                     ^^^^^^^^^^^^
    |                     |
    |                     expected `Arc<datatypes::NestedField>`, found `datatypes::NestedField`
    |                     help: change the parameter type to match the trait: `&Arc<datatypes::NestedField>`
    |
note: type in trait
   --> crates/iceberg/src/spec/schema.rs:405:32
    |
405 |     fn field(&mut self, field: &NestedFieldRef, value: Self::T) -> Result<Self::T>;
    |                                ^^^^^^^^^^^^^^^
    = note: expected signature `fn(&mut PruneColumnsVisitor, &Arc<datatypes::NestedField>, std::option::Option<_>) -> std::result::Result<_, _>`
               found signature `fn(&mut PruneColumnsVisitor, &datatypes::NestedField, std::option::Option<_>) -> std::result::Result<_, _>`

error[E0046]: not all trait items implemented, missing: `schema`, `struct`
   --> crates/iceberg/src/spec/schema.rs:750:5
    |
403 |     fn schema(&mut self, schema: &Schema, value: Self::T) -> Result<Self::T>;
    |     ------------------------------------------------------------------------- `schema` from trait
...
407 |     fn r#struct(&mut self, r#struct: &StructType, results: Vec<Self::T>) -> Result<Self::T>;
    |     ---------------------------------------------------------------------------------------- `r#struct` from trait
...
750 |     impl SchemaVisitor for PruneColumnsVisitor {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `schema`, `struct` in implementation

error[E0599]: no method named `intersection` found for opaque type `impl Iterator<Item = i32> + '_` in the current scope
   --> crates/iceberg/src/spec/schema.rs:812:10
    |
810 |       let pruned_identifier_field_ids: Vec<i32> = schema
    |  _________________________________________________-
811 | |         .identifier_field_ids()
812 | |         .intersection(&selected_set)
    | |         -^^^^^^^^^^^^ method not found in `impl Iterator<Item = i32>`
    | |_________|
    | 

error[E0599]: no function or associated item named `new_with_schema_id_and_identifier_field_ids` found for struct `datatypes::StructType` in the current scope
   --> crates/iceberg/src/spec/schema.rs:816:33
    |
816 |     Ok(Type::Struct(StructType::new_with_schema_id_and_identifier_field_ids(
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `StructType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:363:1
    |
363 | pub struct StructType {
    | --------------------- function or associated item `new_with_schema_id_and_identifier_field_ids` not found for this struct
    |
note: if you're trying to build a new `datatypes::StructType`, consider using `datatypes::StructType::new` which returns `datatypes::StructType`
   --> crates/iceberg/src/spec/datatypes.rs:424:5
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:822:73
    |
822 | fn struct_type(&mut self, struct_type: &StructType, _: usize) -> Result<Self::T> {
    |                                                                         ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0046, E0053, E0407, E0433, E0599.
For more information about an error, try `rustc --explain E0046`.
error: could not compile `iceberg` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 11 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:822:16
    |
822 | fn struct_type(&mut self, struct_type: &StructType, _: usize) -> Result<Self::T> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:837:13
    |
837 |             &mut self,
    |             ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:844:9
    |
844 | fn list(&mut self, _list: &ListType, _element_result: Option<Type>) -> Result<Option<Type>> {
    |         ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:849:13
    |
849 |             &mut self,
    |             ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:857:14
    |
857 | fn primitive(&mut self, _primitive: &PrimitiveType) -> Result<Option<Type>> {
    |              ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0407]: method `struct_type` is not a member of trait `SchemaVisitor`
   --> crates/iceberg/src/spec/schema.rs:753:9
    |
753 | /         fn struct_type(&mut self, struct_type: &StructType, _: usize) -> Result<Self::T> {
754 | |             let pruned_fields: Vec<NestedFieldRef> = struct_type
755 | |                 .fields()
756 | |                 .iter()
...   |
765 | |             }
766 | |         }
    | |_________^ not a member of trait `SchemaVisitor`

error[E0053]: method `field` has an incompatible type for trait
   --> crates/iceberg/src/spec/schema.rs:770:21
    |
770 |             _field: &NestedField,
    |                     ^^^^^^^^^^^^
    |                     |
    |                     expected `Arc<datatypes::NestedField>`, found `datatypes::NestedField`
    |                     help: change the parameter type to match the trait: `&Arc<datatypes::NestedField>`
    |
note: type in trait
   --> crates/iceberg/src/spec/schema.rs:405:32
    |
405 |     fn field(&mut self, field: &NestedFieldRef, value: Self::T) -> Result<Self::T>;
    |                                ^^^^^^^^^^^^^^^
    = note: expected signature `fn(&mut PruneColumnsVisitor, &Arc<datatypes::NestedField>, std::option::Option<_>) -> std::result::Result<_, _>`
               found signature `fn(&mut PruneColumnsVisitor, &datatypes::NestedField, std::option::Option<_>) -> std::result::Result<_, _>`

error[E0046]: not all trait items implemented, missing: `schema`, `struct`
   --> crates/iceberg/src/spec/schema.rs:750:5
    |
403 |     fn schema(&mut self, schema: &Schema, value: Self::T) -> Result<Self::T>;
    |     ------------------------------------------------------------------------- `schema` from trait
...
407 |     fn r#struct(&mut self, r#struct: &StructType, results: Vec<Self::T>) -> Result<Self::T>;
    |     ---------------------------------------------------------------------------------------- `r#struct` from trait
...
750 |     impl SchemaVisitor for PruneColumnsVisitor {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `schema`, `struct` in implementation

error[E0599]: no method named `intersection` found for opaque type `impl Iterator<Item = i32> + '_` in the current scope
   --> crates/iceberg/src/spec/schema.rs:812:10
    |
810 |       let pruned_identifier_field_ids: Vec<i32> = schema
    |  _________________________________________________-
811 | |         .identifier_field_ids()
812 | |         .intersection(&selected_set)
    | |         -^^^^^^^^^^^^ method not found in `impl Iterator<Item = i32>`
    | |_________|
    | 

error[E0599]: no function or associated item named `new_with_schema_id_and_identifier_field_ids` found for struct `datatypes::StructType` in the current scope
   --> crates/iceberg/src/spec/schema.rs:816:33
    |
816 |     Ok(Type::Struct(StructType::new_with_schema_id_and_identifier_field_ids(
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `StructType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:363:1
    |
363 | pub struct StructType {
    | --------------------- function or associated item `new_with_schema_id_and_identifier_field_ids` not found for this struct
    |
note: if you're trying to build a new `datatypes::StructType`, consider using `datatypes::StructType::new` which returns `datatypes::StructType`
   --> crates/iceberg/src/spec/datatypes.rs:424:5
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:822:73
    |
822 | fn struct_type(&mut self, struct_type: &StructType, _: usize) -> Result<Self::T> {
    |                                                                         ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0046, E0053, E0407, E0433, E0599.
For more information about an error, try `rustc --explain E0046`.
error: could not compile `iceberg` (lib) due to 11 previous errors

