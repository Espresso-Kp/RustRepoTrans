Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find function `params_from_iter` in this scope
    --> src/chat.rs:4120:50
     |
4120 |         let rows = transaction.query_map(&query, params_from_iter([]), |row| row.get::<_, u32>(0))?;
     |                                                  ^^^^^^^^^^^^^^^^ not found in this scope
     |
help: consider importing this function
     |
3    + use rusqlite::params_from_iter;
     |

error[E0599]: no function or associated item named `new_untyped` found for struct `message::Message` in the current scope
    --> src/chat.rs:4104:28
     |
4104 |     let mut msg = Message::new_untyped(context);
     |                            ^^^^^^^^^^^ function or associated item not found in `Message`
     |
    ::: src/message.rs:420:1
     |
420  | pub struct Message {
     | ------------------ function or associated item `new_untyped` not found for this struct
     |
note: if you're trying to build a new `message::Message`, consider using `message::Message::new` which returns `message::Message`
    --> src/message.rs:469:5
     |
469  |     pub fn new(viewtype: Viewtype) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: can't compare `u32` with `ChatId`
    --> src/chat.rs:4109:25
     |
4109 |     if chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                         ^^ no implementation for `u32 < ChatId` and `u32 > ChatId`
     |
     = help: the trait `PartialOrd<ChatId>` is not implemented for `u32`
     = help: the following other types implement trait `PartialOrd<Rhs>`:
               <u32 as PartialOrd>
               <u32 as PartialOrd<precis_core::Codepoints>>

error[E0609]: no field `smtp` on type `&context::Context`
    --> src/chat.rs:4116:17
     |
4116 |         context.smtp.log_connect_errors = true;
     |                 ^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `query_map` found for mutable reference `&mut Transaction<'_>` in the current scope
    --> src/chat.rs:4120:32
     |
4120 |         let rows = transaction.query_map(&query, params_from_iter([]), |row| row.get::<_, u32>(0))?;
     |                                ^^^^^^^^^ help: there is a method with a similar name: `query_row`

error[E0308]: `?` operator has incompatible types
    --> src/chat.rs:4124:17
     |
4124 |             if !Message::load_from_db(context, src_msg_id).await? {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `Message`
     |
     = note: `?` operator cannot convert from `message::Message` to `bool`
note: return type inferred to be `bool` here
    --> src/chat.rs:4114:9
     |
4114 |         chat_id.unarchive_if_not_muted(context, MessageState::InFresh).await?;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
    --> src/chat.rs:4139:79
     |
4139 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp)).await?;
     |                                                                          ---- ^^^^^^^^^^^^^^ expected `MsgId`, found `i64`
     |                                                                          |
     |                                                                          arguments to this enum variant are incorrect
     |
help: the type constructed contains `i64` due to the type of the argument passed
    --> src/chat.rs:4139:74
     |
4139 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp)).await?;
     |                                                                          ^^^^^--------------^
     |                                                                               |
     |                                                                               this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0061]: this method takes 4 arguments but 3 arguments were supplied
    --> src/chat.rs:4139:39
     |
4139 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp)).await?;
     |                                       ^^^^^^^^^^^^^^^----------------------------------------- an argument of type `i64` is missing
     |
note: method defined here
    --> src/chat.rs:1887:14
     |
1887 |     async fn prepare_msg_raw(
     |              ^^^^^^^^^^^^^^^
1888 |         &mut self,
1889 |         context: &Context,
     |         -----------------
1890 |         msg: &mut Message,
     |         -----------------
1891 |         update_msg_id: Option<MsgId>,
     |         ----------------------------
1892 |         timestamp: i64,
     |         --------------
help: provide the argument
     |
4139 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp), /* i64 */).await?;
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
    --> src/chat.rs:4155:79
     |
4155 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp)).await?;
     |                                                                          ---- ^^^^^^^^^^^^^^ expected `MsgId`, found `i64`
     |                                                                          |
     |                                                                          arguments to this enum variant are incorrect
     |
help: the type constructed contains `i64` due to the type of the argument passed
    --> src/chat.rs:4155:74
     |
4155 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp)).await?;
     |                                                                          ^^^^^--------------^
     |                                                                               |
     |                                                                               this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0061]: this method takes 4 arguments but 3 arguments were supplied
    --> src/chat.rs:4155:39
     |
4155 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp)).await?;
     |                                       ^^^^^^^^^^^^^^^----------------------------------------- an argument of type `i64` is missing
     |
note: method defined here
    --> src/chat.rs:1887:14
     |
1887 |     async fn prepare_msg_raw(
     |              ^^^^^^^^^^^^^^^
1888 |         &mut self,
1889 |         context: &Context,
     |         -----------------
1890 |         msg: &mut Message,
     |         -----------------
1891 |         update_msg_id: Option<MsgId>,
     |         ----------------------------
1892 |         timestamp: i64,
     |         --------------
help: provide the argument
     |
4155 |                 let new_msg_id = chat.prepare_msg_raw(context, &mut msg, Some(curr_timestamp), /* i64 */).await?;
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `create_send_msg_jobs` found for reference `&context::Context` in the current scope
    --> src/chat.rs:4157:25
     |
4157 |                 context.create_send_msg_jobs(context, &mut msg).await?;
     |                         ^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0308]: mismatched types
    --> src/chat.rs:4113:43
     |
4113 |       context.sql.transaction(|transaction| async {
     |  ___________________________________________^
4114 | |         chat_id.unarchive_if_not_muted(context, MessageState::InFresh).await?;
4115 | |
4116 | |         context.smtp.log_connect_errors = true;
...    |
4164 | |         Ok(())
4165 | |     }).await?;
     | |_____^ expected `Result<_, Error>`, found `async` block
     |
     = note:       expected enum `std::result::Result<_, anyhow::Error>`
             found `async` block `{async block@src/chat.rs:4113:43: 4165:6}`
help: try wrapping the expression in `Ok`
     |
4113 ~     context.sql.transaction(|transaction| Ok(async {
4114 |         chat_id.unarchive_if_not_muted(context, MessageState::InFresh).await?;
   ...
4164 |         Ok(())
4165 ~     })).await?;
     |

error[E0277]: can't compare `u32` with `chat::ChatId`
    --> src/chat.rs:4109:25
     |
4109 |     if chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                         ^^ no implementation for `u32 < chat::ChatId` and `u32 > chat::ChatId`
     |
     = help: the trait `PartialOrd<chat::ChatId>` is not implemented for `u32`
     = help: the following other types implement trait `PartialOrd<Rhs>`:
               <u32 as PartialOrd>
               <u32 as PartialOrd<precis_core::Codepoints>>

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 12 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

