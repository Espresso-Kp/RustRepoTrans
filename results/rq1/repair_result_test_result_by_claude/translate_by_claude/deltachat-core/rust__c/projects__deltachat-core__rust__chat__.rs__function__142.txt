Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CHAT_PROTECTIONSTATUS_PROTECTED` in module `constants`
    --> src/chat.rs:4283:51
     |
4283 |         let is_verified = protected == constants::DC_CHAT_PROTECTIONSTATUS_PROTECTED;
     |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `constants`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:4276:45
     |
4276 |     let row = sql.query_row_optional(query, params).await?;
     |                   ------------------        ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row_optional`
    --> src/sql.rs:541:41
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ------------------ required by a bound in this associated function
...
541  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0061]: this method takes 3 arguments but 2 arguments were supplied
    --> src/chat.rs:4276:19
     |
4276 |     let row = sql.query_row_optional(query, params).await?;
     |                   ^^^^^^^^^^^^^^^^^^--------------- an argument is missing
     |
note: method defined here
    --> src/sql.rs:538:18
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ^^^^^^^^^^^^^^^^^^
539  |         &self,
540  |         sql: &str,
     |         ---------
541  |         params: impl rusqlite::Params + Send,
     |         ------------------------------------
542  |         f: F,
     |         ----
help: provide the argument
     |
4276 |     let row = sql.query_row_optional(query, params, /* f */).await?;
     |                                     ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `No` found for enum `Blocked` in the current scope
    --> src/chat.rs:4284:72
     |
4284 |         let blocked = if blocked != 0 { Blocked::Yes } else { Blocked::No };
     |                                                                        ^^
     |                                                                        |
     |                                                                        variant or associated item not found in `Blocked`
     |                                                                        help: there is a variant with a similar name: `Not`
     |
    ::: src/constants.rs:29:1
     |
29   | pub enum Blocked {
     | ---------------- variant or associated item `No` not found for this enum

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:4276:45
     |
4276 |     let row = sql.query_row_optional(query, params).await?;
     |                   ------------------        ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row_optional`
    --> src/sql.rs:541:41
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ------------------ required by a bound in this associated function
...
541  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0599]: no variant or associated item named `No` found for enum `constants::Blocked` in the current scope
    --> src/chat.rs:4284:72
     |
4284 |         let blocked = if blocked != 0 { Blocked::Yes } else { Blocked::No };
     |                                                                        ^^
     |                                                                        |
     |                                                                        variant or associated item not found in `Blocked`
     |                                                                        help: there is a variant with a similar name: `Not`
     |
    ::: src/constants.rs:29:1
     |
29   | pub enum Blocked {
     | ---------------- variant or associated item `No` not found for this enum

Some errors have detailed explanations: E0061, E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 4 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

