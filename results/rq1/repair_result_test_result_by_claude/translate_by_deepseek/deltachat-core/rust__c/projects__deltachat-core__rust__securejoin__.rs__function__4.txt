Fail
file path is :
projects/deltachat-core/rust/src/securejoin.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0432]: unresolved import `crate::securejoin::join_securejoin`
  --> src/events/chatlist_events.rs:77:41
   |
77 |         securejoin::{get_securejoin_qr, join_securejoin},
   |                                         ^^^^^^^^^^^^^^^
   |                                         |
   |                                         no `join_securejoin` in `securejoin`
   |                                         help: a similar name exists in the module: `securejoin`

error[E0432]: unresolved import `crate::securejoin::join_securejoin`
  --> src/test_utils.rs:43:44
   |
43 | use crate::securejoin::{get_securejoin_qr, join_securejoin};
   |                                            ^^^^^^^^^^^^^^^
   |                                            |
   |                                            no `join_securejoin` in `securejoin`
   |                                            help: a similar name exists in the module: `securejoin`

warning: function `securejoin` is never used
   --> src/securejoin.rs:151:10
    |
151 | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
    |          ^^^^^^^^^^
    |
note: the lint level is defined here
   --> src/lib.rs:6:5
    |
6   |     unused,
    |     ^^^^^^
    = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`

warning: function `start_protocol` is never used
  --> src/securejoin/bob.rs:33:21
   |
33 | pub(super) async fn start_protocol(context: &Context, invite: QrInvite) -> Result<ChatId> {
   |                     ^^^^^^^^^^^^^^

warning: variant `Error` is never constructed
   --> src/securejoin/bob.rs:228:5
    |
226 | pub(crate) enum JoinerProgress {
    |                 -------------- variant in this enum
227 |     /// An error occurred.
228 |     Error,
    |     ^^^^^

warning: variant `RequestSent` is never constructed
  --> src/securejoin/bobstate.rs:36:5
   |
34 | pub enum BobHandshakeStage {
   |          ----------------- variant in this enum
35 |     /// Step 2 completed: (vc|vg)-request message sent.
36 |     RequestSent,
   |     ^^^^^^^^^^^
   |
   = note: `BobHandshakeStage` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: associated functions `start_protocol`, `insert_new_db_entry`, and `from_db_id` are never used
   --> src/securejoin/bobstate.rs:88:18
    |
75  | impl BobState {
    | ------------- associated functions in this implementation
...
88  |     pub async fn start_protocol(
    |                  ^^^^^^^^^^^^^^
...
133 |     async fn insert_new_db_entry(
    |              ^^^^^^^^^^^^^^^^^^^
...
189 |     fn from_db_id(connection: &Connection, id: i64) -> rusqlite::Result<Self> {
    |        ^^^^^^^^^^

warning: variant `Request` is never constructed
   --> src/securejoin/bobstate.rs:416:5
    |
414 | enum BobHandshakeMsg {
    |      --------------- variant in this enum
415 |     /// vc-request or vg-request
416 |     Request,
    |     ^^^^^^^

warning: function `secure_join_started` is never used
   --> src/stock_str.rs:835:21
    |
835 | pub(crate) async fn secure_join_started(
    |                     ^^^^^^^^^^^^^^^^^^^

warning: function `securejoin_wait` is never used
   --> src/stock_str.rs:857:21
    |
857 | pub(crate) async fn securejoin_wait(context: &Context) -> String {
    |                     ^^^^^^^^^^^^^^^

warning: `deltachat` (lib) generated 8 warnings
error[E0425]: cannot find function `join_securejoin` in this scope
   --> src/securejoin.rs:825:9
    |
151 | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
    | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
825 |         join_securejoin(&bob.ctx, &qr).await.unwrap();
    |         ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

error[E0425]: cannot find function `join_securejoin` in this scope
    --> src/securejoin.rs:1040:19
     |
151  | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
     | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
1040 |         let ret = join_securejoin(&bob.ctx, "not a qr code").await;
     |                   ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

error[E0425]: cannot find function `join_securejoin` in this scope
    --> src/securejoin.rs:1077:9
     |
151  | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
     | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
1077 |         join_securejoin(&bob.ctx, &qr).await.unwrap();
     |         ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

error[E0425]: cannot find function `join_securejoin` in this scope
    --> src/securejoin.rs:1162:25
     |
151  | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
     | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
1162 |         let claire_id = join_securejoin(&bob, qr_stale).await?;
     |                         ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

error[E0425]: cannot find function `join_securejoin` in this scope
    --> src/securejoin.rs:1171:24
     |
151  | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
     | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
1171 |         let alice_id = join_securejoin(&bob, &qr).await?;
     |                        ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

error[E0425]: cannot find function `join_securejoin` in this scope
    --> src/securejoin.rs:1204:26
     |
151  | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
     | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
1204 |         let bob_chatid = join_securejoin(&bob.ctx, &qr).await?;
     |                          ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

error[E0425]: cannot find function `join_securejoin` in this scope
    --> src/securejoin.rs:1428:9
     |
151  | async fn securejoin(context: &Context, qr: &str) -> Result<ChatId> {
     | ------------------------------------------------------------------ similarly named function `securejoin` defined here
...
1428 |         join_securejoin(&bob.ctx, &qr).await.unwrap();
     |         ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `securejoin`

Some errors have detailed explanations: E0425, E0432.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `deltachat` (lib test) due to 9 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

