Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
    --> src/contact.rs:1256:31
     |
1256 |     if context.inner.magic != DC_CONTEXT_MAGIC || contact_id.is_special() {
     |                               ^^^^^^^^^^^^^^^^ not found in this scope

error[E0609]: no field `magic` on type `Arc<InnerContext>`
    --> src/contact.rs:1256:22
     |
1256 |     if context.inner.magic != DC_CONTEXT_MAGIC || contact_id.is_special() {
     |                      ^^^^^ unknown field
     |
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/contact.rs:1264:9
     |
1262 |     let count: i64 = context.sql.query_row(
     |                                  --------- required by a bound introduced by this call
1263 |         "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
1264 |         params![contact_id],
     |         ^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row`
    --> src/sql.rs:462:41
     |
459  |     pub async fn query_row<T, F>(
     |                  --------- required by a bound in this associated function
...
462  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/contact.rs:1274:9
     |
1272 |     let count: i64 = context.sql.query_row(
     |                                  --------- required by a bound introduced by this call
1273 |         "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
1274 |         params![contact_id, contact_id],
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row`
    --> src/sql.rs:462:41
     |
459  |     pub async fn query_row<T, F>(
     |                  --------- required by a bound in this associated function
...
462  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/contact.rs:1284:9
     |
1282 |     context.sql.execute(
     |                 ------- required by a bound introduced by this call
1283 |         "DELETE FROM contacts WHERE id=?;",
1284 |         params![contact_id],
     |         ^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
    --> src/sql.rs:404:41
     |
401  |     pub async fn execute(
     |                  ------- required by a bound in this associated function
...
404  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::execute`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/contact.rs:1264:9
     |
1262 |     let count: i64 = context.sql.query_row(
     |                                  --------- required by a bound introduced by this call
1263 |         "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
1264 |         params![contact_id],
     |         ^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row`
    --> src/sql.rs:462:41
     |
459  |     pub async fn query_row<T, F>(
     |                  --------- required by a bound in this associated function
...
462  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/contact.rs:1274:9
     |
1272 |     let count: i64 = context.sql.query_row(
     |                                  --------- required by a bound introduced by this call
1273 |         "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
1274 |         params![contact_id, contact_id],
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row`
    --> src/sql.rs:462:41
     |
459  |     pub async fn query_row<T, F>(
     |                  --------- required by a bound in this associated function
...
462  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/contact.rs:1284:9
     |
1282 |     context.sql.execute(
     |                 ------- required by a bound introduced by this call
1283 |         "DELETE FROM contacts WHERE id=?;",
1284 |         params![contact_id],
     |         ^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
    --> src/sql.rs:404:41
     |
401  |     pub async fn execute(
     |                  ------- required by a bound in this associated function
...
404  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::execute`

Some errors have detailed explanations: E0277, E0425, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 5 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

