Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:537:86
    |
537 |                 format!("Cannot rename {} because the table does not exist in Glue", src),
    |                                                                                      ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `owner` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:543:27
    |
543 |         .owner(from_table.owner())
    |                           ^^^^^ method not found in `Option<&Table>`
    |
note: the method `owner` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:86:5
    |
86  |     pub fn owner(&self) -> ::std::option::Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
543 |         .owner(from_table.expect("REASON").owner())
    |                          +++++++++++++++++

error[E0599]: no method named `table_type` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:544:32
    |
544 |         .table_type(from_table.table_type())
    |                                ^^^^^^^^^^ method not found in `Option<&Table>`
    |
note: the method `table_type` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:145:5
    |
145 |     pub fn table_type(&self) -> ::std::option::Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
544 |         .table_type(from_table.expect("REASON").table_type())
    |                               +++++++++++++++++

error[E0599]: no method named `parameters` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:545:32
    |
545 |         .parameters(from_table.parameters())
    |                                ^^^^^^^^^^ method not found in `Option<&Table>`
    |
note: the method `parameters` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:149:5
    |
149 |     pub fn parameters(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
545 |         .parameters(from_table.expect("REASON").parameters())
    |                               +++++++++++++++++

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:545:10
    |
545 |         .parameters(from_table.parameters())
    |          ^^^^^^^^^^------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
545 |         .parameters(from_table.parameters(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `storage_descriptor` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:546:40
    |
546 |         .storage_descriptor(from_table.storage_descriptor())
    |                                        ^^^^^^^^^^^^^^^^^^ method not found in `Option<&Table>`
    |
note: the method `storage_descriptor` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:110:5
    |
110 |     pub fn storage_descriptor(&self) -> ::std::option::Option<&crate::types::StorageDescriptor> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
546 |         .storage_descriptor(from_table.expect("REASON").storage_descriptor())
    |                                       +++++++++++++++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:572:109
    |
572 |                     format!("Failed to drop old table {} after renaming to {}, and failed to rollback: {}", src, dest, delete_error),
    |                                                                                                             ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:572:114
    |
572 |                     format!("Failed to drop old table {} after renaming to {}, and failed to rollback: {}", src, dest, delete_error),
    |                                                                                                                  ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:578:98
    |
578 |                 format!("Failed to drop old table {} after renaming to {}, rollback successful", src, dest),
    |                                                                                                  ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:578:103
    |
578 |                 format!("Failed to drop old table {} after renaming to {}, rollback successful", src, dest),
    |                                                                                                       ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg-catalog-glue` (lib test) due to 10 previous errors

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:537:86
    |
537 |                 format!("Cannot rename {} because the table does not exist in Glue", src),
    |                                                                                      ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `owner` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:543:27
    |
543 |         .owner(from_table.owner())
    |                           ^^^^^ method not found in `Option<&Table>`
    |
note: the method `owner` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:86:5
    |
86  |     pub fn owner(&self) -> ::std::option::Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
543 |         .owner(from_table.expect("REASON").owner())
    |                          +++++++++++++++++

error[E0599]: no method named `table_type` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:544:32
    |
544 |         .table_type(from_table.table_type())
    |                                ^^^^^^^^^^ method not found in `Option<&Table>`
    |
note: the method `table_type` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:145:5
    |
145 |     pub fn table_type(&self) -> ::std::option::Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
544 |         .table_type(from_table.expect("REASON").table_type())
    |                               +++++++++++++++++

error[E0599]: no method named `parameters` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:545:32
    |
545 |         .parameters(from_table.parameters())
    |                                ^^^^^^^^^^ method not found in `Option<&Table>`
    |
note: the method `parameters` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:149:5
    |
149 |     pub fn parameters(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
545 |         .parameters(from_table.expect("REASON").parameters())
    |                               +++++++++++++++++

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:545:10
    |
545 |         .parameters(from_table.parameters())
    |          ^^^^^^^^^^------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
545 |         .parameters(from_table.parameters(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `storage_descriptor` found for enum `std::option::Option` in the current scope
   --> crates/catalog/glue/src/catalog.rs:546:40
    |
546 |         .storage_descriptor(from_table.storage_descriptor())
    |                                        ^^^^^^^^^^^^^^^^^^ method not found in `Option<&Table>`
    |
note: the method `storage_descriptor` exists on the type `&aws_sdk_glue::types::Table`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table.rs:110:5
    |
110 |     pub fn storage_descriptor(&self) -> ::std::option::Option<&crate::types::StorageDescriptor> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `&aws_sdk_glue::types::Table` value, panicking if the value is an `Option::None`
    |
546 |         .storage_descriptor(from_table.expect("REASON").storage_descriptor())
    |                                       +++++++++++++++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:572:109
    |
572 |                     format!("Failed to drop old table {} after renaming to {}, and failed to rollback: {}", src, dest, delete_error),
    |                                                                                                             ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:572:114
    |
572 |                     format!("Failed to drop old table {} after renaming to {}, and failed to rollback: {}", src, dest, delete_error),
    |                                                                                                                  ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:578:98
    |
578 |                 format!("Failed to drop old table {} after renaming to {}, rollback successful", src, dest),
    |                                                                                                  ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:578:103
    |
578 |                 format!("Failed to drop old table {} after renaming to {}, rollback successful", src, dest),
    |                                                                                                       ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 10 previous errors

