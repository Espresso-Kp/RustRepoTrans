Fail
file path is :
projects/deltachat-core/rust/src/imap.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: expected one of `!` or `::`, found `s`
  --> src/imap.rs:19:1
   |
18 | u
   |  - expected one of `!` or `::`
19 | s
   | ^ unexpected token

error[E0432]: unresolved imports `crate::imap::session`, `crate::imap::Imap`
  --> src/configure.rs:28:19
   |
28 | use crate::imap::{session::Session as ImapSession, Imap};
   |                   ^^^^^^^                          ^^^^ no `Imap` in `imap`
   |                   |
   |                   could not find `session` in `imap`
   |
   = help: consider importing this variant instead:
           crate::provider::Protocol::Imap

error[E0432]: unresolved imports `crate::imap::FolderMeaning`, `crate::imap::Imap`, `crate::imap::ServerMetadata`
  --> src/context.rs:28:19
   |
28 | use crate::imap::{FolderMeaning, Imap, ServerMetadata};
   |                   ^^^^^^^^^^^^^  ^^^^  ^^^^^^^^^^^^^^ no `ServerMetadata` in `imap`
   |                   |              |
   |                   |              no `Imap` in `imap`
   |                   no `FolderMeaning` in `imap`
   |
   = help: consider importing this variant instead:
           crate::provider::Protocol::Imap

error[E0432]: unresolved import `crate::imap::session`
  --> src/download.rs:12:18
   |
12 | use crate::imap::session::Session;
   |                  ^^^^^^^ could not find `session` in `imap`

error[E0432]: unresolved import `crate::imap::markseen_on_imap_table`
  --> src/message.rs:25:5
   |
25 | use crate::imap::markseen_on_imap_table;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `markseen_on_imap_table` in `imap`

error[E0432]: unresolved import `crate::imap::scan_folders`
  --> src/quota.rs:11:18
   |
11 | use crate::imap::scan_folders::get_watched_folders;
   |                  ^^^^^^^^^^^^ could not find `scan_folders` in `imap`

error[E0432]: unresolved import `crate::imap::session`
  --> src/quota.rs:12:18
   |
12 | use crate::imap::session::Session as ImapSession;
   |                  ^^^^^^^ could not find `session` in `imap`

error[E0432]: unresolved imports `crate::imap::session`, `crate::imap::FolderMeaning`, `crate::imap::Imap`
  --> src/scheduler.rs:22:19
   |
22 | use crate::imap::{session::Session, FolderMeaning, Imap};
   |                   ^^^^^^^           ^^^^^^^^^^^^^  ^^^^ no `Imap` in `imap`
   |                   |                 |
   |                   |                 no `FolderMeaning` in `imap`
   |                   could not find `session` in `imap`
   |
   = help: consider importing this variant instead:
           crate::provider::Protocol::Imap

error[E0432]: unresolved imports `crate::imap::scan_folders`, `crate::imap::FolderMeaning`
  --> src/scheduler/connectivity.rs:10:19
   |
10 | use crate::imap::{scan_folders::get_watched_folder_configs, FolderMeaning};
   |                   ^^^^^^^^^^^^                              ^^^^^^^^^^^^^ no `FolderMeaning` in `imap`
   |                   |
   |                   could not find `scan_folders` in `imap`
   |
   = help: consider importing this unresolved item through its public re-export instead:
           crate::scheduler::FolderMeaning

error[E0432]: unresolved imports `crate::imap::markseen_on_imap_table`, `crate::imap::GENERATED_PREFIX`
  --> src/receive_imf.rs:27:19
   |
27 | use crate::imap::{markseen_on_imap_table, GENERATED_PREFIX};
   |                   ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `GENERATED_PREFIX` in `imap`
   |                   |
   |                   no `markseen_on_imap_table` in `imap`

error[E0425]: cannot find function `get_config_last_seen_uid` in module `imap`
   --> src/sql/migrations.rs:406:27
    |
406 |                     imap::get_config_last_seen_uid(context, &folder).await?;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^ not found in `imap`

error[E0425]: cannot find function `set_uid_next` in module `imap`
   --> src/sql/migrations.rs:408:27
    |
408 |                     imap::set_uid_next(context, &folder, last_seen_uid + 1).await?;
    |                           ^^^^^^^^^^^^ not found in `imap`

error[E0425]: cannot find function `set_uidvalidity` in module `imap`
   --> src/sql/migrations.rs:409:27
    |
409 |                     imap::set_uidvalidity(context, &folder, uid_validity).await?;
    |                           ^^^^^^^^^^^^^^^ not found in `imap`

error[E0425]: cannot find function `prefetch_get_message_id` in module `imap`
  --> src/receive_imf.rs:86:15
   |
86 |         imap::prefetch_get_message_id(&mail.headers).unwrap_or_else(imap::create_message_id);
   |               ^^^^^^^^^^^^^^^^^^^^^^^ not found in `imap`

error[E0425]: cannot find value `create_message_id` in module `imap`
  --> src/receive_imf.rs:86:75
   |
86 |         imap::prefetch_get_message_id(&mail.headers).unwrap_or_else(imap::create_message_id);
   |                                                                           ^^^^^^^^^^^^^^^^^ not found in `imap`

error[E0425]: cannot find function `is_dup_msg` in module `imap`
   --> src/receive_imf.rs:258:22
    |
258 |             if imap::is_dup_msg(
    |                      ^^^^^^^^^^ not found in `imap`

error[E0432]: unresolved imports `crate::imap::session`, `crate::imap::FolderMeaning`, `crate::imap::Imap`
  --> src/scheduler.rs:22:19
   |
22 | use crate::imap::{session::Session, FolderMeaning, Imap};
   |                   ^^^^^^^           ^^^^^^^^^^^^^  ^^^^ no `Imap` in `imap`
   |                   |                 |
   |                   |                 no `FolderMeaning` in `imap`
   |                   could not find `session` in `imap`
   |
   = note: unresolved item `crate::context::tests::FolderMeaning` exists but is inaccessible
   = help: consider importing this variant instead:
           crate::provider::Protocol::Imap

error[E0432]: unresolved imports `crate::imap::markseen_on_imap_table`, `crate::imap::GENERATED_PREFIX`
  --> src/receive_imf.rs:27:19
   |
27 | use crate::imap::{markseen_on_imap_table, GENERATED_PREFIX};
   |                   ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `GENERATED_PREFIX` in `imap`
   |                   |
   |                   no `markseen_on_imap_table` in `imap`
   |
   = note: unresolved item `crate::message::tests::markseen_on_imap_table` exists but is inaccessible

error[E0432]: unresolved import `crate::imap::prefetch_should_download`
  --> src/receive_imf/tests.rs:14:5
   |
14 | use crate::imap::prefetch_should_download;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `prefetch_should_download` in `imap`

error[E0282]: type annotations needed for `&(_, _)`
  --> src/quota.rs:52:13
   |
52 |         let (quota_roots, quotas) = &session.get_quota_root(&folder).await?;
   |             ^^^^^^^^^^^^^^^^^^^^^
...
58 |                     .iter()
   |                      ---- type must be known at this point
   |
help: consider giving this pattern a type, where the placeholders `_` are specified
   |
52 |         let (quota_roots, quotas): &(_, _) = &session.get_quota_root(&folder).await?;
   |                                  +++++++++

error[E0282]: type annotations needed for `&_`
   --> src/scheduler/connectivity.rs:367:25
    |
367 |                     let detailed = &state.get_detailed().await;
    |                         ^^^^^^^^
368 |                     ret += "<li>";
369 |                     ret += &*detailed.to_icon();
    |                                       ------- type must be known at this point
    |
help: consider giving `detailed` an explicit type, where the placeholders `_` are specified
    |
367 |                     let detailed: &_ = &state.get_detailed().await;
    |                                 ++++

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/scheduler/connectivity.rs:373:55
    |
373 |                     ret += &*escaper::encode_minimal(&detailed.to_string_imap(self).await);
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/scheduler/connectivity.rs:373:85
    |
373 |                     ret += &*escaper::encode_minimal(&detailed.to_string_imap(self).await);
    |                                                                                     ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::task::Poll::Ready`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/task/poll.rs:12:15
    |
12  | pub enum Poll<T> {
    |               ^ required by this bound in `Poll::Ready`
...
16  |     Ready(#[stable(feature = "futures_api", since = "1.36.0")] T),
    |     ----- required by a bound in this variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/scheduler/connectivity.rs:406:43
    |
406 |         ret += &*escaper::encode_minimal(&detailed.to_string_smtp(self).await);
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/scheduler/connectivity.rs:406:73
    |
406 |         ret += &*escaper::encode_minimal(&detailed.to_string_smtp(self).await);
    |                                                                         ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::task::Poll::Ready`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/task/poll.rs:12:15
    |
12  | pub enum Poll<T> {
    |               ^ required by this bound in `Poll::Ready`
...
16  |     Ready(#[stable(feature = "futures_api", since = "1.36.0")] T),
    |     ----- required by a bound in this variant

Some errors have detailed explanations: E0277, E0282, E0425, E0432.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 22 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 23 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

