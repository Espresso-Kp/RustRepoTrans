Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
warning: unused import: `DC_GCL_ADD_SELF`
  --> src/contact.rs:28:43
   |
28 | use crate::constants::{Blocked, Chattype, DC_GCL_ADD_SELF, DC_GCL_VERIFIED_ONLY};
   |                                           ^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0599]: `std::option::Option<std::string::String>` doesn't implement `std::fmt::Display`
    --> src/contact.rs:1012:71
     |
1012 |     let self_addr = context.get_config(Config::ConfiguredAddr).await?.to_string();
     |                                                                       ^^^^^^^^^ `std::option::Option<std::string::String>` cannot be formatted with the default formatter
     |
    ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:1
     |
570  | pub enum Option<T> {
     | ------------------ doesn't satisfy `_: Display` or `std::option::Option<std::string::String>: ToString`
     |
     = note: the following trait bounds were not satisfied:
             `std::option::Option<std::string::String>: std::fmt::Display`
             which is required by `std::option::Option<std::string::String>: ToString`
note: the method `to_string` exists on the type `std::string::String`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs:2589:5
     |
2589 |     fn to_string(&self) -> String;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::string::String` value, panicking if the value is an `Option::None`
     |
1012 |     let self_addr = context.get_config(Config::ConfiguredAddr).await?.expect("REASON").to_string();
     |                                                                      +++++++++++++++++

error[E0599]: `std::option::Option<std::string::String>` doesn't implement `std::fmt::Display`
    --> src/contact.rs:1013:68
     |
1013 |     let self_name = context.get_config(Config::Displayname).await?.to_string();
     |                                                                    ^^^^^^^^^ `std::option::Option<std::string::String>` cannot be formatted with the default formatter
     |
    ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:1
     |
570  | pub enum Option<T> {
     | ------------------ doesn't satisfy `_: Display` or `std::option::Option<std::string::String>: ToString`
     |
     = note: the following trait bounds were not satisfied:
             `std::option::Option<std::string::String>: std::fmt::Display`
             which is required by `std::option::Option<std::string::String>: ToString`
note: the method `to_string` exists on the type `std::string::String`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs:2589:5
     |
2589 |     fn to_string(&self) -> String;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::string::String` value, panicking if the value is an `Option::None`
     |
1013 |     let self_name = context.get_config(Config::Displayname).await?.expect("REASON").to_string();
     |                                                                   +++++++++++++++++

error[E0599]: no function or associated item named `from_u32` found for struct `ContactId` in the current scope
    --> src/contact.rs:1035:31
     |
55   | pub struct ContactId(u32);
     | -------------------- function or associated item `from_u32` not found for this struct
...
1035 |                 Ok(ContactId::from_u32(id))
     |                               ^^^^^^^^
     |                               |
     |                               function or associated item not found in `ContactId`
     |                               help: there is a method with a similar name: `to_u32`
     |
note: if you're trying to build a new `ContactId`, consider using `ContactId::new` which returns `ContactId`
    --> src/contact.rs:79:5
     |
79   |     pub const fn new(id: u32) -> ContactId {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `from_u32`, perhaps you need to implement it:
             candidate #1: `FromPrimitive`

error[E0599]: no function or associated item named `from_u32` found for struct `ContactId` in the current scope
    --> src/contact.rs:1060:31
     |
55   | pub struct ContactId(u32);
     | -------------------- function or associated item `from_u32` not found for this struct
...
1060 |                 Ok(ContactId::from_u32(id))
     |                               ^^^^^^^^
     |                               |
     |                               function or associated item not found in `ContactId`
     |                               help: there is a method with a similar name: `to_u32`
     |
note: if you're trying to build a new `ContactId`, consider using `ContactId::new` which returns `ContactId`
    --> src/contact.rs:79:5
     |
79   |     pub const fn new(id: u32) -> ContactId {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `from_u32`, perhaps you need to implement it:
             candidate #1: `FromPrimitive`

For more information about this error, try `rustc --explain E0599`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 4 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no function or associated item named `from_u32` found for struct `contact::ContactId` in the current scope
    --> src/contact.rs:1035:31
     |
55   | pub struct ContactId(u32);
     | -------------------- function or associated item `from_u32` not found for this struct
...
1035 |                 Ok(ContactId::from_u32(id))
     |                               ^^^^^^^^
     |                               |
     |                               function or associated item not found in `ContactId`
     |                               help: there is a method with a similar name: `to_u32`
     |
note: if you're trying to build a new `contact::ContactId`, consider using `contact::ContactId::new` which returns `contact::ContactId`
    --> src/contact.rs:79:5
     |
79   |     pub const fn new(id: u32) -> ContactId {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `from_u32`, perhaps you need to implement one of them:
             candidate #1: `FromPrimitive`
             candidate #2: `sysinfo::common::PidExt`
             candidate #3: `gimli::read::reader::ReaderOffset`

error[E0599]: no function or associated item named `from_u32` found for struct `contact::ContactId` in the current scope
    --> src/contact.rs:1060:31
     |
55   | pub struct ContactId(u32);
     | -------------------- function or associated item `from_u32` not found for this struct
...
1060 |                 Ok(ContactId::from_u32(id))
     |                               ^^^^^^^^
     |                               |
     |                               function or associated item not found in `ContactId`
     |                               help: there is a method with a similar name: `to_u32`
     |
note: if you're trying to build a new `contact::ContactId`, consider using `contact::ContactId::new` which returns `contact::ContactId`
    --> src/contact.rs:79:5
     |
79   |     pub const fn new(id: u32) -> ContactId {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `from_u32`, perhaps you need to implement one of them:
             candidate #1: `FromPrimitive`
             candidate #2: `sysinfo::common::PidExt`
             candidate #3: `gimli::read::reader::ReaderOffset`

warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 4 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

