Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:828:32
    |
828 |                     match self.get_draft_msg_id(context).await? {
    |                                ^^^^^^^^^^^^^^^^--------- an argument of type `ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:844:10
    |
844 | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
    |
828 |                     match self.get_draft_msg_id(context, /* ChatId */).await? {
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:848:53
    |
848 |     let row = context.sql.query_row_optional(query, params, |row| row.get::<_, u32>(0)).await?;
    |                           ------------------        ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |                           |
    |                           required by a bound introduced by this call
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row_optional`
   --> src/sql.rs:541:41
    |
538 |     pub async fn query_row_optional<T, F>(
    |                  ------------------ required by a bound in this associated function
...
541 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:864:20
    |
864 |         match self.get_draft_msg_id(context).await? {
    |                    ^^^^^^^^^^^^^^^^--------- an argument of type `ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:844:10
    |
844 | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
    |
864 |         match self.get_draft_msg_id(context, /* ChatId */).await? {
    |                                    ~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:877:20
    |
877 |         match self.get_draft_msg_id(context).await? {
    |                    ^^^^^^^^^^^^^^^^--------- an argument of type `ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:844:10
    |
844 | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
    |
877 |         match self.get_draft_msg_id(context, /* ChatId */).await? {
    |                                    ~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:828:32
    |
828 |                     match self.get_draft_msg_id(context).await? {
    |                                ^^^^^^^^^^^^^^^^--------- an argument of type `chat::ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:844:10
    |
844 | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
    |
828 |                     match self.get_draft_msg_id(context, /* chat::ChatId */).await? {
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:848:53
    |
848 |     let row = context.sql.query_row_optional(query, params, |row| row.get::<_, u32>(0)).await?;
    |                           ------------------        ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |                           |
    |                           required by a bound introduced by this call
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row_optional`
   --> src/sql.rs:541:41
    |
538 |     pub async fn query_row_optional<T, F>(
    |                  ------------------ required by a bound in this associated function
...
541 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:864:20
    |
864 |         match self.get_draft_msg_id(context).await? {
    |                    ^^^^^^^^^^^^^^^^--------- an argument of type `chat::ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:844:10
    |
844 | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
    |
864 |         match self.get_draft_msg_id(context, /* chat::ChatId */).await? {
    |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:877:20
    |
877 |         match self.get_draft_msg_id(context).await? {
    |                    ^^^^^^^^^^^^^^^^--------- an argument of type `chat::ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:844:10
    |
844 | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
    |
877 |         match self.get_draft_msg_id(context, /* chat::ChatId */).await? {
    |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4764:25
     |
4764 |         assert!(chat_id.get_draft_msg_id(&t).await?.is_none());
     |                         ^^^^^^^^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:844:10
     |
844  | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
     |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
     |
4764 |         assert!(chat_id.get_draft_msg_id(&t, /* chat::ChatId */).await?.is_none());
     |                                         ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4771:21
     |
4771 |             chat_id.get_draft_msg_id(&t).await?.unwrap()
     |                     ^^^^^^^^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:844:10
     |
844  | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
     |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
     |
4771 |             chat_id.get_draft_msg_id(&t, /* chat::ChatId */).await?.unwrap()
     |                                     ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4782:21
     |
4782 |             chat_id.get_draft_msg_id(&t).await?.unwrap()
     |                     ^^^^^^^^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:844:10
     |
844  | async fn get_draft_msg_id(&self, context: &Context, chat_id: ChatId) -> Result<Option<MsgId>> {
     |          ^^^^^^^^^^^^^^^^        -----------------  ---------------
help: provide the argument
     |
4782 |             chat_id.get_draft_msg_id(&t, /* chat::ChatId */).await?.unwrap()
     |                                     ~~~~~~~~~~~~~~~~~~~~~~~~

error: could not compile `deltachat` (lib test) due to 7 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

