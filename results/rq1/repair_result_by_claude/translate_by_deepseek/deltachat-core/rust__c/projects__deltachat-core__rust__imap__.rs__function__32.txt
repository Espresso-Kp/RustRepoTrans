<message>
you were asked to translate the given c function to rust and execute your response and get some error message.
Fix the bug in your previous response according to error message, c function, rust function signature, rust function dependencies(including function and variable dependencies), and data type declarations and rust function dependency libraries I provide(delimited with XML tags).
Only response the function results.
<previous response>
b'fn get_folder_meaning_by_name(folder_name: &str) -> FolderMeaning {\n    // try to get the folder meaning by the name of the folder.\n    // only used if the server does not support XLIST.\n    let mut ret_meaning = MEANING_UNKNOWN;\n\n    // TODO: lots languages missing - maybe there is a list somewhere on other MUAs?\n    // however, if we fail to find out the sent-folder,\n    // only watching this folder is not working. at least, this is no show stopper.\n    // CAVE: if possible, take care not to add a name here that is "sent" in one language\n    // but sth. different in others - a hard job.\n    static SENT_NAMES: &str =\n        ",sent,sent objects,gesendet,";\n\n    let lower = format!(",{}", folder_name).to_lowercase();\n    if SENT_NAMES.contains(&lower) {\n        ret_meaning = MEANING_SENT_OBJECTS;\n    }\n\n    ret_meaning\n}'
</previous response>
<error message>
Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
    Finished test [unoptimized + debuginfo] target(s) in 56.72s
    Starting 808 tests across 1 binary (1 skipped; run ID: 0559c234-8d24-4eb2-8bc4-2a46c9d267a7, nextest profile: default)
        PASS [   0.117s] deltachat accounts::tests::test_no_accounts_event_emitter
        PASS [   0.113s] deltachat aheader::tests::test_bad_headers
        PASS [   0.111s] deltachat aheader::tests::test_display_aheader
        PASS [   0.108s] deltachat aheader::tests::test_from_str
        PASS [   0.104s] deltachat aheader::tests::test_from_str_non_critical
        PASS [   0.103s] deltachat aheader::tests::test_from_str_reset
        PASS [   0.101s] deltachat aheader::tests::test_from_str_superflous_critical
        PASS [   0.094s] deltachat aheader::tests::test_good_headers
        PASS [   0.071s] deltachat authres::tests::test_remove_comments
        PASS [   0.183s] deltachat authres::tests::test_handle_authres
        PASS [   0.226s] deltachat accounts::tests::test_accounts_remove_last
        PASS [   0.034s] deltachat blob::tests::test_is_blob_name
        PASS [   0.184s] deltachat blob::tests::test_as_file_name
        PASS [   0.191s] deltachat authres::tests::test_update_authservid_candidates
        PASS [   0.262s] deltachat accounts::tests::test_account_new_open
        PASS [   0.207s] deltachat authres::tests::test_parse_authentication_results
        PASS [   0.264s] deltachat blob::tests::test_as_rel_path
        PASS [   0.324s] deltachat accounts::tests::test_migrate_account
        PASS [   0.331s] deltachat accounts::tests::test_accounts_share_translations
        PASS [   0.215s] deltachat blob::tests::test_create
        PASS [   0.244s] deltachat blob::tests::test_create_and_copy
        PASS [   0.067s] deltachat blob::tests::test_sanitise_name
        PASS [   0.325s] deltachat blob::tests::test_add_white_bg
        PASS [   0.249s] deltachat blob::tests::test_create_dup
        PASS [   0.278s] deltachat blob::tests::test_create_long_names
        PASS [   0.456s] deltachat accounts::tests::test_account_new_add_remove
        PASS [   0.258s] deltachat blob::tests::test_increation_in_blobdir
        PASS [   0.302s] deltachat blob::tests::test_create_from_name_long
        PASS [   0.222s] deltachat blob::tests::test_lowercase_ext
        PASS [   0.264s] deltachat blob::tests::test_double_ext_preserved
        PASS [   0.290s] deltachat blob::tests::test_create_from_path
        PASS [   0.236s] deltachat blob::tests::test_increation_not_blobdir
        PASS [   0.527s] deltachat authres::tests::test_autocrypt_in_mailinglist_ignored
        PASS [   0.529s] deltachat authres::tests::test_authres_in_mailinglist_ignored
        PASS [   0.262s] deltachat blob::tests::test_selfavatar_copy_without_recode
        PASS [   0.293s] deltachat blob::tests::test_selfavatar_in_blobdir
        PASS [   0.293s] deltachat blob::tests::test_suffix
        PASS [   0.248s] deltachat chat::tests::test_add_device_msg_labelled
        PASS [   0.304s] deltachat chat::tests::test_add_contact_to_chat_ex_add_self
        PASS [   0.286s] deltachat chat::tests::test_add_device_msg_label_only
        PASS [   0.248s] deltachat chat::tests::test_add_device_msg_unlabelled
        PASS [   0.277s] deltachat chat::tests::test_add_info_msg
        PASS [   0.244s] deltachat chat::tests::test_add_remove_contact_for_single
        PASS [   0.252s] deltachat chat::tests::test_add_info_msg_with_cmd
        PASS [   0.403s] deltachat blob::tests::test_selfavatar_outside_blobdir
        PASS [   0.250s] deltachat chat::tests::test_archive
        PASS [   0.252s] deltachat chat::tests::test_archive_fresh_msgs
        PASS [   0.230s] deltachat chat::tests::test_can_send_group
        PASS [   0.229s] deltachat chat::tests::test_change_quotes_on_reused_message_object
        PASS [   0.208s] deltachat chat::tests::test_classic_email_chat
        PASS [   0.238s] deltachat chat::tests::test_chat_info
        PASS [   0.412s] deltachat chat::tests::test_blob_renaming
        PASS [   0.209s] deltachat chat::tests::test_create_same_chat_twice
        PASS [   0.244s] deltachat chat::tests::test_create_for_contact_with_blocked
        PASS [   0.271s] deltachat chat::tests::test_contact_request_archive
        PASS [   0.228s] deltachat chat::tests::test_delete_and_reset_all_device_msgs
        PASS [   0.264s] deltachat chat::tests::test_contact_request_fresh_messages
        PASS [   0.218s] deltachat chat::tests::test_delete_draft
        PASS [   0.679s] deltachat blob::tests::test_send_big_gif_as_image
        PASS [   0.285s] deltachat chat::tests::test_delete_device_chat
        PASS [   0.440s] deltachat chat::tests::test_chat_get_color
        PASS [   0.280s] deltachat chat::tests::test_draft_stable_ids
        PASS [   0.782s] deltachat blob::tests::test_recode_image_rgba_png_to_jpeg
        PASS [   0.583s] deltachat chat::tests::test_broadcast
        PASS [   0.368s] deltachat chat::tests::test_device_chat_cannot_sent
        PASS [   0.258s] deltachat chat::tests::test_forward_info_msg
        PASS [   0.510s] deltachat chat::tests::test_chat_get_encryption_info
        PASS [   0.241s] deltachat chat::tests::test_get_draft
        PASS [   0.265s] deltachat chat::tests::test_get_chat_media
        PASS [   0.270s] deltachat chat::tests::test_get_draft_no_chat
        PASS [   0.316s] deltachat chat::tests::test_forwarding_draft_failing
        PASS [   0.213s] deltachat chat::tests::test_lookup_by_contact_id
        PASS [   0.292s] deltachat chat::tests::test_get_draft_no_draft
        PASS [   0.487s] deltachat chat::tests::test_forward
        PASS [   0.759s] deltachat chat::tests::test_broadcast_multidev
        PASS [   0.213s] deltachat chat::tests::test_marknoticed_chat
        PASS [   1.097s] deltachat blob::tests::test_recode_image_huge_jpg
        PASS [   0.350s] deltachat chat::tests::test_get_draft_special_chat_id
        PASS [   0.500s] deltachat chat::tests::test_forward_group
        PASS [   0.331s] deltachat chat::tests::test_lookup_self_by_contact_id
        PASS [   0.432s] deltachat chat::tests::test_group_with_removed_message_id
        PASS [   0.426s] deltachat chat::tests::test_lost_member_added
        PASS [   0.521s] deltachat chat::tests::test_leave_group
        PASS [   0.686s] deltachat chat::tests::test_forward_quote
        PASS [   0.504s] deltachat chat::tests::test_member_add_remove
        PASS [   1.643s] deltachat accounts::tests::test_accounts_sorted
        PASS [   0.331s] deltachat chat::tests::test_resend_info_message_fails
        PASS [   0.257s] deltachat chat::tests::test_set_chat_name
        PASS [   0.238s] deltachat chat::tests::test_set_mute_duration
        PASS [   0.487s] deltachat chat::tests::test_modify_chat_multi_device
        PASS [   0.409s] deltachat chat::tests::test_pinned_after_new_msgs
        PASS [   0.502s] deltachat chat::tests::test_only_minimal_data_are_forwarded
        PASS [   0.495s] deltachat chat::tests::test_parallel_member_remove
        PASS [   0.444s] deltachat chat::tests::test_resend_foreign_message_fails
        PASS [   0.526s] deltachat chat::tests::test_msg_with_implicit_member_add
        PASS [   1.574s] deltachat blob::tests::test_recode_image_1
        PASS [   0.265s] deltachat chat::tests::test_shall_attach_selfavatar
        PASS [   0.445s] deltachat chat::tests::test_resend_opportunistically_encryption
        PASS [   0.527s] deltachat chat::tests::test_quote_replies
        PASS [   0.471s] deltachat chat::tests::test_self_talk
        PASS [   0.216s] deltachat chat::tests::test_unarchive_if_muted
        PASS [   0.219s] deltachat chatlist::tests::test_load_broken
        PASS [   0.246s] deltachat chatlist::tests::test_get_summary_unwrap
        PASS [   0.225s] deltachat chatlist::tests::test_search_single_chat_without_authname
        PASS [   0.695s] deltachat chat::tests::test_resend_own_message
        PASS [   0.465s] deltachat chat::tests::test_sticker_gif
        PASS [   0.054s] deltachat color::tests::test_rgb_to_u32
        PASS [   0.335s] deltachat chat::tests::test_was_device_msg_ever_added
        PASS [   0.442s] deltachat chat::tests::test_sticker_png
        PASS [   0.290s] deltachat chatlist::tests::test_search_single_chat
        PASS [   0.462s] deltachat chat::tests::test_sync_adhoc_grp
        PASS [   0.583s] deltachat chat::tests::test_sticker_forward
        PASS [   0.099s] deltachat color::tests::test_str_to_angle
        PASS [   0.030s] deltachat config::tests::test_to_string
        PASS [   0.184s] deltachat config::tests::test_media_quality_config_option
        PASS [   0.315s] deltachat chatlist::tests::test_sort_self_talk_up_on_forward
        PASS [   0.548s] deltachat chat::tests::test_sync_name
        PASS [   0.545s] deltachat chat::tests::test_sync_visibility
        PASS [   0.024s] deltachat configure::auto_outlook::tests::test_parse_loginparam
        PASS [   0.055s] deltachat configure::auto_mozilla::tests::test_parse_lakenet_autoconfig
        PASS [   0.688s] deltachat chat::tests::test_sticker_jpeg
        PASS [   0.198s] deltachat config::tests::test_set_config_bool
        PASS [   0.465s] deltachat chatlist::tests::test_search_special_chat_names
        PASS [   0.218s] deltachat config::tests::test_self_addrs
        PASS [   0.028s] deltachat configure::auto_mozilla::tests::test_parse_outlook_autoconfig
        PASS [   0.283s] deltachat config::tests::test_set_config_addr
        PASS [   0.689s] deltachat chat::tests::test_sync_broadcast
        PASS [   0.248s] deltachat config::tests::test_set_config_bot
        PASS [   0.752s] deltachat chat::tests::test_sticker_jpeg_force
        PASS [   0.088s] deltachat configure::auto_outlook::tests::test_parse_redirect
        PASS [   0.072s] deltachat configure::server_params::tests::test_expand_param_vector
        PASS [   0.376s] deltachat chatlist::tests::test_try_load
        PASS [   0.060s] deltachat constants::tests::test_blocked_values
        PASS [   0.055s] deltachat constants::tests::test_chattype_values
        PASS [   0.032s] deltachat constants::tests::test_keygentype_values
        PASS [   0.817s] deltachat chat::tests::test_sync_muted
        PASS [   0.476s] deltachat config::tests::test_event_config_synced
        PASS [   0.167s] deltachat constants::tests::test_mediaquality_values
        PASS [   0.350s] deltachat config::tests::test_ui_config
        PASS [   0.155s] deltachat constants::tests::test_showemails_values
        PASS [   0.147s] deltachat constants::tests::test_videochattype_values
        PASS [   0.127s] deltachat contact::tests::test_addr_cmp
        PASS [   0.099s] deltachat contact::tests::test_contact_id_values
        PASS [   0.228s] deltachat contact::tests::test_add_or_lookup
        PASS [   0.935s] deltachat chat::tests::test_sync_blocked
        PASS [   0.044s] deltachat contact::tests::test_may_be_valid_addr
        PASS [   2.424s] deltachat blob::tests::test_recode_image_2
        PASS [   0.500s] deltachat config::tests::test_sync
        PASS [   0.053s] deltachat contact::tests::test_normalize_addr
        PASS [   0.030s] deltachat contact::tests::test_normalize_name
        PASS [   0.257s] deltachat contact::tests::test_contact_name_changes
        PASS [   0.217s] deltachat contact::tests::test_delete_and_recreate_contact
        PASS [   0.237s] deltachat contact::tests::test_delete
        PASS [   0.230s] deltachat contact::tests::test_get_contacts
        PASS [   0.195s] deltachat contact::tests::test_last_seen
        PASS [   0.203s] deltachat contact::tests::test_is_self_addr
        PASS [   0.040s] deltachat contact::tests::test_split_address_book
        PASS [   0.179s] deltachat contact::tests::test_name_in_address
        PASS [   0.345s] deltachat contact::tests::test_contact_get_encrinfo
        PASS [   2.823s] deltachat accounts::tests::test_accounts_ids_unique_increasing_and_persisted
        PASS [   0.737s] deltachat config::tests::test_no_sync_on_self_sent_msg
        PASS [   0.180s] deltachat contact::tests::test_remote_authnames_edit_empty
        PASS [   0.199s] deltachat contact::tests::test_remote_authnames_create_empty
        PASS [   0.212s] deltachat contact::tests::test_remote_authnames_update_to
        PASS [   2.641s] deltachat blob::tests::test_recode_image_balanced_png
        PASS [   0.250s] deltachat contact::tests::test_remote_authnames
        PASS [   0.357s] deltachat contact::tests::test_lookup_id_by_addr
        PASS [   0.500s] deltachat contact::tests::test_contact_get_color
        PASS [   0.188s] deltachat context::tests::no_crashes_on_context_deref
        PASS [   0.198s] deltachat context::tests::test_blobdir_exists
        PASS [   0.061s] deltachat context::tests::test_get_info_no_context
        PASS [   0.163s] deltachat context::tests::test_get_fresh_msgs
        PASS [   0.249s] deltachat context::tests::test_draft_self_report
        PASS [   0.336s] deltachat contact::tests::test_was_seen_recently
        PASS [   0.215s] deltachat context::tests::test_get_info
        PASS [   0.266s] deltachat context::tests::test_get_fresh_msgs_and_muted_until
        PASS [   0.283s] deltachat context::tests::test_get_fresh_msgs_and_muted_chats
        PASS [   0.071s] deltachat context::tests::test_with_blobdir_not_exists
        PASS [   3.145s] deltachat accounts::tests::test_account_new_open_conflict
        PASS [   0.629s] deltachat contact::tests::test_import_vcard_updates_only_key
        PASS [   0.081s] deltachat context::tests::test_with_empty_blobdir
        PASS [   0.283s] deltachat context::tests::test_get_info_completeness
        PASS [   0.224s] deltachat context::tests::test_ongoing
        PASS [   0.416s] deltachat contact::tests::test_was_seen_recently_event
        PASS [   0.033s] deltachat decrypt::tests::test_has_decrypted_pgp_armor
        PASS [   0.663s] deltachat contact::tests::test_make_n_import_vcard
        PASS [   0.136s] deltachat context::tests::test_wrong_blogdir
        PASS [   0.113s] deltachat context::tests::test_wrong_db
        PASS [   0.490s] deltachat contact::tests::test_verified_by_none
        PASS [   0.262s] deltachat context::tests::test_search_unaccepted_requests
        PASS [   0.510s] deltachat contact::tests::test_sync_create
        PASS [   0.276s] deltachat context::tests::test_search_msgs
        PASS [   0.246s] deltachat context::tests::test_sqlite_parent_not_exists
        PASS [   0.066s] deltachat dehtml::tests::test_dehtml
        PASS [   0.053s] deltachat dehtml::tests::test_dehtml_bold_text
        PASS [   0.032s] deltachat dehtml::tests::test_dehtml_case_sensitive_link
        PASS [   0.023s] deltachat dehtml::tests::test_dehtml_html_encoded
        PASS [   0.136s] deltachat dehtml::tests::test_dehtml_parse_br
        PASS [   0.135s] deltachat dehtml::tests::test_dehtml_parse_href
        PASS [   0.126s] deltachat dehtml::tests::test_dehtml_parse_p
        PASS [   0.120s] deltachat dehtml::tests::test_dehtml_parse_span
        PASS [   0.119s] deltachat dehtml::tests::test_pre_tag
        PASS [   0.049s] deltachat download::tests::test_downloadstate_values
        PASS [   0.160s] deltachat dehtml::tests::test_quote_div
        PASS [   0.144s] deltachat dehtml::tests::test_spaces
        PASS [   0.123s] deltachat dehtml::tests::test_unclosed_tags
        PASS [   0.686s] deltachat contact::tests::test_synchronize_status
        PASS [   0.735s] deltachat contact::tests::test_selfavatar_changed_event
        PASS [   0.495s] deltachat context::tests::test_get_next_msgs
        PASS [   0.267s] deltachat decrypt::tests::test_mixed_up_mime
        PASS [   0.053s] deltachat e2ee::tests::test_mailmime_parse
        PASS [   3.562s] deltachat accounts::tests::test_encrypted_account
        PASS [   0.398s] deltachat decrypt::tests::test_mixed_up_mime_long
        PASS [   2.284s] deltachat chat::tests::test_pinned
        PASS [   0.236s] deltachat download::tests::test_mdn_expands_to_nothing
        PASS [   0.264s] deltachat download::tests::test_download_limit
        PASS [   0.259s] deltachat e2ee::tests::ensure_secret_key_exists::test_not_configured
        PASS [   0.212s] deltachat ephemeral::tests::test_delete_expired_imap_messages
        PASS [   0.271s] deltachat download::tests::test_update_download_state
        PASS [   0.309s] deltachat download::tests::test_partial_download_and_ephemeral
        PASS [   0.287s] deltachat download::tests::test_partial_receive_imf
        PASS [   0.220s] deltachat e2ee::tests::test_should_encrypt
        PASS [   0.247s] deltachat e2ee::tests::ensure_secret_key_exists::test_prexisting
        PASS [   0.288s] deltachat ephemeral::tests::test_ephemeral_delete_msgs
        PASS [   0.253s] deltachat ephemeral::tests::test_ephemeral_msg_offline
        PASS [   0.411s] deltachat download::tests::test_status_update_expands_to_nothing
        PASS [   0.286s] deltachat ephemeral::tests::test_ephemeral_timer_references
        PASS [   0.212s] deltachat ephemeral::tests::test_stock_ephemeral_messages
        PASS [   3.768s] deltachat authres::tests::test_realworld_authentication_results
        PASS [   0.428s] deltachat e2ee::tests::test_encrypted_no_autocrypt
        PASS [   0.194s] deltachat events::chatlist_events::test_chatlist_events::test_change_chat_name
        PASS [   0.237s] deltachat events::chatlist_events::test_chatlist_events::test_adhoc_group
        PASS [   0.449s] deltachat ephemeral::tests::test_ephemeral_enable_disable
        PASS [   0.213s] deltachat events::chatlist_events::test_chatlist_events::test_change_chat_visibility
        PASS [   0.439s] deltachat ephemeral::tests::test_ephemeral_enable_lost
        PASS [   0.420s] deltachat ephemeral::tests::test_ephemeral_poi_location
        PASS [   0.262s] deltachat events::chatlist_events::test_chatlist_events::test_change_chat_profile_image
        PASS [   0.213s] deltachat events::chatlist_events::test_chatlist_events::test_create_broadcastlist
        PASS [   0.221s] deltachat events::chatlist_events::test_chatlist_events::test_create_group_chat
        PASS [   0.040s] deltachat headerdef::tests::kebab_test
        PASS [   2.796s] deltachat chat::tests::test_modify_chat_lost
        PASS [   0.050s] deltachat headerdef::tests::test_get_header_value_case
        PASS [   0.242s] deltachat events::chatlist_events::test_chatlist_events::test_delete_chat
        PASS [   0.334s] deltachat events::chatlist_events::test_chatlist_events::test_contact_name_update
        PASS [   0.427s] deltachat events::chatlist_events::test_chatlist_events::test_accept_contact_request
        PASS [   0.241s] deltachat events::chatlist_events::test_chatlist_events::test_delete_message
        PASS [   0.235s] deltachat events::chatlist_events::test_chatlist_events::test_reaction
        PASS [   0.252s] deltachat events::chatlist_events::test_chatlist_events::test_mute_chat
        PASS [   0.451s] deltachat events::chatlist_events::test_chatlist_events::test_block_contact_request
        PASS [   0.548s] deltachat ephemeral::tests::test_ephemeral_timer_rollback
        PASS [   0.460s] deltachat events::chatlist_events::test_chatlist_events::test_archived_counter_update_on_mark_noticed
        PASS [   0.469s] deltachat events::chatlist_events::test_chatlist_events::test_archived_counter_increases_for_muted_chats
        PASS [   0.215s] deltachat events::chatlist_events::test_chatlist_events::test_unblock_contact
        PASS [   0.206s] deltachat events::chatlist_events::test_chatlist_events::test_update_after_ephemeral_messages
        PASS [   0.321s] deltachat events::chatlist_events::test_chatlist_events::test_resend_message
        PASS [   0.238s] deltachat html::tests::test_get_html_invalid_msgid
        PASS [   0.248s] deltachat html::tests::test_cp1252_html
        PASS [   0.048s] deltachat imap::tests::test_build_sequence_sets
        PASS [   0.563s] deltachat events::chatlist_events::test_chatlist_events::test_contact_changed_avatar
        PASS [   0.224s] deltachat html::tests::test_htmlparse_alt_plain_html
        PASS [   0.211s] deltachat html::tests::test_htmlparse_html
        PASS [   0.242s] deltachat html::tests::test_htmlparse_alt_plain
        PASS [   0.267s] deltachat html::tests::test_htmlparse_alt_html
        FAIL [   0.097s] deltachat imap::tests::test_get_folder_meaning_by_name

--- STDOUT:              deltachat imap::tests::test_get_folder_meaning_by_name ---

running 1 test
test imap::tests::test_get_folder_meaning_by_name ... FAILED

failures:

failures:
    imap::tests::test_get_folder_meaning_by_name

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 808 filtered out; finished in 0.01s


--- STDERR:              deltachat imap::tests::test_get_folder_meaning_by_name ---
thread 'imap::tests::test_get_folder_meaning_by_name' panicked at src/imap.rs:2384:9:
assertion `left == right` failed
  left: Unknown
 right: Sent
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

   Canceling due to test failure: 22 tests still running
        PASS [   0.516s] deltachat events::chatlist_events::test_chatlist_events::test_msgs_noticed_on_chat
        PASS [   0.262s] deltachat html::tests::test_htmlparse_plain_flowed
        PASS [   0.289s] deltachat html::tests::test_htmlparse_apple_cid_jpg
        PASS [   0.220s] deltachat html::tests::test_htmlparse_plain_unspecified
        PASS [   0.362s] deltachat html::tests::test_html_forwarding
        PASS [   0.076s] deltachat imap::tests::test_uid_grouper
        PASS [   0.253s] deltachat html::tests::test_htmlparse_plain_iso88591
        PASS [   0.470s] deltachat events::chatlist_events::test_chatlist_events::test_receiving_group_and_group_changes
        PASS [   0.064s] deltachat imex::tests::test_decrypt_plaintext_autocrypt_setup_message
        PASS [   0.437s] deltachat html::tests::test_html_forwarding_encrypted
        PASS [   0.516s] deltachat events::chatlist_events::test_chatlist_events::test_secure_join_group
        PASS [   0.219s] deltachat imap::tests::test_set_uid_next_validity
        PASS [   0.239s] deltachat imap::tests::test_get_imap_search_command
        PASS [   0.047s] deltachat imex::tests::test_normalize_setup_code
        PASS [   0.212s] deltachat imex::tests::test_create_setup_code
        PASS [   0.060s] deltachat imex::tests::test_split_and_decrypt
        PASS [   0.037s] deltachat imex::transfer::tests::test_send_progress
        PASS [   0.042s] deltachat key::tests::test_asc_roundtrip
        PASS [   0.212s] deltachat imex::tests::test_export_private_key_to_asc_file
        PASS [   0.203s] deltachat imex::tests::test_export_public_key_to_asc_file
        PASS [   0.422s] deltachat html::tests::test_set_html
        PASS [   0.189s] deltachat imex::tests::test_key_transfer_k_9
        PASS [   0.515s] deltachat imex::tests::test_export_and_import_key
        PASS [   1.255s] deltachat ephemeral::tests::test_ephemeral_unpromoted
        PASS [   0.462s] deltachat imex::tests::test_render_setup_file
        PASS [   0.620s] deltachat imex::tests::test_import_second_key
        PASS [   0.576s] deltachat imex::tests::test_render_setup_file_newline_replace
        PASS [   3.881s] deltachat chat::tests::test_modify_chat_disordered
        PASS [   0.682s] deltachat imex::tests::test_key_transfer_non_self_sent
        PASS [   0.797s] deltachat imex::tests::test_key_transfer
        PASS [   3.043s] deltachat configure::tests::test_no_panic_on_bad_credentials
        PASS [   2.759s] deltachat context::tests::test_context_change_passphrase
        FAIL [   1.381s] deltachat imap::tests::test_target_folder_outgoing

--- STDOUT:              deltachat imap::tests::test_target_folder_outgoing ---

running 1 test
Testing: For folder INBOX, mvbox_move false, chat_msg false, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder INBOX, mvbox_move false, chat_msg true, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder INBOX, mvbox_move true, chat_msg false, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder INBOX, mvbox_move true, chat_msg true, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move false, chat_msg false, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move false, chat_msg true, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move true, chat_msg false, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move true, chat_msg true, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Spam, mvbox_move false, chat_msg false, accepted true, outgoing true, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

test imap::tests::test_target_folder_outgoing ... FAILED

failures:

failures:
    imap::tests::test_target_folder_outgoing

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 808 filtered out; finished in 1.35s


--- STDERR:              deltachat imap::tests::test_target_folder_outgoing ---
thread 'imap::tests::test_target_folder_outgoing' panicked at src/imap.rs:2546:9:
assertion `left == right` failed: For folder Spam, mvbox_move false, chat_msg false, accepted true, outgoing true, setupmessage false: expected Some("INBOX"), got None
  left: Some("INBOX")
 right: None
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

        FAIL [   1.365s] deltachat imap::tests::test_target_folder_setupmsg

--- STDOUT:              deltachat imap::tests::test_target_folder_setupmsg ---

running 1 test
Testing: For folder INBOX, mvbox_move false, chat_msg false, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder INBOX, mvbox_move false, chat_msg true, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder INBOX, mvbox_move true, chat_msg false, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder INBOX, mvbox_move true, chat_msg true, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move false, chat_msg false, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move false, chat_msg true, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move true, chat_msg false, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move true, chat_msg true, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

Testing: For folder Spam, mvbox_move false, chat_msg false, accepted false, outgoing true, setupmessage true

========== Chats of alice: ==========

test imap::tests::test_target_folder_setupmsg ... FAILED

failures:

failures:
    imap::tests::test_target_folder_setupmsg

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 808 filtered out; finished in 1.33s


--- STDERR:              deltachat imap::tests::test_target_folder_setupmsg ---
thread 'imap::tests::test_target_folder_setupmsg' panicked at src/imap.rs:2546:9:
assertion `left == right` failed: For folder Spam, mvbox_move false, chat_msg false, accepted false, outgoing true, setupmessage true: expected Some("INBOX"), got None
  left: Some("INBOX")
 right: None
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

        FAIL [   1.408s] deltachat imap::tests::test_target_folder_incoming_accepted

--- STDOUT:              deltachat imap::tests::test_target_folder_incoming_accepted ---

running 1 test
Testing: For folder INBOX, mvbox_move false, chat_msg false, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder INBOX, mvbox_move false, chat_msg true, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder INBOX, mvbox_move true, chat_msg false, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder INBOX, mvbox_move true, chat_msg true, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move false, chat_msg false, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move false, chat_msg true, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move true, chat_msg false, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Sent, mvbox_move true, chat_msg true, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

Testing: For folder Spam, mvbox_move false, chat_msg false, accepted true, outgoing false, setupmessage false

========== Chats of alice: ==========
Single#Chat#10: bob@example.net [bob@example.net] 

test imap::tests::test_target_folder_incoming_accepted ... FAILED

failures:

failures:
    imap::tests::test_target_folder_incoming_accepted

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 808 filtered out; finished in 1.39s


--- STDERR:              deltachat imap::tests::test_target_folder_incoming_accepted ---
thread 'imap::tests::test_target_folder_incoming_accepted' panicked at src/imap.rs:2546:9:
assertion `left == right` failed: For folder Spam, mvbox_move false, chat_msg false, accepted true, outgoing false, setupmessage false: expected Some("INBOX"), got None
  left: Some("INBOX")
 right: None
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

        FAIL [   1.495s] deltachat imap::tests::test_target_folder_incoming_request

--- STDOUT:              deltachat imap::tests::test_target_folder_incoming_request ---

running 1 test
Testing: For folder INBOX, mvbox_move false, chat_msg false, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder INBOX, mvbox_move false, chat_msg true, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder INBOX, mvbox_move true, chat_msg false, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder INBOX, mvbox_move true, chat_msg true, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move false, chat_msg false, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move false, chat_msg true, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move true, chat_msg false, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder Sent, mvbox_move true, chat_msg true, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder Spam, mvbox_move false, chat_msg false, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

Testing: For folder Spam, mvbox_move false, chat_msg true, accepted false, outgoing false, setupmessage false

========== Chats of alice: ==========

test imap::tests::test_target_folder_incoming_request ... FAILED

failures:

failures:
    imap::tests::test_target_folder_incoming_request

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 808 filtered out; finished in 1.48s


--- STDERR:              deltachat imap::tests::test_target_folder_incoming_request ---
thread 'imap::tests::test_target_folder_incoming_request' panicked at src/imap.rs:2546:9:
assertion `left == right` failed: For folder Spam, mvbox_move false, chat_msg true, accepted false, outgoing false, setupmessage false: expected Some("INBOX"), got None
  left: Some("INBOX")
 right: None
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

        PASS [   3.197s] deltachat context::tests::test_limit_search_msgs
        PASS [   1.796s] deltachat imex::tests::test_import_backup_reset_config_cache
        PASS [   3.541s] deltachat context::tests::test_check_passphrase
        PASS [   1.915s] deltachat imex::transfer::tests::test_drop_provider
        PASS [   2.365s] deltachat imex::transfer::tests::test_send_receive
        PASS [   3.248s] deltachat imex::tests::test_export_and_import_backup
------------
     Summary [   7.556s] 306/808 tests run: 301 passed, 5 failed, 1 skipped
        FAIL [   0.097s] deltachat imap::tests::test_get_folder_meaning_by_name
        FAIL [   1.408s] deltachat imap::tests::test_target_folder_incoming_accepted
        FAIL [   1.495s] deltachat imap::tests::test_target_folder_incoming_request
        FAIL [   1.381s] deltachat imap::tests::test_target_folder_outgoing
        FAIL [   1.365s] deltachat imap::tests::test_target_folder_setupmsg
error: test run failed
</error message>
<c function>
static int get_folder_meaning_by_name(const char* folder_name)
{
	// try to get the folder meaning by the name of the folder.
	// only used if the server does not support XLIST.
	int ret_meaning = MEANING_UNKNOWN;

	// TODO: lots languages missing - maybe there is a list somewhere on other MUAs?
	// however, if we fail to find out the sent-folder,
	// only watching this folder is not working. at least, this is no show stopper.
	// CAVE: if possible, take care not to add a name here that is "sent" in one language
	// but sth. different in others - a hard job.
	static const char* sent_names =
		",sent,sent objects,gesendet,";

	char* lower = dc_mprintf(",%s,", folder_name);
	dc_strlower_in_place(lower);
	if (strstr(sent_names, lower)!=NULL) {
		ret_meaning = MEANING_SENT_OBJECTS;
	}

	free(lower);
	return ret_meaning;
}
</c function>
<rust function signature>
fn get_folder_meaning_by_name(folder_name: &str) -> FolderMeaning 
</rust function signature>
<rust function dependencies, and data type declarations>
pub enum FolderMeaning {
    Unknown,

    /// Spam folder.
    Spam,
    Inbox,
    Mvbox,
    Sent,
    Trash,
    Drafts,

    /// Virtual folders.
    ///
    /// On Gmail there are virtual folders marked as \\All, \\Important and \\Flagged.
    /// Delta Chat ignores these folders because the same messages can be fetched
    /// from the real folder and the result of moving and deleting messages via
    /// virtual folder is unclear.
    Virtual,
}


</rust function dependencies and data type declarations>
<rust function dependency libraries>
use std::{
    cmp::max,
    cmp::min,
    collections::{BTreeMap, BTreeSet, HashMap},
    iter::Peekable,
    mem::take,
    sync::atomic::Ordering,
    time::{Duration, UNIX_EPOCH},
};
use anyhow::{bail, format_err, Context as _, Result};
use async_channel::Receiver;
use async_imap::types::{Fetch, Flag, Name, NameAttribute, UnsolicitedResponse};
use deltachat_contact_tools::{normalize_name, ContactAddress};
use futures::{FutureExt as _, StreamExt, TryStreamExt};
use futures_lite::FutureExt;
use num_traits::FromPrimitive;
use rand::Rng;
use ratelimit::Ratelimit;
use url::Url;
use crate::chat::{self, ChatId, ChatIdBlocked};
use crate::chatlist_events;
use crate::config::Config;
use crate::constants::{self, Blocked, Chattype, ShowEmails};
use crate::contact::{Contact, ContactId, Modifier, Origin};
use crate::context::Context;
use crate::events::EventType;
use crate::headerdef::{HeaderDef, HeaderDefMap};
use crate::login_param::{CertificateChecks, LoginParam, ServerLoginParam};
use crate::message::{self, Message, MessageState, MessengerMessage, MsgId, Viewtype};
use crate::mimeparser;
use crate::oauth2::get_oauth2_access_token;
use crate::provider::Socket;
use crate::receive_imf::{
    from_field_to_contact_id, get_prefetch_parent_message, receive_imf_inner, ReceivedMsg,
};
use crate::scheduler::connectivity::ConnectivityStore;
use crate::socks::Socks5Config;
use crate::sql;
use crate::stock_str;
use crate::tools::{self, create_id, duration_to_str};
use client::Client;
use mailparse::SingleInfo;
use session::Session;
use async_imap::imap_proto::Response;
use async_imap::imap_proto::ResponseCode;
use UnsolicitedResponse::*;
use super::*;
use crate::test_utils::TestContext;

</rust function dependency libraries>

</message>
<reapir response>
Based on the error message and the original C function, here's the corrected Rust function:

```rust
fn get_folder_meaning_by_name(folder_name: &str) -> FolderMeaning {
    // try to get the folder meaning by the name of the folder.
    // only used if the server does not support XLIST.
    let mut ret_meaning = FolderMeaning::Unknown;

    // TODO: lots languages missing - maybe there is a list somewhere on other MUAs?
    // however, if we fail to find out the sent-folder,
    // only watching this folder is not working. at least, this is no show stopper.
    // CAVE: if possible, take care not to add a name here that is "sent" in one language
    // but sth. different in others - a hard job.
    static SENT_NAMES: &str =
        ",sent,sent objects,gesendet,";

    let lower = format!(",{},", folder_name.to_lowercase());
    if SENT_NAMES.contains(&lower) {
        ret_meaning = FolderMeaning::Sent;
    }

    ret_meaning
}
```

The main changes are:

1. Changed `MEANING_UNKNOWN` to `FolderMeaning::Unknown`.
2. Changed `MEANING_SENT_OBJECTS` to `FolderMeaning::Sent`.
3. Used `to_lowercase()` instead of `dc_strlower_in_place()`.
4. Used Rust's `format!` macro instead of `dc_mprintf()`.
5. Used Rust's `contains()` method instead of `strstr()`.
6. Removed the need for explicit memory management (no `free()`).

These changes should resolve the error and make the function work as expected in Rust.</reapir response>