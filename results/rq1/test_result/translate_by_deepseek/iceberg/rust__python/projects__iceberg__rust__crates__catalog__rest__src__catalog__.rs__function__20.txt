Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `namespace_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:385:20
    |
385 |     let url = self.namespace_endpoint(namespace);
    |                    ^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
385 |     let url = self.config.namespace_endpoint(namespace);
    |                    +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:386:28
    |
386 |     let request = Request::delete(&url).build()?;
    |                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `status` found for unit type `()` in the current scope
   --> crates/catalog/rest/src/catalog.rs:389:17
    |
389 |     if response.status().as_u16() == NO_CONTENT {
    |                 ^^^^^^ method not found in `()`

error[E0599]: no method named `status` found for unit type `()` in the current scope
   --> crates/catalog/rest/src/catalog.rs:392:31
    |
392 |         let status = response.status();
    |                               ^^^^^^ method not found in `()`

error[E0599]: no method named `bytes` found for unit type `()` in the current scope
   --> crates/catalog/rest/src/catalog.rs:393:29
    |
393 |         let body = response.bytes().await?;
    |                             ^^^^^ method not found in `()`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:13
    |
393 |         let body = response.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:20
    |
393 |         let body = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:20
    |
393 |         let body = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:42
    |
393 |         let body = response.bytes().await?;
    |                                          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:403:28
    |
403 |         Err(error_response.error.into())
    |                            ^^^^^ private field

Some errors have detailed explanations: E0277, E0599, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `namespace_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:385:20
    |
385 |     let url = self.namespace_endpoint(namespace);
    |                    ^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
385 |     let url = self.config.namespace_endpoint(namespace);
    |                    +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:386:28
    |
386 |     let request = Request::delete(&url).build()?;
    |                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `status` found for unit type `()` in the current scope
   --> crates/catalog/rest/src/catalog.rs:389:17
    |
389 |     if response.status().as_u16() == NO_CONTENT {
    |                 ^^^^^^ method not found in `()`

error[E0599]: no method named `status` found for unit type `()` in the current scope
   --> crates/catalog/rest/src/catalog.rs:392:31
    |
392 |         let status = response.status();
    |                               ^^^^^^ method not found in `()`

error[E0599]: no method named `bytes` found for unit type `()` in the current scope
   --> crates/catalog/rest/src/catalog.rs:393:29
    |
393 |         let body = response.bytes().await?;
    |                             ^^^^^ method not found in `()`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:13
    |
393 |         let body = response.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:20
    |
393 |         let body = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:20
    |
393 |         let body = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:393:42
    |
393 |         let body = response.bytes().await?;
    |                                          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:403:28
    |
403 |         Err(error_response.error.into())
    |                            ^^^^^ private field

Some errors have detailed explanations: E0277, E0599, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 10 previous errors

