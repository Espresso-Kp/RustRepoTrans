Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
    Blocking waiting for file lock on package cache
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `ncomp` is defined multiple times
   --> src/./ecdh.rs:741:1
    |
661 | fn ncomp(t1: &[u8], t2: &[u8], n: usize) -> bool {
    | ------------------------------------------------ previous definition of the value `ncomp` here
...
741 | fn ncomp(t1: &[u8], t2: &[u8], n: usize) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ncomp` redefined here
    |
    = note: `ncomp` must be defined only once in the value namespace of this module

error[E0428]: the name `ecpsvdp_dh` is defined multiple times
   --> src/./ecdh.rs:748:1
    |
457 | pub fn ecpsvdp_dh(s: &[u8], wd: &[u8], z: &mut [u8]) -> isize {
    | ------------------------------------------------------------- previous definition of the value `ecpsvdp_dh` here
...
748 | fn ecpsvdp_dh(s: &[u8], wd: &[u8], z: &mut [u8]) -> isize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ecpsvdp_dh` redefined here
    |
    = note: `ecpsvdp_dh` must be defined only once in the value namespace of this module

error[E0428]: the name `kdf2` is defined multiple times
   --> src/./ecdh.rs:774:1
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    | ------------------------------------------------------------------------------ previous definition of the value `kdf2` here
...
774 | fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `kdf2` redefined here
    |
    = note: `kdf2` must be defined only once in the value namespace of this module

error[E0428]: the name `cbc_iv0_decrypt` is defined multiple times
   --> src/./ecdh.rs:800:1
    |
324 | pub fn cbc_iv0_decrypt(k: &[u8], c: &[u8]) -> Option<Vec<u8>> {
    | ------------------------------------------------------------- previous definition of the value `cbc_iv0_decrypt` here
...
800 | fn cbc_iv0_decrypt(k: &[u8], c: &[u8]) -> Option<Vec<u8>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `cbc_iv0_decrypt` redefined here
    |
    = note: `cbc_iv0_decrypt` must be defined only once in the value namespace of this module

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:705:13
    |
705 |     let k = kdf2(sha, &vz, Some(p1), 2 * aeskey);
    |             ^^^^-------------------------------- an argument of type `&mut [u8]` is missing
    |
note: function defined here
   --> src/./ecdh.rs:153:8
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |        ^^^^ ----------  --------  ----------------  -----------  ------------
help: provide the argument
    |
705 |     let k = kdf2(sha, &vz, Some(p1), 2 * aeskey, /* &mut [u8] */);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:708:18
    |
708 |         k1[i] = k[i];
    |                  ^-^
    |                   |
    |                   cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:709:18
    |
709 |         k2[i] = k[aeskey + i];
    |                  ^^^^^^^^^^^^
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0308]: mismatched types
   --> src/./ecdh.rs:718:36
    |
718 |     let l2 = intto_bytes(p2.len(), 8);
    |              -----------           ^ expected `&mut [u8]`, found integer
    |              |
    |              arguments to this function are incorrect
    |
note: function defined here
   --> src/./ecdh.rs:44:4
    |
44  | fn intto_bytes(n: usize, b: &mut [u8]) {
    |    ^^^^^^^^^^^           ------------

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:729:40
    |
729 |         ac[c.len() + p2.len() + i] = l2[i];
    |                                        ^-^
    |                                         |
    |                                         cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&anssi::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&brainpool::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&goldilocks::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&hifive::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nist256::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nist384::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nist521::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nums256e::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nums256w::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nums384e::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nums384w::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nums512w::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&nums512e::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&secp256k1::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&c25519::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&c41417::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&ed25519::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&bn254cx::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

error[E0308]: mismatched types
    --> src/./ecdh.rs:762:30
     |
762  |         let w_mul_sc = w.mul(&sc_mod_r);
     |                          --- ^^^^^^^^^ expected `&Big`, found `&()`
     |                          |
     |                          arguments to this method are incorrect
     |
     = note: expected reference `&bn254::big::Big`
                found reference `&()`
note: method defined here
    --> src/./ecp.rs:1074:12
     |
1074 |     pub fn mul(&self, e: &Big) -> ECP {
     |            ^^^        -------

Some errors have detailed explanations: E0061, E0308, E0428, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 28 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 28 previous errors

