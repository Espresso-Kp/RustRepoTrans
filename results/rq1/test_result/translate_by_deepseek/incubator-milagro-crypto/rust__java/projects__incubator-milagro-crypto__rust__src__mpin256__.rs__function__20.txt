Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin256.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin256.rs:568:33
    |
568 |       let r = Big::new_ints(&rom::CURVE_Order);
    |                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bls48_64.rs:81:1
    |
81  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
82  | |     0x2FFFF0000000001,
83  | |     0x11550278A769C21,
84  | |     0x14D1EB162029C21,
...   |
91  | |     0x0,
92  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `h` in this scope
   --> src/./mpin256.rs:592:52
    |
592 |         let h = hashit(sha, date, &hashit(sha, 0, &h, EFS), EFS);
    |                                                    ^ help: a local variable with a similar name exists: `p`

error[E0308]: mismatched types
   --> src/./mpin256.rs:570:24
    |
570 |         Big::randomnum(r, rng)
    |         -------------- ^ expected `&Big`, found `Big`
    |         |
    |         arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:824:12
    |
824 |     pub fn randomnum(q: &Big, rng: &mut RAND) -> Big {
    |            ^^^^^^^^^ -------
help: consider borrowing here
    |
570 |         Big::randomnum(&r, rng)
    |                        +

error[E0308]: mismatched types
   --> src/./mpin256.rs:574:16
    |
574 |     x.to_bytes(x);
    |       -------- ^ expected `&mut [u8]`, found `Big`
    |       |
    |       arguments to this method are incorrect
    |
note: method defined here
   --> src/./big.rs:510:12
    |
510 |     pub fn to_bytes(&self, b: &mut [u8]) {
    |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin256.rs:576:55
    |
576 |     let mut p = ECP::mapit(&hashit(sha, 0, client_id, EFS));
    |                             ------                    ^^^ expected `&mut [u8]`, found `usize`
    |                             |
    |                             arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin256.rs:576:28
     |
576  |     let mut p = ECP::mapit(&hashit(sha, 0, client_id, EFS));
     |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin256.rs:582:21
    |
582 |     let pin = pin % MAXPIN;
    |                     ^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot calculate the remainder of `usize` divided by `i32`
   --> src/./mpin256.rs:582:19
    |
582 |     let pin = pin % MAXPIN;
    |                   ^ no implementation for `usize % i32`
    |
    = help: the trait `Rem<i32>` is not implemented for `usize`
    = help: the following other types implement trait `Rem<Rhs>`:
              <usize as Rem>
              <usize as Rem<NonZero<usize>>>
              <usize as Rem<&usize>>
              <&'a usize as Rem<usize>>
              <&usize as Rem<&usize>>

error[E0308]: mismatched types
    --> src/./mpin256.rs:583:22
     |
583  |     let w = p.pinmul(pin, PBLEN);
     |               ------ ^^^ expected `i32`, found `usize`
     |               |
     |               arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
583  |     let w = p.pinmul(pin.try_into().unwrap(), PBLEN);
     |                         ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin256.rs:592:55
    |
592 |         let h = hashit(sha, date, &hashit(sha, 0, &h, EFS), EFS);
    |                                    ------             ^^^ expected `&mut [u8]`, found `usize`
    |                                    |
    |                                    arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: arguments to this function are incorrect
   --> src/./mpin256.rs:592:17
    |
592 |         let h = hashit(sha, date, &hashit(sha, 0, &h, EFS), EFS);
    |                 ^^^^^^            ------------------------  --- expected `&mut [u8]`, found `usize`
    |                                   |
    |                                   expected `&[u8]`, found `&bool`
    |
    = note: expected reference `&[u8]`
               found reference `&bool`
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^ ----------  --------  ---------  ------------

error[E0308]: mismatched types
    --> src/./mpin256.rs:593:28
     |
593  |         let w = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0433]: failed to resolve: use of undeclared type `PAIR256`
   --> src/./mpin256.rs:595:17
    |
595 |             p = PAIR256::g1mul(&p, &x);
    |                 ^^^^^^^ use of undeclared type `PAIR256`

error[E0433]: failed to resolve: use of undeclared type `PAIR256`
   --> src/./mpin256.rs:597:21
    |
597 |             let w = PAIR256::g1mul(&w, &x);
    |                     ^^^^^^^ use of undeclared type `PAIR256`

error[E0433]: failed to resolve: use of undeclared type `PAIR256`
   --> src/./mpin256.rs:601:21
    |
601 |             let p = PAIR256::g1mul(&p, &x);
    |                     ^^^^^^^ use of undeclared type `PAIR256`

error[E0433]: failed to resolve: use of undeclared type `PAIR256`
   --> src/./mpin256.rs:608:21
    |
608 |             let p = PAIR256::g1mul(&p, &x);
    |                     ^^^^^^^ use of undeclared type `PAIR256`

Some errors have detailed explanations: E0277, E0308, E0425, E0433.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 16 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 16 previous errors

