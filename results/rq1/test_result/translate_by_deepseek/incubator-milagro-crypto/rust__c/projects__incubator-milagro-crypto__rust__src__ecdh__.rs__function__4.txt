Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `new` is defined multiple times
   --> src/./ecdh.rs:178:1
    |
170 | fn new() -> Self {
    | ---------------- previous definition of the value `new` here
...
178 | fn new() -> Self {
    | ^^^^^^^^^^^^^^^^ `new` redefined here
    |
    = note: `new` must be defined only once in the value namespace of this module

error[E0428]: the name `process_array` is defined multiple times
   --> src/./ecdh.rs:181:1
    |
173 | fn process_array(&mut self, _: &[u8]) {}
    | ------------------------------------- previous definition of the value `process_array` here
...
181 | fn process_array(&mut self, _: &[u8]) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `process_array` redefined here
    |
    = note: `process_array` must be defined only once in the value namespace of this module

error[E0428]: the name `process_num` is defined multiple times
   --> src/./ecdh.rs:182:1
    |
174 | fn process_num(&mut self, _: i32) {}
    | --------------------------------- previous definition of the value `process_num` here
...
182 | fn process_num(&mut self, _: i32) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `process_num` redefined here
    |
    = note: `process_num` must be defined only once in the value namespace of this module

error[E0428]: the name `hash` is defined multiple times
   --> src/./ecdh.rs:183:1
    |
175 | fn hash(&self) -> [u8; 32] {
    | -------------------------- previous definition of the value `hash` here
...
183 | fn hash(&self) -> [u8; 48] {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `hash` redefined here
    |
    = note: `hash` must be defined only once in the value namespace of this module

error[E0428]: the name `new` is defined multiple times
   --> src/./ecdh.rs:186:1
    |
170 | fn new() -> Self {
    | ---------------- previous definition of the value `new` here
...
186 | fn new() -> Self {
    | ^^^^^^^^^^^^^^^^ `new` redefined here
    |
    = note: `new` must be defined only once in the value namespace of this module

error[E0428]: the name `process_array` is defined multiple times
   --> src/./ecdh.rs:189:1
    |
173 | fn process_array(&mut self, _: &[u8]) {}
    | ------------------------------------- previous definition of the value `process_array` here
...
189 | fn process_array(&mut self, _: &[u8]) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `process_array` redefined here
    |
    = note: `process_array` must be defined only once in the value namespace of this module

error[E0428]: the name `process_num` is defined multiple times
   --> src/./ecdh.rs:190:1
    |
174 | fn process_num(&mut self, _: i32) {}
    | --------------------------------- previous definition of the value `process_num` here
...
190 | fn process_num(&mut self, _: i32) {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `process_num` redefined here
    |
    = note: `process_num` must be defined only once in the value namespace of this module

error[E0428]: the name `hash` is defined multiple times
   --> src/./ecdh.rs:191:1
    |
175 | fn hash(&self) -> [u8; 32] {
    | -------------------------- previous definition of the value `hash` here
...
191 | fn hash(&self) -> [u8; 64] {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ `hash` redefined here
    |
    = note: `hash` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:173:18
    |
173 | fn process_array(&mut self, _: &[u8]) {}
    |                  ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:174:16
    |
174 | fn process_num(&mut self, _: i32) {}
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:175:9
    |
175 | fn hash(&self) -> [u8; 32] {
    |         ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:181:18
    |
181 | fn process_array(&mut self, _: &[u8]) {}
    |                  ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:182:16
    |
182 | fn process_num(&mut self, _: i32) {}
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:183:9
    |
183 | fn hash(&self) -> [u8; 48] {
    |         ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:189:18
    |
189 | fn process_array(&mut self, _: &[u8]) {}
    |                  ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:190:16
    |
190 | fn process_num(&mut self, _: i32) {}
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./ecdh.rs:191:9
    |
191 | fn hash(&self) -> [u8; 64] {
    |         ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0422]: cannot find struct, variant or union type `octet` in this scope
   --> src/./ecdh.rs:157:17
    |
157 |     let h_oct = octet { val: &mut h, len: h.len(), cap: h.len() };
    |                 ^^^^^ not found in this scope

error[E0411]: cannot find type `Self` in this scope
   --> src/./ecdh.rs:170:13
    |
170 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0411]: cannot find type `Self` in this scope
   --> src/./ecdh.rs:178:13
    |
178 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0411]: cannot find type `Self` in this scope
   --> src/./ecdh.rs:186:13
    |
186 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error: cannot construct `HASH256` with struct literal syntax due to private fields
   --> src/./ecdh.rs:171:9
    |
171 |         HASH256 {}
    |         ^^^^^^^
    |
    = note: private fields `length`, `h` and `w` that were not provided
help: you might have meant to use the `new` associated function
    |
171 |         HASH256::new()
    |                ~~~~~~~

error: cannot construct `HASH384` with struct literal syntax due to private fields
   --> src/./ecdh.rs:179:9
    |
179 |         HASH384 {}
    |         ^^^^^^^
    |
    = note: private fields `length`, `h` and `w` that were not provided
help: you might have meant to use the `new` associated function
    |
179 |         HASH384::new()
    |                ~~~~~~~

error: cannot construct `HASH512` with struct literal syntax due to private fields
   --> src/./ecdh.rs:187:9
    |
187 |         HASH512 {}
    |         ^^^^^^^
    |
    = note: private fields `length`, `h` and `w` that were not provided
help: you might have meant to use the `new` associated function
    |
187 |         HASH512::new()
    |                ~~~~~~~

error: cannot construct `hash256::HASH256` with struct literal syntax due to private fields
   --> src/./ecdh.rs:171:9
    |
171 |         HASH256 {}
    |         ^^^^^^^
    |
    = note: private fields `length`, `h` and `w` that were not provided
help: you might have meant to use the `new` associated function
    |
171 |         HASH256::new()
    |                ~~~~~~~

error: cannot construct `hash384::HASH384` with struct literal syntax due to private fields
   --> src/./ecdh.rs:179:9
    |
179 |         HASH384 {}
    |         ^^^^^^^
    |
    = note: private fields `length`, `h` and `w` that were not provided
help: you might have meant to use the `new` associated function
    |
179 |         HASH384::new()
    |                ~~~~~~~

error: cannot construct `hash512::HASH512` with struct literal syntax due to private fields
   --> src/./ecdh.rs:187:9
    |
187 |         HASH512 {}
    |         ^^^^^^^
    |
    = note: private fields `length`, `h` and `w` that were not provided
help: you might have meant to use the `new` associated function
    |
187 |         HASH512::new()
    |                ~~~~~~~

Some errors have detailed explanations: E0411, E0422, E0428.
For more information about an error, try `rustc --explain E0411`.
error: could not compile `amcl` (lib) due to 24 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 24 previous errors

