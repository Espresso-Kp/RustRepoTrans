Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
    --> src/chat.rs:3694:29
     |
3694 |         || context.magic != DC_CONTEXT_MAGIC
     |                             ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_EVENT_ERROR_SELF_NOT_IN_GROUP` in this scope
    --> src/chat.rs:3711:28
     |
3711 |         context.emit_event(DC_EVENT_ERROR_SELF_NOT_IN_GROUP, 0, "Cannot add contact to group; self not in group.");
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_UNPROMOTED` in this scope
    --> src/chat.rs:3715:40
     |
3715 |     if (from_handshake && chat.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                        ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_UNPROMOTED` in this scope
    --> src/chat.rs:3716:22
     |
3716 |         chat.set_int(DC_PARAM_UNPROMOTED, None);
     |                      ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BIDIRECT_VERIFIED` in this scope
    --> src/chat.rs:3731:60
     |
3731 |         if chat.is_protected() && contact.is_verified() != DC_BIDIRECT_VERIFIED {
     |                                                            ^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_STR_MSGADDMEMBER` in this scope
    --> src/chat.rs:3745:49
     |
3745 |         msg.text = dc_stock_system_msg(context, DC_STR_MSGADDMEMBER, contact.addr, None, ContactId::SELF);
     |                                                 ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CMD_MEMBER_ADDED_TO_GROUP` in this scope
    --> src/chat.rs:3746:21
     |
3746 |         msg.set_cmd(DC_CMD_MEMBER_ADDED_TO_GROUP);
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_CMD_ARG` in this scope
    --> src/chat.rs:3747:17
     |
3747 |         msg.set(DC_PARAM_CMD_ARG, contact.addr);
     |                 ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_CMD_ARG2` in this scope
    --> src/chat.rs:3748:21
     |
3748 |         msg.set_int(DC_PARAM_CMD_ARG2, flags);
     |                     ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `flags` in this scope
    --> src/chat.rs:3748:40
     |
3748 |         msg.set_int(DC_PARAM_CMD_ARG2, flags);
     |                                        ^^^^^ not found in this scope

error[E0425]: cannot find value `DC_EVENT_CHAT_MODIFIED` in this scope
    --> src/chat.rs:3751:24
     |
3751 |     context.emit_event(DC_EVENT_CHAT_MODIFIED, chat_id, 0);
     |                        ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

warning: unnecessary parentheses around `if` condition
    --> src/chat.rs:3715:8
     |
3715 |     if (from_handshake && chat.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |        ^                                                                     ^
     |
note: the lint level is defined here
    --> src/lib.rs:6:5
     |
6    |     unused,
     |     ^^^^^^
     = note: `#[warn(unused_parens)]` implied by `#[warn(unused)]`
help: remove these parentheses
     |
3715 -     if (from_handshake && chat.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
3715 +     if from_handshake && chat.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1 {
     |

error[E0599]: no function or associated item named `new_untyped` found for struct `message::Message` in the current scope
    --> src/chat.rs:3690:24
     |
3690 |     let msg = Message::new_untyped(context);
     |                        ^^^^^^^^^^^ function or associated item not found in `Message`
     |
    ::: src/message.rs:420:1
     |
420  | pub struct Message {
     | ------------------ function or associated item `new_untyped` not found for this struct
     |
note: if you're trying to build a new `message::Message`, consider using `message::Message::new` which returns `message::Message`
    --> src/message.rs:469:5
     |
469  |     pub fn new(viewtype: Viewtype) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null_or_invalid` found for reference `&context::Context` in the current scope
    --> src/chat.rs:3693:16
     |
3693 |     if context.is_null_or_invalid()
     |                ^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
    --> src/chat.rs:3694:20
     |
3694 |         || context.magic != DC_CONTEXT_MAGIC
     |                    ^^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `is_null` found for struct `Contact` in the current scope
    --> src/chat.rs:3695:20
     |
3695 |         || contact.is_null()
     |                    ^^^^^^^ method not found in `Contact`
     |
    ::: src/contact.rs:358:1
     |
358  | pub struct Contact {
     | ------------------ method `is_null` not found for this struct

error[E0308]: mismatched types
    --> src/chat.rs:3698:19
     |
3698 |         return Ok(success);
     |                -- ^^^^^^^ expected `bool`, found integer
     |                |
     |                arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3698:16
     |
3698 |         return Ok(success);
     |                ^^^-------^
     |                   |
     |                   this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0599]: no method named `reset_gossiped_timestamp` found for reference `&context::Context` in the current scope
    --> src/chat.rs:3701:13
     |
3701 |     context.reset_gossiped_timestamp(chat_id).await?;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0425]: cannot find function `real_group_exists` in this scope
    --> src/chat.rs:3703:8
     |
3703 |     if real_group_exists(context, chat_id) == 0
     |        ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `real_contact_exists` in this scope
    --> src/chat.rs:3704:13
     |
3704 |         || (real_contact_exists(context, contact_id) == 0 && contact_id != ContactId::SELF)
     |             ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `load_from_db` found for struct `Chat` in the current scope
    --> src/chat.rs:3705:17
     |
1480 | pub struct Chat {
     | --------------- method `load_from_db` not found for this struct
...
3705 |         || chat.load_from_db(context).await? == 0
     |            -----^^^^^^^^^^^^---------
     |            |    |
     |            |    this is an associated function, not a method
     |            help: use associated function syntax instead: `Chat::load_from_db(context)`
     |
     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in an impl for the type `Chat`
    --> src/chat.rs:1515:5
     |
1515 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
    --> src/chat.rs:3707:19
     |
3707 |         return Ok(success);
     |                -- ^^^^^^^ expected `bool`, found integer
     |                |
     |                arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3707:16
     |
3707 |         return Ok(success);
     |                ^^^-------^
     |                   |
     |                   this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0061]: this method takes 1 argument but 0 arguments were supplied
    --> src/chat.rs:3710:14
     |
3710 |     if !chat.is_self_in_chat().await? {
     |              ^^^^^^^^^^^^^^^-- an argument of type `&context::Context` is missing
     |
note: method defined here
    --> src/chat.rs:1696:25
     |
1696 |     pub(crate) async fn is_self_in_chat(&self, context: &Context) -> Result<bool> {
     |                         ^^^^^^^^^^^^^^^        -----------------
help: provide the argument
     |
3710 |     if !chat.is_self_in_chat(/* &context::Context */).await? {
     |                             ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 1 argument but 3 arguments were supplied
    --> src/chat.rs:3711:17
     |
3711 |         context.emit_event(DC_EVENT_ERROR_SELF_NOT_IN_GROUP, 0, "Cannot add contact to group; self not in group.");
     |                 ^^^^^^^^^^                                   -  ------------------------------------------------- unexpected argument of type `&'static str`
     |                                                              |
     |                                                              unexpected argument of type `{integer}`
     |
note: method defined here
    --> src/context.rs:595:12
     |
595  |     pub fn emit_event(&self, event: EventType) {
     |            ^^^^^^^^^^        ----------------
help: remove the extra arguments
     |
3711 -         context.emit_event(DC_EVENT_ERROR_SELF_NOT_IN_GROUP, 0, "Cannot add contact to group; self not in group.");
3711 +         context.emit_event(DC_EVENT_ERROR_SELF_NOT_IN_GROUP);
     |

error[E0308]: mismatched types
    --> src/chat.rs:3712:19
     |
3712 |         return Ok(success);
     |                -- ^^^^^^^ expected `bool`, found integer
     |                |
     |                arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3712:16
     |
3712 |         return Ok(success);
     |                ^^^-------^
     |                   |
     |                   this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0599]: no method named `get_int` found for struct `Chat` in the current scope
    --> src/chat.rs:3715:32
     |
1480 | pub struct Chat {
     | --------------- method `get_int` not found for this struct
...
3715 |     if (from_handshake && chat.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                ^^^^^^^
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `get_int`, perhaps you need to implement one of them:
             candidate #1: `Buf`
             candidate #2: `EnumProperty`
help: one of the expressions' fields has a method of the same name
     |
3715 |     if (from_handshake && chat.param.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                ++++++
help: there is a method with a similar name
     |
3715 |     if (from_handshake && chat.get_id(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                ~~~~~~

error[E0599]: no method named `set_int` found for struct `Chat` in the current scope
    --> src/chat.rs:3716:14
     |
1480 | pub struct Chat {
     | --------------- method `set_int` not found for this struct
...
3716 |         chat.set_int(DC_PARAM_UNPROMOTED, None);
     |              ^^^^^^^ method not found in `Chat`
     |
help: one of the expressions' fields has a method of the same name
     |
3716 |         chat.param.set_int(DC_PARAM_UNPROMOTED, None);
     |              ++++++

error[E0599]: no method named `is_null` found for struct `contact::Contact` in the current scope
    --> src/chat.rs:3695:20
     |
3695 |         || contact.is_null()
     |                    ^^^^^^^ method not found in `Contact`
     |
    ::: src/contact.rs:358:1
     |
358  | pub struct Contact {
     | ------------------ method `is_null` not found for this struct

error[E0061]: this method takes 1 argument but 2 arguments were supplied
    --> src/chat.rs:3720:30
     |
3720 |     self_addr = Some(context.get_config("configured_addr", "").to_string());
     |                              ^^^^^^^^^^ -----------------  -- unexpected argument of type `&'static str`
     |                                         |
     |                                         expected `Config`, found `&str`
     |
note: method defined here
    --> src/config.rs:411:18
     |
411  |     pub async fn get_config(&self, key: Config) -> Result<Option<String>> {
     |                  ^^^^^^^^^^        -----------
help: remove the extra argument
     |
3720 -     self_addr = Some(context.get_config("configured_addr", "").to_string());
3720 +     self_addr = Some(context.get_config(/* config::Config */).to_string());
     |

error[E0599]: `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:3720:64
     |
3720 |     self_addr = Some(context.get_config("configured_addr", "").to_string());
     |                                                                ^^^^^^^^^ `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>` cannot be formatted with the default formatter
     |
     = note: the following trait bounds were not satisfied:
             `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>: std::fmt::Display`
             which is required by `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>: ToString`

error[E0616]: field `addr` of struct `Contact` is private
    --> src/chat.rs:3721:16
     |
3721 |     if contact.addr.eq_ignore_ascii_case(&self_addr.unwrap()) {
     |                ^^^^ private field

error[E0308]: mismatched types
    --> src/chat.rs:3722:19
     |
3722 |         return Ok(success);
     |                -- ^^^^^^^ expected `bool`, found integer
     |                |
     |                arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3722:16
     |
3722 |         return Ok(success);
     |                ^^^-------^
     |                   |
     |                   this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0599]: no method named `is_contact_in_chat` found for reference `&context::Context` in the current scope
    --> src/chat.rs:3725:16
     |
3725 |     if context.is_contact_in_chat(chat_id, contact_id) {
     |                ^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0308]: mismatched types
    --> src/chat.rs:3727:23
     |
3727 |             return Ok(1);
     |                    -- ^ expected `bool`, found integer
     |                    |
     |                    arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3727:20
     |
3727 |             return Ok(1);
     |                    ^^^-^
     |                       |
     |                       this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0061]: this method takes 1 argument but 0 arguments were supplied
    --> src/chat.rs:3731:43
     |
3731 |         if chat.is_protected() && contact.is_verified() != DC_BIDIRECT_VERIFIED {
     |                                           ^^^^^^^^^^^-- an argument of type `&context::Context` is missing
     |
note: method defined here
    --> src/contact.rs:1423:18
     |
1423 |     pub async fn is_verified(&self, context: &Context) -> Result<bool> {
     |                  ^^^^^^^^^^^        -----------------
help: provide the argument
     |
3731 |         if chat.is_protected() && contact.is_verified(/* &context::Context */) != DC_BIDIRECT_VERIFIED {
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `load_from_db` found for struct `chat::Chat` in the current scope
    --> src/chat.rs:3705:17
     |
1480 | pub struct Chat {
     | --------------- method `load_from_db` not found for this struct
...
3705 |         || chat.load_from_db(context).await? == 0
     |            -----^^^^^^^^^^^^---------
     |            |    |
     |            |    this is an associated function, not a method
     |            help: use associated function syntax instead: `chat::Chat::load_from_db(context)`
     |
     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in an impl for the type `chat::Chat`
    --> src/chat.rs:1515:5
     |
1515 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `log_error` found for reference `&context::Context` in the current scope
    --> src/chat.rs:3732:21
     |
3732 |             context.log_error(0, "Only bidirectional verified contacts can be added to verified groups.");
     |                     ^^^^^^^^^ method not found in `&Context`

error[E0308]: mismatched types
    --> src/chat.rs:3733:23
     |
3733 |             return Ok(success);
     |                    -- ^^^^^^^ expected `bool`, found integer
     |                    |
     |                    arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3733:20
     |
3733 |             return Ok(success);
     |                    ^^^-------^
     |                       |
     |                       this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0599]: no method named `is_contact_in_chat` found for reference `&context::Context` in the current scope
    --> src/chat.rs:3735:20
     |
3735 |         if context.is_contact_in_chat(chat_id, contact_id) {
     |                    ^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0308]: mismatched types
    --> src/chat.rs:3736:23
     |
3736 |             return Ok(success);
     |                    -- ^^^^^^^ expected `bool`, found integer
     |                    |
     |                    arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3736:20
     |
3736 |             return Ok(success);
     |                    ^^^-------^
     |                       |
     |                       this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0599]: no method named `get_int` found for struct `chat::Chat` in the current scope
    --> src/chat.rs:3715:32
     |
1480 | pub struct Chat {
     | --------------- method `get_int` not found for this struct
...
3715 |     if (from_handshake && chat.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                ^^^^^^^
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `get_int`, perhaps you need to implement one of them:
             candidate #1: `Buf`
             candidate #2: `EnumProperty`
help: one of the expressions' fields has a method of the same name
     |
3715 |     if (from_handshake && chat.param.get_int(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                ++++++
help: there is a method with a similar name
     |
3715 |     if (from_handshake && chat.get_id(DC_PARAM_UNPROMOTED).unwrap_or(0) == 1) {
     |                                ~~~~~~

error[E0308]: mismatched types
    --> src/chat.rs:3738:82
     |
3738 |         if add_to_chat_contacts_table(context, chat_id, &[contact_id]).await? == 0 {
     |            ------------------------------------------------------------------    ^ expected `()`, found integer
     |            |
     |            expected because this is `()`

error[E0308]: mismatched types
    --> src/chat.rs:3739:23
     |
3739 |             return Ok(success);
     |                    -- ^^^^^^^ expected `bool`, found integer
     |                    |
     |                    arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3739:20
     |
3739 |             return Ok(success);
     |                    ^^^-------^
     |                       |
     |                       this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0277]: can't compare `bool` with `{integer}`
    --> src/chat.rs:3743:60
     |
3743 |     if chat.typ == Chattype::Group && chat.is_unpromoted() == 0 {
     |                                                            ^^ no implementation for `bool == {integer}`
     |
     = help: the trait `PartialEq<{integer}>` is not implemented for `bool`
     = help: the following other types implement trait `PartialEq<Rhs>`:
               <bool as PartialEq>
               <bool as PartialEq<bitvec::ptr::proxy::BitRef<'_, M, T, O>>>
               <bool as PartialEq<serde_json::Value>>
               <&bool as PartialEq<bitvec::ptr::proxy::BitRef<'_, M, T, O>>>

error[E0308]: mismatched types
    --> src/chat.rs:3743:63
     |
3743 |     if chat.typ == Chattype::Group && chat.is_unpromoted() == 0 {
     |                                                               ^ expected `bool`, found integer

error[E0616]: field `addr` of struct `Contact` is private
    --> src/chat.rs:3745:78
     |
3745 |         msg.text = dc_stock_system_msg(context, DC_STR_MSGADDMEMBER, contact.addr, None, ContactId::SELF);
     |                                                                              ^^^^ private field

error[E0425]: cannot find function `dc_stock_system_msg` in this scope
    --> src/chat.rs:3745:20
     |
3745 |         msg.text = dc_stock_system_msg(context, DC_STR_MSGADDMEMBER, contact.addr, None, ContactId::SELF);
     |                    ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0616]: field `addr` of struct `Contact` is private
    --> src/chat.rs:3747:43
     |
3747 |         msg.set(DC_PARAM_CMD_ARG, contact.addr);
     |                                           ^^^^ private field

error[E0599]: no method named `set_int` found for struct `chat::Chat` in the current scope
    --> src/chat.rs:3716:14
     |
1480 | pub struct Chat {
     | --------------- method `set_int` not found for this struct
...
3716 |         chat.set_int(DC_PARAM_UNPROMOTED, None);
     |              ^^^^^^^ method not found in `chat::Chat`
     |
help: one of the expressions' fields has a method of the same name
     |
3716 |         chat.param.set_int(DC_PARAM_UNPROMOTED, None);
     |              ++++++

error[E0599]: no method named `send_msg` found for reference `&context::Context` in the current scope
    --> src/chat.rs:3749:26
     |
3749 |         msg.id = context.send_msg(chat_id, msg).await?;
     |                          ^^^^^^^^ help: there is a method with a similar name: `send_sync_msg`

error[E0061]: this method takes 1 argument but 3 arguments were supplied
    --> src/chat.rs:3751:13
     |
3751 |     context.emit_event(DC_EVENT_CHAT_MODIFIED, chat_id, 0);
     |             ^^^^^^^^^^                         -------  - unexpected argument of type `{integer}`
     |                                                |
     |                                                unexpected argument of type `ChatId`
     |
note: method defined here
    --> src/context.rs:595:12
     |
595  |     pub fn emit_event(&self, event: EventType) {
     |            ^^^^^^^^^^        ----------------
help: remove the extra arguments
     |
3751 -     context.emit_event(DC_EVENT_CHAT_MODIFIED, chat_id, 0);
3751 +     context.emit_event(DC_EVENT_CHAT_MODIFIED);
     |

error[E0616]: field `addr` of struct `contact::Contact` is private
    --> src/chat.rs:3721:16
     |
3721 |     if contact.addr.eq_ignore_ascii_case(&self_addr.unwrap()) {
     |                ^^^^ private field

error[E0308]: mismatched types
    --> src/chat.rs:3753:8
     |
3753 |     Ok(1)
     |     -- ^ expected `bool`, found integer
     |     |
     |     arguments to this enum variant are incorrect
     |
help: the type constructed contains `{integer}` due to the type of the argument passed
    --> src/chat.rs:3753:5
     |
3753 |     Ok(1)
     |     ^^^-^
     |        |
     |        this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0616]: field `addr` of struct `contact::Contact` is private
    --> src/chat.rs:3745:78
     |
3745 |         msg.text = dc_stock_system_msg(context, DC_STR_MSGADDMEMBER, contact.addr, None, ContactId::SELF);
     |                                                                              ^^^^ private field

error[E0616]: field `addr` of struct `contact::Contact` is private
    --> src/chat.rs:3747:43
     |
3747 |         msg.set(DC_PARAM_CMD_ARG, contact.addr);
     |                                           ^^^^ private field

error[E0061]: this method takes 1 argument but 3 arguments were supplied
    --> src/chat.rs:3751:13
     |
3751 |     context.emit_event(DC_EVENT_CHAT_MODIFIED, chat_id, 0);
     |             ^^^^^^^^^^                         -------  - unexpected argument of type `{integer}`
     |                                                |
     |                                                unexpected argument of type `chat::ChatId`
     |
note: method defined here
    --> src/context.rs:595:12
     |
595  |     pub fn emit_event(&self, event: EventType) {
     |            ^^^^^^^^^^        ----------------
help: remove the extra arguments
     |
3751 -     context.emit_event(DC_EVENT_CHAT_MODIFIED, chat_id, 0);
3751 +     context.emit_event(DC_EVENT_CHAT_MODIFIED);
     |

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 47 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 47 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

