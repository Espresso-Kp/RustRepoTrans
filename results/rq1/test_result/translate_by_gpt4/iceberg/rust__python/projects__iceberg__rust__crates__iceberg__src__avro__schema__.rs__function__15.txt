Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
error[E0053]: method `primitive` has an incompatible type for trait
   --> crates/iceberg/src/avro/schema.rs:450:49
    |
450 | fn primitive(&mut self, schema: &AvroSchema) -> Result<PrimitiveType> {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^
    |                                                 |
    |                                                 expected `Option<Type>`, found `datatypes::PrimitiveType`
    |                                                 help: change the output type to match the trait: `std::result::Result<std::option::Option<datatypes::Type>, error::Error>`
    |
note: type in trait
   --> crates/iceberg/src/avro/schema.rs:293:53
    |
293 |     fn primitive(&mut self, schema: &AvroSchema) -> Result<Self::T>;
    |                                                     ^^^^^^^^^^^^^^^
    = note: expected signature `fn(&mut AvroSchemaToSchema, &apache_avro::Schema) -> std::result::Result<std::option::Option<datatypes::Type>, _>`
               found signature `fn(&mut AvroSchemaToSchema, &apache_avro::Schema) -> std::result::Result<datatypes::PrimitiveType, _>`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:468:80
    |
468 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(PrimitiveType::Fixed(*size)),
    |                                                           -------------------- ^^^^^ expected `u64`, found `usize`
    |                                                           |
    |                                                           arguments to this enum variant are incorrect
    |
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:231:5
    |
231 |     Fixed(u64),
    |     ^^^^^
help: you can convert a `usize` to a `u64` and panic if the converted value doesn't fit
    |
468 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(PrimitiveType::Fixed((*size).try_into().unwrap())),
    |                                                                                +     +++++++++++++++++++++

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:470:24
    |
470 |             precision: *precision,
    |                        ^^^^^^^^^^ expected `u32`, found `usize`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:471:20
    |
471 |             scale: *scale,
    |                    ^^^^^^ expected `u32`, found `usize`

Some errors have detailed explanations: E0053, E0308.
For more information about an error, try `rustc --explain E0053`.
error: could not compile `iceberg` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 4 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
error[E0053]: method `primitive` has an incompatible type for trait
   --> crates/iceberg/src/avro/schema.rs:450:49
    |
450 | fn primitive(&mut self, schema: &AvroSchema) -> Result<PrimitiveType> {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^
    |                                                 |
    |                                                 expected `Option<Type>`, found `datatypes::PrimitiveType`
    |                                                 help: change the output type to match the trait: `std::result::Result<std::option::Option<datatypes::Type>, error::Error>`
    |
note: type in trait
   --> crates/iceberg/src/avro/schema.rs:293:53
    |
293 |     fn primitive(&mut self, schema: &AvroSchema) -> Result<Self::T>;
    |                                                     ^^^^^^^^^^^^^^^
    = note: expected signature `fn(&mut AvroSchemaToSchema, &apache_avro::Schema) -> std::result::Result<std::option::Option<datatypes::Type>, _>`
               found signature `fn(&mut AvroSchemaToSchema, &apache_avro::Schema) -> std::result::Result<datatypes::PrimitiveType, _>`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:468:80
    |
468 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(PrimitiveType::Fixed(*size)),
    |                                                           -------------------- ^^^^^ expected `u64`, found `usize`
    |                                                           |
    |                                                           arguments to this enum variant are incorrect
    |
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:231:5
    |
231 |     Fixed(u64),
    |     ^^^^^
help: you can convert a `usize` to a `u64` and panic if the converted value doesn't fit
    |
468 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(PrimitiveType::Fixed((*size).try_into().unwrap())),
    |                                                                                +     +++++++++++++++++++++

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:470:24
    |
470 |             precision: *precision,
    |                        ^^^^^^^^^^ expected `u32`, found `usize`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:471:20
    |
471 |             scale: *scale,
    |                    ^^^^^^ expected `u32`, found `usize`

Some errors have detailed explanations: E0053, E0308.
For more information about an error, try `rustc --explain E0053`.
error: could not compile `iceberg` (lib) due to 4 previous errors

