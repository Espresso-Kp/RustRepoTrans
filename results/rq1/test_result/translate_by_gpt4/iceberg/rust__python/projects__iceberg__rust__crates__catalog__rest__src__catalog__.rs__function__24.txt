Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/integrations/datafusion)
error[E0252]: the name `Request` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:31:23
   |
22 | use reqwest::{Request, Response};
   |               ------- previous import of the type `Request` here
...
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^--
   |                       |
   |                       `Request` reimported here
   |                       help: remove unnecessary import
   |
   = note: `Request` must be defined only once in the type namespace of this module

error[E0252]: the name `Response` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:31:32
   |
22 | use reqwest::{Request, Response};
   |                        -------- previous import of the type `Response` here
...
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                                ^^^^^^^^--
   |                                |
   |                                `Response` reimported here
   |                                help: remove unnecessary import
   |
   = note: `Response` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `http`
  --> crates/catalog/rest/src/catalog.rs:23:5
   |
23 | use http::StatusCode;
   |     ^^^^ use of undeclared crate or module `http`

error[E0423]: expected value, found enum `Infallible`
   --> crates/catalog/rest/src/catalog.rs:497:59
    |
497 |     let request = Request::delete(table_url.clone()).body(Infallible).unwrap();
    |                                                           ^^^^^^^^^^

warning: unused imports: `Request`, `Response`
  --> crates/catalog/rest/src/catalog.rs:31:23
   |
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^  ^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `table_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:495:26
    |
495 |     let table_url = self.table_endpoint(table);
    |                          ^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
495 |     let table_url = self.config.table_endpoint(table);
    |                          +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:28
    |
497 |     let request = Request::delete(table_url.clone()).body(Infallible).unwrap();
    |                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `execute` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:498:25
    |
498 |     let response = self.execute::<ErrorResponse, NO_CONTENT>(request).await;
    |                         ^^^^^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `execute`, perhaps you need to implement one of them:
            candidate #1: `hyper::rt::Executor`
            candidate #2: `opendal::types::execute::api::Execute`
            candidate #3: `hyper::rt::Executor`
            candidate #4: `anstyle_parse::Perform`
help: one of the expressions' fields has a method of the same name
    |
498 |     let response = self.client.execute::<ErrorResponse, NO_CONTENT>(request).await;
    |                         +++++++

error[E0599]: no method named `status` found for enum `Result` in the current scope
   --> crates/catalog/rest/src/catalog.rs:502:34
    |
502 |         Err(e) => match response.status() {
    |                                  ^^^^^^ method not found in `Result<(), _>`

error[E0599]: no associated item named `NoSuchTableError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/rest/src/catalog.rs:503:49
    |
503 |             StatusCode::NOT_FOUND => Err(Error::NoSuchTableError),
    |                                                 ^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0252, E0423, E0432, E0599.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg-catalog-rest` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-rest` (lib test) due to 9 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
error[E0252]: the name `Request` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:31:23
   |
22 | use reqwest::{Request, Response};
   |               ------- previous import of the type `Request` here
...
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^--
   |                       |
   |                       `Request` reimported here
   |                       help: remove unnecessary import
   |
   = note: `Request` must be defined only once in the type namespace of this module

error[E0252]: the name `Response` is defined multiple times
  --> crates/catalog/rest/src/catalog.rs:31:32
   |
22 | use reqwest::{Request, Response};
   |                        -------- previous import of the type `Response` here
...
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                                ^^^^^^^^--
   |                                |
   |                                `Response` reimported here
   |                                help: remove unnecessary import
   |
   = note: `Response` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `http`
  --> crates/catalog/rest/src/catalog.rs:23:5
   |
23 | use http::StatusCode;
   |     ^^^^ use of undeclared crate or module `http`

error[E0423]: expected value, found enum `Infallible`
   --> crates/catalog/rest/src/catalog.rs:497:59
    |
497 |     let request = Request::delete(table_url.clone()).body(Infallible).unwrap();
    |                                                           ^^^^^^^^^^

warning: unused imports: `Request`, `Response`
  --> crates/catalog/rest/src/catalog.rs:31:23
   |
31 | use reqwest::{Client, Request, Response, StatusCode, Url};
   |                       ^^^^^^^  ^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `table_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:495:26
    |
495 |     let table_url = self.table_endpoint(table);
    |                          ^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
495 |     let table_url = self.config.table_endpoint(table);
    |                          +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:28
    |
497 |     let request = Request::delete(table_url.clone()).body(Infallible).unwrap();
    |                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `execute` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:498:25
    |
498 |     let response = self.execute::<ErrorResponse, NO_CONTENT>(request).await;
    |                         ^^^^^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `execute`, perhaps you need to implement one of them:
            candidate #1: `hyper::rt::Executor`
            candidate #2: `opendal::types::execute::api::Execute`
help: one of the expressions' fields has a method of the same name
    |
498 |     let response = self.client.execute::<ErrorResponse, NO_CONTENT>(request).await;
    |                         +++++++

error[E0599]: no method named `status` found for enum `Result` in the current scope
   --> crates/catalog/rest/src/catalog.rs:502:34
    |
502 |         Err(e) => match response.status() {
    |                                  ^^^^^^ method not found in `Result<(), _>`

error[E0599]: no associated item named `NoSuchTableError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/rest/src/catalog.rs:503:49
    |
503 |             StatusCode::NOT_FOUND => Err(Error::NoSuchTableError),
    |                                                 ^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0252, E0423, E0432, E0599.
For more information about an error, try `rustc --explain E0252`.
warning: `iceberg-catalog-rest` (lib) generated 1 warning
error: could not compile `iceberg-catalog-rest` (lib) due to 9 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

