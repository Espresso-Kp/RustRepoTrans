Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `batch` in this scope
   --> crates/iceberg/src/arrow/reader.rs:558:72
    |
558 |     let always_true = || Box::new(|_| Ok(BooleanArray::from(vec![true; batch.len()])));
    |                                                                        ^^^^^ not found in this scope

error[E0425]: cannot find value `AlwaysTrue` in this scope
   --> crates/iceberg/src/arrow/reader.rs:560:24
    |
560 |     if lhs == Box::new(AlwaysTrue) || rhs == Box::new(AlwaysTrue) {
    |                        ^^^^^^^^^^
    |
help: a local variable with a similar name exists
    |
560 |     if lhs == Box::new(always_true) || rhs == Box::new(AlwaysTrue) {
    |                        ~~~~~~~~~~~
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysTrue;
    |
20  + use crate::expr::Predicate::AlwaysTrue;
    |

error[E0425]: cannot find value `AlwaysTrue` in this scope
   --> crates/iceberg/src/arrow/reader.rs:560:55
    |
560 |     if lhs == Box::new(AlwaysTrue) || rhs == Box::new(AlwaysTrue) {
    |                                                       ^^^^^^^^^^
    |
help: a local variable with a similar name exists
    |
560 |     if lhs == Box::new(AlwaysTrue) || rhs == Box::new(always_true) {
    |                                                       ~~~~~~~~~~~
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysTrue;
    |
20  + use crate::expr::Predicate::AlwaysTrue;
    |

error[E0425]: cannot find value `AlwaysFalse` in this scope
   --> crates/iceberg/src/arrow/reader.rs:564:44
    |
564 |     if std::ptr::eq(lhs.as_ref(), Box::new(AlwaysFalse).as_ref()) {
    |                                            ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysFalse;
    |
20  + use crate::expr::Predicate::AlwaysFalse;
    |

error[E0425]: cannot find value `AlwaysFalse` in this scope
   --> crates/iceberg/src/arrow/reader.rs:568:44
    |
568 |     if std::ptr::eq(rhs.as_ref(), Box::new(AlwaysFalse).as_ref()) {
    |                                            ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysFalse;
    |
20  + use crate::expr::Predicate::AlwaysFalse;
    |

error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments
   --> crates/iceberg/src/arrow/reader.rs:561:19
    |
558 |     let always_true = || Box::new(|_| Ok(BooleanArray::from(vec![true; batch.len()])));
    |                       -- takes 0 arguments
...
561 |         return Ok(Box::new(always_true)); 
    |                   ^^^^^^^^^^^^^^^^^^^^^ expected closure that takes 1 argument
    |
    = note: required for the cast from `Box<{closure@crates/iceberg/src/arrow/reader.rs:558:23: 558:25}>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`
help: consider changing the closure to take and ignore the expected argument
    |
558 |     let always_true = |_| Box::new(|_| Ok(BooleanArray::from(vec![true; batch.len()])));
    |                       ~~~

Some errors have detailed explanations: E0425, E0593.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 6 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `batch` in this scope
   --> crates/iceberg/src/arrow/reader.rs:558:72
    |
558 |     let always_true = || Box::new(|_| Ok(BooleanArray::from(vec![true; batch.len()])));
    |                                                                        ^^^^^ not found in this scope

error[E0425]: cannot find value `AlwaysTrue` in this scope
   --> crates/iceberg/src/arrow/reader.rs:560:24
    |
560 |     if lhs == Box::new(AlwaysTrue) || rhs == Box::new(AlwaysTrue) {
    |                        ^^^^^^^^^^
    |
help: a local variable with a similar name exists
    |
560 |     if lhs == Box::new(always_true) || rhs == Box::new(AlwaysTrue) {
    |                        ~~~~~~~~~~~
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysTrue;
    |
20  + use crate::expr::Predicate::AlwaysTrue;
    |

error[E0425]: cannot find value `AlwaysTrue` in this scope
   --> crates/iceberg/src/arrow/reader.rs:560:55
    |
560 |     if lhs == Box::new(AlwaysTrue) || rhs == Box::new(AlwaysTrue) {
    |                                                       ^^^^^^^^^^
    |
help: a local variable with a similar name exists
    |
560 |     if lhs == Box::new(AlwaysTrue) || rhs == Box::new(always_true) {
    |                                                       ~~~~~~~~~~~
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysTrue;
    |
20  + use crate::expr::Predicate::AlwaysTrue;
    |

error[E0425]: cannot find value `AlwaysFalse` in this scope
   --> crates/iceberg/src/arrow/reader.rs:564:44
    |
564 |     if std::ptr::eq(lhs.as_ref(), Box::new(AlwaysFalse).as_ref()) {
    |                                            ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysFalse;
    |
20  + use crate::expr::Predicate::AlwaysFalse;
    |

error[E0425]: cannot find value `AlwaysFalse` in this scope
   --> crates/iceberg/src/arrow/reader.rs:568:44
    |
568 |     if std::ptr::eq(rhs.as_ref(), Box::new(AlwaysFalse).as_ref()) {
    |                                            ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
20  + use crate::arrow::reader::BoundPredicate::AlwaysFalse;
    |
20  + use crate::expr::Predicate::AlwaysFalse;
    |

error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments
   --> crates/iceberg/src/arrow/reader.rs:561:19
    |
558 |     let always_true = || Box::new(|_| Ok(BooleanArray::from(vec![true; batch.len()])));
    |                       -- takes 0 arguments
...
561 |         return Ok(Box::new(always_true)); 
    |                   ^^^^^^^^^^^^^^^^^^^^^ expected closure that takes 1 argument
    |
    = note: required for the cast from `Box<{closure@crates/iceberg/src/arrow/reader.rs:558:23: 558:25}>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`
help: consider changing the closure to take and ignore the expected argument
    |
558 |     let always_true = |_| Box::new(|_| Ok(BooleanArray::from(vec![true; batch.len()])));
    |                       ~~~

Some errors have detailed explanations: E0425, E0593.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 6 previous errors

