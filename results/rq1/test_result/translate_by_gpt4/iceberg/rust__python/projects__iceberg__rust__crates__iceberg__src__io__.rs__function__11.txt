Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:236:24
    |
236 |             return Err(Box::new(std::io::ErrorKind::InvalidData));
    |                    --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `Box<ErrorKind>`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: expected struct `error::Error`
               found struct `Box<std::io::ErrorKind>`
help: the type constructed contains `Box<std::io::ErrorKind>` due to the type of the argument passed
   --> crates/iceberg/src/io.rs:236:20
    |
236 |             return Err(Box::new(std::io::ErrorKind::InvalidData));
    |                    ^^^^-----------------------------------------^
    |                        |
    |                        this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0277]: the trait bound `&Vec<{integer}>: RangeBounds<u64>` is not satisfied
   --> crates/iceberg/src/io.rs:243:39
    |
243 |             let data_read = self.read(&buffer).await?;
    |                                  ---- ^^^^^^^ the trait `RangeBounds<u64>` is not implemented for `&Vec<{integer}>`
    |                                  |
    |                                  required by a bound introduced by this call
    |
note: required by a bound in `opendal::Reader::read`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/opendal-0.47.3/src/types/read/reader.rs:153:42
    |
153 |     pub async fn read(&self, range: impl RangeBounds<u64>) -> Result<Buffer> {
    |                                          ^^^^^^^^^^^^^^^^ required by this bound in `Reader::read`

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:248:28
    |
248 |                 return Err(Box::new(std::io::ErrorKind::UnexpectedEof));
    |                        --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `Box<ErrorKind>`
    |                        |
    |                        arguments to this enum variant are incorrect
    |
    = note: expected struct `error::Error`
               found struct `Box<std::io::ErrorKind>`
help: the type constructed contains `Box<std::io::ErrorKind>` due to the type of the argument passed
   --> crates/iceberg/src/io.rs:248:24
    |
248 |                 return Err(Box::new(std::io::ErrorKind::UnexpectedEof));
    |                        ^^^^-------------------------------------------^
    |                            |
    |                            this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 3 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:236:24
    |
236 |             return Err(Box::new(std::io::ErrorKind::InvalidData));
    |                    --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `Box<ErrorKind>`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: expected struct `error::Error`
               found struct `Box<std::io::ErrorKind>`
help: the type constructed contains `Box<std::io::ErrorKind>` due to the type of the argument passed
   --> crates/iceberg/src/io.rs:236:20
    |
236 |             return Err(Box::new(std::io::ErrorKind::InvalidData));
    |                    ^^^^-----------------------------------------^
    |                        |
    |                        this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0277]: the trait bound `&Vec<{integer}>: RangeBounds<u64>` is not satisfied
   --> crates/iceberg/src/io.rs:243:39
    |
243 |             let data_read = self.read(&buffer).await?;
    |                                  ---- ^^^^^^^ the trait `RangeBounds<u64>` is not implemented for `&Vec<{integer}>`
    |                                  |
    |                                  required by a bound introduced by this call
    |
note: required by a bound in `opendal::Reader::read`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/opendal-0.47.3/src/types/read/reader.rs:153:42
    |
153 |     pub async fn read(&self, range: impl RangeBounds<u64>) -> Result<Buffer> {
    |                                          ^^^^^^^^^^^^^^^^ required by this bound in `Reader::read`

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:248:28
    |
248 |                 return Err(Box::new(std::io::ErrorKind::UnexpectedEof));
    |                        --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `Box<ErrorKind>`
    |                        |
    |                        arguments to this enum variant are incorrect
    |
    = note: expected struct `error::Error`
               found struct `Box<std::io::ErrorKind>`
help: the type constructed contains `Box<std::io::ErrorKind>` due to the type of the argument passed
   --> crates/iceberg/src/io.rs:248:24
    |
248 |                 return Err(Box::new(std::io::ErrorKind::UnexpectedEof));
    |                        ^^^^-------------------------------------------^
    |                            |
    |                            this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 3 previous errors

