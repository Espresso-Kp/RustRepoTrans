Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/glue/src/catalog.rs:407:1
    |
407 | pub async fn load_table(&self, table_ident: &TableIdent) -> Result<Table> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0407]: method `try_load_table` is not a member of trait `Catalog`
   --> crates/catalog/glue/src/catalog.rs:424:1
    |
424 |   async fn try_load_table(&self, table_ident: &TableIdent) -> Result<Table> {
    |   ^        -------------- help: there is an associated function with a similar name: `load_table`
    |  _|
    | |
425 | |     // Assuming that `load_internal` is a function that loads a table, similar to your Java code
426 | |     let response = self.load_internal(table_ident).await?;
427 | |     // The rest of your Java try block would go here
428 | |
429 | |     Ok(response.to_table()) // We'll assume that response has a method `to_table` that converts it to a `Table`
430 | | }
    | |_^ not a member of trait `Catalog`

error[E0407]: method `load_metadata_table` is not a member of trait `Catalog`
   --> crates/catalog/glue/src/catalog.rs:431:1
    |
431 | / async fn load_metadata_table(&self, base_ident: &TableIdent, metadata_type: &MetadataTableType, original: Box<dyn Error>) -> Result<Table> {
432 | |     match self.try_load_table(base_ident).await {
433 | |         Ok(table) => {
434 | |             // If the table was loaded successfully, create a metadata table instance (omitting tracking for simplicity)
...   |
441 | |     }
442 | | }
    | |_^ not a member of trait `Catalog`

error[E0412]: cannot find type `MetadataTableType` in this scope
   --> crates/catalog/glue/src/catalog.rs:431:78
    |
431 | async fn load_metadata_table(&self, base_ident: &TableIdent, metadata_type: &MetadataTableType, original: Box<dyn Error>) -> Result<Table> {
    |                                                                              ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0404]: expected trait, found struct `Error`
   --> crates/catalog/glue/src/catalog.rs:431:115
    |
431 | async fn load_metadata_table(&self, base_ident: &TableIdent, metadata_type: &MetadataTableType, original: Box<dyn Error>) -> Result<Table> {
    |                                                                                                                   ^^^^^ not a trait
    |
help: consider importing one of these items instead
    |
18  + use core::error::Error;
    |
18  + use std::error::Error;
    |

warning: unused import: `TableMetadata`
  --> crates/catalog/glue/src/catalog.rs:21:21
   |
21 | use iceberg::spec::{TableMetadata, TableMetadataBuilder};
   |                     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `get_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:34:52
   |
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                                                    ^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `MetadataTableType`
   --> crates/catalog/glue/src/catalog.rs:413:19
    |
413 |             match MetadataTableType::from(&identifier_clone.name) {
    |                   ^^^^^^^^^^^^^^^^^ use of undeclared type `MetadataTableType`

error[E0433]: failed to resolve: use of undeclared type `MetadataTableUtils`
   --> crates/catalog/glue/src/catalog.rs:435:16
    |
435 |             Ok(MetadataTableUtils::create_metadata_table_instance(table, metadata_type.clone()))
    |                ^^^^^^^^^^^^^^^^^^ use of undeclared type `MetadataTableUtils`

Some errors have detailed explanations: E0404, E0407, E0412, E0433, E0449.
For more information about an error, try `rustc --explain E0404`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/integrations/datafusion)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/glue/src/catalog.rs:407:1
    |
407 | pub async fn load_table(&self, table_ident: &TableIdent) -> Result<Table> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0407]: method `try_load_table` is not a member of trait `Catalog`
   --> crates/catalog/glue/src/catalog.rs:424:1
    |
424 |   async fn try_load_table(&self, table_ident: &TableIdent) -> Result<Table> {
    |   ^        -------------- help: there is an associated function with a similar name: `load_table`
    |  _|
    | |
425 | |     // Assuming that `load_internal` is a function that loads a table, similar to your Java code
426 | |     let response = self.load_internal(table_ident).await?;
427 | |     // The rest of your Java try block would go here
428 | |
429 | |     Ok(response.to_table()) // We'll assume that response has a method `to_table` that converts it to a `Table`
430 | | }
    | |_^ not a member of trait `Catalog`

error[E0407]: method `load_metadata_table` is not a member of trait `Catalog`
   --> crates/catalog/glue/src/catalog.rs:431:1
    |
431 | / async fn load_metadata_table(&self, base_ident: &TableIdent, metadata_type: &MetadataTableType, original: Box<dyn Error>) -> Result<Table> {
432 | |     match self.try_load_table(base_ident).await {
433 | |         Ok(table) => {
434 | |             // If the table was loaded successfully, create a metadata table instance (omitting tracking for simplicity)
...   |
441 | |     }
442 | | }
    | |_^ not a member of trait `Catalog`

error[E0412]: cannot find type `MetadataTableType` in this scope
   --> crates/catalog/glue/src/catalog.rs:431:78
    |
431 | async fn load_metadata_table(&self, base_ident: &TableIdent, metadata_type: &MetadataTableType, original: Box<dyn Error>) -> Result<Table> {
    |                                                                              ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0404]: expected trait, found struct `Error`
   --> crates/catalog/glue/src/catalog.rs:431:115
    |
431 | async fn load_metadata_table(&self, base_ident: &TableIdent, metadata_type: &MetadataTableType, original: Box<dyn Error>) -> Result<Table> {
    |                                                                                                                   ^^^^^ not a trait
    |
help: consider importing one of these items instead
    |
18  + use core::error::Error;
    |
18  + use std::error::Error;
    |

warning: unused import: `TableMetadata`
  --> crates/catalog/glue/src/catalog.rs:21:21
   |
21 | use iceberg::spec::{TableMetadata, TableMetadataBuilder};
   |                     ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `get_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:34:52
   |
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                                                    ^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `MetadataTableType`
   --> crates/catalog/glue/src/catalog.rs:413:19
    |
413 |             match MetadataTableType::from(&identifier_clone.name) {
    |                   ^^^^^^^^^^^^^^^^^ use of undeclared type `MetadataTableType`

error[E0433]: failed to resolve: use of undeclared type `MetadataTableUtils`
   --> crates/catalog/glue/src/catalog.rs:435:16
    |
435 |             Ok(MetadataTableUtils::create_metadata_table_instance(table, metadata_type.clone()))
    |                ^^^^^^^^^^^^^^^^^^ use of undeclared type `MetadataTableUtils`

Some errors have detailed explanations: E0404, E0407, E0412, E0433, E0449.
For more information about an error, try `rustc --explain E0404`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

