Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTACT_MAGIC` in this scope
    --> src/contact.rs:1327:23
     |
1327 |         if self.id != DC_CONTACT_MAGIC {
     |                       ^^^^^^^^^^^^^^^^ not found in this scope

For more information about this error, try `rustc --explain E0425`.
error: could not compile `deltachat` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error[E0277]: `std::result::Result<&str, &str>` doesn't implement `std::fmt::Display`
    --> src/test_utils.rs:1204:9
     |
1204 |         &contact_name,
     |         ^^^^^^^^^^^^^ `std::result::Result<&str, &str>` cannot be formatted with the default formatter
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<&str, &str>`, which is required by `&std::result::Result<&str, &str>: std::fmt::Display`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `writeln` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> src/chat.rs:4939:54
     |
4939 |             assert_eq!(alice_bob_contact.get_name(), "robert");
     |                                                      ^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
4939 |             assert_eq!(alice_bob_contact.get_name(), Ok("robert"));
     |                                                      +++        +
4939 |             assert_eq!(alice_bob_contact.get_name(), Err("robert"));
     |                                                      ++++        +

error[E0308]: mismatched types
    --> src/contact.rs:2019:40
     |
2019 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2019 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2019 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2047:40
     |
2047 |         assert_eq!(contact.get_name(), "someone");
     |                                        ^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2047 |         assert_eq!(contact.get_name(), Ok("someone"));
     |                                        +++         +
2047 |         assert_eq!(contact.get_name(), Err("someone"));
     |                                        ++++         +

error[E0308]: mismatched types
    --> src/contact.rs:2102:40
     |
2102 |         assert_eq!(contact.get_name(), "Name one");
     |                                        ^^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2102 |         assert_eq!(contact.get_name(), Ok("Name one"));
     |                                        +++          +
2102 |         assert_eq!(contact.get_name(), Err("Name one"));
     |                                        ++++          +

error[E0308]: mismatched types
    --> src/contact.rs:2120:40
     |
2120 |         assert_eq!(contact.get_name(), "Real one");
     |                                        ^^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2120 |         assert_eq!(contact.get_name(), Ok("Real one"));
     |                                        +++          +
2120 |         assert_eq!(contact.get_name(), Err("Real one"));
     |                                        ++++          +

error[E0308]: mismatched types
    --> src/contact.rs:2136:40
     |
2136 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2136 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2136 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2184:40
     |
2184 |         assert_eq!(contact.get_name(), "Wonderland, Alice");
     |                                        ^^^^^^^^^^^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2184 |         assert_eq!(contact.get_name(), Ok("Wonderland, Alice"));
     |                                        +++                   +
2184 |         assert_eq!(contact.get_name(), Err("Wonderland, Alice"));
     |                                        ++++                   +

error[E0308]: mismatched types
    --> src/contact.rs:2191:40
     |
2191 |         assert_eq!(contact.get_name(), stock_str::self_msg(&t).await);
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Result<&str, &str>`, found `String`
     |
     = note: expected enum `std::result::Result<&str, &str>`
              found struct `std::string::String`

error[E0308]: mismatched types
    --> src/contact.rs:2223:40
     |
2223 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2223 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2223 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2249:40
     |
2249 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2249 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2249 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2279:40
     |
2279 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2279 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2279 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2297:40
     |
2297 |         assert_eq!(contact.get_name(), "Falk");
     |                                        ^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2297 |         assert_eq!(contact.get_name(), Ok("Falk"));
     |                                        +++      +
2297 |         assert_eq!(contact.get_name(), Err("Falk"));
     |                                        ++++      +

error[E0308]: mismatched types
    --> src/contact.rs:2406:40
     |
2406 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2406 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2406 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2422:40
     |
2422 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2422 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2422 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2432:40
     |
2432 |         assert_eq!(contact.get_name(), "bob3");
     |                                        ^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2432 |         assert_eq!(contact.get_name(), Ok("bob3"));
     |                                        +++      +
2432 |         assert_eq!(contact.get_name(), Err("bob3"));
     |                                        ++++      +

error[E0308]: mismatched types
    --> src/contact.rs:2448:40
     |
2448 |         assert_eq!(contact.get_name(), "bob3");
     |                                        ^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2448 |         assert_eq!(contact.get_name(), Ok("bob3"));
     |                                        +++      +
2448 |         assert_eq!(contact.get_name(), Err("bob3"));
     |                                        ++++      +

error[E0308]: mismatched types
    --> src/contact.rs:2461:40
     |
2461 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2461 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2461 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2477:40
     |
2477 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2477 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2477 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2493:40
     |
2493 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2493 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2493 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2556:40
     |
2556 |         assert_eq!(contact.get_name(), "dave1");
     |                                        ^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2556 |         assert_eq!(contact.get_name(), Ok("dave1"));
     |                                        +++       +
2556 |         assert_eq!(contact.get_name(), Err("dave1"));
     |                                        ++++       +

error[E0308]: mismatched types
    --> src/contact.rs:2570:40
     |
2570 |         assert_eq!(contact.get_name(), "dave1");
     |                                        ^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2570 |         assert_eq!(contact.get_name(), Ok("dave1"));
     |                                        +++       +
2570 |         assert_eq!(contact.get_name(), Err("dave1"));
     |                                        ++++       +

error[E0308]: mismatched types
    --> src/contact.rs:2577:40
     |
2577 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2577 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2577 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2594:40
     |
2594 |         assert_eq!(contact.get_name(), "");
     |                                        ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2594 |         assert_eq!(contact.get_name(), Ok(""));
     |                                        +++  +
2594 |         assert_eq!(contact.get_name(), Err(""));
     |                                        ++++  +

error[E0308]: mismatched types
    --> src/contact.rs:2601:40
     |
2601 |         assert_eq!(contact.get_name(), "Mueller, Dave");
     |                                        ^^^^^^^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2601 |         assert_eq!(contact.get_name(), Ok("Mueller, Dave"));
     |                                        +++               +
2601 |         assert_eq!(contact.get_name(), Err("Mueller, Dave"));
     |                                        ++++               +

error[E0308]: mismatched types
    --> src/contact.rs:2608:40
     |
2608 |         assert_eq!(contact.get_name(), "name1");
     |                                        ^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
2608 |         assert_eq!(contact.get_name(), Ok("name1"));
     |                                        +++       +
2608 |         assert_eq!(contact.get_name(), Err("name1"));
     |                                        ++++       +

error[E0308]: mismatched types
   --> src/qr.rs:888:44
    |
888 |             assert_eq!(contact.get_name(), "First Last");
    |                                            ^^^^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
    |
    = note:   expected enum `std::result::Result<&str, &str>`
            found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
    |
888 |             assert_eq!(contact.get_name(), Ok("First Last"));
    |                                            +++            +
888 |             assert_eq!(contact.get_name(), Err("First Last"));
    |                                            ++++            +

error[E0308]: mismatched types
    --> src/qr.rs:1085:44
     |
1085 |             assert_eq!(contact.get_name(), "Jörn P. P.");
     |                                            ^^^^^^^^^^^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
1085 |             assert_eq!(contact.get_name(), Ok("Jörn P. P."));
     |                                            +++            +
1085 |             assert_eq!(contact.get_name(), Err("Jörn P. P."));
     |                                            ++++            +

error[E0308]: mismatched types
    --> src/qr.rs:1100:44
     |
1100 |             assert_eq!(contact.get_name(), "");
     |                                            ^^ expected `Result<&str, &str>`, found `&str`
     |
     = note:   expected enum `std::result::Result<&str, &str>`
             found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
     |
1100 |             assert_eq!(contact.get_name(), Ok(""));
     |                                            +++  +
1100 |             assert_eq!(contact.get_name(), Err(""));
     |                                            ++++  +

error[E0308]: mismatched types
   --> src/receive_imf/tests.rs:519:36
    |
519 |     assert_eq!(contact.get_name(), "");
    |                                    ^^ expected `Result<&str, &str>`, found `&str`
    |
    = note:   expected enum `std::result::Result<&str, &str>`
            found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
    |
519 |     assert_eq!(contact.get_name(), Ok(""));
    |                                    +++  +
519 |     assert_eq!(contact.get_name(), Err(""));
    |                                    ++++  +

error[E0308]: mismatched types
   --> src/receive_imf/tests.rs:566:36
    |
566 |     assert_eq!(contact.get_name(), "");
    |                                    ^^ expected `Result<&str, &str>`, found `&str`
    |
    = note:   expected enum `std::result::Result<&str, &str>`
            found reference `&str`
help: try wrapping the expression in a variant of `std::result::Result`
    |
566 |     assert_eq!(contact.get_name(), Ok(""));
    |                                    +++  +
566 |     assert_eq!(contact.get_name(), Err(""));
    |                                    ++++  +

Some errors have detailed explanations: E0277, E0308, E0425.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib test) due to 32 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

