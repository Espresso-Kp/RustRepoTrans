Fail
file path is :
projects/deltachat-core/rust/src/oauth2.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error: cannot find macro `bail` in this scope
  --> src/oauth2.rs:95:14
   |
95 |         _ => bail!("Internal OAuth2 error: 2"),
   |              ^^^^
   |
help: consider importing one of these items
   |
3  + use anyhow::bail;
   |
3  + use pgp::bail;
   |

error: cannot find macro `bail` in this scope
  --> src/oauth2.rs:90:9
   |
90 |         bail!("Internal OAuth2 error");
   |         ^^^^
   |
help: consider importing one of these items
   |
3  + use anyhow::bail;
   |
3  + use pgp::bail;
   |

error[E0425]: cannot find function `get_client` in this scope
   --> src/oauth2.rs:157:18
    |
157 |     let client = get_client(socks5_config).await?;
    |                  ^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::net::http::get_client;
    |

error[E0308]: mismatched types
   --> src/oauth2.rs:125:38
    |
125 |                 &utf8_percent_encode(&redirect_uri, NON_ALPHANUMERIC),
    |                  ------------------- ^^^^^^^^^^^^^ expected `&str`, found `&Option<String>`
    |                  |
    |                  arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&std::option::Option<std::string::String>`
note: function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/percent-encoding-2.3.1/src/lib.rs:251:8
    |
251 | pub fn utf8_percent_encode<'a>(input: &'a str, ascii_set: &'static AsciiSet) -> PercentEncode<'a> {
    |        ^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/oauth2.rs:137:38
    |
137 |                 &utf8_percent_encode(&redirect_uri, NON_ALPHANUMERIC),
    |                  ------------------- ^^^^^^^^^^^^^ expected `&str`, found `&Option<String>`
    |                  |
    |                  arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&std::option::Option<std::string::String>`
note: function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/percent-encoding-2.3.1/src/lib.rs:251:8
    |
251 | pub fn utf8_percent_encode<'a>(input: &'a str, ascii_set: &'static AsciiSet) -> PercentEncode<'a> {
    |        ^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/oauth2.rs:149:38
    |
149 |                 &utf8_percent_encode(&redirect_uri, NON_ALPHANUMERIC),
    |                  ------------------- ^^^^^^^^^^^^^ expected `&str`, found `&Option<String>`
    |                  |
    |                  arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&std::option::Option<std::string::String>`
note: function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/percent-encoding-2.3.1/src/lib.rs:251:8
    |
251 | pub fn utf8_percent_encode<'a>(input: &'a str, ascii_set: &'static AsciiSet) -> PercentEncode<'a> {
    |        ^^^^^^^^^^^^^^^^^^^

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/oauth2.rs:158:9
    |
158 |     let text = client.post(&token_url).send().await?.text().await?;
    |         ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/oauth2.rs:158:16
    |
158 |     let text = client.post(&token_url).send().await?.text().await?;
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/oauth2.rs:158:16
    |
158 |     let text = client.post(&token_url).send().await?.text().await?;
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/oauth2.rs:158:66
    |
158 |     let text = client.post(&token_url).send().await?.text().await?;
    |                                                                  ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `Break`
...
93  |     Break(B),
    |     ----- required by a bound in this variant

error[E0609]: no field `error` on type `oauth2::Response`
   --> src/oauth2.rs:162:35
    |
162 |     if let Some(error) = response.error {
    |                                   ^^^^^ unknown field
    |
    = note: available fields are: `access_token`, `token_type`, `expires_in`, `refresh_token`, `scope`

error[E0609]: no field `error_description` on type `oauth2::Response`
   --> src/oauth2.rs:167:22
    |
167 |             response.error_description.unwrap_or_default()
    |                      ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `access_token`, `token_type`, `expires_in`, `refresh_token`, `scope`

error[E0308]: mismatched types
   --> src/oauth2.rs:184:55
    |
184 |     context.sql.set_raw_config("oauth2_access_token", access_token.as_ref()).await?;
    |                 --------------                        ^^^^^^^^^^^^^^^^^^^^^ expected `Option<&str>`, found `Option<&String>`
    |                 |
    |                 arguments to this method are incorrect
    |
    = note: expected enum `std::option::Option<&str>`
               found enum `std::option::Option<&std::string::String>`
note: method defined here
   --> src/sql.rs:576:18
    |
576 |     pub async fn set_raw_config(&self, key: &str, value: Option<&str>) -> Result<()> {
    |                  ^^^^^^^^^^^^^^                   -------------------
help: try converting the passed type into a `&str`
    |
184 |     context.sql.set_raw_config("oauth2_access_token", access_token.as_ref().map(|x| x.as_str())).await?;
    |                                                                            ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/oauth2.rs:194:64
    |
194 |         context.sql.set_raw_config("oauth2_redirect_uri", Some(&redirect_uri)).await?;
    |                                                           ---- ^^^^^^^^^^^^^ expected `&str`, found `&Option<String>`
    |                                                           |
    |                                                           arguments to this enum variant are incorrect
    |
    = note: expected reference `&str`
               found reference `&std::option::Option<std::string::String>`
help: the type constructed contains `&std::option::Option<std::string::String>` due to the type of the argument passed
   --> src/oauth2.rs:194:59
    |
194 |         context.sql.set_raw_config("oauth2_redirect_uri", Some(&redirect_uri)).await?;
    |                                                           ^^^^^-------------^
    |                                                                |
    |                                                                this argument influences the type of `Some`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
    |
578 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^^^

Some errors have detailed explanations: E0277, E0308, E0425, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 14 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

