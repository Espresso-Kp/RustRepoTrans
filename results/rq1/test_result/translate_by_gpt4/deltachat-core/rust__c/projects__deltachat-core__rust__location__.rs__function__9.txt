Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error[E0432]: unresolved import `rusqlite::NO_PARAMS`
  --> src/location.rs:15:24
   |
15 | use rusqlite::{params, NO_PARAMS};
   |                        ^^^^^^^^^ no `NO_PARAMS` in the root

error[E0432]: unresolved imports `crate::DC_CONTACT_ID_SELF`, `crate::DC_EVENT_LOCATION_CHANGED`
  --> src/location.rs:16:13
   |
16 | use crate::{DC_CONTACT_ID_SELF, DC_EVENT_LOCATION_CHANGED};
   |             ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^ no `DC_EVENT_LOCATION_CHANGED` in the root
   |             |
   |             no `DC_CONTACT_ID_SELF` in the root

error[E0433]: failed to resolve: could not find `c` in the crate root
  --> src/location.rs:18:12
   |
18 | use crate::c::constants::DC_CONTEXT_MAGIC;
   |            ^ could not find `c` in the crate root

error[E0432]: unresolved import `crate::JobId`
  --> src/location.rs:17:5
   |
17 | use crate::JobId;
   |     ^^^^^^^^^^^^ no `JobId` in the root

error[E0412]: cannot find type `Error` in this scope
   --> src/location.rs:352:99
    |
352 | pub async fn set(context: &Context, latitude: f64, longitude: f64, accuracy: f64) -> Result<bool, Error> {
    |                                                                                                   ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
14  + use anyhow::Error;
    |
14  + use async_imap::error::Error;
    |
14  + use async_native_tls::Error;
    |
14  + use async_smtp::error::Error;
    |
      and 30 other candidates

error[E0412]: cannot find type `Error` in this scope
   --> src/location.rs:352:99
    |
352 | pub async fn set(context: &Context, latitude: f64, longitude: f64, accuracy: f64) -> Result<bool, Error> {
    |                                                                                                   ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
14  + use anyhow::Error;
    |
14  + use async_imap::error::Error;
    |
14  + use async_native_tls::Error;
    |
14  + use async_smtp::error::Error;
    |
      and 31 other candidates

error[E0599]: no method named `is_none` found for reference `&context::Context` in the current scope
   --> src/location.rs:355:16
    |
355 |     if context.is_none() || context.magic != DC_CONTEXT_MAGIC || 
    |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/location.rs:355:37
    |
355 |     if context.is_none() || context.magic != DC_CONTEXT_MAGIC || 
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:363:17
    |
363 |         params![time::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_secs()], 
    |                 ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
363 |         params![mime::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_secs()], 
    |                 ~~~~

error[E0061]: this method takes 4 arguments but 3 arguments were supplied
   --> src/location.rs:361:36
    |
361 |       let mut chat_ids = context.sql.query_map(
    |  ____________________________________^^^^^^^^^-
362 | |         "SELECT id FROM chats WHERE locations_send_until>?", 
363 | |         params![time::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_secs()], 
364 | |         |row| row.get(0),
365 | |     ).await?;
    | |_____- an argument is missing
    |
note: method defined here
   --> src/sql.rs:425:18
    |
425 |     pub async fn query_map<T, F, G, H>(
    |                  ^^^^^^^^^
426 |         &self,
427 |         sql: &str,
    |         ---------
428 |         params: impl rusqlite::Params + Send,
    |         ------------------------------------
429 |         f: F,
    |         ----
430 |         mut g: G,
    |         --------
help: provide the argument
    |
361 |     let mut chat_ids = context.sql.query_map("SELECT id FROM chats WHERE locations_send_until>?", params![time::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_secs()], |row| row.get(0), /* g */).await?;
    |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:371:52
    |
371 | ...   params![latitude, longitude, accuracy, time::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_secs(), chat_id, DC_CONTACT_I...
    |                                              ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
371 |             params![latitude, longitude, accuracy, mime::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_secs(), chat_id, DC_CONTACT_ID_SELF],
    |                                                    ~~~~

error[E0425]: cannot find function `interrupt_location` in this scope
   --> src/location.rs:379:9
    |
379 |         interrupt_location(context).await?;
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0061, E0412, E0425, E0432, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 11 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

