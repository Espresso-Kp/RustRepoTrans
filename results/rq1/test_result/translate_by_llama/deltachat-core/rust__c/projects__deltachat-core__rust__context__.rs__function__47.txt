Fail
file path is :
projects/deltachat-core/rust/src/context.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error[E0252]: the name `Arc` is defined multiple times
  --> src/context.rs:13:5
   |
4  | use std::sync::{Arc, RwLock};
   |                 --- previous import of the type `Arc` here
...
13 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^ `Arc` reimported here
   |
   = note: `Arc` must be defined only once in the type namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> src/context.rs:16:42
   |
6  | use anyhow::{Context, Result};
   |                       ------ previous import of the type `Result` here
...
16 | use anyhow::{bail, ensure, Context as _, Result};
   |                                          ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `RwLock` is defined multiple times
  --> src/context.rs:20:44
   |
4  | use std::sync::{Arc, RwLock};
   |                      ------ previous import of the type `RwLock` here
...
20 | use tokio::sync::{Mutex, Notify, OnceCell, RwLock};
   |                                            ^^^^^^ `RwLock` reimported here
   |
   = note: `RwLock` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
20 | use tokio::sync::{Mutex, Notify, OnceCell, RwLock as OtherRwLock};
   |                                            ~~~~~~~~~~~~~~~~~~~~~

error[E0255]: the name `Context` is defined multiple times
   --> src/context.rs:214:1
    |
6   | use anyhow::{Context, Result};
    |              ------- previous import of the trait `Context` here
...
214 | pub struct Context {
    | ^^^^^^^^^^^^^^^^^^ `Context` redefined here
    |
    = note: `Context` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
    |
6   | use anyhow::{Context as OtherContext, Result};
    |              ~~~~~~~~~~~~~~~~~~~~~~~

error[E0574]: expected struct, variant or union type, found trait `Context`
   --> src/context.rs:213:10
    |
213 | #[derive(Clone, Debug)]
    |          ^^^^^
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ similarly named struct `Contact` defined here
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)
help: a struct with a similar name exists
    |
213 | #[derive(Contact, Debug)]
    |          ~~~~~~~
help: consider importing one of these items instead
    |
4   + use core::task::Context;
    |
4   + use futures::task::Context;
    |
4   + use std::task::Context;
    |

error[E0574]: expected struct, variant or union type, found trait `Context`
   --> src/context.rs:460:19
    |
460 |         let ctx = Context {
    |                   ^^^^^^^
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ similarly named struct `Contact` defined here
    |
help: a struct with a similar name exists
    |
460 |         let ctx = Contact {
    |                   ~~~~~~~
help: consider importing one of these items instead
    |
4   + use core::task::Context;
    |
4   + use futures::task::Context;
    |
4   + use std::task::Context;
    |

error[E0425]: cannot find value `Okret` in this scope
    --> src/context.rs:1271:16
     |
1271 |         return Okret;
     |                ^^^^^ not found in this scope

error[E0425]: cannot find value `Okret` in this scope
    --> src/context.rs:1293:5
     |
1293 |     Okret
     |     ^^^^^ not found in this scope

error[E0603]: trait import `Context` is private
   --> src/log.rs:5:21
    |
5   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
5   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/sql.rs:14:21
    |
14  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
14  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/sql/migrations.rs:9:21
    |
9   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
9   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/events/chatlist_events.rs:1:56
    |
1   | use crate::{chat::ChatId, contact::ContactId, context::Context, EventType};
    |                                                        ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
1   | use crate::{chat::ChatId, contact::ContactId, anyhow::Context, EventType};
    |                                               ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/blob.rs:23:21
    |
23  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
23  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/chat.rs:28:21
    |
28  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
28  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/chatlist.rs:12:21
    |
12  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
12  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/config.rs:17:21
    |
17  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
17  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/configure/auto_mozilla.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/configure/auto_outlook.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/configure.rs:27:21
    |
27  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
27  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/contact.rs:29:21
    |
29  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
29  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/decrypt.rs:13:21
    |
13  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
13  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/download.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/e2ee.rs:8:21
    |
8   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
8   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/ephemeral.rs:80:21
    |
80  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
80  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imap.rs:32:21
    |
32  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
32  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imap/client.rs:13:21
    |
13  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
13  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imap/idle.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imap/scan_folders.rs:10:22
    |
10  | use crate::{context::Context, imap::FolderMeaning};
    |                      ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
10  | use crate::{anyhow::Context, imap::FolderMeaning};
    |             ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imap/select_folder.rs:7:21
    |
7   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
7   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imex.rs:20:21
    |
20  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
20  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/imex/transfer.rs:52:21
    |
52  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
52  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/key.rs:19:21
    |
19  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
19  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/location.rs:23:21
    |
23  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
23  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/login_param.rs:8:21
    |
8   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
8   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/message.rs:20:21
    |
20  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
20  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/mimefactory.rs:17:21
    |
17  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
17  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/mimeparser.rs:21:21
    |
21  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
21  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/oauth2.rs:10:21
    |
10  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
10  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/param.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/peerstate.rs:15:21
    |
15  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
15  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/provider.rs:10:21
    |
10  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
10  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/qr/dclogin_scheme.rs:10:21
    |
10  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
10  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/qr.rs:18:21
    |
18  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
18  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/qr_code_generator.rs:12:21
    |
12  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
12  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/quota.rs:10:21
    |
10  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
10  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/scheduler.rs:18:21
    |
18  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
18  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/scheduler/connectivity.rs:13:22
    |
13  | use crate::{context::Context, log::LogExt};
    |                      ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
13  | use crate::{anyhow::Context, log::LogExt};
    |             ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/securejoin.rs:12:21
    |
12  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
12  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/securejoin/bob.rs:14:21
    |
14  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
14  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/securejoin/bobstate.rs:18:21
    |
18  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
18  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/smtp/send.rs:7:21
    |
7   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
7   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/smtp.rs:16:21
    |
16  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
16  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/socks.rs:16:21
    |
16  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
16  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/stock_str.rs:17:21
    |
17  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
17  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/sync.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/token.rs:11:21
    |
11  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
11  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/update_helper.rs:7:21
    |
7   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
7   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/webxdc/integration.rs:4:21
    |
4   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
4   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/webxdc/maps_integration.rs:38:21
    |
38  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
38  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/webxdc.rs:36:21
    |
36  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
36  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/authres.rs:15:21
    |
15  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
15  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/html.rs:16:21
    |
16  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
16  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/net.rs:13:21
    |
13  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
13  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/net/http.rs:9:21
    |
9   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
9   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/push.rs:7:21
    |
7   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
7   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/summary.rs:10:21
    |
10  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
10  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/debug_logging.rs:4:21
    |
4   | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
4   | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/receive_imf.rs:21:21
    |
21  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
21  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/tools.rs:38:21
    |
38  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
38  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/accounts.rs:20:22
    |
20  | use crate::context::{Context, ContextBuilder};
    |                      ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
20  | use crate::context::{anyhow::Context, ContextBuilder};
    |                      ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/peer_channels.rs:40:21
    |
40  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
40  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0603]: trait import `Context` is private
   --> src/reaction.rs:26:21
    |
26  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
26  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

warning: unused imports: `Connection`, `Row`
 --> src/context.rs:5:16
  |
5 | use rusqlite::{Connection, Row};
  |                ^^^^^^^^^^  ^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::sync::Arc`
  --> src/context.rs:13:5
   |
13 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `Result`
  --> src/context.rs:16:42
   |
16 | use anyhow::{bail, ensure, Context as _, Result};
   |                                          ^^^^^^

warning: unused import: `RwLock`
  --> src/context.rs:20:44
   |
20 | use tokio::sync::{Mutex, Notify, OnceCell, RwLock};
   |                                            ^^^^^^

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:176:40
    |
176 |     pub async fn build(self) -> Result<Context> {
    |                                        ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
176 |     pub async fn build(self) -> Result<Context<T, E>> {
    |                                               ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:192:39
    |
192 |     pub async fn open(self) -> Result<Context> {
    |                                       ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
192 |     pub async fn open(self) -> Result<Context<T, E>> {
    |                                              ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:213:10
    |
213 | #[derive(Clone, Debug)]
    |          ^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
213 | #[derive(Clone<T, E>, Debug)]
    |               ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:213:17
    |
213 | #[derive(Clone, Debug)]
    |                 ^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
213 | #[derive(Clone, Debug<T, E>)]
    |                      ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:218:16
    |
218 | impl Deref for Context {
    |                ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
218 | impl Deref for Context<T, E> {
    |                       ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:337:6
    |
337 | impl Context {
    |      ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
337 | impl Context<T, E> {
    |             ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:344:17
    |
344 |     ) -> Result<Context> {
    |                 ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
344 |     ) -> Result<Context<T, E>> {
    |                        ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:362:17
    |
362 |     ) -> Result<Context> {
    |                 ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
362 |     ) -> Result<Context<T, E>> {
    |                        ++++++

error[E0107]: missing generics for trait `anyhow::Context`
   --> src/context.rs:421:17
    |
421 |     ) -> Result<Context> {
    |                 ^^^^^^^ expected 2 generic arguments
    |
note: trait defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:11
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    |           ^^^^^^^ -  -
help: add missing generic arguments
    |
421 |     ) -> Result<Context<T, E>> {
    |                        ++++++

error[E0603]: trait import `Context` is private
   --> src/test_utils.rs:34:21
    |
34  | use crate::context::Context;
    |                     ^^^^^^^ private trait import
    |
note: the trait import `Context` is defined here...
   --> src/context.rs:6:14
    |
6   | use anyhow::{Context, Result};
    |              ^^^^^^^
note: ...and refers to the trait `Context` which is defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:614:1
    |
614 | pub trait Context<T, E>: context::private::Sealed {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `Context` directly
    |
34  | use anyhow::Context;
    |     ~~~~~~~~~~~~~~~

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:176:40
    |
176 |     pub async fn build(self) -> Result<Context> {
    |                                        ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
176 |     pub async fn build(self) -> Result<dyn Context> {
    |                                        +++

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:192:39
    |
192 |     pub async fn open(self) -> Result<Context> {
    |                                       ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
192 |     pub async fn open(self) -> Result<dyn Context> {
    |                                       +++

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:213:10
    |
213 | #[derive(Clone, Debug)]
    |          ^^^^^
    |
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:213:17
    |
213 | #[derive(Clone, Debug)]
    |                 ^^^^^
    |
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:218:16
    |
218 | impl Deref for Context {
    |                ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
218 | impl Deref for dyn Context {
    |                +++

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:337:6
    |
337 | impl Context {
    |      ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
337 | impl dyn Context {
    |      +++

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:344:17
    |
344 |     ) -> Result<Context> {
    |                 ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
344 |     ) -> Result<dyn Context> {
    |                 +++

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:362:17
    |
362 |     ) -> Result<Context> {
    |                 ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
362 |     ) -> Result<dyn Context> {
    |                 +++

error[E0782]: trait objects must include the `dyn` keyword
   --> src/context.rs:421:17
    |
421 |     ) -> Result<Context> {
    |                 ^^^^^^^
    |
help: add `dyn` keyword before this trait
    |
421 |     ) -> Result<dyn Context> {
    |                 +++

Some errors have detailed explanations: E0107, E0252, E0255, E0425, E0574, E0603, E0782.
For more information about an error, try `rustc --explain E0107`.
warning: `deltachat` (lib) generated 4 warnings
error: could not compile `deltachat` (lib) due to 91 previous errors; 4 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 4 warnings (4 duplicates)
error: could not compile `deltachat` (lib test) due to 92 previous errors; 4 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

