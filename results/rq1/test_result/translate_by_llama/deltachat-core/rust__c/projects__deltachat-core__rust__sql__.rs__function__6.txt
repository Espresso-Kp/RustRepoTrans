Fail
file path is :
projects/deltachat-core/rust/src/sql.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error[E0252]: the name `Connection` is defined multiple times
  --> src/sql.rs:11:51
   |
5  | use rusqlite::{Connection, OpenFlags};
   |                ---------- previous import of the type `Connection` here
...
11 | use rusqlite::{config::DbConfig, types::ValueRef, Connection, OpenFlags, Row};
   |                                                   ^^^^^^^^^^--
   |                                                   |
   |                                                   `Connection` reimported here
   |                                                   help: remove unnecessary import
   |
   = note: `Connection` must be defined only once in the type namespace of this module

error[E0252]: the name `OpenFlags` is defined multiple times
  --> src/sql.rs:11:63
   |
5  | use rusqlite::{Connection, OpenFlags};
   |                            --------- previous import of the type `OpenFlags` here
...
11 | use rusqlite::{config::DbConfig, types::ValueRef, Connection, OpenFlags, Row};
   |                                                               ^^^^^^^^^--
   |                                                               |
   |                                                               `OpenFlags` reimported here
   |                                                               help: remove unnecessary import
   |
   = note: `OpenFlags` must be defined only once in the type namespace of this module

error[E0252]: the name `Mutex` is defined multiple times
  --> src/sql.rs:12:19
   |
4  | use std::sync::{Mutex, RwLock};
   |                 ----- previous import of the type `Mutex` here
...
12 | use tokio::sync::{Mutex, MutexGuard, RwLock};
   |                   ^^^^^ `Mutex` reimported here
   |
   = note: `Mutex` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
12 | use tokio::sync::{Mutex as OtherMutex, MutexGuard, RwLock};
   |                   ~~~~~~~~~~~~~~~~~~~

error[E0252]: the name `RwLock` is defined multiple times
  --> src/sql.rs:12:38
   |
4  | use std::sync::{Mutex, RwLock};
   |                        ------ previous import of the type `RwLock` here
...
12 | use tokio::sync::{Mutex, MutexGuard, RwLock};
   |                                      ^^^^^^ `RwLock` reimported here
   |
   = note: `RwLock` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
12 | use tokio::sync::{Mutex, MutexGuard, RwLock as OtherRwLock};
   |                                      ~~~~~~~~~~~~~~~~~~~~~

warning: unused imports: `Connection`, `OpenFlags`
  --> src/sql.rs:11:51
   |
11 | use rusqlite::{config::DbConfig, types::ValueRef, Connection, OpenFlags, Row};
   |                                                   ^^^^^^^^^^  ^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `Mutex`, `RwLock`
  --> src/sql.rs:12:19
   |
12 | use tokio::sync::{Mutex, MutexGuard, RwLock};
   |                   ^^^^^              ^^^^^^

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:106:39
    |
106 |         let _lock = self.pool.write().await;
    |                                      -^^^^^
    |                                      ||
    |                                      |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                      help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-7302231199395442479.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:122:26
    |
122 |         self.pool.read().await.is_some()
    |                         -^^^^^
    |                         ||
    |                         |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                         help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-3552439285743437430.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>>` is not a future
   --> src/sql.rs:129:35
    |
129 |         *self.is_encrypted.read().await
    |                                  -^^^^^
    |                                  ||
    |                                  |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>>` is not a future
    |                                  help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<bool>>, PoisonError<RwLockReadGuard<'_, Option<bool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, Option<bool>>, PoisonError<RwLockReadGuard<'_, Option<bool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-5366410780869692298.txt'

error[E0599]: no method named `is_none` found for struct `std::sync::RwLock` in the current scope
   --> src/sql.rs:136:18
    |
136 |     if self.pool.is_none() {
    |                  ^^^^^^^ method not found in `RwLock<Option<Pool>>`
    |
note: the method `is_none` exists on the type `std::option::Option<Pool>`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:649:5
    |
649 |     pub const fn is_none(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: use `.read().unwrap()` to borrow the `std::option::Option<Pool>`, blocking the current thread until it can be acquired
    |
136 |     if self.pool.read().unwrap().is_none() {
    |                 ++++++++++++++++

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:140:43
    |
140 |     if let Some(pool) = self.pool.write().await {
    |                                          -^^^^^
    |                                          ||
    |                                          |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                          help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-7355437869902853814.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:142:27
    |
142 |         self.pool.write().await = None;
    |                          -^^^^^
    |                          ||
    |                          |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                          help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-7302231199395442479.txt'

error[E0070]: invalid left-hand side of assignment
   --> src/sql.rs:142:33
    |
142 |         self.pool.write().await = None;
    |         ----------------------- ^
    |         |
    |         cannot assign to this expression

error[E0609]: no field `context` on type `&Sql`
   --> src/sql.rs:145:19
    |
145 |     log_info(self.context, 0, "Database closed.");
    |                   ^^^^^^^ unknown field
    |
    = note: available fields are: `dbfile`, `write_mtx`, `pool`, `is_encrypted`, `config_cache`

error[E0425]: cannot find function `log_info` in this scope
   --> src/sql.rs:145:5
    |
145 |     log_info(self.context, 0, "Database closed.");
    |     ^^^^^^^^ not found in this scope

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:193:35
    |
193 |         self.config_cache.write().await.clear();
    |                                  -^^^^^
    |                                  ||
    |                                  |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                  help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-1590611409198221276.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:211:28
    |
211 |         *self.pool.write().await = Some(Self::new_pool(dbfile, passphrase.to_string())?);
    |                           -^^^^^
    |                           ||
    |                           |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                           help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-9771468550918555038.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
  --> src/sql/migrations.rs:42:57
   |
42 |         let mut lock = context.sql.config_cache.write().await;
   |                                                        -^^^^^
   |                                                        ||
   |                                                        |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   |                                                        help: remove the `.await`
   |
   = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
   = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
   = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
   = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-14604166467825414499.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:396:37
    |
396 |         let lock = self.pool.read().await;
    |                                    -^^^^^
    |                                    ||
    |                                    |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                    help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-3552439285743437430.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:612:45
    |
612 |         let lock = self.config_cache.read().await;
    |                                            -^^^^^
    |                                            ||
    |                                            |`std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                            help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockReadGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockReadGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-11558151157003514123.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:620:50
    |
620 |         let mut lock = self.config_cache.write().await;
    |                                                 -^^^^^
    |                                                 ||
    |                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-8273263314457725439.txt'

error[E0277]: `std::result::Result<std::sync::MutexGuard<'_, ()>, PoisonError<std::sync::MutexGuard<'_, ()>>>` is not a future
   --> src/sql.rs:382:31
    |
382 |         self.write_mtx.lock().await
    |                              -^^^^^
    |                              ||
    |                              |`std::result::Result<std::sync::MutexGuard<'_, ()>, PoisonError<std::sync::MutexGuard<'_, ()>>>` is not a future
    |                              help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<std::sync::MutexGuard<'_, ()>, PoisonError<std::sync::MutexGuard<'_, ()>>>`, which is required by `std::result::Result<std::sync::MutexGuard<'_, ()>, PoisonError<std::sync::MutexGuard<'_, ()>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::MutexGuard<'_, ()>, PoisonError<std::sync::MutexGuard<'_, ()>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::sync::MutexGuard<'_, ()>, PoisonError<std::sync::MutexGuard<'_, ()>>>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:593:50
    |
593 |         let mut lock = self.config_cache.write().await;
    |                                                 -^^^^^
    |                                                 ||
    |                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-11003243680503190955.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>>` is not a future
   --> src/sql.rs:311:36
    |
311 |         *self.is_encrypted.write().await = Some(passphrase_nonempty);
    |                                   -^^^^^
    |                                   ||
    |                                   |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>>` is not a future
    |                                   help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<bool>>, PoisonError<RwLockWriteGuard<'_, Option<bool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<bool>>, PoisonError<RwLockWriteGuard<'_, Option<bool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-7260083049514379143.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:333:42
    |
333 |         let mut lock = self.pool.write().await;
    |                                         -^^^^^
    |                                         ||
    |                                         |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                         help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-7355437869902853814.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql/migrations.rs:975:50
    |
975 |         let mut lock = self.config_cache.write().await;
    |                                                 -^^^^^
    |                                                 ||
    |                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-8617523315063820697.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:106:39
    |
106 |         let _lock = self.pool.write().await;
    |                                      -^^^^^
    |                                      ||
    |                                      |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                      help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-11419284613822957710.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:122:26
    |
122 |         self.pool.read().await.is_some()
    |                         -^^^^^
    |                         ||
    |                         |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                         help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-13373124187989736180.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>>` is not a future
   --> src/sql.rs:129:35
    |
129 |         *self.is_encrypted.read().await
    |                                  -^^^^^
    |                                  ||
    |                                  |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>>` is not a future
    |                                  help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<bool>>, PoisonError<RwLockReadGuard<'_, Option<bool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<bool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, Option<bool>>, PoisonError<RwLockReadGuard<'_, Option<bool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-11999815321714638932.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:140:43
    |
140 |     if let Some(pool) = self.pool.write().await {
    |                                          -^^^^^
    |                                          ||
    |                                          |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                          help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-17206732063986484678.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:142:27
    |
142 |         self.pool.write().await = None;
    |                          -^^^^^
    |                          ||
    |                          |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                          help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-11419284613822957710.txt'

error[E0609]: no field `context` on type `&sql::Sql`
   --> src/sql.rs:145:19
    |
145 |     log_info(self.context, 0, "Database closed.");
    |                   ^^^^^^^ unknown field
    |
    = note: available fields are: `dbfile`, `write_mtx`, `pool`, `is_encrypted`, `config_cache`

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:193:35
    |
193 |         self.config_cache.write().await.clear();
    |                                  -^^^^^
    |                                  ||
    |                                  |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                  help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-16648700127609449380.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:211:28
    |
211 |         *self.pool.write().await = Some(Self::new_pool(dbfile, passphrase.to_string())?);
    |                           -^^^^^
    |                           ||
    |                           |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                           help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-3462546528635595152.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/key.rs:305:66
    |
305 |     let mut config_cache_lock = context.sql.config_cache.write().await;
    |                                                                 -^^^^^
    |                                                                 ||
    |                                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-317d510b45c70b7e.long-type-11003243680503190955.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
  --> src/sql/migrations.rs:42:57
   |
42 |         let mut lock = context.sql.config_cache.write().await;
   |                                                        -^^^^^
   |                                                        ||
   |                                                        |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   |                                                        help: remove the `.await`
   |
   = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
   = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
   = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
   = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-9846879670926667747.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:396:37
    |
396 |         let lock = self.pool.read().await;
    |                                    -^^^^^
    |                                    ||
    |                                    |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                    help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-13373124187989736180.txt'

error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:612:45
    |
612 |         let lock = self.config_cache.read().await;
    |                                            -^^^^^
    |                                            ||
    |                                            |`std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                            help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockReadGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockReadGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockReadGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockReadGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-6745679272769377960.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:620:50
    |
620 |         let mut lock = self.config_cache.write().await;
    |                                                 -^^^^^
    |                                                 ||
    |                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-13564430132970713880.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql.rs:593:50
    |
593 |         let mut lock = self.config_cache.write().await;
    |                                                 -^^^^^
    |                                                 ||
    |                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-13192920575946249320.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>>` is not a future
   --> src/sql.rs:311:36
    |
311 |         *self.is_encrypted.write().await = Some(passphrase_nonempty);
    |                                   -^^^^^
    |                                   ||
    |                                   |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>>` is not a future
    |                                   help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<bool>>, PoisonError<RwLockWriteGuard<'_, Option<bool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<bool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<bool>>, PoisonError<RwLockWriteGuard<'_, Option<bool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-39340756219032037.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
   --> src/sql.rs:333:42
    |
333 |         let mut lock = self.pool.write().await;
    |                                         -^^^^^
    |                                         ||
    |                                         |`std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>` is not a future
    |                                         help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockWriteGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, Option<Pool>>, PoisonError<RwLockWriteGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-17206732063986484678.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/sql/migrations.rs:975:50
    |
975 |         let mut lock = self.config_cache.write().await;
    |                                                 -^^^^^
    |                                                 ||
    |                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-13764246753183552795.txt'

error[E0277]: `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
   --> src/key.rs:305:66
    |
305 |     let mut config_cache_lock = context.sql.config_cache.write().await;
    |                                                                 -^^^^^
    |                                                                 ||
    |                                                                 |`std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>` is not a future
    |                                                                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>`, which is required by `std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>>: std::future::IntoFuture`
    = note: std::result::Result<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>, PoisonError<std::sync::RwLockWriteGuard<'_, HashMap<std::string::String, std::option::Option<std::string::String>>>>> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<RwLockWriteGuard<'_, HashMap<String, Option<String>>>, PoisonError<RwLockWriteGuard<'_, ...>>>` to implement `std::future::IntoFuture`
    = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-13192920575946249320.txt'

Some errors have detailed explanations: E0070, E0252, E0277, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0070`.
warning: `deltachat` (lib) generated 2 warnings
error: could not compile `deltachat` (lib) due to 25 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0277]: `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
    --> src/sql.rs:1311:40
     |
1311 |             let lock = sql.pool.read().await;
     |                                       -^^^^^
     |                                       ||
     |                                       |`std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>` is not a future
     |                                       help: remove the `.await`
     |
     = help: the trait `futures::Future` is not implemented for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>`, which is required by `std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>>: std::future::IntoFuture`
     = note: std::result::Result<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>, PoisonError<std::sync::RwLockReadGuard<'_, std::option::Option<Pool>>>> must be a future or must implement `IntoFuture` to be awaited
     = note: required for `Result<RwLockReadGuard<'_, Option<Pool>>, PoisonError<RwLockReadGuard<'_, Option<Pool>>>>` to implement `std::future::IntoFuture`
     = note: the full type name has been written to '/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust/target/debug/deps/deltachat-7be04b9f1b686227.long-type-8498108912857188017.txt'

warning: `deltachat` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `deltachat` (lib test) due to 26 previous errors; 2 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

