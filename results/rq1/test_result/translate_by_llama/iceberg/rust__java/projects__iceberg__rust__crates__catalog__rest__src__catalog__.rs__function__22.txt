Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `name` on type `&'life1 iceberg::NamespaceIdent`
   --> crates/catalog/rest/src/catalog.rs:418:25
    |
418 |         name: namespace.name.clone(),
    |                         ^^^^ unknown field

error[E0609]: no field `write_order` on type `iceberg::TableCreation`
   --> crates/catalog/rest/src/catalog.rs:422:31
    |
422 |         write_order: creation.write_order.clone(),
    |                               ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `stage_create` on type `iceberg::TableCreation`
   --> crates/catalog/rest/src/catalog.rs:423:32
    |
423 |         stage_create: creation.stage_create,
    |                                ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:424:21
    |
424 |         properties: creation.properties.clone(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<HashMap<String, String>>`, found `HashMap<String, String>`
    |
    = note: expected enum `std::option::Option<std::collections::HashMap<_, _>>`
             found struct `std::collections::HashMap<_, _>`
help: try wrapping the expression in `Some`
    |
424 |         properties: Some(creation.properties.clone()),
    |                     +++++                           +

error[E0599]: no method named `post` found for struct `HttpClient` in the current scope
   --> crates/catalog/rest/src/catalog.rs:429:9
    |
189 |   struct HttpClient(Client);
    |   ----------------- method `post` not found for this struct
...
427 |       let response = self
    |  ____________________-
428 | |        .client
429 | |        .post(&self.tables_endpoint(namespace))
    | |        -^^^^ method not found in `HttpClient`
    | |________|
    | 
    |
help: one of the expressions' fields has a method of the same name
    |
429 |        .0.post(&self.tables_endpoint(namespace))
    |         ++

error[E0599]: no method named `tables_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:429:20
    |
429 |        .post(&self.tables_endpoint(namespace))
    |                    ^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
429 |        .post(&self.config.tables_endpoint(namespace))
    |                    +++++++

error[E0277]: `Result<iceberg::io::FileIO, iceberg::Error>` is not a future
   --> crates/catalog/rest/src/catalog.rs:438:64
    |
438 |     let file_io = self.load_file_io(metadata_location, config).await?;
    |                                                               -^^^^^
    |                                                               ||
    |                                                               |`Result<iceberg::io::FileIO, iceberg::Error>` is not a future
    |                                                               help: remove the `.await`
    |
    = help: the trait `std::future::Future` is not implemented for `Result<iceberg::io::FileIO, iceberg::Error>`, which is required by `Result<iceberg::io::FileIO, iceberg::Error>: IntoFuture`
    = note: Result<iceberg::io::FileIO, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<iceberg::io::FileIO, iceberg::Error>` to implement `IntoFuture`

error[E0599]: no method named `session` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:439:24
    |
439 |     let session = self.session(config, self.context).await?;
    |                        ^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `context` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:439:45
    |
439 |     let session = self.session(config, self.context).await?;
    |                                             ^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `new` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:440:20
    |
440 |       let ops = self.new(
    |                 -----^^^ this is an associated function, not a method
    |  _______________|
    | |
441 | |         self.client,
442 | |         &self.tables_endpoint(namespace),
443 | |         session.headers,
444 | |         file_io,
445 | |         metadata,
446 | |     );
    | |_____- help: use associated function syntax instead: `catalog::RestCatalog::new(self.client, &self.tables_endpoint(namespace), session.headers, file_io, metadata)`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in an impl for the type `catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:568:5
    |
568 |     pub async fn new(config: RestCatalogConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `itertools::adaptors::coalesce::CountItem`
            candidate #2: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #3: `ahash::HashMapExt`
            candidate #4: `ahash::HashSetExt`
            candidate #5: `ring::aead::BoundKey`
            candidate #6: `digest::core_api::VariableOutputCore`
            candidate #7: `digest::digest::Digest`
            candidate #8: `digest::mac::Mac`
            candidate #9: `digest::VariableOutput`
            candidate #10: `crypto_common::KeyInit`
            candidate #11: `crypto_common::KeyIvInit`
            candidate #12: `typenum::marker_traits::Bit`
            candidate #13: `rand::distributions::uniform::UniformSampler`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `bitvec::store::BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no method named `tables_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:442:15
    |
442 |         &self.tables_endpoint(namespace),
    |               ^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
442 |         &self.config.tables_endpoint(namespace),
    |               +++++++

error[E0599]: no method named `track_file_io` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:448:10
    |
448 |     self.track_file_io(ops).await?;
    |          ^^^^^^^^^^^^^ help: there is a method with a similar name: `load_file_io`

error[E0609]: no field `name` on type `&'life1 iceberg::NamespaceIdent`
   --> crates/catalog/rest/src/catalog.rs:456:29
    |
456 |             name: namespace.name.clone(),
    |                             ^^^^ unknown field

Some errors have detailed explanations: E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/integrations/datafusion)
error[E0609]: no field `name` on type `&'life1 NamespaceIdent`
   --> crates/catalog/rest/src/catalog.rs:418:25
    |
418 |         name: namespace.name.clone(),
    |                         ^^^^ unknown field

error[E0609]: no field `write_order` on type `TableCreation`
   --> crates/catalog/rest/src/catalog.rs:422:31
    |
422 |         write_order: creation.write_order.clone(),
    |                               ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `stage_create` on type `TableCreation`
   --> crates/catalog/rest/src/catalog.rs:423:32
    |
423 |         stage_create: creation.stage_create,
    |                                ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:424:21
    |
424 |         properties: creation.properties.clone(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<HashMap<String, String>>`, found `HashMap<String, String>`
    |
    = note: expected enum `std::option::Option<HashMap<_, _>>`
             found struct `HashMap<_, _>`
help: try wrapping the expression in `Some`
    |
424 |         properties: Some(creation.properties.clone()),
    |                     +++++                           +

error[E0599]: no method named `post` found for struct `HttpClient` in the current scope
   --> crates/catalog/rest/src/catalog.rs:429:9
    |
189 |   struct HttpClient(Client);
    |   ----------------- method `post` not found for this struct
...
427 |       let response = self
    |  ____________________-
428 | |        .client
429 | |        .post(&self.tables_endpoint(namespace))
    | |        -^^^^ method not found in `HttpClient`
    | |________|
    | 
    |
help: one of the expressions' fields has a method of the same name
    |
429 |        .0.post(&self.tables_endpoint(namespace))
    |         ++

error[E0599]: no method named `tables_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:429:20
    |
429 |        .post(&self.tables_endpoint(namespace))
    |                    ^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
429 |        .post(&self.config.tables_endpoint(namespace))
    |                    +++++++

error[E0277]: `Result<FileIO, iceberg::Error>` is not a future
   --> crates/catalog/rest/src/catalog.rs:438:64
    |
438 |     let file_io = self.load_file_io(metadata_location, config).await?;
    |                                                               -^^^^^
    |                                                               ||
    |                                                               |`Result<FileIO, iceberg::Error>` is not a future
    |                                                               help: remove the `.await`
    |
    = help: the trait `Future` is not implemented for `Result<FileIO, iceberg::Error>`, which is required by `Result<FileIO, iceberg::Error>: IntoFuture`
    = note: Result<FileIO, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<FileIO, iceberg::Error>` to implement `IntoFuture`

error[E0599]: no method named `session` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:439:24
    |
439 |     let session = self.session(config, self.context).await?;
    |                        ^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `context` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:439:45
    |
439 |     let session = self.session(config, self.context).await?;
    |                                             ^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `new` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:440:20
    |
440 |       let ops = self.new(
    |                 -----^^^ this is an associated function, not a method
    |  _______________|
    | |
441 | |         self.client,
442 | |         &self.tables_endpoint(namespace),
443 | |         session.headers,
444 | |         file_io,
445 | |         metadata,
446 | |     );
    | |_____- help: use associated function syntax instead: `RestCatalog::new(self.client, &self.tables_endpoint(namespace), session.headers, file_io, metadata)`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in an impl for the type `RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:568:5
    |
568 |     pub async fn new(config: RestCatalogConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `itertools::adaptors::coalesce::CountItem`
            candidate #2: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #3: `ahash::HashMapExt`
            candidate #4: `ahash::HashSetExt`
            candidate #5: `ring::aead::BoundKey`
            candidate #6: `digest::core_api::VariableOutputCore`
            candidate #7: `digest::digest::Digest`
            candidate #8: `digest::mac::Mac`
            candidate #9: `digest::VariableOutput`
            candidate #10: `crypto_common::KeyInit`
            candidate #11: `crypto_common::KeyIvInit`
            candidate #12: `typenum::marker_traits::Bit`
            candidate #13: `rand::distributions::uniform::UniformSampler`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `bitvec::store::BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no method named `tables_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:442:15
    |
442 |         &self.tables_endpoint(namespace),
    |               ^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
442 |         &self.config.tables_endpoint(namespace),
    |               +++++++

error[E0599]: no method named `track_file_io` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:448:10
    |
448 |     self.track_file_io(ops).await?;
    |          ^^^^^^^^^^^^^ help: there is a method with a similar name: `load_file_io`

error[E0609]: no field `name` on type `&'life1 NamespaceIdent`
   --> crates/catalog/rest/src/catalog.rs:456:29
    |
456 |             name: namespace.name.clone(),
    |                             ^^^^ unknown field

Some errors have detailed explanations: E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 13 previous errors

