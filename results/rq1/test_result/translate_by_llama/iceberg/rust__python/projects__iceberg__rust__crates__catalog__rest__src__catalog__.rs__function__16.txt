Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/integrations/datafusion)
error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:318:19
    |
318 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
20  + use serde_json::json;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace)?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:322:25
    |
322 |     let response = self._session.post(self.namespaces_endpoint()).json(&payload).await?;
    |                         ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `namespaces_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:322:44
    |
322 |     let response = self._session.post(self.namespaces_endpoint()).json(&payload).await?;
    |                                            ^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
322 |     let response = self._session.post(self.config.namespaces_endpoint()).json(&payload).await?;
    |                                            +++++++

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:13
    |
324 |         let text = response.text().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:20
    |
324 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:20
    |
324 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:41
    |
324 |         let text = response.text().await?;
    |                                         ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0277]: the trait bound `iceberg::Namespace: Deserialize<'_>` is not satisfied
    --> crates/catalog/rest/src/catalog.rs:325:12
     |
325  |         Ok(serde_json::from_str(&text)?)
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `iceberg::Namespace`
     |
     = help: the following other types implement trait `Deserialize<'de>`:
               bool
               char
               isize
               i8
               i16
               i32
               i64
               i128
             and 217 others
note: required by a bound in `serde_json::from_str`
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_json-1.0.120/src/de.rs:2676:8
     |
2674 | pub fn from_str<'a, T>(s: &'a str) -> Result<T>
     |        -------- required by a bound in this function
2675 | where
2676 |     T: de::Deserialize<'a>,
     |        ^^^^^^^^^^^^^^^^^^^ required by this bound in `from_str`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:13
    |
328 |         let text = response.text().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:20
    |
328 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:20
    |
328 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:41
    |
328 |         let text = response.text().await?;
    |                                         ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:334:58
    |
334 |            .with_context("json", String::from_utf8_lossy(&text))
    |                                  ----------------------- ^^^^^ expected `&[u8]`, found `&str`
    |                                  |
    |                                  arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&str`
note: associated function defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/string.rs:622:12

Some errors have detailed explanations: E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/iceberg/rust/crates/catalog/rest)
error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:318:19
    |
318 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
20  + use serde_json::json;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace)?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:322:25
    |
322 |     let response = self._session.post(self.namespaces_endpoint()).json(&payload).await?;
    |                         ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `namespaces_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:322:44
    |
322 |     let response = self._session.post(self.namespaces_endpoint()).json(&payload).await?;
    |                                            ^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
322 |     let response = self._session.post(self.config.namespaces_endpoint()).json(&payload).await?;
    |                                            +++++++

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:13
    |
324 |         let text = response.text().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:20
    |
324 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:20
    |
324 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:324:41
    |
324 |         let text = response.text().await?;
    |                                         ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0277]: the trait bound `Namespace: Deserialize<'_>` is not satisfied
    --> crates/catalog/rest/src/catalog.rs:325:12
     |
325  |         Ok(serde_json::from_str(&text)?)
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `Namespace`
     |
     = help: the following other types implement trait `Deserialize<'de>`:
               bool
               char
               isize
               i8
               i16
               i32
               i64
               i128
             and 217 others
note: required by a bound in `serde_json::from_str`
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_json-1.0.120/src/de.rs:2676:8
     |
2674 | pub fn from_str<'a, T>(s: &'a str) -> Result<T>
     |        -------- required by a bound in this function
2675 | where
2676 |     T: de::Deserialize<'a>,
     |        ^^^^^^^^^^^^^^^^^^^ required by this bound in `from_str`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:13
    |
328 |         let text = response.text().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:20
    |
328 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:20
    |
328 |         let text = response.text().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:328:41
    |
328 |         let text = response.text().await?;
    |                                         ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:334:58
    |
334 |            .with_context("json", String::from_utf8_lossy(&text))
    |                                  ----------------------- ^^^^^ expected `&[u8]`, found `&str`
    |                                  |
    |                                  arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&str`
note: associated function defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/string.rs:622:12

Some errors have detailed explanations: E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...

