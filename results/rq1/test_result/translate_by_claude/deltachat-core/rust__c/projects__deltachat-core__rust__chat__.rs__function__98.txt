Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:2496:13
     |
2494 |         .query_row_optional(
     |          ------------------ required by a bound introduced by this call
2495 |             &sql,
2496 |             rusqlite::params![contact_id.to_u32()],
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row_optional`
    --> src/sql.rs:541:41
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ------------------ required by a bound in this associated function
...
541  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0599]: no variant or associated item named `from_i32` found for enum `Blocked` in the current scope
    --> src/chat.rs:2499:40
     |
2499 |                 let blocked = Blocked::from_i32(row.get(1)?);
     |                                        ^^^^^^^^ variant or associated item not found in `Blocked`
     |
    ::: src/constants.rs:29:1
     |
29   | pub enum Blocked {
     | ---------------- variant or associated item `from_i32` not found for this enum
     |
     = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
     |
3    + use crate::aheader::_::_num_traits::FromPrimitive;
     |

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:2496:13
     |
2494 |         .query_row_optional(
     |          ------------------ required by a bound introduced by this call
2495 |             &sql,
2496 |             rusqlite::params![contact_id.to_u32()],
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row_optional`
    --> src/sql.rs:541:41
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ------------------ required by a bound in this associated function
...
541  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0599]: no variant or associated item named `from_i32` found for enum `constants::Blocked` in the current scope
    --> src/chat.rs:2499:40
     |
2499 |                 let blocked = Blocked::from_i32(row.get(1)?);
     |                                        ^^^^^^^^ variant or associated item not found in `Blocked`
     |
    ::: src/constants.rs:29:1
     |
29   | pub enum Blocked {
     | ---------------- variant or associated item `from_i32` not found for this enum
     |
     = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
     |
3    + use crate::aheader::_::_num_traits::FromPrimitive;
     |

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 2 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 2 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

