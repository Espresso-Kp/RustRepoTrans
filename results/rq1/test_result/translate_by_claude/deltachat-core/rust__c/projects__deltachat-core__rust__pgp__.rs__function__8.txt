Fail
file path is :
projects/deltachat-core/rust/src/pgp.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/RustRepoTrans/projects/deltachat-core/rust)
warning: unused `#[macro_use]` import
  --> src/lib.rs:31:1
   |
31 | #[macro_use]
   | ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `SecretKeyTrait`
  --> src/pgp.rs:17:58
   |
17 |     CompressionAlgorithm, KeyTrait, Mpi, PublicKeyTrait, SecretKeyTrait, StringToKey,
   |                                                          ^^^^^^^^^^^^^^

error[E0308]: `match` arms have incompatible types
   --> src/pgp.rs:151:32
    |
148 |       let (key_type, bits) = match keygen_type {
    |  ____________________________-
149 | |         KeyGenType::Default | KeyGenType::Rsa2048 => (PgpKeyType::Rsa, 2048),
    | |                                                      ----------------------- this is found to be of type `(fn(u32) -> KeyType {Rsa}, {integer})`
150 | |         KeyGenType::Rsa4096 => (PgpKeyType::Rsa, 4096),
    | |                                ----------------------- this is found to be of type `(fn(u32) -> KeyType {Rsa}, {integer})`
151 | |         KeyGenType::Ed25519 => (PgpKeyType::EdDSA, 0), // Ed25519 doesn't use bits
    | |                                ^^^^^^^^^^^^^^^^^^^^^^ expected `(fn(u32) -> KeyType {Rsa}, ...)`, found `(KeyType, {integer})`
152 | |     };
    | |_____- `match` arms have incompatible types
    |
    = note: expected tuple `(fn(u32) -> KeyType {Rsa}, {integer})`
               found tuple `(KeyType, {integer})`

error[E0599]: no method named `can_create_certificates` found for mutable reference `&mut SecretKeyParamsBuilder` in the current scope
   --> src/pgp.rs:159:10
    |
157 |       let primary_params = SecretKeyParamsBuilder::default()
    |  __________________________-
158 | |         .key_type(key_type)
159 | |         .can_create_certificates(true)
    | |         -^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&mut SecretKeyParamsBuilder`
    | |_________|
    | 

error[E0308]: mismatched types
   --> src/pgp.rs:167:41
    |
167 |     let primary_params = if key_type == PgpKeyType::Rsa {
    |                             --------    ^^^^^^^^^^^^^^^ expected `KeyType`, found enum constructor
    |                             |
    |                             expected because this is `KeyType`
    |
    = note:          expected enum `KeyType`
            found enum constructor `fn(u32) -> KeyType {Rsa}`
help: use parentheses to construct this tuple variant
    |
167 |     let primary_params = if key_type == PgpKeyType::Rsa(/* u32 */) {
    |                                                        +++++++++++

error[E0308]: mismatched types
   --> src/pgp.rs:179:40
    |
179 |     let subkey_params = if key_type == PgpKeyType::Rsa {
    |                            --------    ^^^^^^^^^^^^^^^ expected `KeyType`, found enum constructor
    |                            |
    |                            expected because this is `KeyType`
    |
    = note:          expected enum `KeyType`
            found enum constructor `fn(u32) -> KeyType {Rsa}`
help: use parentheses to construct this tuple variant
    |
179 |     let subkey_params = if key_type == PgpKeyType::Rsa(/* u32 */) {
    |                                                       +++++++++++

error[E0599]: no method named `key_size` found for mutable reference `&mut SubkeyParamsBuilder` in the current scope
   --> src/pgp.rs:180:23
    |
180 |         subkey_params.key_size(bits)
    |                       ^^^^^^^^ method not found in `&mut SubkeyParamsBuilder`

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
   --> src/pgp.rs:186:22
    |
186 |     let secret_key = SignedSecretKey::new(primary_params, vec![subkey_params], &mut rng)?;
    |                      ^^^^^^^^^^^^^^^^^^^^-----------------------------------------------
    |                                          |                |                    |
    |                                          |                |                    unexpected argument of type `&mut ThreadRng`
    |                                          |                an argument of type `SignedKeyDetails` is missing
    |                                          an argument of type `Vec<SignedSecretSubKey>` is missing
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:12
    |
47  |     pub fn new(
    |            ^^^
help: did you mean
    |
186 |     let secret_key = SignedSecretKey::new(primary_params, /* SignedKeyDetails */, vec![subkey_params], /* Vec<SignedSecretSubKey> */)?;
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/pgp.rs:186:22
    |
186 |     let secret_key = SignedSecretKey::new(primary_params, vec![subkey_params], &mut rng)?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `SignedSecretKey`
    |
    = help: the trait `Try` is not implemented for `SignedSecretKey`

error[E0277]: the trait bound `SignedPublicKey: From<&_>` is not satisfied
   --> src/pgp.rs:187:22
    |
187 |     let public_key = SignedPublicKey::from(&secret_key);
    |                      ^^^^^^^^^^^^^^^
    |                      |
    |                      the trait `From<&_>` is not implemented for `SignedPublicKey`
    |                      the trait `From<&_>` is not implemented for `SignedPublicKey`
    |
    = help: the trait `From<SignedSecretKey>` is implemented for `SignedPublicKey`
    = help: for that trait implementation, expected `SignedSecretKey`, found `&_`

Some errors have detailed explanations: E0061, E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 2 warnings
error: could not compile `deltachat` (lib) due to 8 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/pgp.rs:186:22
    |
186 |     let secret_key = SignedSecretKey::new(primary_params, vec![subkey_params], &mut rng)?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `pgp::SignedSecretKey`
    |
    = help: the trait `Try` is not implemented for `pgp::SignedSecretKey`

error[E0277]: the trait bound `pgp::SignedPublicKey: From<&_>` is not satisfied
   --> src/pgp.rs:187:22
    |
187 |     let public_key = SignedPublicKey::from(&secret_key);
    |                      ^^^^^^^^^^^^^^^
    |                      |
    |                      the trait `From<&_>` is not implemented for `pgp::SignedPublicKey`
    |                      the trait `From<&_>` is not implemented for `pgp::SignedPublicKey`
    |
    = help: the trait `From<pgp::SignedSecretKey>` is implemented for `pgp::SignedPublicKey`
    = help: for that trait implementation, expected `pgp::SignedSecretKey`, found `&_`

warning: `deltachat` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `deltachat` (lib test) due to 8 previous errors; 2 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

