pub struct ClosestPeersIter {
    config: ClosestPeersIterConfig,

    /// The target whose distance to any peer determines the position of
    /// the peer in the iterator.
    target: KeyBytes,

    /// The internal iterator state.
    state: State,

    /// The closest peers to the target, ordered by increasing distance.
    closest_peers: BTreeMap<Distance, Peer>,

    /// The number of peers for which the iterator is currently waiting for results.
    num_waiting: usize,
}
enum State {
    Waiting { num_waiting: usize },
    Finished,
}
------

use super::*;
use crate::kbucket::{Distance, Key, KeyBytes};
use crate::{ALPHA_VALUE, K_VALUE};
use std::collections::btree_map::{BTreeMap, Entry};
use std::{num::NonZeroUsize, time::Duration};
use web_time::Instant;
use super::*;
use crate::SHA_256_MH;
use libp2p_core::multihash::Multihash;
use quickcheck::*;
use rand::{rngs::StdRng, Rng, SeedableRng};
use std::iter;
