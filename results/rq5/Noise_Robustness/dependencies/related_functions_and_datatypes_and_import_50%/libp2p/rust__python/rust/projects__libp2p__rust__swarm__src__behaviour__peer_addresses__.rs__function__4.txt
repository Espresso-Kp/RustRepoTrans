fn iter(&self) -> impl Iterator<Item = &Multiaddr> {
        self.inner.iter().map(|(a, _)| a)
    }
pub struct PeerAddresses(LruCache<PeerId, LruCache<Multiaddr, ()>>);
------


use crate::behaviour::FromSwarm;
use crate::{DialError, DialFailure, NewExternalAddrOfPeer};
use libp2p_core::Multiaddr;
use libp2p_identity::PeerId;
use lru::LruCache;
use std::num::NonZeroUsize;
use super::*;
use std::io;
use crate::ConnectionId;
use libp2p_core::{
        multiaddr::Protocol,
        transport::{memory::MemoryTransportError, TransportError},
    };
use once_cell::sync::Lazy;
