pub fn to_bytes(self) -> Vec<u8> {
        self.multihash.to_bytes()
    }

pub struct PeerId {
    multihash: Multihash,
}


pub fn to_bytes(&self) -> Vec<u8> {
        self.0.to_encoded_point(false).as_bytes().to_owned()
    }
pub struct PeerId {
    multihash: Multihash,
}
------

use rand::Rng;
use sha2::Digest as _;
use std::{fmt, str::FromStr};
use thiserror::Error;
use serde::{Deserialize, Serialize};
use serde::de::*;
use super::*;
