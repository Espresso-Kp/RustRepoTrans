Fail
file path is :
projects/deltachat-core/rust/src/securejoin.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: `box_syntax` has been removed
   --> src/securejoin.rs:166:9
    |
166 |         box lock
    |         ^^^^^^^^
    |
help: use `Box::new()` instead
    |
166 |         Box::new(lock)
    |

error: expected `;`, found `send_handshake_msg`
   --> src/securejoin.rs:223:22
    |
223 |                     }
    |                      ^ help: add `;` here
224 |                 send_handshake_msg(
    |                 ------------------ unexpected token

error: format argument must be a string literal
   --> src/securejoin.rs:160:20
    |
160 |     info!(context, 0, "Requesting secure-join ...");
    |                    ^
    |
help: you might be missing a string literal to format with
    |
160 |     info!(context, "{} {}", 0, "Requesting secure-join ...");
    |                    ++++++++

error[E0412]: cannot find type `Lot` in this scope
   --> src/securejoin.rs:157:29
    |
157 |     let mut qr_scan: Option<Lot>;
    |                             ^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
148 | pub async fn join_securejoin<Lot>(context: &Context, qr: &str) -> Result<ChatId>{
    |                             +++++

error[E0433]: failed to resolve: use of undeclared type `Duration`
   --> src/securejoin.rs:241:28
    |
241 |         tokio::time::sleep(Duration::from_millis(300)).await;
    |                            ^^^^^^^^ use of undeclared type `Duration`
    |
help: consider importing one of these items
    |
3   + use chrono::Duration;
    |
3   + use core::time::Duration;
    |
3   + use std::time::Duration;
    |
3   + use tokio::time::Duration;
    |

error[E0425]: cannot find function `get_chat_id_by_grpid` in this scope
   --> src/securejoin.rs:250:35
    |
250 |                     ret_chat_id = get_chat_id_by_grpid(&context, &scan.text2, None, None).await
    |                                   ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::chat::get_chat_id_by_grpid;
    |

error[E0425]: cannot find function `dc_ensure_secret_key_exists` in this scope
   --> src/securejoin.rs:162:5
    |
162 |     dc_ensure_secret_key_exists(context).await.context("Failed to ensure secret key exists")?;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `ensure_secret_key_exists`
    |
   ::: src/e2ee.rs:165:1
    |
165 | pub async fn ensure_secret_key_exists(context: &Context) -> Result<()> {
    | ---------------------------------------------------------------------- similarly named function `ensure_secret_key_exists` defined here

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:181:30
    |
181 |             if scan.state != LotState::QrAskVerifyContact
    |                              ^^^^^^^^
    |                              |
    |                              use of undeclared type `LotState`
    |                              help: a struct with a similar name exists: `BobState`

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:182:34
    |
182 |                 && scan.state != LotState::QrAskVerifyGroup
    |                                  ^^^^^^^^
    |                                  |
    |                                  use of undeclared type `LotState`
    |                                  help: a struct with a similar name exists: `BobState`

error[E0425]: cannot find function `create_chat_by_contact_id` in this scope
   --> src/securejoin.rs:186:31
    |
186 |             contact_chat_id = create_chat_by_contact_id(context, &scan.id)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:190:37
    |
190 |             join_vg = scan.state == LotState::QrAskVerifyGroup;
    |                                     ^^^^^^^^
    |                                     |
    |                                     use of undeclared type `LotState`
    |                                     help: a struct with a similar name exists: `BobState`

error[E0599]: no method named `set_bob_expect` found for reference `&context::Context` in the current scope
   --> src/securejoin.rs:192:21
    |
192 |             context.set_bob_expect(Some(LotState::Suspend))
    |                     ^^^^^^^^^^^^^^ method not found in `&Context`

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:192:41
    |
192 |             context.set_bob_expect(Some(LotState::Suspend))
    |                                         ^^^^^^^^
    |                                         |
    |                                         use of undeclared type `LotState`
    |                                         help: a struct with a similar name exists: `BobState`

error[E0609]: no field `bob_qr_critical` on type `&context::Context`
   --> src/securejoin.rs:196:41
    |
196 |             let mut qr_locked = context.bob_qr_critical.lock().await;
    |                                         ^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `set_bob_qr_scan` found for reference `&context::Context` in the current scope
   --> src/securejoin.rs:197:21
    |
197 |             context.set_bob_qr_scan(qr_scan.clone());
    |                     ^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0308]: mismatched types
   --> src/securejoin.rs:200:42
    |
200 |             let dc_chat_id = ChatId::new(contact_chat_id);
    |                              ----------- ^^^^^^^^^^^^^^^ expected `u32`, found `ChatId`
    |                              |
    |                              arguments to this function are incorrect
    |
note: associated function defined here
   --> src/chat.rs:170:18
    |
170 |     pub const fn new(id: u32) -> ChatId {
    |                  ^^^ -------

error[E0425]: cannot find function `fingerprint_equals_sender` in this scope
   --> src/securejoin.rs:201:16
    |
201 |             if fingerprint_equals_sender(context, &scan.fingerprint, &dc_chat_id) {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `set_bob_expect` found for reference `&context::Context` in the current scope
   --> src/securejoin.rs:203:22
    |
202 | /                 context
203 | |                     .set_bob_expect(Some(LotState::Suspend))
    | |                     -^^^^^^^^^^^^^^ method not found in `&Context`
    | |_____________________|
    | 

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:203:42
    |
203 |                     .set_bob_expect(Some(LotState::Suspend))
    |                                          ^^^^^^^^
    |                                          |
    |                                          use of undeclared type `LotState`
    |                                          help: a struct with a similar name exists: `BobState`

error[E0599]: no variant or associated item named `VcContactConfirm` found for enum `JoinerProgress` in the current scope
   --> src/securejoin.rs:208:51
    |
208 |                         progress: JoinerProgress::VcContactConfirm,
    |                                                   ^^^^^^^^^^^^^^^^ variant or associated item not found in `JoinerProgress`
    |
   ::: src/securejoin/bob.rs:226:1
    |
226 | pub(crate) enum JoinerProgress {
    | ------------------------------ variant or associated item `VcContactConfirm` not found for this enum

error[E0063]: missing field `contact_id` in initializer of `payload::EventType`
   --> src/securejoin.rs:207:21
    |
207 |                     EventType::SecurejoinJoinerProgress {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `contact_id`

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:212:41
    |
212 |                 join_vg = scan.state == LotState::QrAskVerifyGroup;
    |                                         ^^^^^^^^
    |                                         |
    |                                         use of undeclared type `LotState`
    |                                         help: a struct with a similar name exists: `BobState`

error[E0599]: no method named `set_bob_expect` found for reference `&context::Context` in the current scope
   --> src/securejoin.rs:215:22
    |
214 | /                 context
215 | |                     .set_bob_expect(Some(LotState::Suspend))
    | |                     -^^^^^^^^^^^^^^ method not found in `&Context`
    | |_____________________|
    | 

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:215:42
    |
215 |                     .set_bob_expect(Some(LotState::Suspend))
    |                                          ^^^^^^^^
    |                                          |
    |                                          use of undeclared type `LotState`
    |                                          help: a struct with a similar name exists: `BobState`

error[E0425]: cannot find function `send_handshake_msg` in this scope
   --> src/securejoin.rs:224:17
    |
224 |                   send_handshake_msg(
    |                   ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `send_alice_handshake_msg`
...
284 | / async fn send_alice_handshake_msg(
285 | |     context: &Context,
286 | |     contact_id: ContactId,
287 | |     step: &str,
...   |
306 | |     Ok(())
307 | | }
    | |_- similarly named function `send_alice_handshake_msg` defined here

error[E0425]: cannot find function `should_stop_ongoing` in this scope
   --> src/securejoin.rs:240:9
    |
240 |         should_stop_ongoing(context).await?;
    |         ^^^^^^^^^^^^^^^^^^^ not found in this scope

warning: unreachable statement
   --> src/securejoin.rs:244:5
    |
239 | /     loop {
240 | |         should_stop_ongoing(context).await?;
241 | |         tokio::time::sleep(Duration::from_millis(300)).await;
242 | |     }
    | |_____- any code following this expression is unreachable
243 |
244 |       context.bob_expects.set(LotState::Suspend).await?;
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement
    |
note: the lint level is defined here
   --> src/lib.rs:6:5
    |
6   |     unused,
    |     ^^^^^^
    = note: `#[warn(unreachable_code)]` implied by `#[warn(unused)]`

error[E0609]: no field `bob_expects` on type `&context::Context`
   --> src/securejoin.rs:244:13
    |
244 |     context.bob_expects.set(LotState::Suspend).await?;
    |             ^^^^^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0433]: failed to resolve: use of undeclared type `LotState`
   --> src/securejoin.rs:244:29
    |
244 |     context.bob_expects.set(LotState::Suspend).await?;
    |                             ^^^^^^^^
    |                             |
    |                             use of undeclared type `LotState`
    |                             help: a struct with a similar name exists: `BobState`

error[E0609]: no field `bob_state` on type `&context::Context`
   --> src/securejoin.rs:248:24
    |
248 |             if context.bob_state.get().await == BobState::Success {
    |                        ^^^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no associated item named `Success` found for struct `BobState` in the current scope
   --> src/securejoin.rs:248:59
    |
248 |             if context.bob_state.get().await == BobState::Success {
    |                                                           ^^^^^^^ associated item not found in `BobState`
    |
   ::: src/securejoin/bobstate.rs:64:1
    |
64  | pub struct BobState {
    | ------------------- associated item `Success` not found for this struct
    |
note: if you're trying to build a new `BobState`, consider using `BobState::from_db_id` which returns `std::result::Result<BobState, rusqlite::Error>`
   --> src/securejoin/bobstate.rs:189:5
    |
189 |     fn from_db_id(connection: &Connection, id: i64) -> rusqlite::Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no associated item named `InvalidScancontexts` found for struct `anyhow::Error` in the current scope
   --> src/securejoin.rs:251:39
    |
251 |                         .ok_or(Error::InvalidScancontexts)?;
    |                                       ^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `anyhow::Error` consider using one of the following associated functions:
      anyhow::error::<impl anyhow::Error>::new
      anyhow::error::<impl anyhow::Error>::msg
      anyhow::error::<impl anyhow::Error>::from_std
      anyhow::error::<impl anyhow::Error>::from_adhoc
      and 4 others
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/error.rs:32:5
    |
32  | /     pub fn new<E>(error: E) -> Self
33  | |     where
34  | |         E: StdError + Send + Sync + 'static,
    | |____________________________________________^
...
79  | /     pub fn msg<M>(message: M) -> Self
80  | |     where
81  | |         M: Display + Debug + Send + Sync + 'static,
    | |___________________________________________________^
...
88  | /     pub(crate) fn from_std<E>(error: E, backtrace: Option<Backtrace>) -> Self
89  | |     where
90  | |         E: StdError + Send + Sync + 'static,
    | |____________________________________________^
...
114 | /     pub(crate) fn from_adhoc<M>(message: M, backtrace: Option<Backtrace>) -> Self
115 | |     where
116 | |         M: Display + Debug + Send + Sync + 'static,
    | |___________________________________________________^

error[E0609]: no field `bob_qr_scan` on type `&context::Context`
   --> src/securejoin.rs:260:13
    |
260 |     context.bob_qr_scan.set(None).await;
    |             ^^^^^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

Some errors have detailed explanations: E0063, E0308, E0412, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0063`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 32 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 32 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

