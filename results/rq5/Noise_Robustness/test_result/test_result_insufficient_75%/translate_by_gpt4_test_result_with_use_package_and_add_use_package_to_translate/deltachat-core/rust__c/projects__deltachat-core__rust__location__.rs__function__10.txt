Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: use of undeclared crate or module `sql`
   --> src/location.rs:429:37
    |
429 |             timestamp: row.get::<_, sql::types::Timestamp>(4)?,
    |                                     ^^^ use of undeclared crate or module `sql`

error[E0599]: no method named `get` found for struct `ChatId` in the current scope
   --> src/location.rs:421:68
    |
421 |     let params = params![chat_id_filter, chat_id.map_or(0, |id| id.get()), contact_id_filter, contact_id, timestamp_from, timestamp_to];
    |                                                                    ^^^ method not found in `ChatId`
    |
   ::: src/chat.rs:166:1
    |
166 | pub struct ChatId(u32);
    | ----------------- method `get` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `get`, perhaps you need to implement one of them:
            candidate #1: `SliceIndex`
            candidate #2: `fallible_streaming_iterator::FallibleStreamingIterator`
            candidate #3: `quinn_proto::coding::BufExt`
            candidate #4: `rustls::server::server_conn::StoresServerSessions`
            candidate #5: `prometheus_client::metrics::counter::Atomic`
            candidate #6: `prometheus_client::metrics::gauge::Atomic`
            candidate #7: `rustls::server::server_conn::StoresServerSessions`
            candidate #8: `bitvec::slice::api::BitSliceIndex`
            candidate #9: `iroh_quinn_proto::coding::BufExt`
            candidate #10: `nonzero_ext::NonZero`
            candidate #11: `toml_edit::table::TableLike`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/location.rs:423:30
    |
423 |     context.sql.query_map(q, params, |row| {
    |                 ---------    ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |                 |
    |                 required by a bound introduced by this call
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_map`
   --> src/sql.rs:428:41
    |
425 |     pub async fn query_map<T, F, G, H>(
    |                  --------- required by a bound in this associated function
...
428 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_map`

error[E0308]: `?` operator has incompatible types
   --> src/location.rs:425:26
    |
425 |             location_id: row.get::<_, usize>(0)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `usize`
    |
    = note: `?` operator cannot convert from `usize` to `u32`
note: return type inferred to be `u32` here
   --> src/location.rs:425:26
    |
425 |             location_id: row.get::<_, usize>(0)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
help: you can convert a `usize` to a `u32` and panic if the converted value doesn't fit
    |
425 |             location_id: row.get::<_, usize>(0)?.try_into().unwrap(),
    |                                                 ++++++++++++++++++++

error[E0308]: `?` operator has incompatible types
   --> src/location.rs:430:26
    |
430 |             independent: row.get::<_, i32>(5)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `i32`
    |
    = note: `?` operator cannot convert from `i32` to `u32`
note: return type inferred to be `u32` here
   --> src/location.rs:425:26
    |
425 |             location_id: row.get::<_, usize>(0)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
help: you can convert an `i32` to a `u32` and panic if the converted value doesn't fit
    |
430 |             independent: row.get::<_, i32>(5)?.try_into().unwrap(),
    |                                               ++++++++++++++++++++

error[E0308]: `?` operator has incompatible types
   --> src/location.rs:431:21
    |
431 |             msg_id: row.get::<_, usize>(6)?,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `usize`
    |
    = note: `?` operator cannot convert from `usize` to `u32`
note: return type inferred to be `u32` here
   --> src/location.rs:425:26
    |
425 |             location_id: row.get::<_, usize>(0)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
help: you can convert a `usize` to a `u32` and panic if the converted value doesn't fit
    |
431 |             msg_id: row.get::<_, usize>(6)?.try_into().unwrap(),
    |                                            ++++++++++++++++++++

error[E0308]: `?` operator has incompatible types
   --> src/location.rs:432:25
    |
432 |             contact_id: row.get::<_, u32>(7)?,
    |                         ^^^^^^^^^^^^^^^^^^^^^ expected `ContactId`, found `u32`
    |
    = note: `?` operator cannot convert from `u32` to `ContactId`
note: return type inferred to be `ContactId` here
   --> src/location.rs:425:26
    |
425 |             location_id: row.get::<_, usize>(0)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
help: try wrapping the expression in `contact::ContactId` (its field is private, but it's local to this crate and its privacy can be changed)
    |
432 |             contact_id: contact::ContactId(row.get::<_, u32>(7)?),
    |                         +++++++++++++++++++                     +

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/location.rs:423:5
    |
423 | /     context.sql.query_map(q, params, |row| {
424 | |         let mut loc = Location {
425 | |             location_id: row.get::<_, usize>(0)?,
426 | |             latitude: row.get::<_, f64>(1)?,
...   |
449 | |         Ok(())
450 | |     })?;
    | |_______^ the `?` operator cannot be applied to type `impl futures::Future<Output = std::result::Result<(), anyhow::Error>>`
    |
    = help: the trait `Try` is not implemented for `impl futures::Future<Output = std::result::Result<(), anyhow::Error>>`
help: consider `await`ing on the `Future`
    |
450 |     }).await?;
    |       ++++++

error[E0599]: no method named `get` found for struct `chat::ChatId` in the current scope
   --> src/location.rs:421:68
    |
421 |     let params = params![chat_id_filter, chat_id.map_or(0, |id| id.get()), contact_id_filter, contact_id, timestamp_from, timestamp_to];
    |                                                                    ^^^ method not found in `ChatId`
    |
   ::: src/chat.rs:166:1
    |
166 | pub struct ChatId(u32);
    | ----------------- method `get` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `get`, perhaps you need to implement one of them:
            candidate #1: `SliceIndex`
            candidate #2: `fallible_streaming_iterator::FallibleStreamingIterator`
            candidate #3: `quinn_proto::coding::BufExt`
            candidate #4: `rustls::server::server_conn::StoresServerSessions`
            candidate #5: `ResultCache`
            candidate #6: `prometheus_client::metrics::counter::Atomic`
            candidate #7: `prometheus_client::metrics::gauge::Atomic`
            candidate #8: `rustls::server::server_conn::StoresServerSessions`
            candidate #9: `bitvec::slice::api::BitSliceIndex`
            candidate #10: `iroh_quinn_proto::coding::BufExt`
            candidate #11: `nonzero_ext::NonZero`
            candidate #12: `toml_edit::table::TableLike`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/location.rs:423:30
    |
423 |     context.sql.query_map(q, params, |row| {
    |                 ---------    ^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |                 |
    |                 required by a bound introduced by this call
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_map`
   --> src/sql.rs:428:41
    |
425 |     pub async fn query_map<T, F, G, H>(
    |                  --------- required by a bound in this associated function
...
428 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_map`

error[E0308]: `?` operator has incompatible types
   --> src/location.rs:432:25
    |
432 |             contact_id: row.get::<_, u32>(7)?,
    |                         ^^^^^^^^^^^^^^^^^^^^^ expected `ContactId`, found `u32`
    |
    = note: `?` operator cannot convert from `u32` to `contact::ContactId`
note: return type inferred to be `contact::ContactId` here
   --> src/location.rs:425:26
    |
425 |             location_id: row.get::<_, usize>(0)?,
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
help: try wrapping the expression in `contact::ContactId` (its field is private, but it's local to this crate and its privacy can be changed)
    |
432 |             contact_id: contact::ContactId(row.get::<_, u32>(7)?),
    |                         +++++++++++++++++++                     +

Some errors have detailed explanations: E0277, E0308, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 8 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

