Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
    --> src/contact.rs:1290:9
     |
1290 |         paramsv![contact_id]
     |         ^^^^^^^ help: a macro with a similar name exists: `params`
     |
    ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
     |
176  | macro_rules! params {
     | ------------------- similarly named macro `params` defined here

error: cannot find macro `paramsv` in this scope
    --> src/contact.rs:1280:13
     |
1280 |             paramsv![contact_id, contact_id],
     |             ^^^^^^^ help: a macro with a similar name exists: `params`
     |
    ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
     |
176  | macro_rules! params {
     | ------------------- similarly named macro `params` defined here

error: cannot find macro `paramsv` in this scope
    --> src/contact.rs:1268:13
     |
1268 |             paramsv![contact_id],
     |             ^^^^^^^ help: a macro with a similar name exists: `params`
     |
    ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
     |
176  | macro_rules! params {
     | ------------------- similarly named macro `params` defined here

error[E0425]: cannot find value `contact` in this scope
    --> src/contact.rs:1257:29
     |
1257 |     if context.is_null() || contact.id.is_special() {
     |                             ^^^^^^^
     |
help: a local variable with a similar name exists
     |
1257 |     if context.is_null() || context.id.is_special() {
     |                             ~~~~~~~
help: consider importing this function
     |
3    + use crate::stock_str::contact;
     |

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
    --> src/contact.rs:1257:16
     |
1257 |     if context.is_null() || contact.id.is_special() {
     |                ^^^^^^^ method not found in `&Context`

error[E0277]: the trait bound `&str: rusqlite::Params` is not satisfied
    --> src/contact.rs:1267:13
     |
1265 |         .query_get_value(
     |          --------------- required by a bound introduced by this call
1266 |             context,
1267 |             "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rusqlite::Params` is not implemented for `&str`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `Sql::query_get_value`
    --> src/sql.rs:563:22
     |
560  |     pub async fn query_get_value<T>(
     |                  --------------- required by a bound in this associated function
...
563  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_get_value`

error[E0061]: this method takes 2 arguments but 3 arguments were supplied
    --> src/contact.rs:1265:10
     |
1265 |         .query_get_value(
     |          ^^^^^^^^^^^^^^^
1266 |             context,
     |             ------- expected `&str`, found `&Context`
1267 |             "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
1268 |             paramsv![contact_id],
     |             -------------------- unexpected argument
     |
     = note: expected reference `&str`
                found reference `&context::Context`
note: method defined here
    --> src/sql.rs:560:18
     |
560  |     pub async fn query_get_value<T>(
     |                  ^^^^^^^^^^^^^^^
561  |         &self,
562  |         query: &str,
     |         -----------
563  |         params: impl rusqlite::Params + Send,
     |         ------------------------------------
help: remove the extra argument
     |
1266 ~             /* &str */,
1267 ~             "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
     |

error[E0308]: `?` operator has incompatible types
    --> src/contact.rs:1264:20
     |
1264 |       let cnt: i64 = context.sql
     |  ____________________^
1265 | |         .query_get_value(
1266 | |             context,
1267 | |             "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
1268 | |             paramsv![contact_id],
1269 | |         )
1270 | |         .await?;
     | |_______________^ expected `i64`, found `Option<_>`
     |
     = note: `?` operator cannot convert from `std::option::Option<_>` to `i64`
     = note: expected type `i64`
                found enum `std::option::Option<_>`
help: consider using `Option::expect` to unwrap the `std::option::Option<_>` value, panicking if the value is an `Option::None`
     |
1270 |         .await?.expect("REASON");
     |                +++++++++++++++++

error[E0277]: the trait bound `&str: rusqlite::Params` is not satisfied
    --> src/contact.rs:1279:13
     |
1277 |         .query_get_value(
     |          --------------- required by a bound introduced by this call
1278 |             context,
1279 |             "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rusqlite::Params` is not implemented for `&str`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `Sql::query_get_value`
    --> src/sql.rs:563:22
     |
560  |     pub async fn query_get_value<T>(
     |                  --------------- required by a bound in this associated function
...
563  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_get_value`

error[E0061]: this method takes 2 arguments but 3 arguments were supplied
    --> src/contact.rs:1277:10
     |
1277 |         .query_get_value(
     |          ^^^^^^^^^^^^^^^
1278 |             context,
     |             ------- expected `&str`, found `&Context`
1279 |             "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
1280 |             paramsv![contact_id, contact_id],
     |             -------------------------------- unexpected argument
     |
     = note: expected reference `&str`
                found reference `&context::Context`
note: method defined here
    --> src/sql.rs:560:18
     |
560  |     pub async fn query_get_value<T>(
     |                  ^^^^^^^^^^^^^^^
561  |         &self,
562  |         query: &str,
     |         -----------
563  |         params: impl rusqlite::Params + Send,
     |         ------------------------------------
help: remove the extra argument
     |
1278 ~             /* &str */,
1279 ~             "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
     |

error[E0308]: `?` operator has incompatible types
    --> src/contact.rs:1276:20
     |
1276 |       let cnt: i64 = context.sql
     |  ____________________^
1277 | |         .query_get_value(
1278 | |             context,
1279 | |             "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
1280 | |             paramsv![contact_id, contact_id],
1281 | |         )
1282 | |         .await?;
     | |_______________^ expected `i64`, found `Option<_>`
     |
     = note: `?` operator cannot convert from `std::option::Option<_>` to `i64`
     = note: expected type `i64`
                found enum `std::option::Option<_>`
help: consider using `Option::expect` to unwrap the `std::option::Option<_>` value, panicking if the value is an `Option::None`
     |
1282 |         .await?.expect("REASON");
     |                +++++++++++++++++

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: the trait bound `&str: rusqlite::Params` is not satisfied
    --> src/contact.rs:1267:13
     |
1265 |         .query_get_value(
     |          --------------- required by a bound introduced by this call
1266 |             context,
1267 |             "SELECT COUNT(*) FROM chats_contacts WHERE contact_id=?;",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rusqlite::Params` is not implemented for `&str`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `sql::Sql::query_get_value`
    --> src/sql.rs:563:22
     |
560  |     pub async fn query_get_value<T>(
     |                  --------------- required by a bound in this associated function
...
563  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_get_value`

error[E0277]: the trait bound `&str: rusqlite::Params` is not satisfied
    --> src/contact.rs:1279:13
     |
1277 |         .query_get_value(
     |          --------------- required by a bound introduced by this call
1278 |             context,
1279 |             "SELECT COUNT(*) FROM msgs WHERE from_id=? OR to_id=?;",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `rusqlite::Params` is not implemented for `&str`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `sql::Sql::query_get_value`
    --> src/sql.rs:563:22
     |
560  |     pub async fn query_get_value<T>(
     |                  --------------- required by a bound in this associated function
...
563  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_get_value`

error: could not compile `deltachat` (lib test) due to 11 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

