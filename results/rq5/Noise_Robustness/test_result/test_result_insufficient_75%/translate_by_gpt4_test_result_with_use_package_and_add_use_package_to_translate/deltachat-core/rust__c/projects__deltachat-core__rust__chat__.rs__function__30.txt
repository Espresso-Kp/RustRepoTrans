Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
warning: unnecessary parentheses around `if` condition
   --> src/chat.rs:773:8
    |
773 |     if (obj.is_err()) {
    |        ^            ^
    |
note: the lint level is defined here
   --> src/lib.rs:6:5
    |
6   |     unused,
    |     ^^^^^^
    = note: `#[warn(unused_parens)]` implied by `#[warn(unused)]`
help: remove these parentheses
    |
773 -     if (obj.is_err()) {
773 +     if obj.is_err() {
    |

error[E0600]: cannot apply unary operator `!` to type `impl futures::Future<Output = bool>`
   --> src/chat.rs:767:5
    |
767 |     ensure!(context.is_open(), "Context should be open");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot apply unary operator `!`
    |
    = note: this error originates in the macro `$crate::__fallback_ensure` which comes from the expansion of the macro `ensure` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `inner` on type `ChatId`
   --> src/chat.rs:768:21
    |
768 |     ensure!(chat_id.inner > DC_CHAT_ID_LAST_SPECIAL, "Chat id is not valid");
    |                     ^^^^^ unknown field
    |
    = note: available field is: `0`

error[E0308]: mismatched types
    --> src/chat.rs:771:43
     |
771  |     let obj = Chat::load_from_db(context, &chat_id)
     |               ------------------          ^^^^^^^^ expected `ChatId`, found `&ChatId`
     |               |
     |               arguments to this function are incorrect
     |
note: associated function defined here
    --> src/chat.rs:1512:18
     |
1512 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |                  ^^^^^^^^^^^^                    ---------------
help: consider removing the borrow
     |
771  -     let obj = Chat::load_from_db(context, &chat_id)
771  +     let obj = Chat::load_from_db(context, chat_id)
     |

error[E0599]: no method named `is_err` found for struct `Chat` in the current scope
    --> src/chat.rs:773:13
     |
773  |     if (obj.is_err()) {
     |             ^^^^^^ method not found in `Chat`
...
1477 | pub struct Chat {
     | --------------- method `is_err` not found for this struct

error[E0599]: no method named `err` found for struct `Chat` in the current scope
    --> src/chat.rs:774:48
     |
774  |         bail!("Failed to load chat: {:?}", obj.err());
     |                                                ^^^ method not found in `Chat`
...
1477 | pub struct Chat {
     | --------------- method `err` not found for this struct

error[E0599]: no method named `begin` found for struct `Sql` in the current scope
   --> src/chat.rs:778:23
    |
778 |     match context.sql.begin().await {
    |                       ^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `begin` not found for this struct

error[E0609]: no field `inner` on type `ChatId`
   --> src/chat.rs:782:37
    |
782 |             let chat_id_i = chat_id.inner as i64;
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `0`

error[E0599]: no method named `emit` found for reference `&context::Context` in the current scope
   --> src/chat.rs:794:21
    |
794 |             context.emit(EventType::MsgsChanged{
    |             --------^^^^ method not found in `&Context`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `emit`, perhaps you need to implement one of them:
            candidate #1: `EmitAndCount`
            candidate #2: `BinEncodable`
            candidate #3: `netlink_packet_utils::traits::Emitable`
help: one of the expressions' fields has a method of the same name
    |
794 |             context.inner.events.emit(EventType::MsgsChanged{
    |                     +++++++++++++
help: one of the expressions' fields has a method of the same name
    |
794 |             context.events.emit(EventType::MsgsChanged{
    |                     +++++++

error[E0599]: no method named `job_kill_action` found for reference `&context::Context` in the current scope
   --> src/chat.rs:799:21
    |
799 |             context.job_kill_action(Job::Housekeeping);
    |                     ^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0433]: failed to resolve: use of undeclared type `Job`
   --> src/chat.rs:799:37
    |
799 |             context.job_kill_action(Job::Housekeeping);
    |                                     ^^^ use of undeclared type `Job`

error[E0599]: no method named `job_add` found for reference `&context::Context` in the current scope
   --> src/chat.rs:800:21
    |
800 |             context.job_add(Job::Housekeeping, 0, "".to_string(), Duration::from_secs(3600)).await?;
    |                     ^^^^^^^ method not found in `&Context`

error[E0433]: failed to resolve: use of undeclared type `Job`
   --> src/chat.rs:800:29
    |
800 |             context.job_add(Job::Housekeeping, 0, "".to_string(), Duration::from_secs(3600)).await?;
    |                             ^^^ use of undeclared type `Job`

error[E0609]: no field `inner` on type `chat::ChatId`
   --> src/chat.rs:768:21
    |
768 |     ensure!(chat_id.inner > DC_CHAT_ID_LAST_SPECIAL, "Chat id is not valid");
    |                     ^^^^^ unknown field
    |
    = note: available field is: `0`

error[E0599]: no method named `is_err` found for struct `chat::Chat` in the current scope
    --> src/chat.rs:773:13
     |
773  |     if (obj.is_err()) {
     |             ^^^^^^ method not found in `chat::Chat`
...
1477 | pub struct Chat {
     | --------------- method `is_err` not found for this struct

error[E0599]: no method named `err` found for struct `chat::Chat` in the current scope
    --> src/chat.rs:774:48
     |
774  |         bail!("Failed to load chat: {:?}", obj.err());
     |                                                ^^^ method not found in `chat::Chat`
...
1477 | pub struct Chat {
     | --------------- method `err` not found for this struct

error[E0599]: no method named `begin` found for struct `sql::Sql` in the current scope
   --> src/chat.rs:778:23
    |
778 |     match context.sql.begin().await {
    |                       ^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `begin` not found for this struct

error[E0609]: no field `inner` on type `chat::ChatId`
   --> src/chat.rs:782:37
    |
782 |             let chat_id_i = chat_id.inner as i64;
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `0`

Some errors have detailed explanations: E0308, E0433, E0599, E0600, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 12 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 12 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

