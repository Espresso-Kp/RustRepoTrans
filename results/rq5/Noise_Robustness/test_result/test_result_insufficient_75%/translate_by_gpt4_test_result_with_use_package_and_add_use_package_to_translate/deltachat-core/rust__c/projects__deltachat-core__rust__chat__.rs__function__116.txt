Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:3374:13
     |
3372 |         .query_map(
     |          --------- required by a bound introduced by this call
3373 |             "SELECT id FROM msgs WHERE chat_id=? AND chat_id != ? AND (type=? OR type=? OR type=?) ORDER BY timestamp, id;",
3374 |             params![chat_id, DC_CHAT_ID_TRASH, msg_type, msg_type2, msg_type3],
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_map`
    --> src/sql.rs:428:41
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_map`

error[E0308]: mismatched types
    --> src/chat.rs:3419:18
     |
3419 |             Some(msg.chat_id),
     |             ---- ^^^^^^^^^^^ expected `u32`, found `ChatId`
     |             |
     |             arguments to this enum variant are incorrect
     |
help: the type constructed contains `ChatId` due to the type of the argument passed
    --> src/chat.rs:3419:13
     |
3419 |             Some(msg.chat_id),
     |             ^^^^^-----------^
     |                  |
     |                  this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0308]: `?` operator has incompatible types
    --> src/chat.rs:3417:32
     |
3417 |           let list: Vec<MsgId> = get_chat_media(
     |  ________________________________^
3418 | |             context,
3419 | |             Some(msg.chat_id),
3420 | |             if msg_type != Viewtype::Unknown {
...    |
3427 | |         )
3428 | |         .await?;
     | |_______________^ expected `Vec<MsgId>`, found `Vec<u32>`
     |
     = note: `?` operator cannot convert from `Vec<u32>` to `Vec<MsgId>`
     = note: expected struct `Vec<MsgId>`
                found struct `Vec<u32>`

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:3374:13
     |
3372 |         .query_map(
     |          --------- required by a bound introduced by this call
3373 |             "SELECT id FROM msgs WHERE chat_id=? AND chat_id != ? AND (type=? OR type=? OR type=?) ORDER BY timestamp, id;",
3374 |             params![chat_id, DC_CHAT_ID_TRASH, msg_type, msg_type2, msg_type3],
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_map`
    --> src/sql.rs:428:41
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_map`

error[E0308]: mismatched types
    --> src/chat.rs:3419:18
     |
3419 |             Some(msg.chat_id),
     |             ---- ^^^^^^^^^^^ expected `u32`, found `ChatId`
     |             |
     |             arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:3419:13
     |
3419 |             Some(msg.chat_id),
     |             ^^^^^-----------^
     |                  |
     |                  this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0308]: `?` operator has incompatible types
    --> src/chat.rs:3417:32
     |
3417 |           let list: Vec<MsgId> = get_chat_media(
     |  ________________________________^
3418 | |             context,
3419 | |             Some(msg.chat_id),
3420 | |             if msg_type != Viewtype::Unknown {
...    |
3427 | |         )
3428 | |         .await?;
     | |_______________^ expected `Vec<MsgId>`, found `Vec<u32>`
     |
     = note: `?` operator cannot convert from `Vec<u32>` to `Vec<message::MsgId>`
     = note: expected struct `Vec<message::MsgId>`
                found struct `Vec<u32>`

error[E0308]: mismatched types
    --> src/chat.rs:7095:22
     |
7095 |                 Some(chat_id1),
     |                 ---- ^^^^^^^^ expected `u32`, found `ChatId`
     |                 |
     |                 arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:7095:17
     |
7095 |                 Some(chat_id1),
     |                 ^^^^^--------^
     |                      |
     |                      this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0308]: mismatched types
    --> src/chat.rs:7155:22
     |
7155 |                 Some(chat_id1),
     |                 ---- ^^^^^^^^ expected `u32`, found `ChatId`
     |                 |
     |                 arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:7155:17
     |
7155 |                 Some(chat_id1),
     |                 ^^^^^--------^
     |                      |
     |                      this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0308]: mismatched types
    --> src/chat.rs:7167:22
     |
7167 |                 Some(chat_id1),
     |                 ---- ^^^^^^^^ expected `u32`, found `ChatId`
     |                 |
     |                 arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:7167:17
     |
7167 |                 Some(chat_id1),
     |                 ^^^^^--------^
     |                      |
     |                      this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0308]: mismatched types
    --> src/chat.rs:7179:22
     |
7179 |                 Some(chat_id1),
     |                 ---- ^^^^^^^^ expected `u32`, found `ChatId`
     |                 |
     |                 arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:7179:17
     |
7179 |                 Some(chat_id1),
     |                 ^^^^^--------^
     |                      |
     |                      this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error[E0308]: mismatched types
    --> src/chat.rs:7191:22
     |
7191 |                 Some(chat_id2),
     |                 ---- ^^^^^^^^ expected `u32`, found `ChatId`
     |                 |
     |                 arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:7191:17
     |
7191 |                 Some(chat_id2),
     |                 ^^^^^--------^
     |                      |
     |                      this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error: could not compile `deltachat` (lib test) due to 8 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

