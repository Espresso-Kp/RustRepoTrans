Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected `,` following `match` arm
   --> crates/iceberg/src/avro/schema.rs:483:112
    |
483 |         AvroSchema::Fixed(fixed_schema) => Ok(Some(Type::Primitive(PrimitiveType::Fixed(fixed_schema.size()))))
    |                                                                                                                ^ help: missing a comma here to end this `match` arm: `,`

error[E0252]: the name `DecimalSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:5
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                           ------------- previous import of the type `DecimalSchema` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `DecimalSchema` reimported here
   |     help: remove unnecessary import
   |
   = note: `DecimalSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `FixedSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:20
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                          ----------- previous import of the type `FixedSchema` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                    ^^^^^^^^^^^--
   |                    |
   |                    `FixedSchema` reimported here
   |                    help: remove unnecessary import
   |
   = note: `FixedSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `Name` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:33
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                       ---- previous import of the type `Name` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                                 ^^^^--
   |                                 |
   |                                 `Name` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `Name` must be defined only once in the type namespace of this module

error[E0252]: the name `AvroRecordField` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:39
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                             ------------------------------ previous import of the type `AvroRecordField` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--
   |                                       |
   |                                       `AvroRecordField` reimported here
   |                                       help: remove unnecessary import
   |
   = note: `AvroRecordField` must be defined only once in the type namespace of this module

error[E0252]: the name `RecordFieldOrder` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:71
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                                                             ---------------- previous import of the type `RecordFieldOrder` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                                                                       ^^^^^^^^^^^^^^^^-
   |                                                                       |
   |                                                                       `RecordFieldOrder` reimported here
   |                                                                       help: remove unnecessary import
   |
   = note: `RecordFieldOrder` must be defined only once in the type namespace of this module

error[E0252]: the name `RecordSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:32:5
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                                                                               ------------ previous import of the type `RecordSchema` here
...
32 |     RecordSchema, UnionSchema,
   |     ^^^^^^^^^^^^--
   |     |
   |     `RecordSchema` reimported here
   |     help: remove unnecessary import
   |
   = note: `RecordSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `UnionSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:32:19
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                                                                                             ----------- previous import of the type `UnionSchema` here
...
32 |     RecordSchema, UnionSchema,
   |                   ^^^^^^^^^^^-
   |                   |
   |                   `UnionSchema` reimported here
   |                   help: remove unnecessary import
   |
   = note: `UnionSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `visit_schema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:5
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                   ------------ previous import of the value `visit_schema` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |     ^^^^^^^^^^^^--
   |     |
   |     `visit_schema` reimported here
   |     help: remove unnecessary import
   |
   = note: `visit_schema` must be defined only once in the value namespace of this module

error[E0252]: the name `NestedFieldRef` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:51
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                                                 -------------- previous import of the type `NestedFieldRef` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                                                   ^^^^^^^^^^^^^^--
   |                                                   |
   |                                                   `NestedFieldRef` reimported here
   |                                                   help: remove unnecessary import
   |
   = note: `NestedFieldRef` must be defined only once in the type namespace of this module

error[E0252]: the name `SchemaVisitor` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:27:5
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                                                                                        ------------- previous import of the trait `SchemaVisitor` here
...
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `SchemaVisitor` reimported here
   |     help: remove unnecessary import
   |
   = note: `SchemaVisitor` must be defined only once in the type namespace of this module

error[E0252]: the name `ListType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:19
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                 -------- previous import of the type `ListType` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                   ^^^^^^^^--
   |                   |
   |                   `ListType` reimported here
   |                   help: remove unnecessary import
   |
   = note: `ListType` must be defined only once in the type namespace of this module

error[E0252]: the name `MapType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:29
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                           ------- previous import of the type `MapType` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                             ^^^^^^^--
   |                             |
   |                             `MapType` reimported here
   |                             help: remove unnecessary import
   |
   = note: `MapType` must be defined only once in the type namespace of this module

error[E0252]: the name `NestedField` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:38
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                                    ----------- previous import of the type `NestedField` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                                      ^^^^^^^^^^^--
   |                                      |
   |                                      `NestedField` reimported here
   |                                      help: remove unnecessary import
   |
   = note: `NestedField` must be defined only once in the type namespace of this module

error[E0252]: the name `PrimitiveType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:67
   |
20 | ...ype, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                               ------------- previous import of the type `PrimitiveType` here
...
26 | ...NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                                 ^^^^^^^^^^^^^--
   |                                 |
   |                                 `PrimitiveType` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `PrimitiveType` must be defined only once in the type namespace of this module

error[E0252]: the name `Schema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:82
   |
20 | ...Type, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                                      ------ previous import of the type `Schema` here
...
26 | ...eld, NestedFieldRef, PrimitiveType, Schema,
   |                                        ^^^^^^-
   |                                        |
   |                                        `Schema` reimported here
   |                                        help: remove unnecessary import
   |
   = note: `Schema` must be defined only once in the type namespace of this module

error[E0252]: the name `StructType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:27:20
   |
20 | ...:spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, E...
   |                                                                                                                ---------- previous import of the type `StructType` here
...
27 | ...Visitor, StructType, Type,
   |             ^^^^^^^^^^--
   |             |
   |             `StructType` reimported here
   |             help: remove unnecessary import
   |
   = note: `StructType` must be defined only once in the type namespace of this module

error[E0252]: the name `Type` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:27:32
   |
20 | ...visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind...
   |                                                                                                                    ---- previous import of the type `Type` here
...
27 | ... StructType, Type,
   |                 ^^^^-
   |                 |
   |                 `Type` reimported here
   |                 help: remove unnecessary import
   |
   = note: `Type` must be defined only once in the type namespace of this module

error[E0449]: visibility qualifiers are not permitted here
   --> crates/iceberg/src/avro/schema.rs:454:1
    |
454 | pub fn primitive(&mut self, schema: &AvroSchema) -> Result<Option<Type>> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0432]: unresolved imports `crate::spec::Error`, `crate::spec::ErrorKind`, `crate::spec::Result`
  --> crates/iceberg/src/avro/schema.rs:20:137
   |
20 | ...e, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                                ^^^^^  ^^^^^^^^^  ^^^^^^ no `Result` in `spec`
   |                                                |      |
   |                                                |      no `ErrorKind` in `spec`
   |                                                no `Error` in `spec`
   |
   = help: consider importing one of these items instead:
           anyhow::Error
           apache_avro::Error
           chrono::format::Item::Error
           core::error::Error
           core::fmt::Error
           crate::Error
           futures::io::Error
           log::Level::Error
           log::LevelFilter::Error
           opendal::Error
           reqwest::Error
           rust_decimal::Error
           serde::de::Error
           serde::de::value::Error
           serde::ser::Error
           serde_json::Error
           std::error::Error
           std::fmt::Error
           std::io::Error
           tokio::io::Error
           tokio::time::error::Error
           uuid::Error
   = help: consider importing one of these items instead:
           crate::ErrorKind
           futures::io::ErrorKind
           opendal::ErrorKind
           std::io::ErrorKind
           tokio::io::ErrorKind
   = help: consider importing one of these items instead:
           anyhow::Result
           core::fmt::Result
           core::result::Result
           crate::Result
           futures::io::Result
           opendal::Result
           parquet::errors::Result
           reqwest::Result
           rust_decimal::Result
           serde_json::Result
           std::fmt::Result
           std::io::Result
           std::result::Result
           std::thread::Result
           tokio::io::Result

warning: unused imports: `ListType`, `MapType`, `NestedFieldRef`, `NestedField`, `PrimitiveType`, `SchemaVisitor`, `Schema`, `StructType`, `Type`, `visit_schema`
  --> crates/iceberg/src/avro/schema.rs:26:5
   |
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |     ^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `DecimalSchema`, `FixedSchema`, `Name`, `RecordField as AvroRecordField`, `RecordFieldOrder`, `RecordSchema`, `UnionSchema`
  --> crates/iceberg/src/avro/schema.rs:31:5
   |
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
32 |     RecordSchema, UnionSchema,
   |     ^^^^^^^^^^^^  ^^^^^^^^^^^

error[E0432]: unresolved imports `crate::spec::Error`, `crate::spec::ErrorKind`, `crate::spec::Result`
  --> crates/iceberg/src/avro/schema.rs:20:137
   |
20 | ...e, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                                ^^^^^  ^^^^^^^^^  ^^^^^^ no `Result` in `spec`
   |                                                |      |
   |                                                |      no `ErrorKind` in `spec`
   |                                                no `Error` in `spec`
   |
   = help: consider importing one of these items instead:
           anyhow::Error
           apache_avro::Error
           chrono::format::Item::Error
           core::error::Error
           core::fmt::Error
           crate::Error
           futures::io::Error
           log::Level::Error
           log::LevelFilter::Error
           opendal::Error
           reqwest::Error
           rust_decimal::Error
           serde::de::Error
           serde::de::value::Error
           serde::ser::Error
           serde_json::Error
           std::error::Error
           std::fmt::Error
           std::io::Error
           tera::Error
           tokio::io::Error
           tokio::time::error::Error
           uuid::Error
   = help: consider importing one of these items instead:
           crate::ErrorKind
           futures::io::ErrorKind
           opendal::ErrorKind
           std::io::ErrorKind
           tera::ErrorKind
           tokio::io::ErrorKind
   = help: consider importing one of these items instead:
           anyhow::Result
           core::fmt::Result
           core::result::Result
           crate::Result
           futures::io::Result
           opendal::Result
           parquet::errors::Result
           reqwest::Result
           rust_decimal::Result
           serde_json::Result
           std::fmt::Result
           std::io::Result
           std::result::Result
           std::thread::Result
           tera::Result
           tokio::io::Result

error[E0599]: no method named `get_logical_type` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:455:31
    |
455 |     let logical_type = schema.get_logical_type();
    |                               ^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0433]: failed to resolve: use of undeclared type `Types`
   --> crates/iceberg/src/avro/schema.rs:466:38
    |
466 |             "date" => return Ok(Some(Types::DateType.get())),
    |                                      ^^^^^
    |                                      |
    |                                      use of undeclared type `Types`
    |                                      help: an enum with a similar name exists: `Type`

error[E0433]: failed to resolve: use of undeclared type `Types`
   --> crates/iceberg/src/avro/schema.rs:469:49
    |
469 |             UUID_LOGICAL_TYPE => return Ok(Some(Types::UUIDType.get())),
    |                                                 ^^^^^
    |                                                 |
    |                                                 use of undeclared type `Types`
    |                                                 help: an enum with a similar name exists: `Type`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:470:29
    |
470 |             _ => return Err(Error::new(ErrorKind::FeatureUnsupported)),
    |                             ^^^^^^^^^^------------------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
470 |             _ => return Err(Error::new(ErrorKind::FeatureUnsupported, /* message */)),
    |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `size` found for reference `&FixedSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:483:102
    |
483 |         AvroSchema::Fixed(fixed_schema) => Ok(Some(Type::Primitive(PrimitiveType::Fixed(fixed_schema.size()))))
    |                                                                                                      ^^^^-- help: remove the arguments
    |                                                                                                      |
    |                                                                                                      field, not a method

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:484:18
    |
484 |         _ => Err(Error::new(ErrorKind::Unexpected))
    |                  ^^^^^^^^^^----------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
484 |         _ => Err(Error::new(ErrorKind::Unexpected, /* message */))
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `LogicalTypes`
   --> crates/iceberg/src/avro/schema.rs:460:54
    |
460 |                 let decimal = logical.downcast_ref::<LogicalTypes::Decimal>().unwrap();
    |                                                      ^^^^^^^^^^^^ use of undeclared type `LogicalTypes`

Some errors have detailed explanations: E0061, E0252, E0432, E0433, E0449, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg` (lib) generated 2 warnings
error: could not compile `iceberg` (lib) due to 27 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `iceberg` (lib test) due to 27 previous errors; 2 warnings emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected `,` following `match` arm
   --> crates/iceberg/src/avro/schema.rs:483:112
    |
483 |         AvroSchema::Fixed(fixed_schema) => Ok(Some(Type::Primitive(PrimitiveType::Fixed(fixed_schema.size()))))
    |                                                                                                                ^ help: missing a comma here to end this `match` arm: `,`

error[E0252]: the name `DecimalSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:5
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                           ------------- previous import of the type `DecimalSchema` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `DecimalSchema` reimported here
   |     help: remove unnecessary import
   |
   = note: `DecimalSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `FixedSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:20
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                          ----------- previous import of the type `FixedSchema` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                    ^^^^^^^^^^^--
   |                    |
   |                    `FixedSchema` reimported here
   |                    help: remove unnecessary import
   |
   = note: `FixedSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `Name` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:33
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                       ---- previous import of the type `Name` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                                 ^^^^--
   |                                 |
   |                                 `Name` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `Name` must be defined only once in the type namespace of this module

error[E0252]: the name `AvroRecordField` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:39
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                             ------------------------------ previous import of the type `AvroRecordField` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--
   |                                       |
   |                                       `AvroRecordField` reimported here
   |                                       help: remove unnecessary import
   |
   = note: `AvroRecordField` must be defined only once in the type namespace of this module

error[E0252]: the name `RecordFieldOrder` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:31:71
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                                                             ---------------- previous import of the type `RecordFieldOrder` here
...
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |                                                                       ^^^^^^^^^^^^^^^^-
   |                                                                       |
   |                                                                       `RecordFieldOrder` reimported here
   |                                                                       help: remove unnecessary import
   |
   = note: `RecordFieldOrder` must be defined only once in the type namespace of this module

error[E0252]: the name `RecordSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:32:5
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                                                                               ------------ previous import of the type `RecordSchema` here
...
32 |     RecordSchema, UnionSchema,
   |     ^^^^^^^^^^^^--
   |     |
   |     `RecordSchema` reimported here
   |     help: remove unnecessary import
   |
   = note: `RecordSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `UnionSchema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:32:19
   |
21 | use apache_avro::schema::{DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder, RecordSchema, UnionSchema};
   |                                                                                                                             ----------- previous import of the type `UnionSchema` here
...
32 |     RecordSchema, UnionSchema,
   |                   ^^^^^^^^^^^-
   |                   |
   |                   `UnionSchema` reimported here
   |                   help: remove unnecessary import
   |
   = note: `UnionSchema` must be defined only once in the type namespace of this module

error[E0252]: the name `visit_schema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:5
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                   ------------ previous import of the value `visit_schema` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |     ^^^^^^^^^^^^--
   |     |
   |     `visit_schema` reimported here
   |     help: remove unnecessary import
   |
   = note: `visit_schema` must be defined only once in the value namespace of this module

error[E0252]: the name `NestedFieldRef` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:51
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                                                 -------------- previous import of the type `NestedFieldRef` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                                                   ^^^^^^^^^^^^^^--
   |                                                   |
   |                                                   `NestedFieldRef` reimported here
   |                                                   help: remove unnecessary import
   |
   = note: `NestedFieldRef` must be defined only once in the type namespace of this module

error[E0252]: the name `SchemaVisitor` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:27:5
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                                                                                        ------------- previous import of the trait `SchemaVisitor` here
...
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `SchemaVisitor` reimported here
   |     help: remove unnecessary import
   |
   = note: `SchemaVisitor` must be defined only once in the type namespace of this module

error[E0252]: the name `ListType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:19
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                 -------- previous import of the type `ListType` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                   ^^^^^^^^--
   |                   |
   |                   `ListType` reimported here
   |                   help: remove unnecessary import
   |
   = note: `ListType` must be defined only once in the type namespace of this module

error[E0252]: the name `MapType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:29
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                           ------- previous import of the type `MapType` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                             ^^^^^^^--
   |                             |
   |                             `MapType` reimported here
   |                             help: remove unnecessary import
   |
   = note: `MapType` must be defined only once in the type namespace of this module

error[E0252]: the name `NestedField` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:38
   |
20 | use crate::spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, E...
   |                                                    ----------- previous import of the type `NestedField` here
...
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                                      ^^^^^^^^^^^--
   |                                      |
   |                                      `NestedField` reimported here
   |                                      help: remove unnecessary import
   |
   = note: `NestedField` must be defined only once in the type namespace of this module

error[E0252]: the name `PrimitiveType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:67
   |
20 | ...ype, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                               ------------- previous import of the type `PrimitiveType` here
...
26 | ...NestedField, NestedFieldRef, PrimitiveType, Schema,
   |                                 ^^^^^^^^^^^^^--
   |                                 |
   |                                 `PrimitiveType` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `PrimitiveType` must be defined only once in the type namespace of this module

error[E0252]: the name `Schema` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:26:82
   |
20 | ...Type, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                                      ------ previous import of the type `Schema` here
...
26 | ...eld, NestedFieldRef, PrimitiveType, Schema,
   |                                        ^^^^^^-
   |                                        |
   |                                        `Schema` reimported here
   |                                        help: remove unnecessary import
   |
   = note: `Schema` must be defined only once in the type namespace of this module

error[E0252]: the name `StructType` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:27:20
   |
20 | ...:spec::{visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, E...
   |                                                                                                                ---------- previous import of the type `StructType` here
...
27 | ...Visitor, StructType, Type,
   |             ^^^^^^^^^^--
   |             |
   |             `StructType` reimported here
   |             help: remove unnecessary import
   |
   = note: `StructType` must be defined only once in the type namespace of this module

error[E0252]: the name `Type` is defined multiple times
  --> crates/iceberg/src/avro/schema.rs:27:32
   |
20 | ...visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind...
   |                                                                                                                    ---- previous import of the type `Type` here
...
27 | ... StructType, Type,
   |                 ^^^^-
   |                 |
   |                 `Type` reimported here
   |                 help: remove unnecessary import
   |
   = note: `Type` must be defined only once in the type namespace of this module

error[E0449]: visibility qualifiers are not permitted here
   --> crates/iceberg/src/avro/schema.rs:454:1
    |
454 | pub fn primitive(&mut self, schema: &AvroSchema) -> Result<Option<Type>> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0432]: unresolved imports `crate::spec::Error`, `crate::spec::ErrorKind`, `crate::spec::Result`
  --> crates/iceberg/src/avro/schema.rs:20:137
   |
20 | ...e, Schema, SchemaVisitor, StructType, Type, Error, ErrorKind, Result};
   |                                                ^^^^^  ^^^^^^^^^  ^^^^^^ no `Result` in `spec`
   |                                                |      |
   |                                                |      no `ErrorKind` in `spec`
   |                                                no `Error` in `spec`
   |
   = help: consider importing one of these items instead:
           anyhow::Error
           apache_avro::Error
           chrono::format::Item::Error
           core::error::Error
           core::fmt::Error
           crate::Error
           futures::io::Error
           log::Level::Error
           log::LevelFilter::Error
           opendal::Error
           reqwest::Error
           rust_decimal::Error
           serde::de::Error
           serde::de::value::Error
           serde::ser::Error
           serde_json::Error
           std::error::Error
           std::fmt::Error
           std::io::Error
           tokio::io::Error
           tokio::time::error::Error
           uuid::Error
   = help: consider importing one of these items instead:
           crate::ErrorKind
           futures::io::ErrorKind
           opendal::ErrorKind
           std::io::ErrorKind
           tokio::io::ErrorKind
   = help: consider importing one of these items instead:
           anyhow::Result
           core::fmt::Result
           core::result::Result
           crate::Result
           futures::io::Result
           opendal::Result
           parquet::errors::Result
           reqwest::Result
           rust_decimal::Result
           serde_json::Result
           std::fmt::Result
           std::io::Result
           std::result::Result
           std::thread::Result
           tokio::io::Result

warning: unused imports: `ListType`, `MapType`, `NestedFieldRef`, `NestedField`, `PrimitiveType`, `SchemaVisitor`, `Schema`, `StructType`, `Type`, `visit_schema`
  --> crates/iceberg/src/avro/schema.rs:26:5
   |
26 |     visit_schema, ListType, MapType, NestedField, NestedFieldRef, PrimitiveType, Schema,
   |     ^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^
27 |     SchemaVisitor, StructType, Type,
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `DecimalSchema`, `FixedSchema`, `Name`, `RecordField as AvroRecordField`, `RecordFieldOrder`, `RecordSchema`, `UnionSchema`
  --> crates/iceberg/src/avro/schema.rs:31:5
   |
31 |     DecimalSchema, FixedSchema, Name, RecordField as AvroRecordField, RecordFieldOrder,
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
32 |     RecordSchema, UnionSchema,
   |     ^^^^^^^^^^^^  ^^^^^^^^^^^

error[E0599]: no method named `get_logical_type` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:455:31
    |
455 |     let logical_type = schema.get_logical_type();
    |                               ^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0433]: failed to resolve: use of undeclared type `Types`
   --> crates/iceberg/src/avro/schema.rs:466:38
    |
466 |             "date" => return Ok(Some(Types::DateType.get())),
    |                                      ^^^^^
    |                                      |
    |                                      use of undeclared type `Types`
    |                                      help: an enum with a similar name exists: `Type`

error[E0433]: failed to resolve: use of undeclared type `Types`
   --> crates/iceberg/src/avro/schema.rs:469:49
    |
469 |             UUID_LOGICAL_TYPE => return Ok(Some(Types::UUIDType.get())),
    |                                                 ^^^^^
    |                                                 |
    |                                                 use of undeclared type `Types`
    |                                                 help: an enum with a similar name exists: `Type`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:470:29
    |
470 |             _ => return Err(Error::new(ErrorKind::FeatureUnsupported)),
    |                             ^^^^^^^^^^------------------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
470 |             _ => return Err(Error::new(ErrorKind::FeatureUnsupported, /* message */)),
    |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `size` found for reference `&FixedSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:483:102
    |
483 |         AvroSchema::Fixed(fixed_schema) => Ok(Some(Type::Primitive(PrimitiveType::Fixed(fixed_schema.size()))))
    |                                                                                                      ^^^^-- help: remove the arguments
    |                                                                                                      |
    |                                                                                                      field, not a method

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:484:18
    |
484 |         _ => Err(Error::new(ErrorKind::Unexpected))
    |                  ^^^^^^^^^^----------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
484 |         _ => Err(Error::new(ErrorKind::Unexpected, /* message */))
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: use of undeclared type `LogicalTypes`
   --> crates/iceberg/src/avro/schema.rs:460:54
    |
460 |                 let decimal = logical.downcast_ref::<LogicalTypes::Decimal>().unwrap();
    |                                                      ^^^^^^^^^^^^ use of undeclared type `LogicalTypes`

Some errors have detailed explanations: E0061, E0252, E0432, E0433, E0449, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg` (lib) generated 2 warnings
error: could not compile `iceberg` (lib) due to 27 previous errors; 2 warnings emitted

