Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
warning: unused import: `create_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:33:71
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:344:31
    |
344 |     let table_name = creation.identifier.name.clone();
    |                               ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:345:44
    |
345 |     let metadata_location = match creation.metadata_location {
    |                                            ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:349:42
    |
349 |                 .get_namespace(&creation.identifier.namespace)
    |                                          ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0277]: the trait bound `GlueCatalogConfig: AsRef<str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:351:66
    |
351 |             get_default_table_location(&namespace, &table_name, &self.config)
    |             --------------------------                           ^^^^^^^^^^^ the trait `AsRef<str>` is not implemented for `GlueCatalogConfig`, which is required by `&GlueCatalogConfig: AsRef<str>`
    |             |
    |             required by a bound introduced by this call
    |
    = note: required for `&GlueCatalogConfig` to implement `AsRef<str>`
note: required by a bound in `utils::get_default_table_location`
   --> crates/catalog/glue/src/utils.rs:212:22
    |
209 | pub(crate) fn get_default_table_location(
    |               -------------------------- required by a bound in this function
...
212 |     table_name: impl AsRef<str>,
    |                      ^^^^^^^^^^ required by this bound in `get_default_table_location`

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:351:13
    |
351 |             get_default_table_location(&namespace, &table_name, &self.config)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------- an argument is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:209:15
    |
209 | pub(crate) fn get_default_table_location(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |     namespace: &Namespace,
    |     ---------------------
211 |     db_name: impl AsRef<str>,
    |     ------------------------
212 |     table_name: impl AsRef<str>,
    |     ---------------------------
213 |     warehouse: impl AsRef<str>,
    |     --------------------------
help: provide the argument
    |
351 |             get_default_table_location(&namespace, &table_name, &self.config, /* warehouse */)
    |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `build` found for struct `FileIO` in the current scope
   --> crates/catalog/glue/src/catalog.rs:355:32
    |
355 |     let file_io = self.file_io.build().await?;
    |                                ^^^^^ method not found in `FileIO`

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:357:26
    |
357 |     let table_metadata = TableMetadataBuilder::new()
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `iceberg::spec::TableMetadata` is missing
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/spec/table_metadata.rs:286:12
    |
286 |     pub fn new(origin: TableMetadata) -> Self {
    |            ^^^
help: provide the argument
    |
357 |     let table_metadata = TableMetadataBuilder::new(/* iceberg::spec::TableMetadata */)
    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `schema` found for struct `TableMetadataBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:358:10
    |
357 |       let table_metadata = TableMetadataBuilder::new()
    |  __________________________-
358 | |         .schema(creation.schema.clone())
    | |         -^^^^^^ method not found in `TableMetadataBuilder`
    | |_________|
    | 

error[E0609]: no field `parameters` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:365:19
    |
365 |         &creation.parameters,
    |                   ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `previous_metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:366:18
    |
366 |         creation.previous_metadata_location.clone(),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:363:9
    |
361 |     let mut table_input = convert_to_glue_table(
    |                           --------------------- arguments to this function are incorrect
362 |         &table_name,
363 |         &metadata_location,
    |         ^^^^^^^^^^^^^^^^^^ expected `String`, found `&String`
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
146 |     metadata_location: String,
    |     -------------------------
help: consider removing the borrow
    |
363 -         &metadata_location,
363 +         metadata_location,
    |

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:370:54
    |
370 |     let database_name = convert_to_database(creation.identifier.namespace.get(0))?;
    |                                                      ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:370:25
    |
370 |     let database_name = convert_to_database(creation.identifier.namespace.get(0))?;
    |                         ^^^^^^^^^^^^^^^^^^^-------------------------------------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
370 |     let database_name = convert_to_database(creation.identifier.namespace.get(0), /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `database_name` found for struct `TableInput` in the current scope
   --> crates/catalog/glue/src/catalog.rs:371:31
    |
371 |     table_input = table_input.database_name(database_name);
    |                               ^^^^^^^^^^^^^ method not found in `TableInput`

error[E0277]: the trait bound `std::string::String: From<&DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:378:24
    |
378 |         .database_name(&database_name)
    |          ------------- ^^^^^^^^^^^^^^ the trait `From<&DatabaseInput>` is not implemented for `std::string::String`, which is required by `&DatabaseInput: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:379:22
    |
379 |         .table_input(&table_input);
    |          ----------- ^^^^^^^^^^^^ expected `TableInput`, found `&TableInput`
    |          |
    |          arguments to this method are incorrect
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:140:12
    |
140 |     pub fn table_input(mut self, input: crate::types::TableInput) -> Self {
    |            ^^^^^^^^^^^
help: consider removing the borrow
    |
379 -         .table_input(&table_input);
379 +         .table_input(table_input);
    |

error[E0599]: no function or associated item named `new` found for struct `iceberg::table::Table` in the current scope
   --> crates/catalog/glue/src/catalog.rs:388:24
    |
388 |     let table = Table::new(
    |                        ^^^ function or associated item not found in `Table`

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:392:18
    |
392 |         creation.identifier.clone(),
    |                  ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `readonly` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:393:18
    |
393 |         creation.readonly,
    |                  ^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

Some errors have detailed explanations: E0061, E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 19 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `create_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:33:71
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:344:31
    |
344 |     let table_name = creation.identifier.name.clone();
    |                               ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:345:44
    |
345 |     let metadata_location = match creation.metadata_location {
    |                                            ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:349:42
    |
349 |                 .get_namespace(&creation.identifier.namespace)
    |                                          ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0277]: the trait bound `GlueCatalogConfig: AsRef<str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:351:66
    |
351 |             get_default_table_location(&namespace, &table_name, &self.config)
    |             --------------------------                           ^^^^^^^^^^^ the trait `AsRef<str>` is not implemented for `GlueCatalogConfig`, which is required by `&GlueCatalogConfig: AsRef<str>`
    |             |
    |             required by a bound introduced by this call
    |
    = note: required for `&GlueCatalogConfig` to implement `AsRef<str>`
note: required by a bound in `get_default_table_location`
   --> crates/catalog/glue/src/utils.rs:212:22
    |
209 | pub(crate) fn get_default_table_location(
    |               -------------------------- required by a bound in this function
...
212 |     table_name: impl AsRef<str>,
    |                      ^^^^^^^^^^ required by this bound in `get_default_table_location`

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:351:13
    |
351 |             get_default_table_location(&namespace, &table_name, &self.config)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------- an argument is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:209:15
    |
209 | pub(crate) fn get_default_table_location(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |     namespace: &Namespace,
    |     ---------------------
211 |     db_name: impl AsRef<str>,
    |     ------------------------
212 |     table_name: impl AsRef<str>,
    |     ---------------------------
213 |     warehouse: impl AsRef<str>,
    |     --------------------------
help: provide the argument
    |
351 |             get_default_table_location(&namespace, &table_name, &self.config, /* warehouse */)
    |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `build` found for struct `FileIO` in the current scope
   --> crates/catalog/glue/src/catalog.rs:355:32
    |
355 |     let file_io = self.file_io.build().await?;
    |                                ^^^^^ method not found in `FileIO`

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:357:26
    |
357 |     let table_metadata = TableMetadataBuilder::new()
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `TableMetadata` is missing
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/spec/table_metadata.rs:286:12
    |
286 |     pub fn new(origin: TableMetadata) -> Self {
    |            ^^^
help: provide the argument
    |
357 |     let table_metadata = TableMetadataBuilder::new(/* TableMetadata */)
    |                                                   ~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `schema` found for struct `TableMetadataBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:358:10
    |
357 |       let table_metadata = TableMetadataBuilder::new()
    |  __________________________-
358 | |         .schema(creation.schema.clone())
    | |         -^^^^^^ method not found in `TableMetadataBuilder`
    | |_________|
    | 

error[E0609]: no field `parameters` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:365:19
    |
365 |         &creation.parameters,
    |                   ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `previous_metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:366:18
    |
366 |         creation.previous_metadata_location.clone(),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:363:9
    |
361 |     let mut table_input = convert_to_glue_table(
    |                           --------------------- arguments to this function are incorrect
362 |         &table_name,
363 |         &metadata_location,
    |         ^^^^^^^^^^^^^^^^^^ expected `String`, found `&String`
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
146 |     metadata_location: String,
    |     -------------------------
help: consider removing the borrow
    |
363 -         &metadata_location,
363 +         metadata_location,
    |

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:370:54
    |
370 |     let database_name = convert_to_database(creation.identifier.namespace.get(0))?;
    |                                                      ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:370:25
    |
370 |     let database_name = convert_to_database(creation.identifier.namespace.get(0))?;
    |                         ^^^^^^^^^^^^^^^^^^^-------------------------------------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
370 |     let database_name = convert_to_database(creation.identifier.namespace.get(0), /* &HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `database_name` found for struct `TableInput` in the current scope
   --> crates/catalog/glue/src/catalog.rs:371:31
    |
371 |     table_input = table_input.database_name(database_name);
    |                               ^^^^^^^^^^^^^ method not found in `TableInput`

error[E0277]: the trait bound `std::string::String: From<&DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:378:24
    |
378 |         .database_name(&database_name)
    |          ------------- ^^^^^^^^^^^^^^ the trait `From<&DatabaseInput>` is not implemented for `std::string::String`, which is required by `&DatabaseInput: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:379:22
    |
379 |         .table_input(&table_input);
    |          ----------- ^^^^^^^^^^^^ expected `TableInput`, found `&TableInput`
    |          |
    |          arguments to this method are incorrect
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:140:12
    |
140 |     pub fn table_input(mut self, input: crate::types::TableInput) -> Self {
    |            ^^^^^^^^^^^
help: consider removing the borrow
    |
379 -         .table_input(&table_input);
379 +         .table_input(table_input);
    |

error[E0599]: no function or associated item named `new` found for struct `iceberg::table::Table` in the current scope
   --> crates/catalog/glue/src/catalog.rs:388:24
    |
388 |     let table = Table::new(
    |                        ^^^ function or associated item not found in `Table`

error[E0609]: no field `identifier` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:392:18
    |
392 |         creation.identifier.clone(),
    |                  ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `readonly` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:393:18
    |
393 |         creation.readonly,
    |                  ^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

Some errors have detailed explanations: E0061, E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 19 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

