Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0433]: failed to resolve: use of undeclared type `Backtrace`
   --> crates/catalog/glue/src/catalog.rs:569:32
    |
569 |                     backtrace: Backtrace::capture(),
    |                                ^^^^^^^^^ use of undeclared type `Backtrace`
    |
help: consider importing this struct
    |
18  + use std::backtrace::Backtrace;
    |

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:543:51
    |
543 |     let metadata_location = get_metadata_location(&glue_table)?;
    |                             --------------------- ^^^^^^^^^^^ expected `&Option<HashMap<String, String>>`, found `&Table`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected reference `&std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>`
               found reference `&aws_sdk_glue::types::Table`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:257:15
    |
257 | pub(crate) fn get_metadata_location(
    |               ^^^^^^^^^^^^^^^^^^^^^
258 |     parameters: &Option<HashMap<String, String>>,
    |     --------------------------------------------

error[E0639]: cannot create non-exhaustive struct using struct expression
   --> crates/catalog/glue/src/catalog.rs:551:22
    |
551 |           .table_input(TableInput {
    |  ______________________^
552 | |             name: Some(dest_table_name.to_string()),
553 | |             ..glue_table
554 | |         });
    | |_________^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:553:15
    |
553 |             ..glue_table
    |               ^^^^^^^^^^ expected `TableInput`, found `Table`

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:556:56
    |
556 |     with_catalog_id!(builder, self.config).send().await?;
    |                                                        ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<CreateTableError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<(), iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<CreateTableError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<(), iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<CreateTableError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0599]: no variant or associated item named `Io` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:565:38
    |
565 |                     kind: ErrorKind::Io,
    |                                      ^^ variant or associated item not found in `ErrorKind`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:572:43
    |
572 |             return Err(from_aws_sdk_error(delete_error));
    |                        ------------------ ^^^^^^^^^^^^ expected `SdkError<_, Response>`, found `Error`
    |                        |
    |                        arguments to this function are incorrect
    |
    = note: expected enum `aws_smithy_runtime_api::client::result::SdkError<_, aws_smithy_runtime_api::http::response::Response>`
             found struct `iceberg::Error`
note: function defined here
   --> crates/catalog/glue/src/error.rs:24:15
    |
24  | pub(crate) fn from_aws_sdk_error<T>(error: aws_sdk_glue::error::SdkError<T>) -> Error
    |               ^^^^^^^^^^^^^^^^^^    ---------------------------------------

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:552:19
    |
552 |             name: Some(dest_table_name.to_string()),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`

Some errors have detailed explanations: E0277, E0308, E0433, E0599, E0639.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 8 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared type `Backtrace`
   --> crates/catalog/glue/src/catalog.rs:569:32
    |
569 |                     backtrace: Backtrace::capture(),
    |                                ^^^^^^^^^ use of undeclared type `Backtrace`
    |
help: consider importing this struct
    |
18  + use std::backtrace::Backtrace;
    |

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:543:51
    |
543 |     let metadata_location = get_metadata_location(&glue_table)?;
    |                             --------------------- ^^^^^^^^^^^ expected `&Option<HashMap<String, String>>`, found `&Table`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected reference `&std::option::Option<HashMap<std::string::String, std::string::String>>`
               found reference `&aws_sdk_glue::types::Table`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:257:15
    |
257 | pub(crate) fn get_metadata_location(
    |               ^^^^^^^^^^^^^^^^^^^^^
258 |     parameters: &Option<HashMap<String, String>>,
    |     --------------------------------------------

error[E0639]: cannot create non-exhaustive struct using struct expression
   --> crates/catalog/glue/src/catalog.rs:551:22
    |
551 |           .table_input(TableInput {
    |  ______________________^
552 | |             name: Some(dest_table_name.to_string()),
553 | |             ..glue_table
554 | |         });
    | |_________^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:553:15
    |
553 |             ..glue_table
    |               ^^^^^^^^^^ expected `TableInput`, found `Table`

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:556:56
    |
556 |     with_catalog_id!(builder, self.config).send().await?;
    |                                                        ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<CreateTableError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `Result<(), iceberg::Error>: FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<CreateTableError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<(), iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<CreateTableError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0599]: no variant or associated item named `Io` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:565:38
    |
565 |                     kind: ErrorKind::Io,
    |                                      ^^ variant or associated item not found in `ErrorKind`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:572:43
    |
572 |             return Err(from_aws_sdk_error(delete_error));
    |                        ------------------ ^^^^^^^^^^^^ expected `SdkError<_, Response>`, found `Error`
    |                        |
    |                        arguments to this function are incorrect
    |
    = note: expected enum `aws_smithy_runtime_api::client::result::SdkError<_, aws_smithy_runtime_api::http::response::Response>`
             found struct `iceberg::Error`
note: function defined here
   --> crates/catalog/glue/src/error.rs:24:15
    |
24  | pub(crate) fn from_aws_sdk_error<T>(error: aws_sdk_glue::error::SdkError<T>) -> Error
    |               ^^^^^^^^^^^^^^^^^^    ---------------------------------------

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:552:19
    |
552 |             name: Some(dest_table_name.to_string()),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`

Some errors have detailed explanations: E0277, E0308, E0433, E0599, E0639.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 8 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

