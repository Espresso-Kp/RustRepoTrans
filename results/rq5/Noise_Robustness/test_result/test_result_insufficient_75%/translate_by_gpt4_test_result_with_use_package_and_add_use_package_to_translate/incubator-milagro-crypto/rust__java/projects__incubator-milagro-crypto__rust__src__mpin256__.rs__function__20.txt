Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin256.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error: can't reassign to an uninitialized variable
   --> src/./mpin256.rs:588:13
    |
588 |     let pin %= MAXPIN;
    |             ^^ help: initialize the variable
    |
    = help: if you meant to overwrite, remove the `let` binding

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin256.rs:568:33
    |
568 |       let r = Big::new_ints(&rom::CURVE_Order);
    |                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bls48_64.rs:81:1
    |
81  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
82  | |     0x2FFFF0000000001,
83  | |     0x11550278A769C21,
84  | |     0x14D1EB162029C21,
...   |
91  | |     0x0,
92  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0433]: failed to resolve: use of undeclared type `BIG`
   --> src/./mpin256.rs:571:17
    |
571 |         big_x = BIG::randomnum(&r, rng);
    |                 ^^^
    |                 |
    |                 use of undeclared type `BIG`
    |                 help: a struct with a similar name exists: `Big`

error[E0433]: failed to resolve: use of undeclared type `BIG`
   --> src/./mpin256.rs:574:17
    |
574 |         big_x = BIG::from_bytes(x);
    |                 ^^^
    |                 |
    |                 use of undeclared type `BIG`
    |                 help: a struct with a similar name exists: `Big`

error[E0308]: mismatched types
   --> src/./mpin256.rs:580:39
    |
580 |     let h = hashit(sha, 0, client_id, EFS);
    |             ------                    ^^^ expected `&mut [u8]`, found `usize`
    |             |
    |             arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin256.rs:581:28
     |
581  |     let mut P = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: arguments to this function are incorrect
   --> src/./mpin256.rs:598:21
    |
598 |             let h = hashit(sha, date, &h, EFS);
    |                     ^^^^^^            --  --- expected `&mut [u8]`, found `usize`
    |                                       |
    |                                       expected `&[u8]`, found `&bool`
    |
    = note: expected reference `&[u8]`
               found reference `&bool`
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^ ----------  --------  ---------  ------------

error[E0308]: mismatched types
    --> src/./mpin256.rs:599:28
     |
599  |             W = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

Some errors have detailed explanations: E0308, E0425, E0433.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `amcl` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 8 previous errors

