Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0432]: unresolved import `super::rand`
  --> src/./mpin192.rs:21:12
   |
21 | use super::rand::RAND;
   |            ^^^^ could not find `rand` in `super`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin192.rs:761:17
    |
761 |     let mut t = FP24::new(gf);
    |                 ^^^^^^^^^ --
    |                           |
    |                           unexpected argument of type `FP24`
    |                           help: remove the extra argument
    |
note: associated function defined here
   --> src/./fp24.rs:53:12
    |
53  |     pub fn new() -> FP24 {
    |            ^^^

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin192.rs:762:26
    |
762 |     let mut table = vec![FP24::new(t.clone()); TS];
    |                          ^^^^^^^^^ ---------
    |                                    |
    |                                    unexpected argument of type `FP24`
    |                                    help: remove the extra argument
    |
note: associated function defined here
   --> src/./fp24.rs:53:12
    |
53  |     pub fn new() -> FP24 {
    |            ^^^

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin192.rs:774:20
    |
774 |         table[m] = FP24::new(t.clone());
    |                    ^^^^^^^^^ ---------
    |                              |
    |                              unexpected argument of type `FP24`
    |                              help: remove the extra argument
    |
note: associated function defined here
   --> src/./fp24.rs:53:12
    |
53  |     pub fn new() -> FP24 {
    |            ^^^

error[E0308]: mismatched types
   --> src/./mpin192.rs:781:59
    |
781 |         i = (t.geta().geta().geta().geta().lastbits(20) % TS as u64) as usize;
    |                                                           ^^^^^^^^^ expected `isize`, found `u64`

error[E0277]: cannot calculate the remainder of `isize` divided by `u64`
   --> src/./mpin192.rs:781:57
    |
781 |         i = (t.geta().geta().geta().geta().lastbits(20) % TS as u64) as usize;
    |                                                         ^ no implementation for `isize % u64`
    |
    = help: the trait `Rem<u64>` is not implemented for `isize`
    = help: the following other types implement trait `Rem<Rhs>`:
              <&'a isize as Rem<isize>>
              <&isize as Rem<&isize>>
              <isize as Rem<&isize>>
              <isize as Rem>

error[E0599]: no method named `copy` found for struct `FP24` in the current scope
   --> src/./mpin192.rs:785:8
    |
785 |     gf.copy(&t);
    |        ^^^^ method not found in `FP24`
    |
   ::: src/./fp24.rs:36:1
    |
36  | pub struct FP24 {
    | --------------- method `copy` not found for this struct

error[E0308]: mismatched types
   --> src/./mpin192.rs:792:20
    |
792 |         if steps > 4 * TRAP {
    |            -----   ^^^^^^^^ expected `i32`, found `usize`
    |            |
    |            expected because this is `i32`
    |
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
    |
792 |         if steps > (4 * TRAP).try_into().unwrap() {
    |                    +        +++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin192.rs:795:60
    |
795 |         i = (ge.geta().geta().geta().geta().lastbits(20) % TS as u64) as usize;
    |                                                            ^^^^^^^^^ expected `isize`, found `u64`

error[E0277]: cannot calculate the remainder of `isize` divided by `u64`
   --> src/./mpin192.rs:795:58
    |
795 |         i = (ge.geta().geta().geta().geta().lastbits(20) % TS as u64) as usize;
    |                                                          ^ no implementation for `isize % u64`
    |
    = help: the trait `Rem<u64>` is not implemented for `isize`
    = help: the following other types implement trait `Rem<Rhs>`:
              <&'a isize as Rem<isize>>
              <&isize as Rem<&isize>>
              <isize as Rem<&isize>>
              <isize as Rem>

error[E0308]: mismatched types
   --> src/./mpin192.rs:799:19
    |
769 |     let mut res: isize = 0;
    |                  ----- expected due to this type
...
799 |             res = dm - dn;
    |                   ^^^^^^^ expected `isize`, found `i32`

error[E0308]: mismatched types
   --> src/./mpin192.rs:803:19
    |
769 |     let mut res: isize = 0;
    |                  ----- expected due to this type
...
803 |             res = dn - dm;
    |                   ^^^^^^^ expected `isize`, found `i32`

error[E0308]: mismatched types
   --> src/./mpin192.rs:807:16
    |
807 |     if steps > 4 * TRAP || dm - dn >= MAXPIN {
    |        -----   ^^^^^^^^ expected `i32`, found `usize`
    |        |
    |        expected because this is `i32`
    |
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
    |
807 |     if steps > (4 * TRAP).try_into().unwrap() || dm - dn >= MAXPIN {
    |                +        +++++++++++++++++++++

Some errors have detailed explanations: E0061, E0277, E0308, E0432, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 13 previous errors

