Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/spec/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `visit_struct` is defined multiple times
   --> crates/iceberg/src/spec/schema.rs:762:1
    |
448 | pub fn visit_struct<V: SchemaVisitor>(s: &StructType, visitor: &mut V) -> Result<V::T> {
    | -------------------------------------------------------------------------------------- previous definition of the value `visit_struct` here
...
762 | fn visit_struct(&mut self, struct_type: &StructType) -> Result<Self::T> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_struct` redefined here
    |
    = note: `visit_struct` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:762:17
    |
762 | fn visit_struct(&mut self, struct_type: &StructType) -> Result<Self::T> {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:769:11
    |
769 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/spec/schema.rs:759:60
    |
759 | fn new(selected: HashSet<i32>, select_full_types: bool) -> Self {
    |    --- `Self` not allowed in a function                    ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0422]: cannot find struct, variant or union type `PruneColumnsVisitor` in this scope
   --> crates/iceberg/src/spec/schema.rs:760:9
    |
760 |         PruneColumnsVisitor { selected, select_full_types }
    |         ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:767:44
    |
767 |         Ok(StructType { fields, id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                            ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:767:74
    |
767 |         Ok(StructType { fields, id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                                                          ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:773:56
    |
773 |             Ok(StructType { fields: vec![], id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                                        ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:773:86
    |
773 |             Ok(StructType { fields: vec![], id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                                                                      ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `PruneColumnsVisitor`
   --> crates/iceberg/src/spec/schema.rs:744:44
    |
744 |     let result = visit_schema(schema, &mut PruneColumnsVisitor::new(selected.clone(), select_full_types))?;
    |                                            ^^^^^^^^^^^^^^^^^^^ use of undeclared type `PruneColumnsVisitor`

error: cannot construct `datatypes::StructType` with struct literal syntax due to private fields
   --> crates/iceberg/src/spec/schema.rs:745:50
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType { fields: vec![] });
    |                                                  ^^^^^^^^^^   -------------- private field
    |
    = note: ...and other private fields `id_lookup` and `name_lookup` that were not provided
help: you might have meant to use the `new` associated function
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType::new(_));
    |                                                            ~~~~~~~~
help: consider using the `Default` trait
    |
745 |     let result_struct = result.unwrap_or_else(|| <StructType as std::default::Default>::default());
    |                                                  +           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/iceberg/src/spec/schema.rs:746:21
    |
746 |       Ok(Type::Struct(Schema {
    |  ________------------_^
    | |        |
    | |        arguments to this enum variant are incorrect
747 | |         r#struct: result_struct,
748 | |         schema_id: schema.schema_id,
749 | |         highest_field_id: schema.highest_field_id,
...   |
756 | |         field_id_to_accessor: schema.field_id_to_accessor.clone(),
757 | |     }.as_struct()))
    | |_________________^ expected `StructType`, found `&StructType`
    |
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:84:5
    |
84  |     Struct(StructType),
    |     ^^^^^^
help: consider using clone here
    |
757 |     }.as_struct().clone()))
    |                  ++++++++

error[E0616]: field `fields` of struct `datatypes::StructType` is private
   --> crates/iceberg/src/spec/schema.rs:763:34
    |
763 |         let fields = struct_type.fields.iter()
    |                                  ^^^^^^ private field
    |
help: a method `fields` also exists, call it with parentheses
    |
763 |         let fields = struct_type.fields().iter()
    |                                        ++

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:769:66
    |
769 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                                                  ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:762:64
    |
762 | fn visit_struct(&mut self, struct_type: &StructType) -> Result<Self::T> {
    |                                                                ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:769:47
    |
769 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                               ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0308, E0411, E0422, E0428, E0433, E0616.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 16 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 16 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `visit_struct` is defined multiple times
   --> crates/iceberg/src/spec/schema.rs:762:1
    |
448 | pub fn visit_struct<V: SchemaVisitor>(s: &StructType, visitor: &mut V) -> Result<V::T> {
    | -------------------------------------------------------------------------------------- previous definition of the value `visit_struct` here
...
762 | fn visit_struct(&mut self, struct_type: &StructType) -> Result<Self::T> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_struct` redefined here
    |
    = note: `visit_struct` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:762:17
    |
762 | fn visit_struct(&mut self, struct_type: &StructType) -> Result<Self::T> {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:769:11
    |
769 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/spec/schema.rs:759:60
    |
759 | fn new(selected: HashSet<i32>, select_full_types: bool) -> Self {
    |    --- `Self` not allowed in a function                    ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0422]: cannot find struct, variant or union type `PruneColumnsVisitor` in this scope
   --> crates/iceberg/src/spec/schema.rs:760:9
    |
760 |         PruneColumnsVisitor { selected, select_full_types }
    |         ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:767:44
    |
767 |         Ok(StructType { fields, id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                            ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:767:74
    |
767 |         Ok(StructType { fields, id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                                                          ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:773:56
    |
773 |             Ok(StructType { fields: vec![], id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                                        ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:773:86
    |
773 |             Ok(StructType { fields: vec![], id_lookup: OnceLock::new(), name_lookup: OnceLock::new() })
    |                                                                                      ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `PruneColumnsVisitor`
   --> crates/iceberg/src/spec/schema.rs:744:44
    |
744 |     let result = visit_schema(schema, &mut PruneColumnsVisitor::new(selected.clone(), select_full_types))?;
    |                                            ^^^^^^^^^^^^^^^^^^^ use of undeclared type `PruneColumnsVisitor`

error: cannot construct `datatypes::StructType` with struct literal syntax due to private fields
   --> crates/iceberg/src/spec/schema.rs:745:50
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType { fields: vec![] });
    |                                                  ^^^^^^^^^^   -------------- private field
    |
    = note: ...and other private fields `id_lookup` and `name_lookup` that were not provided
help: you might have meant to use the `new` associated function
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType::new(_));
    |                                                            ~~~~~~~~
help: consider using the `Default` trait
    |
745 |     let result_struct = result.unwrap_or_else(|| <StructType as std::default::Default>::default());
    |                                                  +           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/iceberg/src/spec/schema.rs:746:21
    |
746 |       Ok(Type::Struct(Schema {
    |  ________------------_^
    | |        |
    | |        arguments to this enum variant are incorrect
747 | |         r#struct: result_struct,
748 | |         schema_id: schema.schema_id,
749 | |         highest_field_id: schema.highest_field_id,
...   |
756 | |         field_id_to_accessor: schema.field_id_to_accessor.clone(),
757 | |     }.as_struct()))
    | |_________________^ expected `StructType`, found `&StructType`
    |
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:84:5
    |
84  |     Struct(StructType),
    |     ^^^^^^
help: consider using clone here
    |
757 |     }.as_struct().clone()))
    |                  ++++++++

error[E0616]: field `fields` of struct `datatypes::StructType` is private
   --> crates/iceberg/src/spec/schema.rs:763:34
    |
763 |         let fields = struct_type.fields.iter()
    |                                  ^^^^^^ private field
    |
help: a method `fields` also exists, call it with parentheses
    |
763 |         let fields = struct_type.fields().iter()
    |                                        ++

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:769:66
    |
769 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                                                  ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:762:64
    |
762 | fn visit_struct(&mut self, struct_type: &StructType) -> Result<Self::T> {
    |                                                                ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:769:47
    |
769 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                               ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0308, E0411, E0422, E0428, E0433, E0616.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 16 previous errors

