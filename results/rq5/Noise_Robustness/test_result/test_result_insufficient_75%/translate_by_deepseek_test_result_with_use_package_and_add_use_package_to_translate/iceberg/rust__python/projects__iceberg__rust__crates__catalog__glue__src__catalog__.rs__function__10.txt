Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:297:60
    |
297 |     let glue_client = GlueClient(aws_sdk_glue::Client::new(create_sdk_config()));
    |                                                            ^^^^^^^^^^^^^^^^^-- two arguments of type `&std::collections::HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
297 |     let glue_client = GlueClient(aws_sdk_glue::Client::new(create_sdk_config(/* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */)));
    |                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:297:60
    |
297 |     let glue_client = GlueClient(aws_sdk_glue::Client::new(create_sdk_config()));
    |                                  ------------------------- ^^^^^^^^^^^^^^^^^^^ expected `&SdkConfig`, found future
    |                                  |
    |                                  arguments to this function are incorrect
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/client.rs:134:12
    |
134 |     pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
    |            ^^^

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:306:10
    |
306 |         }?;
    |          ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<Vec<TableIdent>, iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0609]: no field `tables` on type `GetTablesOutput`
   --> crates/catalog/glue/src/catalog.rs:308:36
    |
308 |         table_list.extend(response.tables.unwrap_or_default());
    |                                    ^^^^^^ unknown field
    |
    = note: available fields are: `table_list`, `next_token`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
   --> crates/catalog/glue/src/catalog.rs:319:30
    |
319 |             name: table.name.unwrap_or_default(),
    |                              ^^^^^^^^^^^^^^^^^ method not found in `String`

Some errors have detailed explanations: E0061, E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:297:60
    |
297 |     let glue_client = GlueClient(aws_sdk_glue::Client::new(create_sdk_config()));
    |                                                            ^^^^^^^^^^^^^^^^^-- two arguments of type `&HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
297 |     let glue_client = GlueClient(aws_sdk_glue::Client::new(create_sdk_config(/* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */)));
    |                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:297:60
    |
297 |     let glue_client = GlueClient(aws_sdk_glue::Client::new(create_sdk_config()));
    |                                  ------------------------- ^^^^^^^^^^^^^^^^^^^ expected `&SdkConfig`, found future
    |                                  |
    |                                  arguments to this function are incorrect
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/client.rs:134:12
    |
134 |     pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
    |            ^^^

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:306:10
    |
306 |         }?;
    |          ^ the trait `From<aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>` is not implemented for `iceberg::Error`, which is required by `Result<Vec<TableIdent>, iceberg::Error>: FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_smithy_runtime_api::client::result::SdkError<GetTablesError, aws_smithy_runtime_api::http::response::Response>>>`

error[E0609]: no field `tables` on type `GetTablesOutput`
   --> crates/catalog/glue/src/catalog.rs:308:36
    |
308 |         table_list.extend(response.tables.unwrap_or_default());
    |                                    ^^^^^^ unknown field
    |
    = note: available fields are: `table_list`, `next_token`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
   --> crates/catalog/glue/src/catalog.rs:319:30
    |
319 |             name: table.name.unwrap_or_default(),
    |                              ^^^^^^^^^^^^^^^^^ method not found in `String`

Some errors have detailed explanations: E0061, E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

