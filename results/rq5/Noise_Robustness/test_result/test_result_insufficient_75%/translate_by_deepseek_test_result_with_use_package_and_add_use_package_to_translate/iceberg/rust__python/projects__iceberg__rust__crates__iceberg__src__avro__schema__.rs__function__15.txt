Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `EnumSchema`
   --> crates/iceberg/src/avro/schema.rs:504:35
    |
504 |         return Ok(Some(Type::Enum(EnumSchema::new(symbols))));
    |                                   ^^^^^^^^^^ use of undeclared type `EnumSchema`
    |
help: consider importing this struct
    |
19  + use apache_avro::schema::EnumSchema;
    |

error[E0599]: no method named `is_null` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:451:15
    |
451 |     if schema.is_null() {
    |               ^^^^^^^ method not found in `&Schema`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_boolean` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:22
    |
453 |     } else if schema.is_boolean() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_int` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:455:22
    |
455 |     } else if schema.is_int() {
    |                      ^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_long` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:457:22
    |
457 |     } else if schema.is_long() {
    |                      ^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_float` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:459:22
    |
459 |     } else if schema.is_float() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_double` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:461:22
    |
461 |     } else if schema.is_double() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_bytes` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:463:22
    |
463 |     } else if schema.is_bytes() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_string` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:465:22
    |
465 |     } else if schema.is_string() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_array` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:467:22
    |
467 |     } else if schema.is_array() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_element_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:468:37
    |
468 |         let element_schema = schema.get_element_schema()?;
    |                                     ^^^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Array` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:30
    |
469 |         return Ok(Some(Type::Array(Box::new(AvroSchemaToSchema::convert(element_schema)))));
    |                              ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Array` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:65
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
469 |         return Ok(Some(Type::Array(Box::new(AvroSchemaToSchema::convert(element_schema)))));
    |                                                                 ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0599]: no method named `is_map` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:470:22
    |
470 |     } else if schema.is_map() {
    |                      ^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_value_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:35
    |
471 |         let value_schema = schema.get_value_schema()?;
    |                                   ^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:472:63
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
472 |         return Ok(Some(Type::Map(Box::new(AvroSchemaToSchema::convert(value_schema)))));
    |                                                               ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0599]: no method named `is_union` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:473:22
    |
473 |     } else if schema.is_union() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_sub_schemas` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:474:34
    |
474 |         let sub_schemas = schema.get_sub_schemas()?;
    |                                  ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:477:39
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
477 |             match AvroSchemaToSchema::convert(sub_schema) {
    |                                       ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0599]: no variant or associated item named `Union` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:488:30
    |
488 |         return Ok(Some(Type::Union(UnionSchema::new(types))));
    |                              ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Union` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:488:53
    |
484 |                 | Type::Primitive(PrimitiveType::String) => types.push(Type::Primitive(PrimitiveType::Boolean)),
    |                                                             -----      --------------------------------------- this argument has type `datatypes::Type`...
    |                                                             |
    |                                                             ... which causes `types` to have type `Vec<datatypes::Type>`
...
488 |         return Ok(Some(Type::Union(UnionSchema::new(types))));
    |                                    ---------------- ^^^^^ expected `Vec<Schema>`, found `Vec<Type>`
    |                                    |
    |                                    arguments to this function are incorrect
    |
    = note: expected struct `Vec<apache_avro::Schema>`
               found struct `Vec<datatypes::Type>`
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:842:12
    |
842 |     pub fn new(schemas: Vec<Schema>) -> AvroResult<Self> {
    |            ^^^

error[E0599]: no method named `is_record` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:489:22
    |
489 |     } else if schema.is_record() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_fields` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:490:29
    |
490 |         let fields = schema.get_fields()?;
    |                             ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:495:58
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
495 |                 field_type: Box::new(AvroSchemaToSchema::convert(&field.schema)),
    |                                                          ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0560]: struct `datatypes::NestedField` has no field named `default_value`
   --> crates/iceberg/src/avro/schema.rs:497:17
    |
497 |                 default_value: field.default_value.clone(),
    |                 ^^^^^^^^^^^^^ `datatypes::NestedField` does not have this field
    |
    = note: available fields are: `id`, `required`, `initial_default`, `write_default`

error[E0560]: struct `datatypes::NestedField` has no field named `order`
   --> crates/iceberg/src/avro/schema.rs:498:17
    |
498 |                 order: RecordFieldOrder::Ascending,
    |                 ^^^^^ `datatypes::NestedField` does not have this field
    |
    = note: available fields are: `id`, `required`, `initial_default`, `write_default`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:501:53
    |
493 |               struct_fields.push(NestedField {
    |  _____________-------------______-
    | |             |
    | |             ... which causes `struct_fields` to have type `Vec<datatypes::NestedField>`
494 | |                 name: field.name.clone(),
495 | |                 field_type: Box::new(AvroSchemaToSchema::convert(&field.schema)),
496 | |                 doc: field.doc.clone(),
497 | |                 default_value: field.default_value.clone(),
498 | |                 order: RecordFieldOrder::Ascending,
499 | |             });
    | |_____________- this argument has type `datatypes::NestedField`...
500 |           }
501 |           return Ok(Some(Type::Struct(StructType::new(struct_fields))));
    |                                       --------------- ^^^^^^^^^^^^^ expected `Vec<Arc<NestedField>>`, found `Vec<NestedField>`
    |                                       |
    |                                       arguments to this function are incorrect
    |
    = note: expected struct `Vec<Arc<datatypes::NestedField>>`
               found struct `Vec<datatypes::NestedField>`
note: associated function defined here
   --> crates/iceberg/src/spec/datatypes.rs:424:12
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |            ^^^ ---------------------------
help: call `Into::into` on this expression to convert `datatypes::NestedField` into `Arc<datatypes::NestedField>`
    |
499 |             }.into());
    |              +++++++

error[E0599]: no method named `is_enum` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:502:22
    |
502 |     } else if schema.is_enum() {
    |                      ^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_symbols` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:503:30
    |
503 |         let symbols = schema.get_symbols()?;
    |                              ^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Enum` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:504:30
    |
504 |         return Ok(Some(Type::Enum(EnumSchema::new(symbols))));
    |                              ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Enum` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_fixed` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:22
    |
505 |     } else if schema.is_fixed() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_fixed_size` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:506:27
    |
506 |         let size = schema.get_fixed_size()?;
    |                           ^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_decimal` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:508:22
    |
508 |     } else if schema.is_decimal() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_precision` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:509:32
    |
509 |         let precision = schema.get_precision()?;
    |                                ^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_scale` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:510:28
    |
510 |         let scale = schema.get_scale()?;
    |                            ^^^^^^^^^ method not found in `&Schema`

Some errors have detailed explanations: E0308, E0433, E0560, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 35 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 35 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `EnumSchema`
   --> crates/iceberg/src/avro/schema.rs:504:35
    |
504 |         return Ok(Some(Type::Enum(EnumSchema::new(symbols))));
    |                                   ^^^^^^^^^^ use of undeclared type `EnumSchema`
    |
help: consider importing this struct
    |
19  + use apache_avro::schema::EnumSchema;
    |

error[E0599]: no method named `is_null` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:451:15
    |
451 |     if schema.is_null() {
    |               ^^^^^^^ method not found in `&Schema`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_boolean` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:22
    |
453 |     } else if schema.is_boolean() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_int` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:455:22
    |
455 |     } else if schema.is_int() {
    |                      ^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_long` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:457:22
    |
457 |     } else if schema.is_long() {
    |                      ^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_float` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:459:22
    |
459 |     } else if schema.is_float() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_double` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:461:22
    |
461 |     } else if schema.is_double() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_bytes` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:463:22
    |
463 |     } else if schema.is_bytes() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_string` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:465:22
    |
465 |     } else if schema.is_string() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_array` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:467:22
    |
467 |     } else if schema.is_array() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_element_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:468:37
    |
468 |         let element_schema = schema.get_element_schema()?;
    |                                     ^^^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Array` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:30
    |
469 |         return Ok(Some(Type::Array(Box::new(AvroSchemaToSchema::convert(element_schema)))));
    |                              ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Array` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:65
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
469 |         return Ok(Some(Type::Array(Box::new(AvroSchemaToSchema::convert(element_schema)))));
    |                                                                 ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0599]: no method named `is_map` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:470:22
    |
470 |     } else if schema.is_map() {
    |                      ^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_value_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:35
    |
471 |         let value_schema = schema.get_value_schema()?;
    |                                   ^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:472:63
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
472 |         return Ok(Some(Type::Map(Box::new(AvroSchemaToSchema::convert(value_schema)))));
    |                                                               ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0599]: no method named `is_union` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:473:22
    |
473 |     } else if schema.is_union() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_sub_schemas` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:474:34
    |
474 |         let sub_schemas = schema.get_sub_schemas()?;
    |                                  ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:477:39
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
477 |             match AvroSchemaToSchema::convert(sub_schema) {
    |                                       ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0599]: no variant or associated item named `Union` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:488:30
    |
488 |         return Ok(Some(Type::Union(UnionSchema::new(types))));
    |                              ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Union` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:488:53
    |
484 |                 | Type::Primitive(PrimitiveType::String) => types.push(Type::Primitive(PrimitiveType::Boolean)),
    |                                                             -----      --------------------------------------- this argument has type `datatypes::Type`...
    |                                                             |
    |                                                             ... which causes `types` to have type `Vec<datatypes::Type>`
...
488 |         return Ok(Some(Type::Union(UnionSchema::new(types))));
    |                                    ---------------- ^^^^^ expected `Vec<Schema>`, found `Vec<Type>`
    |                                    |
    |                                    arguments to this function are incorrect
    |
    = note: expected struct `Vec<apache_avro::Schema>`
               found struct `Vec<datatypes::Type>`
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:842:12
    |
842 |     pub fn new(schemas: Vec<Schema>) -> AvroResult<Self> {
    |            ^^^

error[E0599]: no method named `is_record` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:489:22
    |
489 |     } else if schema.is_record() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_fields` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:490:29
    |
490 |         let fields = schema.get_fields()?;
    |                             ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no function or associated item named `convert` found for struct `AvroSchemaToSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:495:58
    |
329 | struct AvroSchemaToSchema {
    | ------------------------- function or associated item `convert` not found for this struct
...
495 |                 field_type: Box::new(AvroSchemaToSchema::convert(&field.schema)),
    |                                                          ^^^^^^^ function or associated item not found in `AvroSchemaToSchema`

error[E0560]: struct `datatypes::NestedField` has no field named `default_value`
   --> crates/iceberg/src/avro/schema.rs:497:17
    |
497 |                 default_value: field.default_value.clone(),
    |                 ^^^^^^^^^^^^^ `datatypes::NestedField` does not have this field
    |
    = note: available fields are: `id`, `required`, `initial_default`, `write_default`

error[E0560]: struct `datatypes::NestedField` has no field named `order`
   --> crates/iceberg/src/avro/schema.rs:498:17
    |
498 |                 order: RecordFieldOrder::Ascending,
    |                 ^^^^^ `datatypes::NestedField` does not have this field
    |
    = note: available fields are: `id`, `required`, `initial_default`, `write_default`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:501:53
    |
493 |               struct_fields.push(NestedField {
    |  _____________-------------______-
    | |             |
    | |             ... which causes `struct_fields` to have type `Vec<datatypes::NestedField>`
494 | |                 name: field.name.clone(),
495 | |                 field_type: Box::new(AvroSchemaToSchema::convert(&field.schema)),
496 | |                 doc: field.doc.clone(),
497 | |                 default_value: field.default_value.clone(),
498 | |                 order: RecordFieldOrder::Ascending,
499 | |             });
    | |_____________- this argument has type `datatypes::NestedField`...
500 |           }
501 |           return Ok(Some(Type::Struct(StructType::new(struct_fields))));
    |                                       --------------- ^^^^^^^^^^^^^ expected `Vec<Arc<NestedField>>`, found `Vec<NestedField>`
    |                                       |
    |                                       arguments to this function are incorrect
    |
    = note: expected struct `Vec<Arc<datatypes::NestedField>>`
               found struct `Vec<datatypes::NestedField>`
note: associated function defined here
   --> crates/iceberg/src/spec/datatypes.rs:424:12
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |            ^^^ ---------------------------
help: call `Into::into` on this expression to convert `datatypes::NestedField` into `Arc<datatypes::NestedField>`
    |
499 |             }.into());
    |              +++++++

error[E0599]: no method named `is_enum` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:502:22
    |
502 |     } else if schema.is_enum() {
    |                      ^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_symbols` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:503:30
    |
503 |         let symbols = schema.get_symbols()?;
    |                              ^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Enum` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:504:30
    |
504 |         return Ok(Some(Type::Enum(EnumSchema::new(symbols))));
    |                              ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Enum` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_fixed` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:22
    |
505 |     } else if schema.is_fixed() {
    |                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_fixed_size` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:506:27
    |
506 |         let size = schema.get_fixed_size()?;
    |                           ^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_decimal` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:508:22
    |
508 |     } else if schema.is_decimal() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_precision` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:509:32
    |
509 |         let precision = schema.get_precision()?;
    |                                ^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `get_scale` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:510:28
    |
510 |         let scale = schema.get_scale()?;
    |                            ^^^^^^^^^ method not found in `&Schema`

Some errors have detailed explanations: E0308, E0433, E0560, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 35 previous errors

