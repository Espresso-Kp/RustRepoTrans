Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: `std::result::Result<std::string::String, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:522:41
    |
522 |     validate_namespace(&dest.namespace).await?;
    |     ----------------------------------- ^^^^^ `std::result::Result<std::string::String, iceberg::Error>` is not a future
    |     |
    |     this call returns `std::result::Result<std::string::String, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `std::result::Result<std::string::String, iceberg::Error>`, which is required by `std::result::Result<std::string::String, iceberg::Error>: IntoFuture`
    = note: std::result::Result<std::string::String, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::string::String, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
522 -     validate_namespace(&dest.namespace).await?;
522 +     validate_namespace(&dest.namespace)?;
    |
help: alternatively, consider making `fn validate_namespace` asynchronous
   --> crates/catalog/glue/src/utils.rs:183:11
    |
183 | pub(crate) async fn validate_namespace(namespace: &NamespaceIdent) -> Result<String> {
    |            +++++

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:525:23
    |
525 |     let src_db_name = IcebergToGlueConverter::getDatabaseName(src, &self.config.glue_catalog_skip_name_validation);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:525:81
    |
525 |     let src_db_name = IcebergToGlueConverter::getDatabaseName(src, &self.config.glue_catalog_skip_name_validation);
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:526:26
    |
526 |     let src_table_name = IcebergToGlueConverter::getTableName(src, &self.config.glue_catalog_skip_name_validation);
    |                          ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:526:81
    |
526 |     let src_table_name = IcebergToGlueConverter::getTableName(src, &self.config.glue_catalog_skip_name_validation);
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:527:24
    |
527 |     let dest_db_name = IcebergToGlueConverter::getDatabaseName(dest, &self.config.glue_catalog_skip_name_validation);
    |                        ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:527:83
    |
527 |     let dest_db_name = IcebergToGlueConverter::getDatabaseName(dest, &self.config.glue_catalog_skip_name_validation);
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:528:27
    |
528 |     let dest_table_name = IcebergToGlueConverter::getTableName(dest, &self.config.glue_catalog_skip_name_validation);
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:528:83
    |
528 |     let dest_table_name = IcebergToGlueConverter::getTableName(dest, &self.config.glue_catalog_skip_name_validation);
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0599]: no method named `get_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:531:26
    |
531 |     let src_table = self.get_table(&src_db_name, &src_table_name).await?;
    |                          ^^^^^^^^^ method not found in `&GlueCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
531 |     let src_table = self.client.0.get_table(&src_db_name, &src_table_name).await?;
    |                          +++++++++

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:537:10
    |
537 |         .parameters(src_table.parameters())
    |          ^^^^^^^^^^------------------------ an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
537 |         .parameters(src_table.parameters(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `new` found for struct `TableCreation` in the current scope
   --> crates/catalog/glue/src/catalog.rs:543:55
    |
543 |     self.create_table(&dest.namespace, TableCreation::new(dest_db_name.clone(), dest_table_name.clone(), None, Some(table_input))).await?;
    |                                                       ^^^ function or associated item not found in `TableCreation`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:546:55
    |
546 |     log::info!("Created rename destination table {}", dest);
    |                                                       ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:549:10
    |
549 |     self.drop_table(src, false).await?;
    |          ^^^^^^^^^^    -------
    |                        | |
    |                        | unexpected argument of type `bool`
    |                        help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:552:60
    |
552 |     log::info!("Successfully renamed table from {} to {}", src, dest);
    |                                                            ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:552:65
    |
552 |     log::info!("Successfully renamed table from {} to {}", src, dest);
    |                                                                 ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 16 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0277]: `Result<std::string::String, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:522:41
    |
522 |     validate_namespace(&dest.namespace).await?;
    |     ----------------------------------- ^^^^^ `Result<std::string::String, iceberg::Error>` is not a future
    |     |
    |     this call returns `Result<std::string::String, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `Result<std::string::String, iceberg::Error>`, which is required by `Result<std::string::String, iceberg::Error>: IntoFuture`
    = note: Result<std::string::String, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<std::string::String, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
522 -     validate_namespace(&dest.namespace).await?;
522 +     validate_namespace(&dest.namespace)?;
    |
help: alternatively, consider making `fn validate_namespace` asynchronous
   --> crates/catalog/glue/src/utils.rs:183:11
    |
183 | pub(crate) async fn validate_namespace(namespace: &NamespaceIdent) -> Result<String> {
    |            +++++

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:525:23
    |
525 |     let src_db_name = IcebergToGlueConverter::getDatabaseName(src, &self.config.glue_catalog_skip_name_validation);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:525:81
    |
525 |     let src_db_name = IcebergToGlueConverter::getDatabaseName(src, &self.config.glue_catalog_skip_name_validation);
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:526:26
    |
526 |     let src_table_name = IcebergToGlueConverter::getTableName(src, &self.config.glue_catalog_skip_name_validation);
    |                          ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:526:81
    |
526 |     let src_table_name = IcebergToGlueConverter::getTableName(src, &self.config.glue_catalog_skip_name_validation);
    |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:527:24
    |
527 |     let dest_db_name = IcebergToGlueConverter::getDatabaseName(dest, &self.config.glue_catalog_skip_name_validation);
    |                        ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:527:83
    |
527 |     let dest_db_name = IcebergToGlueConverter::getDatabaseName(dest, &self.config.glue_catalog_skip_name_validation);
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:528:27
    |
528 |     let dest_table_name = IcebergToGlueConverter::getTableName(dest, &self.config.glue_catalog_skip_name_validation);
    |                           ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `glue_catalog_skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:528:83
    |
528 |     let dest_table_name = IcebergToGlueConverter::getTableName(dest, &self.config.glue_catalog_skip_name_validation);
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0599]: no method named `get_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:531:26
    |
531 |     let src_table = self.get_table(&src_db_name, &src_table_name).await?;
    |                          ^^^^^^^^^ method not found in `&GlueCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
531 |     let src_table = self.client.0.get_table(&src_db_name, &src_table_name).await?;
    |                          +++++++++

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:537:10
    |
537 |         .parameters(src_table.parameters())
    |          ^^^^^^^^^^------------------------ an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
537 |         .parameters(src_table.parameters(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `new` found for struct `TableCreation` in the current scope
   --> crates/catalog/glue/src/catalog.rs:543:55
    |
543 |     self.create_table(&dest.namespace, TableCreation::new(dest_db_name.clone(), dest_table_name.clone(), None, Some(table_input))).await?;
    |                                                       ^^^ function or associated item not found in `TableCreation`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:546:55
    |
546 |     log::info!("Created rename destination table {}", dest);
    |                                                       ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:549:10
    |
549 |     self.drop_table(src, false).await?;
    |          ^^^^^^^^^^    -------
    |                        | |
    |                        | unexpected argument of type `bool`
    |                        help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:552:60
    |
552 |     log::info!("Successfully renamed table from {} to {}", src, dest);
    |                                                            ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:552:65
    |
552 |     log::info!("Successfully renamed table from {} to {}", src, dest);
    |                                                                 ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 16 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

