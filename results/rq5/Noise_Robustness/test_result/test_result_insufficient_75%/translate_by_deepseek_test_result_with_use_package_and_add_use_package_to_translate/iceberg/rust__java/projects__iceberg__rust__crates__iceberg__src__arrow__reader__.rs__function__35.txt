Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:547:28
    |
547 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
547 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:550:28
    |
550 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
550 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:553:28
    |
553 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
553 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:556:28
    |
556 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
556 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:562:40
    |
562 |                     return Ok(Box::new(always_false));
    |                                        ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
562 |                     return Ok(Box::new(self.always_false));
    |                                        +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:565:40
    |
565 |                     return Ok(Box::new(always_false));
    |                                        ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
565 |                     return Ok(Box::new(self.always_false));
    |                                        +++++

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:546:39
    |
546 |     if let Err(_) = is_not_null(&*lhs(RecordBatch::new_empty())) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
546 |     if let Err(_) = is_not_null(&*lhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:546:34
    |
546 |     if let Err(_) = is_not_null(&*lhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:549:39
    |
549 |     if let Err(_) = is_not_null(&*rhs(RecordBatch::new_empty())) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
549 |     if let Err(_) = is_not_null(&*rhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:549:34
    |
549 |     if let Err(_) = is_not_null(&*rhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:552:34
    |
552 |     if let Ok(_) = is_null(&*lhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
552 |     if let Ok(_) = is_null(&*lhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:552:29
    |
552 |     if let Ok(_) = is_null(&*lhs(RecordBatch::new_empty())) {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:555:34
    |
555 |     if let Ok(_) = is_null(&*rhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
555 |     if let Ok(_) = is_null(&*rhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:555:29
    |
555 |     if let Ok(_) = is_null(&*rhs(RecordBatch::new_empty())) {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:558:32
    |
558 |     if let Ok(lhs_array) = lhs(RecordBatch::new_empty()) {
    |                                ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
558 |     if let Ok(lhs_array) = lhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */)) {
    |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:559:36
    |
559 |         if let Ok(rhs_array) = rhs(RecordBatch::new_empty()) {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
559 |         if let Ok(rhs_array) = rhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */)) {
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:68
    |
560 | ...   if let (Ok(lhs_boolean), Ok(rhs_boolean)) = (lhs_array.as_any().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<B...
    |                                                              ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:119
    |
560 | ...y().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<BooleanArray>()) {
    |                                                  ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:581:72
    |
581 | ...   if let (Ok(lhs_boolean), Ok(rhs_boolean)) = (lhs_array.as_any().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<B...
    |                                                              ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:581:123
    |
581 | ...y().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<BooleanArray>()) {
    |                                                  ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:583:24
    |
583 |                     Ok(result)
    |                     -- ^^^^^^ expected `BooleanArray`, found `Result<BooleanArray, ArrowError>`
    |                     |
    |                     arguments to this enum variant are incorrect
    |
    = note: expected struct `BooleanArray`
                 found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
help: the type constructed contains `std::result::Result<BooleanArray, arrow_schema::ArrowError>` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:583:21
    |
583 |                     Ok(result)
    |                     ^^^------^
    |                        |
    |                        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: consider using `Result::expect` to unwrap the `std::result::Result<BooleanArray, arrow_schema::ArrowError>` value, panicking if the value is a `Result::Err`
    |
583 |                     Ok(result.expect("REASON"))
    |                              +++++++++++++++++

Some errors have detailed explanations: E0061, E0308, E0425, E0599, E0614.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 21 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 21 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:547:28
    |
547 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
547 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:550:28
    |
550 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
550 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:553:28
    |
553 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
553 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:556:28
    |
556 |         return Ok(Box::new(always_false));
    |                            ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
556 |         return Ok(Box::new(self.always_false));
    |                            +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:562:40
    |
562 |                     return Ok(Box::new(always_false));
    |                                        ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
562 |                     return Ok(Box::new(self.always_false));
    |                                        +++++

error[E0425]: cannot find value `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:565:40
    |
565 |                     return Ok(Box::new(always_false));
    |                                        ^^^^^^^^^^^^
    |
help: you might have meant to refer to the method
    |
565 |                     return Ok(Box::new(self.always_false));
    |                                        +++++

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:546:39
    |
546 |     if let Err(_) = is_not_null(&*lhs(RecordBatch::new_empty())) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
546 |     if let Err(_) = is_not_null(&*lhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:546:34
    |
546 |     if let Err(_) = is_not_null(&*lhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:549:39
    |
549 |     if let Err(_) = is_not_null(&*rhs(RecordBatch::new_empty())) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
549 |     if let Err(_) = is_not_null(&*rhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:549:34
    |
549 |     if let Err(_) = is_not_null(&*rhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:552:34
    |
552 |     if let Ok(_) = is_null(&*lhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
552 |     if let Ok(_) = is_null(&*lhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:552:29
    |
552 |     if let Ok(_) = is_null(&*lhs(RecordBatch::new_empty())) {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:555:34
    |
555 |     if let Ok(_) = is_null(&*rhs(RecordBatch::new_empty())) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
555 |     if let Ok(_) = is_null(&*rhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */))) {
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0614]: type `std::result::Result<BooleanArray, arrow_schema::ArrowError>` cannot be dereferenced
   --> crates/iceberg/src/arrow/reader.rs:555:29
    |
555 |     if let Ok(_) = is_null(&*rhs(RecordBatch::new_empty())) {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:558:32
    |
558 |     if let Ok(lhs_array) = lhs(RecordBatch::new_empty()) {
    |                                ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
558 |     if let Ok(lhs_array) = lhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */)) {
    |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:559:36
    |
559 |         if let Ok(rhs_array) = rhs(RecordBatch::new_empty()) {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^-- an argument of type `Arc<arrow_schema::Schema>` is missing
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:128:12
    |
128 |     pub fn new_empty(schema: SchemaRef) -> Self {
    |            ^^^^^^^^^
help: provide the argument
    |
559 |         if let Ok(rhs_array) = rhs(RecordBatch::new_empty(/* Arc<arrow_schema::Schema> */)) {
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:68
    |
560 | ...   if let (Ok(lhs_boolean), Ok(rhs_boolean)) = (lhs_array.as_any().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<B...
    |                                                              ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:119
    |
560 | ...y().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<BooleanArray>()) {
    |                                                  ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:581:72
    |
581 | ...   if let (Ok(lhs_boolean), Ok(rhs_boolean)) = (lhs_array.as_any().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<B...
    |                                                              ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0599]: no method named `as_any` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:581:123
    |
581 | ...y().downcast_ref::<BooleanArray>(), rhs_array.as_any().downcast_ref::<BooleanArray>()) {
    |                                                  ^^^^^^ method not found in `BooleanArray`
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/mod.rs:99:8
    |
99  |     fn as_any(&self) -> &dyn Any;
    |        ------ the method is available for `BooleanArray` here
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
20  + use arrow_array::Array;
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:583:24
    |
583 |                     Ok(result)
    |                     -- ^^^^^^ expected `BooleanArray`, found `Result<BooleanArray, ArrowError>`
    |                     |
    |                     arguments to this enum variant are incorrect
    |
    = note: expected struct `BooleanArray`
                 found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
help: the type constructed contains `std::result::Result<BooleanArray, arrow_schema::ArrowError>` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:583:21
    |
583 |                     Ok(result)
    |                     ^^^------^
    |                        |
    |                        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: consider using `Result::expect` to unwrap the `std::result::Result<BooleanArray, arrow_schema::ArrowError>` value, panicking if the value is a `Result::Err`
    |
583 |                     Ok(result.expect("REASON"))
    |                              +++++++++++++++++

Some errors have detailed explanations: E0061, E0308, E0425, E0599, E0614.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 21 previous errors

