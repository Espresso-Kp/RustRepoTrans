Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `DC_CHAT_ID_ARCHIVED_LINK` is defined multiple times
  --> src/chat.rs:42:55
   |
19 | use crate::constants::{DC_CHAT_ID_ARCHIVED_LINK, DC_CHAT_ID_LAST_SPECIAL};
   |                        ------------------------ previous import of the value `DC_CHAT_ID_ARCHIVED_LINK` here
...
42 |     self, Blocked, Chattype, DC_CHAT_ID_ALLDONE_HINT, DC_CHAT_ID_ARCHIVED_LINK,
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^-
   |                                                       |
   |                                                       `DC_CHAT_ID_ARCHIVED_LINK` reimported here
   |                                                       help: remove unnecessary import
   |
   = note: `DC_CHAT_ID_ARCHIVED_LINK` must be defined only once in the value namespace of this module

error[E0252]: the name `DC_CHAT_ID_LAST_SPECIAL` is defined multiple times
  --> src/chat.rs:43:5
   |
19 | use crate::constants::{DC_CHAT_ID_ARCHIVED_LINK, DC_CHAT_ID_LAST_SPECIAL};
   |                                                  ----------------------- previous import of the value `DC_CHAT_ID_LAST_SPECIAL` here
...
43 |     DC_CHAT_ID_LAST_SPECIAL, DC_CHAT_ID_TRASH, DC_RESEND_USER_AVATAR_DAYS,
   |     ^^^^^^^^^^^^^^^^^^^^^^^--
   |     |
   |     `DC_CHAT_ID_LAST_SPECIAL` reimported here
   |     help: remove unnecessary import
   |
   = note: `DC_CHAT_ID_LAST_SPECIAL` must be defined only once in the value namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> src/chat.rs:28:50
   |
6  | use anyhow::{Result, bail};
   |              ------ previous import of the type `Result` here
...
28 | use anyhow::{anyhow, bail, ensure, Context as _, Result};
   |                                                  ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `bail` is defined multiple times
  --> src/chat.rs:28:22
   |
6  | use anyhow::{Result, bail};
   |                      ---- previous import of the macro `bail` here
...
28 | use anyhow::{anyhow, bail, ensure, Context as _, Result};
   |                      ^^^^--
   |                      |
   |                      `bail` reimported here
   |                      help: remove unnecessary import
   |
   = note: `bail` must be defined only once in the macro namespace of this module

error[E0252]: the name `ContactId` is defined multiple times
  --> src/chat.rs:45:37
   |
9  | use crate::contact::ContactId;
   |     ------------------------- previous import of the type `ContactId` here
...
45 | use crate::contact::{self, Contact, ContactId, Origin};
   |                                     ^^^^^^^^^--
   |                                     |
   |                                     `ContactId` reimported here
   |                                     help: remove unnecessary import
   |
   = note: `ContactId` must be defined only once in the type namespace of this module

error[E0252]: the name `Context` is defined multiple times
  --> src/chat.rs:46:5
   |
7  | use crate::context::{Context, MsgId, ChatId};
   |                      ------- previous import of the type `Context` here
...
46 | use crate::context::Context;
   |     ^^^^^^^^^^^^^^^^^^^^^^^ `Context` reimported here
   |
   = note: `Context` must be defined only once in the type namespace of this module

error[E0252]: the name `Message` is defined multiple times
  --> src/chat.rs:54:28
   |
13 | use crate::message::Message;
   |     ----------------------- previous import of the type `Message` here
...
54 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                            ^^^^^^^--
   |                            |
   |                            `Message` reimported here
   |                            help: remove unnecessary import
   |
   = note: `Message` must be defined only once in the type namespace of this module

error[E0252]: the name `MessageState` is defined multiple times
  --> src/chat.rs:54:37
   |
8  | use crate::message::MessageState;
   |     ---------------------------- previous import of the type `MessageState` here
...
54 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                     ^^^^^^^^^^^^--
   |                                     |
   |                                     `MessageState` reimported here
   |                                     help: remove unnecessary import
   |
   = note: `MessageState` must be defined only once in the type namespace of this module

error[E0252]: the name `Param` is defined multiple times
  --> src/chat.rs:57:20
   |
10 | use crate::param::Param;
   |     ------------------- previous import of the type `Param` here
...
57 | use crate::param::{Param, Params};
   |                    ^^^^^--
   |                    |
   |                    `Param` reimported here
   |                    help: remove unnecessary import
   |
   = note: `Param` must be defined only once in the type namespace of this module

error[E0252]: the name `Params` is defined multiple times
  --> src/chat.rs:57:27
   |
14 | use crate::param::Params;
   |     -------------------- previous import of the type `Params` here
...
57 | use crate::param::{Param, Params};
   |                           ^^^^^^ `Params` reimported here
   |
   = note: `Params` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::viewtype`
  --> src/chat.rs:11:12
   |
11 | use crate::viewtype::Viewtype;
   |            ^^^^^^^^ could not find `viewtype` in the crate root

error[E0432]: unresolved import `crate::sql::rusqlite`
  --> src/chat.rs:16:5
   |
16 | use crate::sql::rusqlite;
   |     ^^^^^^^^^^^^^^^^^^^^ no `rusqlite` in `sql`
   |
help: consider importing this crate instead
   |
16 | use crate::rusqlite;
   |     ~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::sql::rusqlite`
  --> src/chat.rs:17:17
   |
17 | use crate::sql::rusqlite::params_slice;
   |                 ^^^^^^^^ could not find `rusqlite` in `sql`

error[E0432]: unresolved import `crate::stock_str::stock_str`
  --> src/chat.rs:18:5
   |
18 | use crate::stock_str::stock_str;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `stock_str` in `stock_str`
   |
help: consider importing this module instead
   |
18 | use crate::stock_str;
   |     ~~~~~~~~~~~~~~~~

error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
    --> src/chat.rs:4122:31
     |
4122 |     if context.inner.magic != DC_CONTEXT_MAGIC || msg_ids.is_empty() || chat_id <= DC_CHAT_ID_LAST_SPECIAL {
     |                               ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_FORWARDED` in this scope
    --> src/chat.rs:4152:47
     |
4152 |             context.param_set_int(&msg.param, DC_PARAM_FORWARDED, 1).await?;
     |                                               ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_GUARANTEE_E2EE` in this scope
    --> src/chat.rs:4155:39
     |
4155 |         context.param_set(&msg.param, DC_PARAM_GUARANTEE_E2EE, None).await?;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_FORCE_PLAINTEXT` in this scope
    --> src/chat.rs:4156:39
     |
4156 |         context.param_set(&msg.param, DC_PARAM_FORCE_PLAINTEXT, None).await?;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_CMD` in this scope
    --> src/chat.rs:4157:39
     |
4157 |         context.param_set(&msg.param, DC_PARAM_CMD, None).await?;
     |                                       ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_PREP_FORWARDS` in this scope
    --> src/chat.rs:4167:61
     |
4167 |                 let old_fwd = context.param_get(&msg.param, DC_PARAM_PREP_FORWARDS, "").await?;
     |                                                             ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_PREP_FORWARDS` in this scope
    --> src/chat.rs:4169:47
     |
4169 |                 context.param_set(&msg.param, DC_PARAM_PREP_FORWARDS, new_fwd).await?;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_EVENT_MSGS_CHANGED` in this scope
    --> src/chat.rs:4194:33
     |
4194 |             context.cb(context, DC_EVENT_MSGS_CHANGED, chat_id, msg_id).await?;
     |                                 ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0659]: `params_slice` is ambiguous
    --> src/chat.rs:2090:21
     |
2090 |                     params_slice![
     |                     ^^^^^^^^^^^^ ambiguous name
     |
     = note: ambiguous because of a conflict between a `macro_rules` name and a non-`macro_rules` name from another module
note: `params_slice` could refer to the macro defined here
    --> src/sql.rs:38:1
     |
38   | / macro_rules! params_slice {
39   | |     ($($param:expr),+) => {
40   | |         [$(&$param as &dyn $crate::sql::ToSql),+]
41   | |     };
42   | | }
     | |_^
note: `params_slice` could also refer to the unresolved item imported here
    --> src/chat.rs:17:5
     |
17   | use crate::sql::rusqlite::params_slice;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: use `self::params_slice` to refer to this unresolved item unambiguously

error[E0659]: `params_slice` is ambiguous
    --> src/chat.rs:2139:21
     |
2139 |                     params_slice![
     |                     ^^^^^^^^^^^^ ambiguous name
     |
     = note: ambiguous because of a conflict between a `macro_rules` name and a non-`macro_rules` name from another module
note: `params_slice` could refer to the macro defined here
    --> src/sql.rs:38:1
     |
38   | / macro_rules! params_slice {
39   | |     ($($param:expr),+) => {
40   | |         [$(&$param as &dyn $crate::sql::ToSql),+]
41   | |     };
42   | | }
     | |_^
note: `params_slice` could also refer to the unresolved item imported here
    --> src/chat.rs:17:5
     |
17   | use crate::sql::rusqlite::params_slice;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: use `self::params_slice` to refer to this unresolved item unambiguously

error[E0603]: struct import `MsgId` is private
  --> src/chat.rs:7:31
   |
7  | use crate::context::{Context, MsgId, ChatId};
   |                               ^^^^^ private struct import
   |
note: the struct import `MsgId` is defined here...
  --> src/context.rs:31:51
   |
31 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                                   ^^^^^
note: ...and refers to the struct `MsgId` which is defined here
  --> src/message.rs:46:1
   |
46 | pub struct MsgId(u32);
   | ^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `MsgId` directly
   |
7  | use crate::context::{Context, message::MsgId, ChatId};
   |                               ~~~~~~~~~~~~~~

error[E0603]: struct import `ChatId` is private
   --> src/chat.rs:7:38
    |
7   | use crate::context::{Context, MsgId, ChatId};
    |                                      ^^^^^^ private struct import
    |
note: the struct import `ChatId` is defined here...
   --> src/context.rs:18:33
    |
18  | use crate::chat::{get_chat_cnt, ChatId, ProtectionStatus};
    |                                 ^^^^^^
note: ...and refers to the struct `ChatId` which is defined here
   --> src/chat.rs:184:1
    |
184 | pub struct ChatId(u32);
    | ^^^^^^^^^^^^^^^^^^^^^^^ you could import this directly
help: import `ChatId` directly
    |
7   | use crate::context::{Context, MsgId, chat::ChatId};
    |                                      ~~~~~~~~~~~~

warning: unused import: `tokio::sync::Notify`
 --> src/chat.rs:5:5
  |
5 | use tokio::sync::Notify;
  |     ^^^^^^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `Result`, `bail`
 --> src/chat.rs:6:14
  |
6 | use anyhow::{Result, bail};
  |              ^^^^^^  ^^^^

warning: unused import: `crate::sql::Sql`
  --> src/chat.rs:12:5
   |
12 | use crate::sql::Sql;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `crate::scheduler::SchedulerState`
  --> src/chat.rs:15:5
   |
15 | use crate::scheduler::SchedulerState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DC_CHAT_ID_ARCHIVED_LINK`, `DC_CHAT_ID_LAST_SPECIAL`
  --> src/chat.rs:42:55
   |
42 |     self, Blocked, Chattype, DC_CHAT_ID_ALLDONE_HINT, DC_CHAT_ID_ARCHIVED_LINK,
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
43 |     DC_CHAT_ID_LAST_SPECIAL, DC_CHAT_ID_TRASH, DC_RESEND_USER_AVATAR_DAYS,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ContactId`
  --> src/chat.rs:45:37
   |
45 | use crate::contact::{self, Contact, ContactId, Origin};
   |                                     ^^^^^^^^^

warning: unused import: `crate::context::Context`
  --> src/chat.rs:46:5
   |
46 | use crate::context::Context;
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `MessageState`, `Message`
  --> src/chat.rs:54:28
   |
54 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                            ^^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `Param`, `Params`
  --> src/chat.rs:57:20
   |
57 | use crate::param::{Param, Params};
   |                    ^^^^^  ^^^^^^

warning: unused import: `create_smeared_timestamps`
  --> src/chat.rs:67:5
   |
67 |     create_smeared_timestamps, get_abs_path, gm2local_offset, improve_single_line_input,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0252, E0425, E0432, E0603, E0659.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 10 warnings
error: could not compile `deltachat` (lib) due to 26 previous errors; 10 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 10 warnings (10 duplicates)
error: could not compile `deltachat` (lib test) due to 26 previous errors; 10 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

