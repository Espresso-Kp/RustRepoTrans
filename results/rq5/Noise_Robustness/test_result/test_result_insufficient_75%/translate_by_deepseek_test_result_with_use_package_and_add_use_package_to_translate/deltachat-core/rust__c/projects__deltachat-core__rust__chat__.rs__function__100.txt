Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
    --> src/chat.rs:2617:69
     |
2617 |         context.emit_event(EventType::LocationChanged { contact_id: DC_CONTACT_ID_SELF, msg_id: 0 });
     |                                                                     ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_special` found for reference `&context::Context` in the current scope
    --> src/chat.rs:2608:16
     |
2608 |     if context.is_special() || msg.is_special() || chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL.0 {
     |                ^^^^^^^^^^ method not found in `&Context`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `is_special`, perhaps you need to implement it:
             candidate #1: `aho_corasick::automaton::Automaton`

error[E0599]: no method named `is_special` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2608:36
     |
2608 |     if context.is_special() || msg.is_special() || chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL.0 {
     |                                    ^^^^^^^^^^ method not found in `&mut Message`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `is_special`, perhaps you need to implement it:
             candidate #1: `aho_corasick::automaton::Automaton`
help: some of the expressions' fields have a method of the same name
     |
2608 |     if context.is_special() || msg.chat_id.is_special() || chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL.0 {
     |                                    ++++++++
2608 |     if context.is_special() || msg.from_id.is_special() || chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL.0 {
     |                                    ++++++++
2608 |     if context.is_special() || msg.id.is_special() || chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL.0 {
     |                                    +++
2608 |     if context.is_special() || msg.to_id.is_special() || chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL.0 {
     |                                    ++++++

error[E0423]: cannot initialize a tuple struct which contains private fields
    --> src/chat.rs:2609:19
     |
2609 |         return Ok(MsgId(0));
     |                   ^^^^^
     |
note: constructor is not visible here due to private fields
    --> src/message.rs:46:18
     |
46   | pub struct MsgId(u32);
     |                  ^^^ private field
help: consider making the field publicly accessible
    -->  src/message.rs:46:18
     |
46   | pub struct MsgId(pub u32);
     |                  +++

error[E0559]: variant `payload::EventType::LocationChanged` has no field named `contact_id`
    --> src/chat.rs:2617:57
     |
2617 |         context.emit_event(EventType::LocationChanged { contact_id: DC_CONTACT_ID_SELF, msg_id: 0 });
     |                                                         ^^^^^^^^^^ field does not exist
     |
    ::: src/events/payload.rs:195:5
     |
195  |     LocationChanged(Option<ContactId>),
     |     --------------- `payload::EventType::LocationChanged` defined here
     |
help: `payload::EventType::LocationChanged` is a tuple variant, use the appropriate syntax
     |
2617 |         context.emit_event(payload::EventType::LocationChanged(/* fields */));
     |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0559]: variant `payload::EventType::LocationChanged` has no field named `msg_id`
    --> src/chat.rs:2617:89
     |
2617 |         context.emit_event(EventType::LocationChanged { contact_id: DC_CONTACT_ID_SELF, msg_id: 0 });
     |                                                                                         ^^^^^^ field does not exist
     |
    ::: src/events/payload.rs:195:5
     |
195  |     LocationChanged(Option<ContactId>),
     |     --------------- `payload::EventType::LocationChanged` defined here
     |
help: `payload::EventType::LocationChanged` is a tuple variant, use the appropriate syntax
     |
2617 |         context.emit_event(payload::EventType::LocationChanged(/* fields */));
     |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0423, E0425, E0559, E0599.
For more information about an error, try `rustc --explain E0423`.
error: could not compile `deltachat` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 6 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

