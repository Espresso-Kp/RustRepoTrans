Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:197:38
    |
197 |         PrimitiveType::Boolean => Ok(AvroSchema::Boolean),
    |                                   -- ^^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                   |
    |                                   arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:197:35
    |
197 |         PrimitiveType::Boolean => Ok(AvroSchema::Boolean),
    |                                   ^^^-------------------^
    |                                      |
    |                                      this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
197 |         PrimitiveType::Boolean => Ok(itertools::Either::Left(AvroSchema::Boolean)),
    |                                      ++++++++++++++++++++++++                   +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:198:34
    |
198 |         PrimitiveType::Int => Ok(AvroSchema::Int),
    |                               -- ^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                               |
    |                               arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:198:31
    |
198 |         PrimitiveType::Int => Ok(AvroSchema::Int),
    |                               ^^^---------------^
    |                                  |
    |                                  this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
198 |         PrimitiveType::Int => Ok(itertools::Either::Left(AvroSchema::Int)),
    |                                  ++++++++++++++++++++++++               +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:199:35
    |
199 |         PrimitiveType::Long => Ok(AvroSchema::Long),
    |                                -- ^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:199:32
    |
199 |         PrimitiveType::Long => Ok(AvroSchema::Long),
    |                                ^^^----------------^
    |                                   |
    |                                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
199 |         PrimitiveType::Long => Ok(itertools::Either::Left(AvroSchema::Long)),
    |                                   ++++++++++++++++++++++++                +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:200:36
    |
200 |         PrimitiveType::Float => Ok(AvroSchema::Float),
    |                                 -- ^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                 |
    |                                 arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:200:33
    |
200 |         PrimitiveType::Float => Ok(AvroSchema::Float),
    |                                 ^^^-----------------^
    |                                    |
    |                                    this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
200 |         PrimitiveType::Float => Ok(itertools::Either::Left(AvroSchema::Float)),
    |                                    ++++++++++++++++++++++++                 +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:201:37
    |
201 |         PrimitiveType::Double => Ok(AvroSchema::Double),
    |                                  -- ^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:201:34
    |
201 |         PrimitiveType::Double => Ok(AvroSchema::Double),
    |                                  ^^^------------------^
    |                                     |
    |                                     this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
201 |         PrimitiveType::Double => Ok(itertools::Either::Left(AvroSchema::Double)),
    |                                     ++++++++++++++++++++++++                  +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:208:17
    |
208 |                 precision,
    |                 ^^^^^^^^^ expected `usize`, found `&u32`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:209:17
    |
209 |                 scale,
    |                 ^^^^^ expected `usize`, found `&u32`

error[E0560]: struct `DecimalSchema` has no field named `attributes`
   --> crates/iceberg/src/avro/schema.rs:210:17
    |
210 |                 attributes,
    |                 ^^^^^^^^^^ `DecimalSchema` does not have this field
    |
    = note: available fields are: `inner`

error[E0599]: no method named `as_str` found for reference `&'static str` in the current scope
   --> crates/iceberg/src/avro/schema.rs:213:43
    |
213 |                 name: Name::new("decimal".as_str())?,
    |                                           ^^^^^^
    |
    = help: items from traits can only be used if the trait is in scope
help: the following traits are implemented but not in scope; perhaps add a `use` for one of them:
    |
19  + use reqwest::header::map::as_header_name::Sealed;
    |
19  + use reqwest::into_url::IntoUrlSealed;
    |
help: remove this method call
    |
213 -                 name: Name::new("decimal".as_str())?,
213 +                 name: Name::new("decimal")?,
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:212:16
    |
212 |               Ok(AvroSchema::Fixed(FixedSchema {
    |  _____________--_^
    | |             |
    | |             arguments to this enum variant are incorrect
213 | |                 name: Name::new("decimal".as_str())?,
214 | |                 aliases: None,
215 | |                 doc: None,
216 | |                 size: 0,
217 | |                 attributes,
218 | |             }))
    | |______________^ expected `Either<Schema, RecordField>`, found `Schema`
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:212:13
    |
212 |                Ok(AvroSchema::Fixed(FixedSchema {
    |  ______________^__-
    | | _____________|
    | ||
213 | ||                 name: Name::new("decimal".as_str())?,
214 | ||                 aliases: None,
215 | ||                 doc: None,
216 | ||                 size: 0,
217 | ||                 attributes,
218 | ||             }))
    | ||______________-^
    | |_______________|
    |                 this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
212 ~             Ok(itertools::Either::Left(AvroSchema::Fixed(FixedSchema {
213 |                 name: Name::new("decimal".as_str())?,
  ...
217 |                 attributes,
218 ~             })))
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:220:35
    |
220 |         PrimitiveType::Date => Ok(AvroSchema::Date),
    |                                -- ^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:220:32
    |
220 |         PrimitiveType::Date => Ok(AvroSchema::Date),
    |                                ^^^----------------^
    |                                   |
    |                                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
220 |         PrimitiveType::Date => Ok(itertools::Either::Left(AvroSchema::Date)),
    |                                   ++++++++++++++++++++++++                +

error[E0599]: no variant or associated item named `Time` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:221:47
     |
221  |         PrimitiveType::Time => Ok(AvroSchema::Time),
     |                                               ^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:222:52
     |
222  |         PrimitiveType::Timestamp => Ok(AvroSchema::Timestamp),
     |                                                    ^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:223:54
     |
223  |         PrimitiveType::Timestamptz => Ok(AvroSchema::Timestamp),
     |                                                      ^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:224:37
    |
224 |         PrimitiveType::String => Ok(AvroSchema::String),
    |                                  -- ^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:224:34
    |
224 |         PrimitiveType::String => Ok(AvroSchema::String),
    |                                  ^^^------------------^
    |                                     |
    |                                     this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
224 |         PrimitiveType::String => Ok(itertools::Either::Left(AvroSchema::String)),
    |                                     ++++++++++++++++++++++++                  +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:225:35
    |
225 |         PrimitiveType::Uuid => Ok(AvroSchema::Uuid),
    |                                -- ^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:225:32
    |
225 |         PrimitiveType::Uuid => Ok(AvroSchema::Uuid),
    |                                ^^^----------------^
    |                                   |
    |                                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
225 |         PrimitiveType::Uuid => Ok(itertools::Either::Left(AvroSchema::Uuid)),
    |                                   ++++++++++++++++++++++++                +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:235:23
    |
235 |                 size: len,
    |                       ^^^ expected `usize`, found `&u64`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:238:16
    |
238 |             Ok(AvroSchema::Fixed(fixed_schema))
    |             -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:238:13
    |
238 |             Ok(AvroSchema::Fixed(fixed_schema))
    |             ^^^-------------------------------^
    |                |
    |                this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
238 |             Ok(itertools::Either::Left(AvroSchema::Fixed(fixed_schema)))
    |                ++++++++++++++++++++++++                               +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:240:37
    |
240 |         PrimitiveType::Binary => Ok(AvroSchema::Bytes),
    |                                  -- ^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:240:34
    |
240 |         PrimitiveType::Binary => Ok(AvroSchema::Bytes),
    |                                  ^^^-----------------^
    |                                     |
    |                                     this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
240 |         PrimitiveType::Binary => Ok(itertools::Either::Left(AvroSchema::Bytes)),
    |                                     ++++++++++++++++++++++++                 +

Some errors have detailed explanations: E0308, E0560, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 19 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `as_str` found for reference `&'static str` in the current scope
   --> crates/iceberg/src/avro/schema.rs:213:43
    |
213 |                 name: Name::new("decimal".as_str())?,
    |                                           ^^^^^^
    |
    = help: items from traits can only be used if the trait is in scope
help: the following traits are implemented but not in scope; perhaps add a `use` for one of them:
    |
19  + use reqwest::header::map::as_header_name::Sealed;
    |
19  + use reqwest::into_url::IntoUrlSealed;
    |
19  + use rustix::path::arg::Arg;
    |
help: remove this method call
    |
213 -                 name: Name::new("decimal".as_str())?,
213 +                 name: Name::new("decimal")?,
    |

error: could not compile `iceberg` (lib test) due to 19 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:197:38
    |
197 |         PrimitiveType::Boolean => Ok(AvroSchema::Boolean),
    |                                   -- ^^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                   |
    |                                   arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:197:35
    |
197 |         PrimitiveType::Boolean => Ok(AvroSchema::Boolean),
    |                                   ^^^-------------------^
    |                                      |
    |                                      this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
197 |         PrimitiveType::Boolean => Ok(itertools::Either::Left(AvroSchema::Boolean)),
    |                                      ++++++++++++++++++++++++                   +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:198:34
    |
198 |         PrimitiveType::Int => Ok(AvroSchema::Int),
    |                               -- ^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                               |
    |                               arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:198:31
    |
198 |         PrimitiveType::Int => Ok(AvroSchema::Int),
    |                               ^^^---------------^
    |                                  |
    |                                  this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
198 |         PrimitiveType::Int => Ok(itertools::Either::Left(AvroSchema::Int)),
    |                                  ++++++++++++++++++++++++               +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:199:35
    |
199 |         PrimitiveType::Long => Ok(AvroSchema::Long),
    |                                -- ^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:199:32
    |
199 |         PrimitiveType::Long => Ok(AvroSchema::Long),
    |                                ^^^----------------^
    |                                   |
    |                                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
199 |         PrimitiveType::Long => Ok(itertools::Either::Left(AvroSchema::Long)),
    |                                   ++++++++++++++++++++++++                +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:200:36
    |
200 |         PrimitiveType::Float => Ok(AvroSchema::Float),
    |                                 -- ^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                 |
    |                                 arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:200:33
    |
200 |         PrimitiveType::Float => Ok(AvroSchema::Float),
    |                                 ^^^-----------------^
    |                                    |
    |                                    this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
200 |         PrimitiveType::Float => Ok(itertools::Either::Left(AvroSchema::Float)),
    |                                    ++++++++++++++++++++++++                 +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:201:37
    |
201 |         PrimitiveType::Double => Ok(AvroSchema::Double),
    |                                  -- ^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:201:34
    |
201 |         PrimitiveType::Double => Ok(AvroSchema::Double),
    |                                  ^^^------------------^
    |                                     |
    |                                     this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
201 |         PrimitiveType::Double => Ok(itertools::Either::Left(AvroSchema::Double)),
    |                                     ++++++++++++++++++++++++                  +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:208:17
    |
208 |                 precision,
    |                 ^^^^^^^^^ expected `usize`, found `&u32`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:209:17
    |
209 |                 scale,
    |                 ^^^^^ expected `usize`, found `&u32`

error[E0560]: struct `DecimalSchema` has no field named `attributes`
   --> crates/iceberg/src/avro/schema.rs:210:17
    |
210 |                 attributes,
    |                 ^^^^^^^^^^ `DecimalSchema` does not have this field
    |
    = note: available fields are: `inner`

error[E0599]: no method named `as_str` found for reference `&'static str` in the current scope
   --> crates/iceberg/src/avro/schema.rs:213:43
    |
213 |                 name: Name::new("decimal".as_str())?,
    |                                           ^^^^^^
    |
    = help: items from traits can only be used if the trait is in scope
help: the following traits are implemented but not in scope; perhaps add a `use` for one of them:
    |
19  + use reqwest::header::map::as_header_name::Sealed;
    |
19  + use reqwest::into_url::IntoUrlSealed;
    |
help: remove this method call
    |
213 -                 name: Name::new("decimal".as_str())?,
213 +                 name: Name::new("decimal")?,
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:212:16
    |
212 |               Ok(AvroSchema::Fixed(FixedSchema {
    |  _____________--_^
    | |             |
    | |             arguments to this enum variant are incorrect
213 | |                 name: Name::new("decimal".as_str())?,
214 | |                 aliases: None,
215 | |                 doc: None,
216 | |                 size: 0,
217 | |                 attributes,
218 | |             }))
    | |______________^ expected `Either<Schema, RecordField>`, found `Schema`
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:212:13
    |
212 |                Ok(AvroSchema::Fixed(FixedSchema {
    |  ______________^__-
    | | _____________|
    | ||
213 | ||                 name: Name::new("decimal".as_str())?,
214 | ||                 aliases: None,
215 | ||                 doc: None,
216 | ||                 size: 0,
217 | ||                 attributes,
218 | ||             }))
    | ||______________-^
    | |_______________|
    |                 this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
212 ~             Ok(itertools::Either::Left(AvroSchema::Fixed(FixedSchema {
213 |                 name: Name::new("decimal".as_str())?,
  ...
217 |                 attributes,
218 ~             })))
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:220:35
    |
220 |         PrimitiveType::Date => Ok(AvroSchema::Date),
    |                                -- ^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:220:32
    |
220 |         PrimitiveType::Date => Ok(AvroSchema::Date),
    |                                ^^^----------------^
    |                                   |
    |                                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
220 |         PrimitiveType::Date => Ok(itertools::Either::Left(AvroSchema::Date)),
    |                                   ++++++++++++++++++++++++                +

error[E0599]: no variant or associated item named `Time` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:221:47
     |
221  |         PrimitiveType::Time => Ok(AvroSchema::Time),
     |                                               ^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:222:52
     |
222  |         PrimitiveType::Timestamp => Ok(AvroSchema::Timestamp),
     |                                                    ^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:223:54
     |
223  |         PrimitiveType::Timestamptz => Ok(AvroSchema::Timestamp),
     |                                                      ^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:224:37
    |
224 |         PrimitiveType::String => Ok(AvroSchema::String),
    |                                  -- ^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:224:34
    |
224 |         PrimitiveType::String => Ok(AvroSchema::String),
    |                                  ^^^------------------^
    |                                     |
    |                                     this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
224 |         PrimitiveType::String => Ok(itertools::Either::Left(AvroSchema::String)),
    |                                     ++++++++++++++++++++++++                  +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:225:35
    |
225 |         PrimitiveType::Uuid => Ok(AvroSchema::Uuid),
    |                                -- ^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:225:32
    |
225 |         PrimitiveType::Uuid => Ok(AvroSchema::Uuid),
    |                                ^^^----------------^
    |                                   |
    |                                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
225 |         PrimitiveType::Uuid => Ok(itertools::Either::Left(AvroSchema::Uuid)),
    |                                   ++++++++++++++++++++++++                +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:235:23
    |
235 |                 size: len,
    |                       ^^^ expected `usize`, found `&u64`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:238:16
    |
238 |             Ok(AvroSchema::Fixed(fixed_schema))
    |             -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:238:13
    |
238 |             Ok(AvroSchema::Fixed(fixed_schema))
    |             ^^^-------------------------------^
    |                |
    |                this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
238 |             Ok(itertools::Either::Left(AvroSchema::Fixed(fixed_schema)))
    |                ++++++++++++++++++++++++                               +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:240:37
    |
240 |         PrimitiveType::Binary => Ok(AvroSchema::Bytes),
    |                                  -- ^^^^^^^^^^^^^^^^^ expected `Either<Schema, RecordField>`, found `Schema`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected enum `itertools::Either<apache_avro::Schema, RecordField>`
               found enum `apache_avro::Schema`
help: the type constructed contains `apache_avro::Schema` due to the type of the argument passed
   --> crates/iceberg/src/avro/schema.rs:240:34
    |
240 |         PrimitiveType::Binary => Ok(AvroSchema::Bytes),
    |                                  ^^^-----------------^
    |                                     |
    |                                     this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: try wrapping the expression in `itertools::Either::Left`
    |
240 |         PrimitiveType::Binary => Ok(itertools::Either::Left(AvroSchema::Bytes)),
    |                                     ++++++++++++++++++++++++                 +

Some errors have detailed explanations: E0308, E0560, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 19 previous errors

