Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0433]: failed to resolve: use of undeclared type `TableInputBuilder`
   --> crates/catalog/glue/src/catalog.rs:543:23
    |
543 |     let table_input = TableInputBuilder::from_table(src_table)
    |                       ^^^^^^^^^^^^^^^^^ use of undeclared type `TableInputBuilder`
    |
help: consider importing this struct
    |
18  + use aws_sdk_glue::types::builders::TableInputBuilder;
    |

warning: unused import: `aws_sdk_glue::types::TableInput`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use aws_sdk_glue::types::TableInput;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^

error[E0277]: `std::result::Result<std::string::String, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:524:44
    |
524 |     if!validate_namespace(&dest_namespace).await? {
    |        ----------------------------------- ^^^^^ `std::result::Result<std::string::String, iceberg::Error>` is not a future
    |        |
    |        this call returns `std::result::Result<std::string::String, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `std::result::Result<std::string::String, iceberg::Error>`, which is required by `std::result::Result<std::string::String, iceberg::Error>: IntoFuture`
    = note: std::result::Result<std::string::String, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::string::String, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
524 -     if!validate_namespace(&dest_namespace).await? {
524 +     if!validate_namespace(&dest_namespace)? {
    |
help: alternatively, consider making `fn validate_namespace` asynchronous
   --> crates/catalog/glue/src/utils.rs:183:11
    |
183 | pub(crate) async fn validate_namespace(namespace: &NamespaceIdent) -> Result<String> {
    |            +++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:83
    |
527 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                   ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:88
    |
527 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                        ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:94
    |
527 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                              ^^^^^^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:532:80
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
532 |     let src_db_name = convert_to_database(src.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:532:43
    |
532 |     let src_db_name = convert_to_database(src.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                       ------------------- ^^^^^^^^^^^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `NamespaceIdent`
    |                       |
    |                       arguments to this function are incorrect
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
help: try removing the method call
    |
532 -     let src_db_name = convert_to_database(src.namespace().clone(), self.config.glue_catalog_skip_name_validation());
532 +     let src_db_name = convert_to_database(src.namespace(), self.config.glue_catalog_skip_name_validation());
    |

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:533:75
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
533 |     let src_table_name = convert_to_table(src.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0425]: cannot find function `convert_to_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:533:26
    |
533 |       let src_table_name = convert_to_table(src.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                            ^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `convert_to_database`
    |
   ::: crates/catalog/glue/src/utils.rs:96:1
    |
96  | / pub(crate) fn convert_to_database(
97  | |     namespace: &NamespaceIdent,
98  | |     properties: &HashMap<String, String>,
99  | | ) -> Result<DatabaseInput> {
...   |
117 | |     builder.build().map_err(from_aws_build_error)
118 | | }
    | |_- similarly named function `convert_to_database` defined here

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:534:82
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
534 |     let dest_db_name = convert_to_database(dest.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:534:44
    |
534 |     let dest_db_name = convert_to_database(dest.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                        ------------------- ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `NamespaceIdent`
    |                        |
    |                        arguments to this function are incorrect
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
help: try removing the method call
    |
534 -     let dest_db_name = convert_to_database(dest.namespace().clone(), self.config.glue_catalog_skip_name_validation());
534 +     let dest_db_name = convert_to_database(dest.namespace(), self.config.glue_catalog_skip_name_validation());
    |

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:535:77
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
535 |     let dest_table_name = convert_to_table(dest.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0425]: cannot find function `convert_to_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:535:27
    |
535 |       let dest_table_name = convert_to_table(dest.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                             ^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `convert_to_database`
    |
   ::: crates/catalog/glue/src/utils.rs:96:1
    |
96  | / pub(crate) fn convert_to_database(
97  | |     namespace: &NamespaceIdent,
98  | |     properties: &HashMap<String, String>,
99  | | ) -> Result<DatabaseInput> {
...   |
117 | |     builder.build().map_err(from_aws_build_error)
118 | | }
    | |_- similarly named function `convert_to_database` defined here

error[E0599]: no method named `get_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:537:32
    |
537 |     let src_table = match self.get_table(src_db_name, src_table_name).await {
    |                                ^^^^^^^^^ method not found in `&GlueCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
537 |     let src_table = match self.client.0.get_table(src_db_name, src_table_name).await {
    |                                +++++++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:539:140
    |
539 | ...the table does not exist in Glue", src, dest))),
    |                                       ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:539:145
    |
539 | ...able does not exist in Glue", src, dest))),
    |                                       ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `storage_descriptor` found for reference `&'life1 TableIdent` in the current scope
   --> crates/catalog/glue/src/catalog.rs:547:32
    |
547 |        .storage_descriptor(src.storage_descriptor())
    |                                ^^^^^^^^^^^^^^^^^^ method not found in `&TableIdent`

error[E0277]: the trait bound `std::string::String: From<&std::result::Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:554:23
    |
554 |        .database_name(&dest_db_name)
    |         ------------- ^^^^^^^^^^^^^ the trait `From<&std::result::Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `&std::result::Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&std::result::Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0599]: no method named `build` found for struct `CreateTableFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:556:9
    |
550 |       let create_table_request = self
    |  ________________________________-
551 | |        .client
552 | |        .0
553 | |        .create_table()
554 | |        .database_name(&dest_db_name)
555 | |        .table_input(table_input)
556 | |        .build();
    | |        -^^^^^ method not found in `CreateTableFluentBuilder`
    | |________|
    | 

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:566:56
    |
566 |        .identifier(TableIdent::new(NamespaceIdent::new(dest_namespace), dest_name))
    |                                    ------------------- ^^^^^^^^^^^^^^ expected `String`, found `NamespaceIdent`
    |                                    |
    |                                    arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:106:12
    |
106 |     pub fn new(name: String) -> Self {
    |            ^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:566:73
    |
566 |        .identifier(TableIdent::new(NamespaceIdent::new(dest_namespace), dest_name))
    |                    ---------------                                      ^^^^^^^^^- help: try using a conversion method: `.to_string()`
    |                    |                                                    |
    |                    |                                                    expected `String`, found `&str`
    |                    arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:191:12
    |
191 |     pub fn new(namespace: NamespaceIdent, name: String) -> Self {
    |            ^^^

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:574:20
    |
574 |        .catalog_id(self.config.catalog_id)
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::catalog_id`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:115:45
    |
115 |     pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::catalog_id`

error[E0277]: the trait bound `std::string::String: From<&std::result::Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:575:23
    |
575 |        .database_name(&dest_db_name)
    |         ------------- ^^^^^^^^^^^^^ the trait `From<&std::result::Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `&std::result::Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&std::result::Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:129:48
    |
129 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::database_name`

error[E0599]: no method named `build` found for struct `DeleteTableFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:577:8
    |
570 |       let drop_table_request = self
    |  ______________________________-
571 | |        .client
572 | |        .0
573 | |        .delete_table()
...   |
576 | |       .name(&dest_table_name)
577 | |       .build();
    | |       -^^^^^ method not found in `DeleteTableFluentBuilder`
    | |_______|
    | 

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:586:20
    |
586 |        .catalog_id(self.config.catalog_id)
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::catalog_id`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:115:45
    |
115 |     pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::catalog_id`

error[E0277]: the trait bound `std::string::String: From<&std::result::Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:587:23
    |
587 |        .database_name(&dest_db_name)
    |         ------------- ^^^^^^^^^^^^^ the trait `From<&std::result::Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `&std::result::Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&std::result::Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:129:48
    |
129 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::database_name`

error[E0599]: no method named `build` found for struct `DeleteTableFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:589:8
    |
582 |       let delete_table_request = self
    |  ________________________________-
583 | |        .client
584 | |        .0
585 | |        .delete_table()
...   |
588 | |       .name(&dest_table_name)
589 | |       .build();
    | |       -^^^^^ method not found in `DeleteTableFluentBuilder`
    | |_______|
    | 

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 27 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared type `TableInputBuilder`
   --> crates/catalog/glue/src/catalog.rs:543:23
    |
543 |     let table_input = TableInputBuilder::from_table(src_table)
    |                       ^^^^^^^^^^^^^^^^^ use of undeclared type `TableInputBuilder`
    |
help: consider importing this struct
    |
18  + use aws_sdk_glue::types::builders::TableInputBuilder;
    |

warning: unused import: `aws_sdk_glue::types::TableInput`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use aws_sdk_glue::types::TableInput;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^

error[E0277]: `Result<std::string::String, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:524:44
    |
524 |     if!validate_namespace(&dest_namespace).await? {
    |        ----------------------------------- ^^^^^ `Result<std::string::String, iceberg::Error>` is not a future
    |        |
    |        this call returns `Result<std::string::String, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `Result<std::string::String, iceberg::Error>`, which is required by `Result<std::string::String, iceberg::Error>: IntoFuture`
    = note: Result<std::string::String, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<std::string::String, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
524 -     if!validate_namespace(&dest_namespace).await? {
524 +     if!validate_namespace(&dest_namespace)? {
    |
help: alternatively, consider making `fn validate_namespace` asynchronous
   --> crates/catalog/glue/src/utils.rs:183:11
    |
183 | pub(crate) async fn validate_namespace(namespace: &NamespaceIdent) -> Result<String> {
    |            +++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:83
    |
527 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                   ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:88
    |
527 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                        ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:527:94
    |
527 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                              ^^^^^^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:532:80
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
532 |     let src_db_name = convert_to_database(src.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:532:43
    |
532 |     let src_db_name = convert_to_database(src.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                       ------------------- ^^^^^^^^^^^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `NamespaceIdent`
    |                       |
    |                       arguments to this function are incorrect
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
help: try removing the method call
    |
532 -     let src_db_name = convert_to_database(src.namespace().clone(), self.config.glue_catalog_skip_name_validation());
532 +     let src_db_name = convert_to_database(src.namespace(), self.config.glue_catalog_skip_name_validation());
    |

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:533:75
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
533 |     let src_table_name = convert_to_table(src.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0425]: cannot find function `convert_to_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:533:26
    |
533 |       let src_table_name = convert_to_table(src.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                            ^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `convert_to_database`
    |
   ::: crates/catalog/glue/src/utils.rs:96:1
    |
96  | / pub(crate) fn convert_to_database(
97  | |     namespace: &NamespaceIdent,
98  | |     properties: &HashMap<String, String>,
99  | | ) -> Result<DatabaseInput> {
...   |
117 | |     builder.build().map_err(from_aws_build_error)
118 | | }
    | |_- similarly named function `convert_to_database` defined here

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:534:82
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
534 |     let dest_db_name = convert_to_database(dest.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:534:44
    |
534 |     let dest_db_name = convert_to_database(dest.namespace().clone(), self.config.glue_catalog_skip_name_validation());
    |                        ------------------- ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `NamespaceIdent`
    |                        |
    |                        arguments to this function are incorrect
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
help: try removing the method call
    |
534 -     let dest_db_name = convert_to_database(dest.namespace().clone(), self.config.glue_catalog_skip_name_validation());
534 +     let dest_db_name = convert_to_database(dest.namespace(), self.config.glue_catalog_skip_name_validation());
    |

error[E0599]: no method named `glue_catalog_skip_name_validation` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/catalog.rs:535:77
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `glue_catalog_skip_name_validation` not found for this struct
...
535 |     let dest_table_name = convert_to_table(dest.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `GlueCatalogConfig`

error[E0425]: cannot find function `convert_to_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:535:27
    |
535 |       let dest_table_name = convert_to_table(dest.name().clone(), self.config.glue_catalog_skip_name_validation());
    |                             ^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `convert_to_database`
    |
   ::: crates/catalog/glue/src/utils.rs:96:1
    |
96  | / pub(crate) fn convert_to_database(
97  | |     namespace: &NamespaceIdent,
98  | |     properties: &HashMap<String, String>,
99  | | ) -> Result<DatabaseInput> {
...   |
117 | |     builder.build().map_err(from_aws_build_error)
118 | | }
    | |_- similarly named function `convert_to_database` defined here

error[E0599]: no method named `get_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:537:32
    |
537 |     let src_table = match self.get_table(src_db_name, src_table_name).await {
    |                                ^^^^^^^^^ method not found in `&GlueCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
537 |     let src_table = match self.client.0.get_table(src_db_name, src_table_name).await {
    |                                +++++++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:539:140
    |
539 | ...the table does not exist in Glue", src, dest))),
    |                                       ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:539:145
    |
539 | ...able does not exist in Glue", src, dest))),
    |                                       ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `storage_descriptor` found for reference `&'life1 TableIdent` in the current scope
   --> crates/catalog/glue/src/catalog.rs:547:32
    |
547 |        .storage_descriptor(src.storage_descriptor())
    |                                ^^^^^^^^^^^^^^^^^^ method not found in `&TableIdent`

error[E0277]: the trait bound `std::string::String: From<&Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:554:23
    |
554 |        .database_name(&dest_db_name)
    |         ------------- ^^^^^^^^^^^^^ the trait `From<&Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `&Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0599]: no method named `build` found for struct `CreateTableFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:556:9
    |
550 |       let create_table_request = self
    |  ________________________________-
551 | |        .client
552 | |        .0
553 | |        .create_table()
554 | |        .database_name(&dest_db_name)
555 | |        .table_input(table_input)
556 | |        .build();
    | |        -^^^^^ method not found in `CreateTableFluentBuilder`
    | |________|
    | 

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:566:56
    |
566 |        .identifier(TableIdent::new(NamespaceIdent::new(dest_namespace), dest_name))
    |                                    ------------------- ^^^^^^^^^^^^^^ expected `String`, found `NamespaceIdent`
    |                                    |
    |                                    arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:106:12
    |
106 |     pub fn new(name: String) -> Self {
    |            ^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:566:73
    |
566 |        .identifier(TableIdent::new(NamespaceIdent::new(dest_namespace), dest_name))
    |                    ---------------                                      ^^^^^^^^^- help: try using a conversion method: `.to_string()`
    |                    |                                                    |
    |                    |                                                    expected `String`, found `&str`
    |                    arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:191:12
    |
191 |     pub fn new(namespace: NamespaceIdent, name: String) -> Self {
    |            ^^^

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:574:20
    |
574 |        .catalog_id(self.config.catalog_id)
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::catalog_id`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:115:45
    |
115 |     pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::catalog_id`

error[E0277]: the trait bound `std::string::String: From<&Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:575:23
    |
575 |        .database_name(&dest_db_name)
    |         ------------- ^^^^^^^^^^^^^ the trait `From<&Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `&Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:129:48
    |
129 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::database_name`

error[E0599]: no method named `build` found for struct `DeleteTableFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:577:8
    |
570 |       let drop_table_request = self
    |  ______________________________-
571 | |        .client
572 | |        .0
573 | |        .delete_table()
...   |
576 | |       .name(&dest_table_name)
577 | |       .build();
    | |       -^^^^^ method not found in `DeleteTableFluentBuilder`
    | |_______|
    | 

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:586:20
    |
586 |        .catalog_id(self.config.catalog_id)
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::catalog_id`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:115:45
    |
115 |     pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::catalog_id`

error[E0277]: the trait bound `std::string::String: From<&Result<DatabaseInput, iceberg::Error>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:587:23
    |
587 |        .database_name(&dest_db_name)
    |         ------------- ^^^^^^^^^^^^^ the trait `From<&Result<DatabaseInput, iceberg::Error>>` is not implemented for `std::string::String`, which is required by `&Result<DatabaseInput, iceberg::Error>: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&Result<DatabaseInput, iceberg::Error>` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:129:48
    |
129 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::database_name`

error[E0599]: no method named `build` found for struct `DeleteTableFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:589:8
    |
582 |       let delete_table_request = self
    |  ________________________________-
583 | |        .client
584 | |        .0
585 | |        .delete_table()
...   |
588 | |       .name(&dest_table_name)
589 | |       .build();
    | |       -^^^^^ method not found in `DeleteTableFluentBuilder`
    | |_______|
    | 

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 27 previous errors; 2 warnings emitted

