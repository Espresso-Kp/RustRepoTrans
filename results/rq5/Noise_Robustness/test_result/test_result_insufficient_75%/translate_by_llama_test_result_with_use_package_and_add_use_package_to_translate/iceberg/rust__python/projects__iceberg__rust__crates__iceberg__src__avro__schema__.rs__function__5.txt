Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `String` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:138:31
    |
138 |     if let AvroSchemaOrField::String(_) = key_value {
    |                               ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `Map` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:140:31
    |
140 |         Ok(AvroSchemaOrField::Map(AvroSchema::Map(
    |                               ^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:148:25
    |
148 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:149:25
    |
149 |                         field_id: self.last_map_key_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:149:40
    |
149 |                         field_id: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:153:25
    |
153 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:154:25
    |
154 |                         field_id: self.last_map_value_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:154:40
    |
154 |                         field_id: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:167:25
    |
167 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:168:25
    |
168 |                         field_id: self.last_map_key_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:168:40
    |
168 |                         field_id: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:172:25
    |
172 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:173:25
    |
173 |                         field_id: self.last_map_value_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:173:40
    |
173 |                         field_id: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:140:35
    |
140 |           Ok(AvroSchemaOrField::Map(AvroSchema::Map(
    |                                     ^^^^^^^^^^^^^^^
...
160 | /             AvroSchema::Record(RecordSchema {
161 | |                 name: Name::new("map")?,
162 | |                 aliases: None,
163 | |                 doc: None,
...   |
177 | |                 attributes: Default::default(),
178 | |             }),
    | |______________- unexpected argument of type `apache_avro::Schema`
    |
note: expected `Box<Schema>`, found `Schema`
   --> crates/iceberg/src/avro/schema.rs:141:13
    |
141 | /             AvroSchema::Record(RecordSchema {
142 | |                 name: Name::new("map")?,
143 | |                 aliases: None,
144 | |                 doc: None,
...   |
158 | |                 attributes: Default::default(),
159 | |             }),
    | |______________^
    = note: expected struct `Box<apache_avro::Schema>`
                 found enum `apache_avro::Schema`
    = note: for more on the distinction between the stack and the heap, read https://doc.rust-lang.org/book/ch15-01-box.html, https://doc.rust-lang.org/rust-by-example/std/box.html, and https://doc.rust-lang.org/std/boxed/index.html
note: tuple variant defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:103:5
    |
103 |     Map(Box<Schema>),
    |     ^^^
help: store this in the heap by calling `Box::new`
    |
141 ~             Box::new(AvroSchema::Record(RecordSchema {
142 |                 name: Name::new("map")?,
  ...
158 |                 attributes: Default::default(),
159 ~             })),
    |
help: remove the extra argument
    |
141 -             AvroSchema::Record(RecordSchema {
142 -                 name: Name::new("map")?,
143 -                 aliases: None,
144 -                 doc: None,
145 -                 fields: vec![
146 -                     AvroRecordField {
147 -                         name: "key".to_string(),
148 -                         type_: value,
149 -                         field_id: self.last_map_key_field_id,
150 -                     },
151 -                     AvroRecordField {
152 -                         name: "value".to_string(),
153 -                         type_: value,
154 -                         field_id: self.last_map_value_field_id,
155 -                     },
156 -                 ],
157 -                 lookup: BTreeMap::new(),
158 -                 attributes: Default::default(),
159 -             }),
141 +             /* Box<apache_avro::Schema> */,
    |

error[E0599]: no variant or associated item named `Array` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:183:31
    |
183 |         Ok(AvroSchemaOrField::Array(AvroSchema::Array(
    |                               ^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:185:56
    |
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
    |                                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:185:84
    |
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:185:33
    |
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:191:25
    |
191 |                         type_: key_value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:192:25
    |
192 |                         field_id: self.last_map_key_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:192:40
    |
192 |                         field_id: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:196:25
    |
196 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:197:25
    |
197 |                         field_id: self.last_map_value_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:197:40
    |
197 |                         field_id: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:183:37
    |
183 |         Ok(AvroSchemaOrField::Array(AvroSchema::Array(
    |                                     ^^^^^^^^^^^^^^^^^
...
203 |             "map".to_string(),
    |             ----------------- unexpected argument of type `std::string::String`
    |
note: expected `Box<Schema>`, found `Schema`
   --> crates/iceberg/src/avro/schema.rs:184:13
    |
184 | /             AvroSchema::Record(RecordSchema {
185 | |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
186 | |                 aliases: None,
187 | |                 doc: None,
...   |
201 | |                 attributes: Default::default(),
202 | |             }),
    | |______________^
    = note: expected struct `Box<apache_avro::Schema>`
                 found enum `apache_avro::Schema`
    = note: for more on the distinction between the stack and the heap, read https://doc.rust-lang.org/book/ch15-01-box.html, https://doc.rust-lang.org/rust-by-example/std/box.html, and https://doc.rust-lang.org/std/boxed/index.html
note: tuple variant defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:99:5
    |
99  |     Array(Box<Schema>),
    |     ^^^^^
help: store this in the heap by calling `Box::new`
    |
184 ~             Box::new(AvroSchema::Record(RecordSchema {
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
  ...
201 |                 attributes: Default::default(),
202 ~             })),
    |
help: remove the extra argument
    |
184 -             AvroSchema::Record(RecordSchema {
185 -                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
186 -                 aliases: None,
187 -                 doc: None,
188 -                 fields: vec![
189 -                     AvroRecordField {
190 -                         name: "key".to_string(),
191 -                         type_: key_value,
192 -                         field_id: self.last_map_key_field_id,
193 -                     },
194 -                     AvroRecordField {
195 -                         name: "value".to_string(),
196 -                         type_: value,
197 -                         field_id: self.last_map_value_field_id,
198 -                     },
199 -                 ],
200 -                 lookup: BTreeMap::new(),
201 -                 attributes: Default::default(),
202 -             }),
184 +             /* Box<apache_avro::Schema> */,
    |

Some errors have detailed explanations: E0061, E0308, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 26 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 26 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `String` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:138:31
    |
138 |     if let AvroSchemaOrField::String(_) = key_value {
    |                               ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `Map` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:140:31
    |
140 |         Ok(AvroSchemaOrField::Map(AvroSchema::Map(
    |                               ^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:148:25
    |
148 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:149:25
    |
149 |                         field_id: self.last_map_key_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:149:40
    |
149 |                         field_id: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:153:25
    |
153 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:154:25
    |
154 |                         field_id: self.last_map_value_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:154:40
    |
154 |                         field_id: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:167:25
    |
167 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:168:25
    |
168 |                         field_id: self.last_map_key_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:168:40
    |
168 |                         field_id: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:172:25
    |
172 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:173:25
    |
173 |                         field_id: self.last_map_value_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:173:40
    |
173 |                         field_id: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:140:35
    |
140 |           Ok(AvroSchemaOrField::Map(AvroSchema::Map(
    |                                     ^^^^^^^^^^^^^^^
...
160 | /             AvroSchema::Record(RecordSchema {
161 | |                 name: Name::new("map")?,
162 | |                 aliases: None,
163 | |                 doc: None,
...   |
177 | |                 attributes: Default::default(),
178 | |             }),
    | |______________- unexpected argument of type `apache_avro::Schema`
    |
note: expected `Box<Schema>`, found `Schema`
   --> crates/iceberg/src/avro/schema.rs:141:13
    |
141 | /             AvroSchema::Record(RecordSchema {
142 | |                 name: Name::new("map")?,
143 | |                 aliases: None,
144 | |                 doc: None,
...   |
158 | |                 attributes: Default::default(),
159 | |             }),
    | |______________^
    = note: expected struct `Box<apache_avro::Schema>`
                 found enum `apache_avro::Schema`
    = note: for more on the distinction between the stack and the heap, read https://doc.rust-lang.org/book/ch15-01-box.html, https://doc.rust-lang.org/rust-by-example/std/box.html, and https://doc.rust-lang.org/std/boxed/index.html
note: tuple variant defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:103:5
    |
103 |     Map(Box<Schema>),
    |     ^^^
help: store this in the heap by calling `Box::new`
    |
141 ~             Box::new(AvroSchema::Record(RecordSchema {
142 |                 name: Name::new("map")?,
  ...
158 |                 attributes: Default::default(),
159 ~             })),
    |
help: remove the extra argument
    |
141 -             AvroSchema::Record(RecordSchema {
142 -                 name: Name::new("map")?,
143 -                 aliases: None,
144 -                 doc: None,
145 -                 fields: vec![
146 -                     AvroRecordField {
147 -                         name: "key".to_string(),
148 -                         type_: value,
149 -                         field_id: self.last_map_key_field_id,
150 -                     },
151 -                     AvroRecordField {
152 -                         name: "value".to_string(),
153 -                         type_: value,
154 -                         field_id: self.last_map_value_field_id,
155 -                     },
156 -                 ],
157 -                 lookup: BTreeMap::new(),
158 -                 attributes: Default::default(),
159 -             }),
141 +             /* Box<apache_avro::Schema> */,
    |

error[E0599]: no variant or associated item named `Array` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:183:31
    |
183 |         Ok(AvroSchemaOrField::Array(AvroSchema::Array(
    |                               ^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:185:56
    |
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
    |                                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:185:84
    |
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:185:33
    |
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:191:25
    |
191 |                         type_: key_value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:192:25
    |
192 |                         field_id: self.last_map_key_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:192:40
    |
192 |                         field_id: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `RecordField` has no field named `type_`
   --> crates/iceberg/src/avro/schema.rs:196:25
    |
196 |                         type_: value,
    |                         ^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0560]: struct `RecordField` has no field named `field_id`
   --> crates/iceberg/src/avro/schema.rs:197:25
    |
197 |                         field_id: self.last_map_value_field_id,
    |                         ^^^^^^^^ `RecordField` does not have this field
    |
    = note: available fields are: `doc`, `aliases`, `default`, `schema`, `order` ... and 2 others

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:197:40
    |
197 |                         field_id: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:183:37
    |
183 |         Ok(AvroSchemaOrField::Array(AvroSchema::Array(
    |                                     ^^^^^^^^^^^^^^^^^
...
203 |             "map".to_string(),
    |             ----------------- unexpected argument of type `std::string::String`
    |
note: expected `Box<Schema>`, found `Schema`
   --> crates/iceberg/src/avro/schema.rs:184:13
    |
184 | /             AvroSchema::Record(RecordSchema {
185 | |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
186 | |                 aliases: None,
187 | |                 doc: None,
...   |
201 | |                 attributes: Default::default(),
202 | |             }),
    | |______________^
    = note: expected struct `Box<apache_avro::Schema>`
                 found enum `apache_avro::Schema`
    = note: for more on the distinction between the stack and the heap, read https://doc.rust-lang.org/book/ch15-01-box.html, https://doc.rust-lang.org/rust-by-example/std/box.html, and https://doc.rust-lang.org/std/boxed/index.html
note: tuple variant defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:99:5
    |
99  |     Array(Box<Schema>),
    |     ^^^^^
help: store this in the heap by calling `Box::new`
    |
184 ~             Box::new(AvroSchema::Record(RecordSchema {
185 |                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
  ...
201 |                 attributes: Default::default(),
202 ~             })),
    |
help: remove the extra argument
    |
184 -             AvroSchema::Record(RecordSchema {
185 -                 name: Name::new(format!("k{}v{}", self.last_map_key_field_id, self.last_map_value_field_id))?,
186 -                 aliases: None,
187 -                 doc: None,
188 -                 fields: vec![
189 -                     AvroRecordField {
190 -                         name: "key".to_string(),
191 -                         type_: key_value,
192 -                         field_id: self.last_map_key_field_id,
193 -                     },
194 -                     AvroRecordField {
195 -                         name: "value".to_string(),
196 -                         type_: value,
197 -                         field_id: self.last_map_value_field_id,
198 -                     },
199 -                 ],
200 -                 lookup: BTreeMap::new(),
201 -                 attributes: Default::default(),
202 -             }),
184 +             /* Box<apache_avro::Schema> */,
    |

Some errors have detailed explanations: E0061, E0308, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 26 previous errors

