Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
warning: unused import: `TableMetadataBuilder`
  --> crates/catalog/glue/src/catalog.rs:21:36
   |
21 | use iceberg::spec::{TableMetadata, TableMetadataBuilder};
   |                                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `create_metadata_location`, `get_default_table_location`
  --> crates/catalog/glue/src/catalog.rs:33:71
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `table_name` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:349:31
    |
349 |     let table_name = creation.table_name.clone();
    |                               ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:350:38
    |
350 |     let metadata_location = creation.metadata_location.clone();
    |                                      ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:352:19
    |
352 |     let io = self.file_io(metadata_location.clone()).await?;
    |                   ^^^^^^^ -------------------------
    |                           |
    |                           unexpected argument
    |                           help: remove the extra argument
    |
note: method defined here
   --> crates/catalog/glue/src/catalog.rs:85:12
    |
85  |     pub fn file_io(&self) -> FileIO {
    |            ^^^^^^^

error[E0277]: `FileIO` is not a future
   --> crates/catalog/glue/src/catalog.rs:352:54
    |
352 |     let io = self.file_io(metadata_location.clone()).await?;
    |                                                     -^^^^^
    |                                                     ||
    |                                                     |`FileIO` is not a future
    |                                                     help: remove the `.await`
    |
    = help: the trait `std::future::Future` is not implemented for `FileIO`, which is required by `FileIO: IntoFuture`
    = note: FileIO must be a future or must implement `IntoFuture` to be awaited
    = note: required for `FileIO` to implement `IntoFuture`

error[E0599]: no function or associated item named `from_input_file` found for struct `iceberg::spec::TableMetadata` in the current scope
   --> crates/catalog/glue/src/catalog.rs:354:35
    |
354 |     let metadata = TableMetadata::from_input_file(file).await?;
    |                                   ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadata`

error[E0277]: `std::result::Result<TableInput, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:362:5
    |
355 |       let table_input = convert_to_glue_table(
    |  _______________________-
356 | |         table_name,
357 | |         metadata_location.clone(),
358 | |         &metadata,
359 | |         &properties,
360 | |         None,
361 | |     )
    | |_____- this call returns `std::result::Result<TableInput, iceberg::Error>`
362 |      .await?;
    |       ^^^^^ `std::result::Result<TableInput, iceberg::Error>` is not a future
    |
    = help: the trait `std::future::Future` is not implemented for `std::result::Result<TableInput, iceberg::Error>`, which is required by `std::result::Result<TableInput, iceberg::Error>: IntoFuture`
    = note: std::result::Result<TableInput, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<TableInput, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
362 -    .await?;
362 +    ?;
    |
help: alternatively, consider making `fn convert_to_glue_table` asynchronous
   --> crates/catalog/glue/src/utils.rs:144:11
    |
144 | pub(crate) async fn convert_to_glue_table(
    |            +++++

error[E0599]: no method named `create_table` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:363:17
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_table` not found for this struct
...
363 |     self.client.create_table(namespace, table_input).await?;
    |                 ^^^^^^^^^^^^ method not found in `GlueClient`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `create_table`, perhaps you need to implement it:
            candidate #1: `Catalog`
help: one of the expressions' fields has a method of the same name
    |
363 |     self.client.0.create_table(namespace, table_input).await?;
    |                 ++

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:364:10
    |
364 |     self.load_table(namespace, table_name).await
    |          ^^^^^^^^^^ ---------  ---------- unexpected argument
    |                     |
    |                     expected `&TableIdent`, found `&NamespaceIdent`
    |
    = note: expected reference `&TableIdent`
               found reference `&'life1 iceberg::NamespaceIdent`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:81:14
    |
81  |     async fn load_table(&self, table: &TableIdent) -> Result<Table>;
    |              ^^^^^^^^^^
help: remove the extra argument
    |
364 -     self.load_table(namespace, table_name).await
364 +     self.load_table(/* &TableIdent */).await
    |

Some errors have detailed explanations: E0061, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 8 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `TableMetadataBuilder`
  --> crates/catalog/glue/src/catalog.rs:21:36
   |
21 | use iceberg::spec::{TableMetadata, TableMetadataBuilder};
   |                                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `create_metadata_location`, `get_default_table_location`
  --> crates/catalog/glue/src/catalog.rs:33:71
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `table_name` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:349:31
    |
349 |     let table_name = creation.table_name.clone();
    |                               ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:350:38
    |
350 |     let metadata_location = creation.metadata_location.clone();
    |                                      ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:352:19
    |
352 |     let io = self.file_io(metadata_location.clone()).await?;
    |                   ^^^^^^^ -------------------------
    |                           |
    |                           unexpected argument
    |                           help: remove the extra argument
    |
note: method defined here
   --> crates/catalog/glue/src/catalog.rs:85:12
    |
85  |     pub fn file_io(&self) -> FileIO {
    |            ^^^^^^^

error[E0277]: `FileIO` is not a future
   --> crates/catalog/glue/src/catalog.rs:352:54
    |
352 |     let io = self.file_io(metadata_location.clone()).await?;
    |                                                     -^^^^^
    |                                                     ||
    |                                                     |`FileIO` is not a future
    |                                                     help: remove the `.await`
    |
    = help: the trait `std::future::Future` is not implemented for `FileIO`, which is required by `FileIO: IntoFuture`
    = note: FileIO must be a future or must implement `IntoFuture` to be awaited
    = note: required for `FileIO` to implement `IntoFuture`

error[E0599]: no function or associated item named `from_input_file` found for struct `TableMetadata` in the current scope
   --> crates/catalog/glue/src/catalog.rs:354:35
    |
354 |     let metadata = TableMetadata::from_input_file(file).await?;
    |                                   ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadata`

error[E0277]: `Result<TableInput, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:362:5
    |
355 |       let table_input = convert_to_glue_table(
    |  _______________________-
356 | |         table_name,
357 | |         metadata_location.clone(),
358 | |         &metadata,
359 | |         &properties,
360 | |         None,
361 | |     )
    | |_____- this call returns `Result<TableInput, iceberg::Error>`
362 |      .await?;
    |       ^^^^^ `Result<TableInput, iceberg::Error>` is not a future
    |
    = help: the trait `std::future::Future` is not implemented for `Result<TableInput, iceberg::Error>`, which is required by `Result<TableInput, iceberg::Error>: IntoFuture`
    = note: Result<TableInput, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<TableInput, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
362 -    .await?;
362 +    ?;
    |
help: alternatively, consider making `fn convert_to_glue_table` asynchronous
   --> crates/catalog/glue/src/utils.rs:144:11
    |
144 | pub(crate) async fn convert_to_glue_table(
    |            +++++

error[E0599]: no method named `create_table` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:363:17
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_table` not found for this struct
...
363 |     self.client.create_table(namespace, table_input).await?;
    |                 ^^^^^^^^^^^^ method not found in `GlueClient`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `create_table`, perhaps you need to implement it:
            candidate #1: `Catalog`
help: one of the expressions' fields has a method of the same name
    |
363 |     self.client.0.create_table(namespace, table_input).await?;
    |                 ++

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:364:10
    |
364 |     self.load_table(namespace, table_name).await
    |          ^^^^^^^^^^ ---------  ---------- unexpected argument
    |                     |
    |                     expected `&TableIdent`, found `&NamespaceIdent`
    |
    = note: expected reference `&TableIdent`
               found reference `&'life1 NamespaceIdent`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:81:14
    |
81  |     async fn load_table(&self, table: &TableIdent) -> Result<Table>;
    |              ^^^^^^^^^^
help: remove the extra argument
    |
364 -     self.load_table(namespace, table_name).await
364 +     self.load_table(/* &TableIdent */).await
    |

Some errors have detailed explanations: E0061, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 8 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

