Fail
file path is :
projects/deltachat-core/rust/src/pgp.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: could not find `memory` in `pgp`
   --> src/pgp.rs:153:27
    |
153 |     let mut pubmem = pgp::memory::Memory::new();
    |                           ^^^^^^ could not find `memory` in `pgp`

error[E0433]: failed to resolve: could not find `memory` in `pgp`
   --> src/pgp.rs:154:27
    |
154 |     let mut secmem = pgp::memory::Memory::new();
    |                           ^^^^^^ could not find `memory` in `pgp`

error[E0433]: failed to resolve: could not find `output` in `pgp`
   --> src/pgp.rs:155:27
    |
155 |     let mut pubout = pgp::output::Output::new();
    |                           ^^^^^^ could not find `output` in `pgp`
    |
help: consider importing this struct
    |
3   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
155 -     let mut pubout = pgp::output::Output::new();
155 +     let mut pubout = Output::new();
    |

error[E0433]: failed to resolve: could not find `output` in `pgp`
   --> src/pgp.rs:156:27
    |
156 |     let mut secout = pgp::output::Output::new();
    |                           ^^^^^^ could not find `output` in `pgp`
    |
help: consider importing this struct
    |
3   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
156 -     let mut secout = pgp::output::Output::new();
156 +     let mut secout = Output::new();
    |

warning: unused `#[macro_use]` import
  --> src/lib.rs:31:1
   |
31 | #[macro_use]
   | ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `SecretKeyParamsBuilder`, `SubkeyParamsBuilder`
  --> src/pgp.rs:11:53
   |
11 |     Deserializable, KeyType as PgpKeyType, Message, SecretKeyParamsBuilder, SignedPublicKey,
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^
12 |     SignedPublicSubKey, SignedSecretKey, StandaloneSignature, SubkeyParamsBuilder,
   |                                                               ^^^^^^^^^^^^^^^^^^^

warning: unused import: `SecretKeyTrait`
  --> src/pgp.rs:17:58
   |
17 |     CompressionAlgorithm, KeyTrait, Mpi, PublicKeyTrait, SecretKeyTrait, StringToKey,
   |                                                          ^^^^^^^^^^^^^^

error[E0061]: this function takes 4 arguments but 0 arguments were supplied
   --> src/pgp.rs:147:22
    |
147 |     let mut seckey = SignedSecretKey::new();
    |                      ^^^^^^^^^^^^^^^^^^^^-- multiple arguments are missing
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:12
    |
47  |     pub fn new(
    |            ^^^
help: provide the arguments
    |
147 |     let mut seckey = SignedSecretKey::new(/* pgp::packet::SecretKey */, /* SignedKeyDetails */, /* Vec<SignedPublicSubKey> */, /* Vec<SignedSecretSubKey> */);
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 3 arguments but 0 arguments were supplied
   --> src/pgp.rs:148:22
    |
148 |     let mut pubkey = SignedPublicKey::new();
    |                      ^^^^^^^^^^^^^^^^^^^^-- three arguments of type `pgp::packet::PublicKey`, `SignedKeyDetails`, and `Vec<SignedPublicSubKey>` are missing
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:12
    |
39  |     pub fn new(
    |            ^^^
help: provide the arguments
    |
148 |     let mut pubkey = SignedPublicKey::new(/* pgp::packet::PublicKey */, /* SignedKeyDetails */, /* Vec<SignedPublicSubKey> */);
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 4 arguments but 0 arguments were supplied
   --> src/pgp.rs:149:22
    |
149 |     let mut subkey = SignedSecretKey::new();
    |                      ^^^^^^^^^^^^^^^^^^^^-- multiple arguments are missing
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:12
    |
47  |     pub fn new(
    |            ^^^
help: provide the arguments
    |
149 |     let mut subkey = SignedSecretKey::new(/* pgp::packet::SecretKey */, /* SignedKeyDetails */, /* Vec<SignedPublicSubKey> */, /* Vec<SignedSecretSubKey> */);
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `is_none` found for struct `deltachat_contact_tools::EmailAddress` in the current scope
   --> src/pgp.rs:158:13
    |
158 |     if addr.is_none() || user_id.is_empty() {
    |             ^^^^^^^ method not found in `EmailAddress`

error[E0425]: cannot find function `pgp_rsa_generate_keypair` in this scope
   --> src/pgp.rs:162:8
    |
162 |     if!pgp_rsa_generate_keypair(&mut seckey, keygen_type as i32, 65537, &mut pubmem, &mut secmem) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `pgp_rsa_generate_keypair` in this scope
   --> src/pgp.rs:166:8
    |
166 |     if!pgp_rsa_generate_keypair(&mut subkey, keygen_type as i32, 65537, &mut pubmem, &secmem) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `set_type` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:170:12
    |
170 |     pubkey.set_type(PgpKeyType::PublicKey);
    |            ^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no variant or associated item named `PublicKey` found for enum `KeyType` in the current scope
   --> src/pgp.rs:170:33
    |
170 |     pubkey.set_type(PgpKeyType::PublicKey);
    |                                 ^^^^^^^^^ variant or associated item not found in `KeyType`

error[E0599]: no method named `set_fingerprint` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:171:12
    |
171 |     pubkey.set_fingerprint(seckey.fingerprint());
    |            ^^^^^^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0034]: multiple applicable items in scope
   --> src/pgp.rs:171:35
    |
171 |     pubkey.set_fingerprint(seckey.fingerprint());
    |                                   ^^^^^^^^^^^ multiple `fingerprint` found
    |
    = note: candidate #1 is defined in an impl of the trait `KeyTrait` for the type `SignedSecretKey`
note: candidate #2 is defined in an impl of the trait `DcKey` for the type `SignedSecretKey`
   --> src/key.rs:77:5
    |
77  |     fn fingerprint(&self) -> Fingerprint {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: disambiguate the method for candidate #1
    |
171 |     pubkey.set_fingerprint(KeyTrait::fingerprint(&seckey));
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: disambiguate the method for candidate #2
    |
171 |     pubkey.set_fingerprint(DcKey::fingerprint(&seckey));
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `set_userid` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:172:12
    |
172 |     pubkey.set_userid(&user_id);
    |            ^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no method named `add_subkey` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:174:12
    |
174 |     pubkey.add_subkey(&subkey);
    |            ^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no variant or associated item named `Unarmored` found for enum `BlockType` in the current scope
   --> src/pgp.rs:176:60
    |
176 |     if!pgp_write_xfer_key(&mut pubout, &pubkey, BlockType::Unarmored) {
    |                                                            ^^^^^^^^^ variant or associated item not found in `BlockType`

error[E0425]: cannot find function `pgp_write_xfer_key` in this scope
   --> src/pgp.rs:176:8
    |
176 |     if!pgp_write_xfer_key(&mut pubout, &pubkey, BlockType::Unarmored) {
    |        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no variant or associated item named `Unarmored` found for enum `BlockType` in the current scope
   --> src/pgp.rs:180:60
    |
180 |     if!pgp_write_xfer_key(&mut secout, &seckey, BlockType::Unarmored) {
    |                                                            ^^^^^^^^^ variant or associated item not found in `BlockType`

error[E0425]: cannot find function `pgp_write_xfer_key` in this scope
   --> src/pgp.rs:180:8
    |
180 |     if!pgp_write_xfer_key(&mut secout, &seckey, BlockType::Unarmored) {
    |        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `from_binary` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:184:39
    |
184 |     let public_key = SignedPublicKey::from_binary(&pubmem);
    |                                       ^^^^^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `from_binary` found for struct `SignedSecretKey` in the current scope
   --> src/pgp.rs:185:39
    |
185 |     let secret_key = SignedSecretKey::from_binary(&secmem);
    |                                       ^^^^^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `SignedSecretKey`, consider using `SignedSecretKey::new` which returns `SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

Some errors have detailed explanations: E0034, E0061, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0034`.
warning: `deltachat` (lib) generated 3 warnings
error: could not compile `deltachat` (lib) due to 22 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `set_type` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:170:12
    |
170 |     pubkey.set_type(PgpKeyType::PublicKey);
    |            ^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no method named `set_fingerprint` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:171:12
    |
171 |     pubkey.set_fingerprint(seckey.fingerprint());
    |            ^^^^^^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0034]: multiple applicable items in scope
   --> src/pgp.rs:171:35
    |
171 |     pubkey.set_fingerprint(seckey.fingerprint());
    |                                   ^^^^^^^^^^^ multiple `fingerprint` found
    |
    = note: candidate #1 is defined in an impl of the trait `KeyTrait` for the type `pgp::SignedSecretKey`
note: candidate #2 is defined in an impl of the trait `key::DcKey` for the type `pgp::SignedSecretKey`
   --> src/key.rs:77:5
    |
77  |     fn fingerprint(&self) -> Fingerprint {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: disambiguate the method for candidate #1
    |
171 |     pubkey.set_fingerprint(KeyTrait::fingerprint(&seckey));
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
help: disambiguate the method for candidate #2
    |
171 |     pubkey.set_fingerprint(key::DcKey::fingerprint(&seckey));
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `set_userid` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:172:12
    |
172 |     pubkey.set_userid(&user_id);
    |            ^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no method named `add_subkey` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:174:12
    |
174 |     pubkey.add_subkey(&subkey);
    |            ^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no variant or associated item named `Unarmored` found for enum `pgp::armor::BlockType` in the current scope
   --> src/pgp.rs:176:60
    |
176 |     if!pgp_write_xfer_key(&mut pubout, &pubkey, BlockType::Unarmored) {
    |                                                            ^^^^^^^^^ variant or associated item not found in `BlockType`

error[E0599]: no variant or associated item named `Unarmored` found for enum `pgp::armor::BlockType` in the current scope
   --> src/pgp.rs:180:60
    |
180 |     if!pgp_write_xfer_key(&mut secout, &seckey, BlockType::Unarmored) {
    |                                                            ^^^^^^^^^ variant or associated item not found in `BlockType`

error[E0599]: no function or associated item named `from_binary` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:184:39
    |
184 |     let public_key = SignedPublicKey::from_binary(&pubmem);
    |                                       ^^^^^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `from_binary` found for struct `pgp::SignedSecretKey` in the current scope
   --> src/pgp.rs:185:39
    |
185 |     let secret_key = SignedSecretKey::from_binary(&secmem);
    |                                       ^^^^^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `pgp::SignedSecretKey`, consider using `pgp::SignedSecretKey::new` which returns `pgp::SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

warning: `deltachat` (lib test) generated 3 warnings (3 duplicates)
error: could not compile `deltachat` (lib test) due to 22 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

