Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error: expected one of `.`, `;`, `?`, `else`, or an operator, found `f32`
   --> src/cd.rs:269:84
    |
269 |         let ratio: f32 = intersection.len() as f32 / language_characters_set.len() f32;
    |                                                                                    ^^^ expected one of `.`, `;`, `?`, `else`, or an operator

error[E0428]: the name `alphabet_languages` is defined multiple times
   --> src/cd.rs:252:1
    |
92  | / pub(crate) fn alphabet_languages(
93  | |     characters: &[char],
94  | |     ignore_non_latin: bool,
95  | | ) -> Vec<&'static Language> {
...   |
122 | |     languages.iter().map(|&lang| lang.0).collect()
123 | | }
    | |_- previous definition of the value `alphabet_languages` here
...
252 | / pub fn alphabet_languages(
253 | |     characters: &[char],
254 | |     ignore_non_latin: bool,
255 | | ) -> Vec<&'static Language> {
...   |
275 | |     languages.iter().map(|&lang| lang.0).collect()
276 | | }
    | |_^ `alphabet_languages` redefined here
    |
    = note: `alphabet_languages` must be defined only once in the value namespace of this module

error[E0609]: no field `name` on type `&&Language`
   --> src/cd.rs:206:58
    |
206 |         include_languages.iter().any(|language| language.name == "Latin Based")
    |                                                          ^^^^

error[E0609]: no field `name` on type `&&&Language`
   --> src/cd.rs:210:61
    |
210 |         include_languages.iter().filter(|language| language.name!= "Latin Based").map(|language| language.name.clone()).collect()
    |                                                             ^^^^

error[E0609]: no field `name` on type `&&Language`
   --> src/cd.rs:210:107
    |
210 |         include_languages.iter().filter(|language| language.name!= "Latin Based").map(|language| language.name.clone()).collect()
    |                                                                                                           ^^^^

error[E0308]: mismatched types
   --> src/cd.rs:214:65
    |
214 |         let sequence_frequencies: Counter<char> = Counter::from(layer.chars().collect::<Vec<char>>());
    |                                                   ------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Counter<char>`, found `Vec<char>`
    |                                                   |
    |                                                   arguments to this function are incorrect
    |
    = note: expected struct `Counter<char>`
               found struct `Vec<char>`
note: associated function defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:548:8
    |
548 |     fn from(value: T) -> Self;
    |        ^^^^

error[E0277]: a value of type `Vec<char>` cannot be built from an iterator over elements of type `&char`
    --> src/cd.rs:223:87
     |
223  |         let popular_character_ordered: Vec<char> = most_common.iter().map(|(c, _)| c).collect();
     |                                                                                       ^^^^^^^ value of type `Vec<char>` cannot be built from `std::iter::Iterator<Item=&char>`
     |
     = help: the trait `FromIterator<&char>` is not implemented for `Vec<char>`
     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`
note: the method call chain might not have had the expected associated types
    --> src/cd.rs:223:71
     |
214  |         let sequence_frequencies: Counter<char> = Counter::from(layer.chars().collect::<Vec<char>>());
     |                                                   --------------------------------------------------- this expression has type `Counter<char>`
...
223  |         let popular_character_ordered: Vec<char> = most_common.iter().map(|(c, _)| c).collect();
     |                                                                ------ ^^^^^^^^^^^^^^^ `Iterator::Item` changed to `&char` here
     |                                                                |
     |                                                                `Iterator::Item` is `&(char, usize)` here
note: required by a bound in `collect`
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:1892:19
     |
1892 |     fn collect<B: FromIterator<Self::Item>>(self) -> B
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::collect`

error[E0308]: mismatched types
   --> src/cd.rs:226:70
    |
226 |             let ratio: f32 = characters_popularity_compare(language, &popular_character_ordered);
    |                              -----------------------------           ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&Vec<char>`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&Vec<char>`
note: function defined here
   --> src/cd.rs:150:15
    |
150 | pub(crate) fn characters_popularity_compare(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
151 |     language: &Language,
152 |     ordered_characters: &str,
    |     ------------------------

error[E0308]: mismatched types
   --> src/cd.rs:226:30
    |
226 |             let ratio: f32 = characters_popularity_compare(language, &popular_character_ordered);
    |                        ---   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `f32`, found `Result<f32, String>`
    |                        |
    |                        expected due to this
    |
    = note: expected type `f32`
               found enum `Result<f32, std::string::String>`

error[E0599]: no method named `get` found for reference `&OrderedFloat<f32>` in the current scope
   --> src/cd.rs:228:73
    |
228 |             if ratio < threshold.as_ref().unwrap_or(&OrderedFloat(0.1)).get() {
    |                                                                         ^^^ method not found in `&OrderedFloat<f32>`

error[E0308]: mismatched types
   --> src/cd.rs:232:31
    |
232 |                 results.push((language.clone(), ratio));
    |                               ^^^^^^^^^^^^^^^^ expected `Language`, found `&Language`
    |
note: `Language` does not implement `Clone`, so `&Language` was cloned instead
   --> src/cd.rs:232:31
    |
232 |                 results.push((language.clone(), ratio));
    |                               ^^^^^^^^
help: consider annotating `Language` with `#[derive(Clone)]`
   --> src/entity.rs:23:1
    |
23  + #[derive(Clone)]
24  |     if is_multi_byte_encoding(iana_name) {
    |

error[E0308]: mismatched types
   --> src/cd.rs:235:27
    |
235 |             results.push((language.clone(), ratio));
    |                           ^^^^^^^^^^^^^^^^ expected `Language`, found `&Language`
    |
note: `Language` does not implement `Clone`, so `&Language` was cloned instead
   --> src/cd.rs:235:27
    |
235 |             results.push((language.clone(), ratio));
    |                           ^^^^^^^^
help: consider annotating `Language` with `#[derive(Clone)]`
   --> src/entity.rs:23:1
    |
23  + #[derive(Clone)]
24  |     if is_multi_byte_encoding(iana_name) {
    |

error[E0308]: mismatched types
   --> src/cd.rs:245:33
    |
245 |         let score = index.entry(result.0).or_insert(0.0);
    |                           ----- ^^^^^^^^
    |                           |     |
    |                           |     expected `&Language`, found `Language`
    |                           |     help: consider borrowing here: `&result.0`
    |                           arguments to this method are incorrect
    |
help: the return type of this call is `Language` due to the type of the argument passed
   --> src/cd.rs:245:21
    |
245 |         let score = index.entry(result.0).or_insert(0.0);
    |                     ^^^^^^^^^^^^--------^
    |                                 |
    |                                 this argument influences the return type of `entry`
note: method defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:854:12
    |
854 |     pub fn entry(&mut self, key: K) -> Entry<'_, K, V> {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/cd.rs:248:48
    |
248 |     let results = filter_alt_coherence_matches(&results);
    |                   ---------------------------- ^^^^^^^^ expected `&Vec<CoherenceMatch>`, found `&Vec<(Language, f32)>`
    |                   |
    |                   arguments to this function are incorrect
    |
    = note: expected reference `&Vec<CoherenceMatch>`
               found reference `&Vec<(Language, f32)>`
note: function defined here
   --> src/cd.rs:160:15
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------

Some errors have detailed explanations: E0277, E0308, E0428, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `charset-normalizer-rs` (lib) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `charset-normalizer-rs` (lib test) due to 14 previous errors

