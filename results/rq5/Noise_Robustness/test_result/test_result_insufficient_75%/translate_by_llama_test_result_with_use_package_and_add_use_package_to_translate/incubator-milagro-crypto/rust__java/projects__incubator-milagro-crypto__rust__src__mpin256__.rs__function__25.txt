Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin256.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error: expected type, found `8`
   --> src/./mpin256.rs:699:20
    |
699 |     xcid: Option<&[8]>,
    |                    ^ expected type

error[E0599]: no method named `modulus` found for struct `bls48::big::Big` in the current scope
   --> src/./mpin256.rs:706:7
    |
706 |     q.modulus(rom::MODULUS);
    |       ^^^^^^^ method not found in `Big`
    |
   ::: src/./big.rs:39:1
    |
39  | pub struct Big {
    | -------------- method `modulus` not found for this struct

error[E0308]: mismatched types
   --> src/./mpin256.rs:722:29
    |
722 |         R = ECP::from_bytes(xid);
    |             --------------- ^^^ expected `&[u8]`, found `Option<&[u8]>`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin256.rs:731:29
    |
731 |         P = ECP::from_bytes(htid);
    |             --------------- ^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0277]: can't compare `&[u8]` with `Option<_>`
   --> src/./mpin256.rs:733:16
    |
733 |         if hid == None {
    |                ^^ no implementation for `&[u8] == Option<_>`
    |
    = help: the trait `PartialEq<Option<_>>` is not implemented for `&[u8]`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <&[B] as PartialEq<[A; N]>>
              <&[T] as PartialEq<Vec<U, A>>>
              <&mut [B] as PartialEq<[A; N]>>
              <&mut [T] as PartialEq<Vec<U, A>>>
              <[A; N] as PartialEq<&[B]>>
              <[A; N] as PartialEq<&mut [B]>>
              <[A; N] as PartialEq<[B; N]>>
              <[A; N] as PartialEq<[B]>>
            and 3 others

error[E0433]: failed to resolve: use of undeclared type `PAIR256`
   --> src/./mpin256.rs:742:9
    |
742 |     P = PAIR256::G1mul(P, y);
    |         ^^^^^^^ use of undeclared type `PAIR256`

error[E0308]: mismatched types
   --> src/./mpin256.rs:743:11
    |
743 |     P.add(R);
    |       --- ^
    |       |   |
    |       |   expected `&ECP`, found `ECP`
    |       |   help: consider borrowing here: `&R`
    |       arguments to this method are incorrect
    |
note: method defined here
   --> src/./ecp.rs:743:12
    |
743 |     pub fn add(&mut self, Q: &ECP) {
    |            ^^^            -------

error[E0433]: failed to resolve: use of undeclared type `PAIR256`
   --> src/./mpin256.rs:751:9
    |
751 |     g = PAIR256::ate2(Q, R, sQ, P);
    |         ^^^^^^^ use of undeclared type `PAIR256`

error[E0433]: failed to resolve: use of undeclared type `PAIR`
   --> src/./mpin256.rs:752:9
    |
752 |     g = PAIR::fexp(g);
    |         ^^^^ use of undeclared type `PAIR`

error[E0599]: no method named `isunity` found for struct `FP48` in the current scope
   --> src/./mpin256.rs:754:10
    |
754 |     if!g.isunity() {
    |          ^^^^^^^ help: there is a method with a similar name: `is_unity`
    |
   ::: src/./fp48.rs:37:1
    |
37  | pub struct FP48 {
    | --------------- method `isunity` not found for this struct

error[E0277]: can't compare `&[u8]` with `Option<_>`
   --> src/./mpin256.rs:755:15
    |
755 |         if hid!= None && xid!= None && e!= None && f!= None {
    |               ^^ no implementation for `&[u8] == Option<_>`
    |
    = help: the trait `PartialEq<Option<_>>` is not implemented for `&[u8]`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <&[B] as PartialEq<[A; N]>>
              <&[T] as PartialEq<Vec<U, A>>>
              <&mut [B] as PartialEq<[A; N]>>
              <&mut [T] as PartialEq<Vec<U, A>>>
              <[A; N] as PartialEq<&[B]>>
              <[A; N] as PartialEq<&mut [B]>>
              <[A; N] as PartialEq<[B; N]>>
              <[A; N] as PartialEq<[B]>>
            and 3 others

error[E0308]: mismatched types
    --> src/./mpin256.rs:756:24
     |
756  |             g.to_bytes(e);
     |               -------- ^ expected `&mut [u8]`, found `Option<&mut [u8]>`
     |               |
     |               arguments to this method are incorrect
     |
     = note: expected mutable reference `&mut [u8]`
                             found enum `Option<&mut [u8]>`
note: method defined here
    --> src/./fp48.rs:1087:12
     |
1087 |     pub fn to_bytes(&self, w: &mut [u8]) {
     |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin256.rs:762:37
    |
762 |                 R = ECP::from_bytes(xid);
    |                     --------------- ^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0433]: failed to resolve: use of undeclared type `PAIR`
   --> src/./mpin256.rs:767:21
    |
767 |                 P = PAIR::G1mul(P, y);
    |                     ^^^^ use of undeclared type `PAIR`

error[E0308]: mismatched types
   --> src/./mpin256.rs:768:23
    |
768 |                 P.add(R);
    |                   --- ^
    |                   |   |
    |                   |   expected `&ECP`, found `ECP`
    |                   |   help: consider borrowing here: `&R`
    |                   arguments to this method are incorrect
    |
note: method defined here
   --> src/./ecp.rs:743:12
    |
743 |     pub fn add(&mut self, Q: &ECP) {
    |            ^^^            -------

error[E0433]: failed to resolve: use of undeclared type `PAIR`
   --> src/./mpin256.rs:770:17
    |
770 |             g = PAIR::ate(Q, P);
    |                 ^^^^ use of undeclared type `PAIR`

error[E0433]: failed to resolve: use of undeclared type `PAIR`
   --> src/./mpin256.rs:771:17
    |
771 |             g = PAIR::fexp(g);
    |                 ^^^^ use of undeclared type `PAIR`

error[E0308]: mismatched types
    --> src/./mpin256.rs:772:24
     |
772  |             g.to_bytes(f);
     |               -------- ^ expected `&mut [u8]`, found `Option<&mut [u8]>`
     |               |
     |               arguments to this method are incorrect
     |
     = note: expected mutable reference `&mut [u8]`
                             found enum `Option<&mut [u8]>`
note: method defined here
    --> src/./fp48.rs:1087:12
     |
1087 |     pub fn to_bytes(&self, w: &mut [u8]) {
     |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin256.rs:722:29
    |
722 |         R = ECP::from_bytes(xid);
    |             --------------- ^^^ expected `&[u8]`, found `Option<&[u8]>`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin256.rs:731:29
    |
731 |         P = ECP::from_bytes(htid);
    |             --------------- ^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0277]: can't compare `&[u8]` with `std::option::Option<_>`
   --> src/./mpin256.rs:733:16
    |
733 |         if hid == None {
    |                ^^ no implementation for `&[u8] == std::option::Option<_>`
    |
    = help: the trait `PartialEq<std::option::Option<_>>` is not implemented for `&[u8]`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <&'a [u8] as PartialEq<bstr::BStr>>
              <&'a [u8] as PartialEq<bstr::BString>>
              <[u8] as PartialEq<bstr::BStr>>
              <[u8] as PartialEq<bstr::BString>>

error[E0277]: can't compare `&[u8]` with `std::option::Option<_>`
   --> src/./mpin256.rs:755:15
    |
755 |         if hid!= None && xid!= None && e!= None && f!= None {
    |               ^^ no implementation for `&[u8] == std::option::Option<_>`
    |
    = help: the trait `PartialEq<std::option::Option<_>>` is not implemented for `&[u8]`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <&'a [u8] as PartialEq<bstr::BStr>>
              <&'a [u8] as PartialEq<bstr::BString>>
              <[u8] as PartialEq<bstr::BStr>>
              <[u8] as PartialEq<bstr::BString>>

error[E0308]: mismatched types
    --> src/./mpin256.rs:756:24
     |
756  |             g.to_bytes(e);
     |               -------- ^ expected `&mut [u8]`, found `Option<&mut [u8]>`
     |               |
     |               arguments to this method are incorrect
     |
     = note: expected mutable reference `&mut [u8]`
                             found enum `std::option::Option<&mut [u8]>`
note: method defined here
    --> src/./fp48.rs:1087:12
     |
1087 |     pub fn to_bytes(&self, w: &mut [u8]) {
     |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin256.rs:762:37
    |
762 |                 R = ECP::from_bytes(xid);
    |                     --------------- ^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
    --> src/./mpin256.rs:772:24
     |
772  |             g.to_bytes(f);
     |               -------- ^ expected `&mut [u8]`, found `Option<&mut [u8]>`
     |               |
     |               arguments to this method are incorrect
     |
     = note: expected mutable reference `&mut [u8]`
                             found enum `std::option::Option<&mut [u8]>`
note: method defined here
    --> src/./fp48.rs:1087:12
     |
1087 |     pub fn to_bytes(&self, w: &mut [u8]) {
     |            ^^^^^^^^        ------------

Some errors have detailed explanations: E0277, E0308, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 18 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 18 previous errors

