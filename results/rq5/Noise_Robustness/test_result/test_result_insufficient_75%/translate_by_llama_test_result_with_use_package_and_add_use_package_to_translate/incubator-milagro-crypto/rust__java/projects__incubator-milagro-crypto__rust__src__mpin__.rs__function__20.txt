Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `MAXPIN` in module `rom`
   --> src/./mpin.rs:536:17
    |
536 |     pin %= rom::MAXPIN;
    |                 ^^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls24::mpin192::MAXPIN;
    |
20  + use crate::bls381::mpin::MAXPIN;
    |
20  + use crate::bls383::mpin::MAXPIN;
    |
20  + use crate::bls48::mpin256::MAXPIN;
    |
      and 4 other candidates
help: if you import `MAXPIN`, refer to it directly
    |
536 -     pin %= rom::MAXPIN;
536 +     pin %= MAXPIN;
    |

error[E0425]: cannot find value `h` in this scope
   --> src/./mpin.rs:545:35
    |
545 |         let h = hashit(sha, date, h, &mut [0; 32]);
    |                                   ^ help: a local variable with a similar name exists: `P`

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:548:23
    |
548 |             P = pair::G1mul(&P, &x);
    |                       ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:550:23
    |
550 |             W = pair::G1mul(&W, &x);
    |                       ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:556:23
    |
556 |             P = pair::G1mul(&P, &x);
    |                       ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:563:23
    |
563 |             P = pair::G1mul(&P, &x);
    |                       ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find value `MAXPIN` in module `rom`
   --> src/./mpin.rs:536:17
    |
536 |     pin %= rom::MAXPIN;
    |                 ^^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls24::mpin192::MAXPIN;
    |
20  + use crate::bls381::mpin::MAXPIN;
    |
20  + use crate::bls461::mpin::MAXPIN;
    |
20  + use crate::bls48::mpin256::MAXPIN;
    |
      and 4 other candidates
help: if you import `MAXPIN`, refer to it directly
    |
536 -     pin %= rom::MAXPIN;
536 +     pin %= MAXPIN;
    |

error[E0425]: cannot find value `MAXPIN` in module `rom`
   --> src/./mpin.rs:536:17
    |
536 |     pin %= rom::MAXPIN;
    |                 ^^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls24::mpin192::MAXPIN;
    |
20  + use crate::bls383::mpin::MAXPIN;
    |
20  + use crate::bls461::mpin::MAXPIN;
    |
20  + use crate::bls48::mpin256::MAXPIN;
    |
      and 4 other candidates
help: if you import `MAXPIN`, refer to it directly
    |
536 -     pin %= rom::MAXPIN;
536 +     pin %= MAXPIN;
    |

error[E0425]: cannot find value `MAXPIN` in module `rom`
   --> src/./mpin.rs:536:17
    |
536 |     pin %= rom::MAXPIN;
    |                 ^^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls24::mpin192::MAXPIN;
    |
20  + use crate::bls381::mpin::MAXPIN;
    |
20  + use crate::bls383::mpin::MAXPIN;
    |
20  + use crate::bls461::mpin::MAXPIN;
    |
      and 4 other candidates
help: if you import `MAXPIN`, refer to it directly
    |
536 -     pin %= rom::MAXPIN;
536 +     pin %= MAXPIN;
    |

error[E0308]: mismatched types
   --> src/./mpin.rs:519:30
    |
519 |     let mut r = Big::new_int(rom::CURVE_ORDER);
    |                 ------------ ^^^^^^^^^^^^^^^^ expected `isize`, found `[i64; 8]`
    |                 |
    |                 arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:95:12
    |
95  |     pub fn new_int(x: isize) -> Big {
    |            ^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin.rs:527:20
    |
527 |         x.to_bytes(x);
    |           -------- ^ expected `&mut [u8]`, found `Big`
    |           |
    |           arguments to this method are incorrect
    |
note: method defined here
   --> src/./big.rs:510:12
    |
510 |     pub fn to_bytes(&self, b: &mut [u8]) {
    |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin.rs:529:29
    |
529 |         x = Big::from_bytes(x);
    |             --------------- ^ expected `&[u8]`, found `Big`
    |             |
    |             arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:519:12
    |
519 |     pub fn from_bytes(b: &[u8]) -> Big {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
    --> src/./mpin.rs:531:28
     |
531  |     let mut P = ECP::mapit(&hashit(sha, 0, client_id, &mut [0; 32]));
     |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
    --> src/./mpin.rs:537:22
     |
537  |     let W = P.pinmul(pin, PBLEN);
     |               ------ ^^^ expected `i32`, found `usize`
     |               |
     |               arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
537  |     let W = P.pinmul(pin.try_into().unwrap(), PBLEN);
     |                         ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin.rs:540:33
    |
540 |         let W = ECP::from_bytes(permit);
    |                 --------------- ^^^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                 |
    |                 arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
    --> src/./mpin.rs:546:28
     |
546  |         let W = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin.rs:519:30
    |
519 |     let mut r = Big::new_int(rom::CURVE_ORDER);
    |                 ------------ ^^^^^^^^^^^^^^^^ expected `isize`, found `[i64; 7]`
    |                 |
    |                 arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:95:12
    |
95  |     pub fn new_int(x: isize) -> Big {
    |            ^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin.rs:519:30
    |
519 |     let mut r = Big::new_int(rom::CURVE_ORDER);
    |                 ------------ ^^^^^^^^^^^^^^^^ expected `isize`, found `[i64; 9]`
    |                 |
    |                 arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:95:12
    |
95  |     pub fn new_int(x: isize) -> Big {
    |            ^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin.rs:519:30
    |
519 |     let mut r = Big::new_int(rom::CURVE_ORDER);
    |                 ------------ ^^^^^^^^^^^^^^^^ expected `isize`, found `[i64; 5]`
    |                 |
    |                 arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:95:12
    |
95  |     pub fn new_int(x: isize) -> Big {
    |            ^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin.rs:540:33
    |
540 |         let W = ECP::from_bytes(permit);
    |                 --------------- ^^^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                 |
    |                 arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

Some errors have detailed explanations: E0308, E0425.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `amcl` (lib) due to 22 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 22 previous errors

