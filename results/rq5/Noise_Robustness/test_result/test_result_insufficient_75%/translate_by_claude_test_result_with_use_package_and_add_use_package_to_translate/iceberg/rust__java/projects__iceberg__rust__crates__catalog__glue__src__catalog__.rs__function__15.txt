Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:581:13
    |
581 |             tracing::info!("Successfully renamed table from {:?} to {:?}", from, to);
    |             ^^^^^^^ use of undeclared crate or module `tracing`

error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:586:13
    |
586 |             tracing::error!(
    |             ^^^^^^^ use of undeclared crate or module `tracing`

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:545:15
    |
545 |         .name(&from_table_name)
    |          ---- ^^^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `GetTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_table/builders.rs:131:39
    |
131 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTableFluentBuilder::name`
help: consider dereferencing here
    |
545 |         .name(&*from_table_name)
    |                +

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:560:16
    |
560 |         .owner(from_table.owner())
    |          ----- ^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::owner`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:188:40
    |
188 |     pub fn owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::owner`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:561:21
    |
561 |         .table_type(from_table.table_type())
    |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::table_type`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:327:45
    |
327 |     pub fn table_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::table_type`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:562:21
    |
562 |         .parameters(from_table.parameters().cloned())
    |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:562:10
    |
562 |         .parameters(from_table.parameters().cloned())
    |          ^^^^^^^^^^---------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
562 |         .parameters(from_table.parameters().cloned(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:563:29
    |
563 |         .storage_descriptor(from_table.storage_descriptor().cloned())
    |          ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `Option<StorageDescriptor>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `aws_sdk_glue::types::StorageDescriptor`
                 found enum `std::option::Option<aws_sdk_glue::types::StorageDescriptor>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::option::Option<aws_sdk_glue::types::StorageDescriptor>` value, panicking if the value is an `Option::None`
    |
563 |         .storage_descriptor(from_table.storage_descriptor().cloned().expect("REASON"))
    |                                                                     +++++++++++++++++

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:579:16
    |
579 |     match self.drop_table(from, false).await {
    |                ^^^^^^^^^^     -------
    |                               | |
    |                               | unexpected argument of type `bool`
    |                               help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:596:23
    |
596 |                 .name(&to_table_name);
    |                  ---- ^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |                  |
    |                  required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:143:39
    |
143 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::name`
help: consider dereferencing here
    |
596 |                 .name(&*to_table_name);
    |                        +

Some errors have detailed explanations: E0061, E0277, E0308, E0433.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:581:13
    |
581 |             tracing::info!("Successfully renamed table from {:?} to {:?}", from, to);
    |             ^^^^^^^ use of undeclared crate or module `tracing`

error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:586:13
    |
586 |             tracing::error!(
    |             ^^^^^^^ use of undeclared crate or module `tracing`

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:545:15
    |
545 |         .name(&from_table_name)
    |          ---- ^^^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `GetTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_table/builders.rs:131:39
    |
131 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTableFluentBuilder::name`
help: consider dereferencing here
    |
545 |         .name(&*from_table_name)
    |                +

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:560:16
    |
560 |         .owner(from_table.owner())
    |          ----- ^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::owner`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:188:40
    |
188 |     pub fn owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::owner`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:561:21
    |
561 |         .table_type(from_table.table_type())
    |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::table_type`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:327:45
    |
327 |     pub fn table_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::table_type`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<HashMap<std::string::String, std::string::String>>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:562:21
    |
562 |         .parameters(from_table.parameters().cloned())
    |          ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<HashMap<std::string::String, std::string::String>>>` is not implemented for `std::string::String`, which is required by `std::option::Option<HashMap<std::string::String, std::string::String>>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<HashMap<std::string::String, std::string::String>>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:562:10
    |
562 |         .parameters(from_table.parameters().cloned())
    |          ^^^^^^^^^^---------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
562 |         .parameters(from_table.parameters().cloned(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:563:29
    |
563 |         .storage_descriptor(from_table.storage_descriptor().cloned())
    |          ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `Option<StorageDescriptor>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `StorageDescriptor`
                 found enum `std::option::Option<StorageDescriptor>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::option::Option<StorageDescriptor>` value, panicking if the value is an `Option::None`
    |
563 |         .storage_descriptor(from_table.storage_descriptor().cloned().expect("REASON"))
    |                                                                     +++++++++++++++++

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:579:16
    |
579 |     match self.drop_table(from, false).await {
    |                ^^^^^^^^^^     -------
    |                               | |
    |                               | unexpected argument of type `bool`
    |                               help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:596:23
    |
596 |                 .name(&to_table_name);
    |                  ---- ^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |                  |
    |                  required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:143:39
    |
143 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::name`
help: consider dereferencing here
    |
596 |                 .name(&*to_table_name);
    |                        +

Some errors have detailed explanations: E0061, E0277, E0308, E0433.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

