Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:287:17
    |
287 | fn before_field(&mut self, field: &Field) -> Result<()> {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:290:16
    |
290 | fn after_field(&mut self, field: &Field) -> Result<()> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:293:11
    |
293 | fn schema(&mut self, schema: &ArrowSchema, results: Vec<Self::U>) -> Result<Self::U> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:235:29
    |
235 |             let schema_id = SchemaId::new(0); // Assuming default schema ID
    |                             ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
235 |             let schema_id = Schema::new(0); // Assuming default schema ID
    |                             ~~~~~~
help: consider importing this type alias through its public re-export
    |
20  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:236:40
    |
236 |             let identifier_field_ids = HashSet::new(); // Assuming no identifier fields
    |                                        ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:243:30
    |
243 |                 alias_to_id: BiHashMap::new(),
    |                              ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
243 |                 alias_to_id: HashMap::new(),
    |                              ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:267:24
    |
267 |             schema_id: SchemaId::new(0), // Assuming default schema ID
    |                        ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
267 |             schema_id: Schema::new(0), // Assuming default schema ID
    |                        ~~~~~~
help: consider importing this type alias through its public re-export
    |
20  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:269:35
    |
269 |             identifier_field_ids: HashSet::new(), // Assuming no identifier fields
    |                                   ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:270:26
    |
270 |             alias_to_id: BiHashMap::new(),
    |                          ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
270 |             alias_to_id: HashMap::new(),
    |                          ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:281:13
    |
281 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0411]: cannot find struct, variant or union type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:282:13
    |
281 | fn new() -> Self {
    |    --- `Self` not allowed in a function
282 |             Self {
    |             ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:295:29
    |
295 |             let schema_id = SchemaId::new(0); // Assuming default schema ID
    |                             ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
295 |             let schema_id = Schema::new(0); // Assuming default schema ID
    |                             ~~~~~~
help: consider importing this type alias through its public re-export
    |
20  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:296:40
    |
296 |             let identifier_field_ids = HashSet::new(); // Assuming no identifier fields
    |                                        ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:303:30
    |
303 |                 alias_to_id: BiHashMap::new(),
    |                              ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
303 |                 alias_to_id: HashMap::new(),
    |                              ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0046]: not all trait items implemented, missing: `T`, `struct`, `list`, `map`, `primitive`
   --> crates/iceberg/src/arrow/schema.rs:222:5
    |
42  |     type T;
    |     ------ `T` from trait
...
91  |     fn r#struct(&mut self, fields: &Fields, results: Vec<Self::T>) -> Result<Self::T>;
    |     ---------------------------------------------------------------------------------- `r#struct` from trait
...
94  |     fn list(&mut self, list: &DataType, value: Self::T) -> Result<Self::T>;
    |     ----------------------------------------------------------------------- `list` from trait
...
97  |     fn map(&mut self, map: &DataType, key_value: Self::T, value: Self::T) -> Result<Self::T>;
    |     ----------------------------------------------------------------------------------------- `map` from trait
...
100 |     fn primitive(&mut self, p: &DataType) -> Result<Self::T>;
    |     --------------------------------------------------------- `primitive` from trait
...
222 |     impl ArrowSchemaVisitor for ConvertToIceberg {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `T`, `struct`, `list`, `map`, `primitive` in implementation

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:293:57
    |
293 | fn schema(&mut self, schema: &ArrowSchema, results: Vec<Self::U>) -> Result<Self::U> {
    |                                                         ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:293:77
    |
293 | fn schema(&mut self, schema: &ArrowSchema, results: Vec<Self::U>) -> Result<Self::U> {
    |                                                                             ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0046, E0411, E0433.
For more information about an error, try `rustc --explain E0046`.
error: could not compile `iceberg` (lib) due to 17 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 17 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:287:17
    |
287 | fn before_field(&mut self, field: &Field) -> Result<()> {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:290:16
    |
290 | fn after_field(&mut self, field: &Field) -> Result<()> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:293:11
    |
293 | fn schema(&mut self, schema: &ArrowSchema, results: Vec<Self::U>) -> Result<Self::U> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:235:29
    |
235 |             let schema_id = SchemaId::new(0); // Assuming default schema ID
    |                             ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
235 |             let schema_id = Schema::new(0); // Assuming default schema ID
    |                             ~~~~~~
help: consider importing this type alias through its public re-export
    |
20  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:236:40
    |
236 |             let identifier_field_ids = HashSet::new(); // Assuming no identifier fields
    |                                        ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:243:30
    |
243 |                 alias_to_id: BiHashMap::new(),
    |                              ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
243 |                 alias_to_id: HashMap::new(),
    |                              ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:267:24
    |
267 |             schema_id: SchemaId::new(0), // Assuming default schema ID
    |                        ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
267 |             schema_id: Schema::new(0), // Assuming default schema ID
    |                        ~~~~~~
help: consider importing this type alias through its public re-export
    |
20  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:269:35
    |
269 |             identifier_field_ids: HashSet::new(), // Assuming no identifier fields
    |                                   ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:270:26
    |
270 |             alias_to_id: BiHashMap::new(),
    |                          ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
270 |             alias_to_id: HashMap::new(),
    |                          ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:281:13
    |
281 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0411]: cannot find struct, variant or union type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:282:13
    |
281 | fn new() -> Self {
    |    --- `Self` not allowed in a function
282 |             Self {
    |             ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: use of undeclared type `SchemaId`
   --> crates/iceberg/src/arrow/schema.rs:295:29
    |
295 |             let schema_id = SchemaId::new(0); // Assuming default schema ID
    |                             ^^^^^^^^ use of undeclared type `SchemaId`
    |
help: a struct with a similar name exists
    |
295 |             let schema_id = Schema::new(0); // Assuming default schema ID
    |                             ~~~~~~
help: consider importing this type alias through its public re-export
    |
20  + use crate::spec::SchemaId;
    |

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:296:40
    |
296 |             let identifier_field_ids = HashSet::new(); // Assuming no identifier fields
    |                                        ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:303:30
    |
303 |                 alias_to_id: BiHashMap::new(),
    |                              ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
303 |                 alias_to_id: HashMap::new(),
    |                              ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0046]: not all trait items implemented, missing: `T`, `struct`, `list`, `map`, `primitive`
   --> crates/iceberg/src/arrow/schema.rs:222:5
    |
42  |     type T;
    |     ------ `T` from trait
...
91  |     fn r#struct(&mut self, fields: &Fields, results: Vec<Self::T>) -> Result<Self::T>;
    |     ---------------------------------------------------------------------------------- `r#struct` from trait
...
94  |     fn list(&mut self, list: &DataType, value: Self::T) -> Result<Self::T>;
    |     ----------------------------------------------------------------------- `list` from trait
...
97  |     fn map(&mut self, map: &DataType, key_value: Self::T, value: Self::T) -> Result<Self::T>;
    |     ----------------------------------------------------------------------------------------- `map` from trait
...
100 |     fn primitive(&mut self, p: &DataType) -> Result<Self::T>;
    |     --------------------------------------------------------- `primitive` from trait
...
222 |     impl ArrowSchemaVisitor for ConvertToIceberg {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `T`, `struct`, `list`, `map`, `primitive` in implementation

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:293:57
    |
293 | fn schema(&mut self, schema: &ArrowSchema, results: Vec<Self::U>) -> Result<Self::U> {
    |                                                         ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:293:77
    |
293 | fn schema(&mut self, schema: &ArrowSchema, results: Vec<Self::U>) -> Result<Self::U> {
    |                                                                             ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0046, E0411, E0433.
For more information about an error, try `rustc --explain E0046`.
error: could not compile `iceberg` (lib) due to 17 previous errors

