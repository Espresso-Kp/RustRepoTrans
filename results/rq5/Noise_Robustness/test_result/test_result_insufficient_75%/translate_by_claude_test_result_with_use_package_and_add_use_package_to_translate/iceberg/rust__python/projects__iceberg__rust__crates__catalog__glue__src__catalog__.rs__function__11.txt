Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
warning: unused import: `get_default_table_location`
  --> crates/catalog/glue/src/catalog.rs:34:24
   |
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:355:24
    |
355 |             ErrorKind::AlreadyExists,
    |                        ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:356:48
    |
356 |             format!("Table {} already exists", identifier),
    |                                                ^^^^^^^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:361:29
    |
361 |     let metadata_location = create_metadata_location(&self.config.warehouse, namespace, &table_name)?;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^                         ---------  ----------- unexpected argument of type `&std::string::String`
    |                                                                              |
    |                                                                              expected `i32`, found `&NamespaceIdent`
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:233:15
    |
233 | pub(crate) fn create_metadata_location(location: impl AsRef<str>, version: i32) -> Result<String> {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^ -------------------------  ------------
help: remove the extra argument
    |
361 -     let metadata_location = create_metadata_location(&self.config.warehouse, namespace, &table_name)?;
361 +     let metadata_location = create_metadata_location(&self.config.warehouse, /* i32 */)?;
    |

error[E0599]: no function or associated item named `build` found for struct `FileIO` in the current scope
   --> crates/catalog/glue/src/catalog.rs:363:27
    |
363 |     let file_io = FileIO::build(Default::default())?;
    |                           ^^^^^ function or associated item not found in `FileIO`

error[E0599]: no function or associated item named `from_input_file` found for struct `TableMetadataBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:365:42
    |
365 |     let metadata = TableMetadataBuilder::from_input_file(&input_file).build()?;
    |                                          ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadataBuilder`
    |
note: if you're trying to build a new `TableMetadataBuilder` consider using one of the following associated functions:
      TableMetadataBuilder::new
      TableMetadataBuilder::from_table_creation
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/spec/table_metadata.rs:286:5
    |
286 |     pub fn new(origin: TableMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
291 |     pub fn from_table_creation(table_creation: TableCreation) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:385:28
    |
385 |         .metadata_location(Some(metadata_location))
    |          ----------------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `iceberg::table::TableBuilder::<(__file_io, (), __metadata, __identifier, __readonly)>::metadata_location`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/table.rs:27:10
    |
27  | #[derive(TypedBuilder, Debug, Clone)]
    |          ^^^^^^^^^^^^ required by this bound in `TableBuilder::<(__file_io, (), __metadata, __identifier, __readonly)>::metadata_location`
...
31  |     metadata_location: Option<String>,
    |     ----------------- required by a bound in this associated function
    = note: this error originates in the derive macro `TypedBuilder` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:382:17
    |
382 |       let table = Table::builder()
    |  _________________^
383 | |         .identifier(identifier)
384 | |         .metadata(metadata)
385 | |         .metadata_location(Some(metadata_location))
386 | |         .file_io(file_io)
387 | |         .build()?;
    | |_________________^ the `?` operator cannot be applied to type `iceberg::table::Table`
    |
    = help: the trait `Try` is not implemented for `iceberg::table::Table`

Some errors have detailed explanations: E0061, E0277, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `get_default_table_location`
  --> crates/catalog/glue/src/catalog.rs:34:24
   |
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:355:24
    |
355 |             ErrorKind::AlreadyExists,
    |                        ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:356:48
    |
356 |             format!("Table {} already exists", identifier),
    |                                                ^^^^^^^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:361:29
    |
361 |     let metadata_location = create_metadata_location(&self.config.warehouse, namespace, &table_name)?;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^                         ---------  ----------- unexpected argument of type `&std::string::String`
    |                                                                              |
    |                                                                              expected `i32`, found `&NamespaceIdent`
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:233:15
    |
233 | pub(crate) fn create_metadata_location(location: impl AsRef<str>, version: i32) -> Result<String> {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^ -------------------------  ------------
help: remove the extra argument
    |
361 -     let metadata_location = create_metadata_location(&self.config.warehouse, namespace, &table_name)?;
361 +     let metadata_location = create_metadata_location(&self.config.warehouse, /* i32 */)?;
    |

error[E0599]: no function or associated item named `build` found for struct `FileIO` in the current scope
   --> crates/catalog/glue/src/catalog.rs:363:27
    |
363 |     let file_io = FileIO::build(Default::default())?;
    |                           ^^^^^ function or associated item not found in `FileIO`

error[E0599]: no function or associated item named `from_input_file` found for struct `TableMetadataBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:365:42
    |
365 |     let metadata = TableMetadataBuilder::from_input_file(&input_file).build()?;
    |                                          ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadataBuilder`
    |
note: if you're trying to build a new `TableMetadataBuilder` consider using one of the following associated functions:
      TableMetadataBuilder::new
      TableMetadataBuilder::from_table_creation
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/spec/table_metadata.rs:286:5
    |
286 |     pub fn new(origin: TableMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
291 |     pub fn from_table_creation(table_creation: TableCreation) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `std::string::String: From<std::option::Option<std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:385:28
    |
385 |         .metadata_location(Some(metadata_location))
    |          ----------------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<std::option::Option<std::string::String>>` is not implemented for `std::string::String`, which is required by `std::option::Option<std::string::String>: Into<std::string::String>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `iceberg::table::TableBuilder::<(__file_io, (), __metadata, __identifier, __readonly)>::metadata_location`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/table.rs:27:10
    |
27  | #[derive(TypedBuilder, Debug, Clone)]
    |          ^^^^^^^^^^^^ required by this bound in `TableBuilder::<(__file_io, (), __metadata, __identifier, __readonly)>::metadata_location`
...
31  |     metadata_location: Option<String>,
    |     ----------------- required by a bound in this associated function
    = note: this error originates in the derive macro `TypedBuilder` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:382:17
    |
382 |       let table = Table::builder()
    |  _________________^
383 | |         .identifier(identifier)
384 | |         .metadata(metadata)
385 | |         .metadata_location(Some(metadata_location))
386 | |         .file_io(file_io)
387 | |         .build()?;
    | |_________________^ the `?` operator cannot be applied to type `iceberg::table::Table`
    |
    = help: the trait `Try` is not implemented for `iceberg::table::Table`

Some errors have detailed explanations: E0061, E0277, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

