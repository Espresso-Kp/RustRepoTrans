Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: could not find `ContactModified` in `contact_tools`
   --> src/contact.rs:646:39
    |
646 |     if sth_modified == contact_tools::ContactModified::Created {
    |                                       ^^^^^^^^^^^^^^^ could not find `ContactModified` in `contact_tools`

error[E0425]: cannot find function `add_or_lookup_contact` in crate `contact_tools`
   --> src/contact.rs:630:57
    |
630 |             let (contact_id, modified) = contact_tools::add_or_lookup_contact(
    |                                                         ^^^^^^^^^^^^^^^^^^^^^ not found in `contact_tools`

error[E0599]: no method named `write` found for struct `Sql` in the current scope
   --> src/contact.rs:628:33
    |
628 |         let mut sql = inner.sql.write().await;
    |                                 ^^^^^
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `write` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `write`, perhaps you need to implement one of them:
            candidate #1: `std::io::Write`
            candidate #2: `std::hash::Hasher`
            candidate #3: `tokio::io::AsyncWriteExt`
            candidate #4: `futures::AsyncWriteExt`
            candidate #5: `futures_lite::AsyncWriteExt`
            candidate #6: `der::writer::Writer`
            candidate #7: `embedded_io::blocking::Write`
            candidate #8: `quinn_proto::coding::BufMutExt`
            candidate #9: `der::writer::Writer`
            candidate #10: `itoa::private::Sealed`
            candidate #11: `ssh_encoding::writer::Writer`
            candidate #12: `dtoa::private::Sealed`
            candidate #13: `ssh_encoding::writer::Writer`
            candidate #14: `futures_lite::io::AsyncWriteExt`
            candidate #15: `iroh_quinn_proto::coding::BufMutExt`
            candidate #16: `attohttpc::request::body::Body`
            candidate #17: `CustomWrite`
help: one of the expressions' fields has a method of the same name
    |
628 |         let mut sql = inner.sql.config_cache.write().await;
    |                                 +++++++++++++
help: there is a method with a similar name
    |
628 |         let mut sql = inner.sql.call_write().await;
    |                                 ~~~~~~~~~~

error[E0599]: no method named `read` found for struct `Sql` in the current scope
   --> src/contact.rs:642:29
    |
642 |         let sql = inner.sql.read().await;
    |                             ^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `read` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `read`, perhaps you need to implement one of them:
            candidate #1: `std::io::Read`
            candidate #2: `tokio::io::AsyncReadExt`
            candidate #3: `futures::AsyncReadExt`
            candidate #4: `futures_lite::AsyncReadExt`
            candidate #5: `XofReader`
            candidate #6: `iter_read::IterReadItem`
            candidate #7: `embedded_io::blocking::Read`
            candidate #8: `rustls::msgs::codec::Codec`
            candidate #9: `digest::xof::XofReader`
            candidate #10: `ssh_encoding::reader::Reader`
            candidate #11: `BinDecodable`
            candidate #12: `rustls::msgs::codec::Codec`
            candidate #13: `ssh_encoding::reader::Reader`
            candidate #14: `futures_lite::io::AsyncReadExt`
            candidate #15: `CustomRead`
            candidate #16: `object::ReadRef`
help: one of the expressions' fields has a method of the same name
    |
642 |         let sql = inner.sql.config_cache.read().await;
    |                             +++++++++++++

error[E0599]: no method named `block_contact` found for reference `&context::Context` in the current scope
   --> src/contact.rs:651:17
    |
651 |         context.block_contact(contact_id, false).await?;
    |                 ^^^^^^^^^^^^^ method not found in `&Context`

error[E0599]: no method named `write` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:628:33
    |
628 |         let mut sql = inner.sql.write().await;
    |                                 ^^^^^
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `write` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `write`, perhaps you need to implement one of them:
            candidate #1: `std::io::Write`
            candidate #2: `std::hash::Hasher`
            candidate #3: `tokio::io::AsyncWriteExt`
            candidate #4: `futures::AsyncWriteExt`
            candidate #5: `futures_lite::AsyncWriteExt`
            candidate #6: `der::writer::Writer`
            candidate #7: `embedded_io::blocking::Write`
            candidate #8: `quinn_proto::coding::BufMutExt`
            candidate #9: `der::writer::Writer`
            candidate #10: `itoa::private::Sealed`
            candidate #11: `ssh_encoding::writer::Writer`
            candidate #12: `dtoa::private::Sealed`
            candidate #13: `ssh_encoding::writer::Writer`
            candidate #14: `futures_lite::io::AsyncWriteExt`
            candidate #15: `iroh_quinn_proto::coding::BufMutExt`
            candidate #16: `attohttpc::request::body::Body`
            candidate #17: `CustomWrite`
help: one of the expressions' fields has a method of the same name
    |
628 |         let mut sql = inner.sql.config_cache.write().await;
    |                                 +++++++++++++
help: there is a method with a similar name
    |
628 |         let mut sql = inner.sql.call_write().await;
    |                                 ~~~~~~~~~~

error[E0599]: no method named `read` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:642:29
    |
642 |         let sql = inner.sql.read().await;
    |                             ^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `read` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `read`, perhaps you need to implement one of them:
            candidate #1: `std::io::Read`
            candidate #2: `tokio::io::AsyncReadExt`
            candidate #3: `futures::AsyncReadExt`
            candidate #4: `futures_lite::AsyncReadExt`
            candidate #5: `XofReader`
            candidate #6: `iter_read::IterReadItem`
            candidate #7: `embedded_io::blocking::Read`
            candidate #8: `rustls::msgs::codec::Codec`
            candidate #9: `digest::xof::XofReader`
            candidate #10: `ssh_encoding::reader::Reader`
            candidate #11: `BinDecodable`
            candidate #12: `object::read::read_ref::ReadRef`
            candidate #13: `rustls::msgs::codec::Codec`
            candidate #14: `ssh_encoding::reader::Reader`
            candidate #15: `futures_lite::io::AsyncReadExt`
            candidate #16: `CustomRead`
help: one of the expressions' fields has a method of the same name
    |
642 |         let sql = inner.sql.config_cache.read().await;
    |                             +++++++++++++

Some errors have detailed explanations: E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `deltachat` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 5 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

