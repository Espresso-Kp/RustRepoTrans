Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared type `Body`
   --> crates/catalog/rest/src/catalog.rs:494:14
    |
494 |        .body(Body::empty())
    |              ^^^^ use of undeclared type `Body`
    |
help: consider importing this struct
    |
20  + use reqwest::Body;
    |

error[E0599]: no method named `table_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:20
    |
490 |     let url = self.table_endpoint(table);
    |                    ^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
490 |     let url = self.config.table_endpoint(table);
    |                    +++++++

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:28
    |
491 |     let request = Request::builder()
    |                            ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `do_execute` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:21
    |
497 |     let resp = self.do_execute(request, |resp| {
    |                -----^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
497 |     let resp = self.client.do_execute(request, |resp| {
    |                     +++++++

error[E0277]: the trait bound `std::string::String: From<ErrorResponse>` is not satisfied
   --> crates/catalog/rest/src/catalog.rs:509:93
    |
509 |         Err(Error::new(ErrorKind::Unexpected, "Failed to drop table").with_context("error", error_model))
    |                                                                       ------------          ^^^^^^^^^^^ the trait `From<ErrorResponse>` is not implemented for `std::string::String`, which is required by `ErrorResponse: Into<std::string::String>`
    |                                                                       |
    |                                                                       required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<opendal::types::scheme::Scheme>>
              <std::string::String as From<opendal::raw::operation::Operation>>
            and 3 others
    = note: required for `ErrorResponse` to implement `Into<std::string::String>`
note: required by a bound in `iceberg::Error::with_context`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:211:66
    |
211 |     pub fn with_context(mut self, key: &'static str, value: impl Into<String>) -> Self {
    |                                                                  ^^^^^^^^^^^^ required by this bound in `Error::with_context`

Some errors have detailed explanations: E0277, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0433]: failed to resolve: use of undeclared type `Body`
   --> crates/catalog/rest/src/catalog.rs:494:14
    |
494 |        .body(Body::empty())
    |              ^^^^ use of undeclared type `Body`
    |
help: consider importing this struct
    |
20  + use reqwest::Body;
    |

error[E0599]: no method named `table_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:20
    |
490 |     let url = self.table_endpoint(table);
    |                    ^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
490 |     let url = self.config.table_endpoint(table);
    |                    +++++++

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:28
    |
491 |     let request = Request::builder()
    |                            ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `do_execute` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:21
    |
497 |     let resp = self.do_execute(request, |resp| {
    |                -----^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
497 |     let resp = self.client.do_execute(request, |resp| {
    |                     +++++++

error[E0277]: the trait bound `std::string::String: From<ErrorResponse>` is not satisfied
   --> crates/catalog/rest/src/catalog.rs:509:93
    |
509 |         Err(Error::new(ErrorKind::Unexpected, "Failed to drop table").with_context("error", error_model))
    |                                                                       ------------          ^^^^^^^^^^^ the trait `From<ErrorResponse>` is not implemented for `std::string::String`, which is required by `ErrorResponse: Into<std::string::String>`
    |                                                                       |
    |                                                                       required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<opendal::types::scheme::Scheme>>
              <std::string::String as From<opendal::raw::operation::Operation>>
            and 3 others
    = note: required for `ErrorResponse` to implement `Into<std::string::String>`
note: required by a bound in `iceberg::Error::with_context`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:211:66
    |
211 |     pub fn with_context(mut self, key: &'static str, value: impl Into<String>) -> Self {
    |                                                                  ^^^^^^^^^^^^ required by this bound in `Error::with_context`

Some errors have detailed explanations: E0277, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 5 previous errors

