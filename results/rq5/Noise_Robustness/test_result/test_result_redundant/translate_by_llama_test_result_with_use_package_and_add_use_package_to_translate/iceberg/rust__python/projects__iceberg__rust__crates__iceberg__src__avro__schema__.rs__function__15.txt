Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:471:44
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:485:44
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                  ^^^^ expected identifier, found keyword

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `field`
   --> crates/iceberg/src/avro/schema.rs:485:162
    |
485 | ...field.doc(), default(), field.order(), required field.doc())
    |                                                   -^^^^^ expected one of 8 possible tokens
    |                                                   |
    |                                                   help: missing `,`

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:492:44
    |
492 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `field`
   --> crates/iceberg/src/avro/schema.rs:492:129
    |
492 | ...order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                   -^^^^^ expected one of 8 possible tokens
    |                                                   |
    |                                                   help: missing `,`

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:505:44
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `field`
   --> crates/iceberg/src/avro/schema.rs:505:129
    |
505 | ...order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                   -^^^^^ expected one of 8 possible tokens
    |                                                   |
    |                                                   help: missing `,`

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:512:44
    |
512 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default.field.order(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error[E0425]: cannot find value `required` in this scope
   --> crates/iceberg/src/avro/schema.rs:485:153
    |
485 | ...required(), field.doc(), default(), field.order(), required field.doc())
    |                                                       ^^^^^^^^ not found in this scope

error[E0425]: cannot find value `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:492:121
    |
492 | ...t(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0425]: cannot find value `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:505:121
    |
505 | ...t(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0422]: cannot find struct, variant or union type `Fixed` in this scope
   --> crates/iceberg/src/avro/schema.rs:507:33
    |
507 |             Ok(Some(Type::Fixed(Fixed { name: name, fields })))
    |                                 ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
19  + use apache_avro::Schema::Fixed;
    |
19  + use apache_avro::schema::SchemaKind::Fixed;
    |
19  + use apache_avro::types::Value::Fixed;
    |
19  + use apache_avro::types::ValueKind::Fixed;
    |
      and 4 other candidates

error[E0425]: cannot find value `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:512:121
    |
512 | ...t(), field.order(), field.required(), field.doc(), default.field.order(), field.required(), field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0422]: cannot find struct, variant or union type `Decimal` in this scope
   --> crates/iceberg/src/avro/schema.rs:514:35
    |
514 |             Ok(Some(Type::Decimal(Decimal { name: name, fields })))
    |                                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
19  + use apache_avro::Decimal;
    |
19  + use apache_avro::Schema::Decimal;
    |
19  + use apache_avro::schema::SchemaKind::Decimal;
    |
19  + use apache_avro::types::Value::Decimal;
    |
      and 7 other candidates

error[E0422]: cannot find struct, variant or union type `Fixed` in this scope
   --> crates/iceberg/src/avro/schema.rs:507:33
    |
507 |             Ok(Some(Type::Fixed(Fixed { name: name, fields })))
    |                                 ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
19  + use apache_avro::Schema::Fixed;
    |
19  + use apache_avro::schema::SchemaKind::Fixed;
    |
19  + use apache_avro::types::Value::Fixed;
    |
19  + use apache_avro::types::ValueKind::Fixed;
    |
      and 2 other candidates

error[E0422]: cannot find struct, variant or union type `Decimal` in this scope
   --> crates/iceberg/src/avro/schema.rs:514:35
    |
514 |             Ok(Some(Type::Decimal(Decimal { name: name, fields })))
    |                                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
19  + use apache_avro::Decimal;
    |
19  + use apache_avro::Schema::Decimal;
    |
19  + use apache_avro::schema::SchemaKind::Decimal;
    |
19  + use apache_avro::types::Value::Decimal;
    |
      and 5 other candidates

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:482:27
    |
482 |         AvroSchema::Fixed(ref name, ref fields) => {
    |                           ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:111:11
    |
111 |     Fixed(FixedSchema),
    |           ----------- tuple variant has 1 field

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:489:29
    |
489 |         AvroSchema::Decimal(ref name, ref fields) => {
    |                             ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:114:13
    |
114 |     Decimal(DecimalSchema),
    |             ------------- tuple variant has 1 field

error[E0599]: no variant or associated item named `Time` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:498:21
    |
498 |         AvroSchema::Time => Ok(Some(Type::Time)),
    |                     ^^^^ variant or associated item not found in `Schema`

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:499:21
    |
499 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                     ^^^^^^^^^ variant or associated item not found in `Schema`

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:500:21
    |
500 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                     ^^^^^^^^^ variant or associated item not found in `Schema`

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:502:27
    |
502 |         AvroSchema::Fixed(ref name, ref fields) => {
    |                           ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:111:11
    |
111 |     Fixed(FixedSchema),
    |           ----------- tuple variant has 1 field

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:509:29
    |
509 |         AvroSchema::Decimal(ref name, ref fields) => {
    |                             ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:114:13
    |
114 |     Decimal(DecimalSchema),
    |             ------------- tuple variant has 1 field

error[E0164]: expected tuple struct or tuple variant, found struct variant `AvroSchema::Ref`
   --> crates/iceberg/src/avro/schema.rs:518:9
    |
518 |         AvroSchema::Ref(ref name) => Ok(Some(Type::Ref { name: name })),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct or tuple variant

error[E0560]: struct `datatypes::ListType` has no field named `inner`
   --> crates/iceberg/src/avro/schema.rs:462:43
    |
462 |             Ok(Some(Type::List(ListType { inner: inner_type })))
    |                                           ^^^^^ `datatypes::ListType` does not have this field
    |
    = note: available fields are: `element_field`

error[E0560]: struct `datatypes::MapType` has no field named `inner`
   --> crates/iceberg/src/avro/schema.rs:466:41
    |
466 |             Ok(Some(Type::Map(MapType { inner: inner_type })))
    |                                         ^^^^^ `datatypes::MapType` does not have this field
    |
    = note: available fields are: `key_field`, `value_field`

error[E0599]: no method named `iter` found for reference `&RecordSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:33
    |
469 |             let fields = fields.iter().map(|field| {
    |                                 ^^^^ method not found in `&RecordSchema`
    |
help: some of the expressions' fields have a method of the same name
    |
469 |             let fields = fields.aliases.iter().map(|field| {
    |                                 ++++++++
469 |             let fields = fields.attributes.iter().map(|field| {
    |                                 +++++++++++
469 |             let fields = fields.doc.iter().map(|field| {
    |                                 ++++
469 |             let fields = fields.fields.iter().map(|field| {
    |                                 +++++++
      and 2 other candidates

error[E0615]: attempted to take value of method `name` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:471:24
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |              ^^^^ method, not a field
    |
help: use parentheses to call the method
    |
471 |                 (field.name().clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                            ++

error[E0609]: no field `r#type` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:471:44
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                  ^^^^ unknown field

error[E0609]: no field `default` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:471:64
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                                      ^^^^^^^ unknown field

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:87
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                                                             ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:102
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                                                                            ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:120
    |
471 | ...t.clone(), field.order(), field.required(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no method named `default` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:133
    |
471 | ...red(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                        ------^^^^^^^--
    |                        |     |
    |                        |     this is an associated function, not a method
    |                        help: use associated function syntax instead: `apache_avro::Schema::default()`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in the trait `Default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/default.rs:134:5

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:150
    |
471 | ....required(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                                                     ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:165
    |
471 | ...ld.doc(), field.default(), field.order(), field.required(), field.doc())
    |                                                    ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:183
    |
471 | ...default(), field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error: cannot construct `datatypes::StructType` with struct literal syntax due to private fields
   --> crates/iceberg/src/avro/schema.rs:473:34
    |
473 |             Ok(Some(Type::Struct(StructType { fields })))
    |                                  ^^^^^^^^^^   ------ private field
    |
    = note: ...and other private fields `id_lookup` and `name_lookup` that were not provided
help: you might have meant to use the `new` associated function
    |
473 |             Ok(Some(Type::Struct(StructType::new(_))))
    |                                            ~~~~~~~~
help: consider using the `Default` trait
    |
473 |             Ok(Some(Type::Struct(<StructType as std::default::Default>::default())))
    |                                  +           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `iter` found for reference `&UnionSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:476:37
    |
476 |             let variants = variants.iter().map(|variant| {
    |                                     ^^^^ method not found in `&UnionSchema`

error[E0599]: no variant or associated item named `Union` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:480:27
    |
480 |             Ok(Some(Type::Union(UnionSchema { variants })))
    |                           ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Union` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `UnionSchema` has no field named `variants`
   --> crates/iceberg/src/avro/schema.rs:480:47
    |
480 |             Ok(Some(Type::Union(UnionSchema { variants })))
    |                                               ^^^^^^^^ `UnionSchema` does not have this field
    |
    = note: all struct fields are already assigned

error[E0615]: attempted to take value of method `name` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:485:24
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |              ^^^^ method, not a field
    |
help: use parentheses to call the method
    |
485 |                 (field.name().clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.order(), required field.doc())
    |                            ++

error[E0609]: no field `r#type` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:485:44
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                  ^^^^ unknown field

error[E0609]: no field `default` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:485:64
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                                      ^^^^^^^ unknown field

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:87
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                                                             ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:102
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                                                                            ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:120
    |
485 | ...t.clone(), field.order(), field.required(), field.doc(), default(), field.order(), required field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0425]: cannot find function `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:485:127
    |
485 | ...e(), field.order(), field.required(), field.doc(), default(), field.order(), required field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:144
    |
485 | ... field.required(), field.doc(), default(), field.order(), required field.doc())
    |                                                     ^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:168
    |
485 | ...d.doc(), default(), field.order(), required field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:487:27
    |
487 |             Ok(Some(Type::Fixed(FixedSchema { name: name, fields })))
    |                           ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `FixedSchema` has no field named `fields`
   --> crates/iceberg/src/avro/schema.rs:487:59
    |
487 |             Ok(Some(Type::Fixed(FixedSchema { name: name, fields })))
    |                                                           ^^^^^^ `FixedSchema` does not have this field
    |
    = note: available fields are: `aliases`, `doc`, `size`, `attributes`

error[E0061]: this method takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:491:39
    |
491 |                 let field_type = self.primitive()?;
    |                                       ^^^^^^^^^-- an argument of type `&apache_avro::Schema` is missing
    |
note: method defined here
   --> crates/iceberg/src/avro/schema.rs:293:8
    |
293 |     fn primitive(&mut self, schema: &AvroSchema) -> Result<Self::T>;
    |        ^^^^^^^^^
help: provide the argument
    |
491 |                 let field_type = self.primitive(/* &apache_avro::Schema */)?;
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:494:27
    |
494 |             Ok(Some(Type::Decimal(DecimalSchema { name: name, fields })))
    |                           ^^^^^^^
    |                           |
    |                           variant or associated item not found in `Type`
    |                           help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `DecimalSchema` has no field named `name`
   --> crates/iceberg/src/avro/schema.rs:494:51
    |
494 |             Ok(Some(Type::Decimal(DecimalSchema { name: name, fields })))
    |                                                   ^^^^ `DecimalSchema` does not have this field
    |
    = note: available fields are: `precision`, `scale`, `inner`

error[E0560]: struct `DecimalSchema` has no field named `fields`
   --> crates/iceberg/src/avro/schema.rs:494:63
    |
494 |             Ok(Some(Type::Decimal(DecimalSchema { name: name, fields })))
    |                                                               ^^^^^^ `DecimalSchema` does not have this field
    |
    = note: available fields are: `precision`, `scale`, `inner`

error[E0599]: no variant or associated item named `Uuid` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:496:43
    |
496 |         AvroSchema::Uuid => Ok(Some(Type::Uuid)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Uuid` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Date` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:497:43
    |
497 |         AvroSchema::Date => Ok(Some(Type::Date)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Date` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Time` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:498:43
    |
498 |         AvroSchema::Time => Ok(Some(Type::Time)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Time` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:499:48
    |
499 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                                                ^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Timestamp` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:500:48
    |
500 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                                                ^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Timestamp` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Binary` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:501:44
    |
501 |         AvroSchema::Bytes => Ok(Some(Type::Binary)),
    |                                            ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Binary` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0615]: attempted to take value of method `name` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:505:24
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |              ^^^^ method, not a field
    |
help: use parentheses to call the method
    |
505 |                 (field.name().clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                            ++

error[E0609]: no field `r#type` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:505:44
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                  ^^^^ unknown field

error[E0599]: no method named `default` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:64
    |
505 | ...field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                        ------^^^^^^^--
    |                        |     |
    |                        |     this is an associated function, not a method
    |                        help: use associated function syntax instead: `apache_avro::Schema::default()`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in the trait `Default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/default.rs:134:5

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:81
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                                                       ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:96
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                                                                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:114
    |
505 | ...default(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:135
    |
505 | ...(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                     ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:150
    |
505 | ...ed(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                    ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:168
    |
505 | ...), default field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:507:27
    |
507 |             Ok(Some(Type::Fixed(Fixed { name: name, fields })))
    |                           ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this method takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:511:39
    |
511 |                 let field_type = self.primitive()?;
    |                                       ^^^^^^^^^-- an argument of type `&apache_avro::Schema` is missing
    |
note: method defined here
   --> crates/iceberg/src/avro/schema.rs:293:8
    |
293 |     fn primitive(&mut self, schema: &AvroSchema) -> Result<Self::T>;
    |        ^^^^^^^^^
help: provide the argument
    |
511 |                 let field_type = self.primitive(/* &apache_avro::Schema */)?;
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:514:27
    |
514 |             Ok(Some(Type::Decimal(Decimal { name: name, fields })))
    |                           ^^^^^^^
    |                           |
    |                           variant or associated item not found in `Type`
    |                           help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Uuid` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:516:43
    |
516 |         AvroSchema::Uuid => Ok(Some(Type::Uuid)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Uuid` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Duration` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:517:47
    |
517 |         AvroSchema::Duration => Ok(Some(Type::Duration)),
    |                                               ^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Duration` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant named `Ref` found for enum `datatypes::Type`
   --> crates/iceberg/src/avro/schema.rs:518:52
    |
518 |         AvroSchema::Ref(ref name) => Ok(Some(Type::Ref { name: name })),
    |                                                    ^^^ variant not found in `datatypes::Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant `Ref` not found here

Some errors have detailed explanations: E0023, E0061, E0164, E0422, E0425, E0560, E0599, E0609, E0615.
For more information about an error, try `rustc --explain E0023`.
error: could not compile `iceberg` (lib) due to 75 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 75 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:471:44
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:485:44
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                  ^^^^ expected identifier, found keyword

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `field`
   --> crates/iceberg/src/avro/schema.rs:485:162
    |
485 | ...field.doc(), default(), field.order(), required field.doc())
    |                                                   -^^^^^ expected one of 8 possible tokens
    |                                                   |
    |                                                   help: missing `,`

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:492:44
    |
492 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `field`
   --> crates/iceberg/src/avro/schema.rs:492:129
    |
492 | ...order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                   -^^^^^ expected one of 8 possible tokens
    |                                                   |
    |                                                   help: missing `,`

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:505:44
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `field`
   --> crates/iceberg/src/avro/schema.rs:505:129
    |
505 | ...order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                   -^^^^^ expected one of 8 possible tokens
    |                                                   |
    |                                                   help: missing `,`

error: expected identifier, found keyword `type`
   --> crates/iceberg/src/avro/schema.rs:512:44
    |
512 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default.field.order(), fiel...
    |                                  ^^^^ expected identifier, found keyword

error[E0425]: cannot find value `required` in this scope
   --> crates/iceberg/src/avro/schema.rs:485:153
    |
485 | ...required(), field.doc(), default(), field.order(), required field.doc())
    |                                                       ^^^^^^^^ not found in this scope

error[E0425]: cannot find value `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:492:121
    |
492 | ...t(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0425]: cannot find value `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:505:121
    |
505 | ...t(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0422]: cannot find struct, variant or union type `Fixed` in this scope
   --> crates/iceberg/src/avro/schema.rs:507:33
    |
507 |             Ok(Some(Type::Fixed(Fixed { name: name, fields })))
    |                                 ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
19  + use apache_avro::Schema::Fixed;
    |
19  + use apache_avro::schema::SchemaKind::Fixed;
    |
19  + use apache_avro::types::Value::Fixed;
    |
19  + use apache_avro::types::ValueKind::Fixed;
    |
      and 4 other candidates

error[E0425]: cannot find value `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:512:121
    |
512 | ...t(), field.order(), field.required(), field.doc(), default.field.order(), field.required(), field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0422]: cannot find struct, variant or union type `Decimal` in this scope
   --> crates/iceberg/src/avro/schema.rs:514:35
    |
514 |             Ok(Some(Type::Decimal(Decimal { name: name, fields })))
    |                                   ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
19  + use apache_avro::Decimal;
    |
19  + use apache_avro::Schema::Decimal;
    |
19  + use apache_avro::schema::SchemaKind::Decimal;
    |
19  + use apache_avro::types::Value::Decimal;
    |
      and 7 other candidates

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:482:27
    |
482 |         AvroSchema::Fixed(ref name, ref fields) => {
    |                           ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:111:11
    |
111 |     Fixed(FixedSchema),
    |           ----------- tuple variant has 1 field

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:489:29
    |
489 |         AvroSchema::Decimal(ref name, ref fields) => {
    |                             ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:114:13
    |
114 |     Decimal(DecimalSchema),
    |             ------------- tuple variant has 1 field

error[E0599]: no variant or associated item named `Time` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:498:21
    |
498 |         AvroSchema::Time => Ok(Some(Type::Time)),
    |                     ^^^^ variant or associated item not found in `Schema`

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:499:21
    |
499 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                     ^^^^^^^^^ variant or associated item not found in `Schema`

error[E0599]: no variant or associated item named `Timestamp` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:500:21
    |
500 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                     ^^^^^^^^^ variant or associated item not found in `Schema`

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:502:27
    |
502 |         AvroSchema::Fixed(ref name, ref fields) => {
    |                           ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:111:11
    |
111 |     Fixed(FixedSchema),
    |           ----------- tuple variant has 1 field

error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
   --> crates/iceberg/src/avro/schema.rs:509:29
    |
509 |         AvroSchema::Decimal(ref name, ref fields) => {
    |                             ^^^^^^^^  ^^^^^^^^^^ expected 1 field, found 2
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:114:13
    |
114 |     Decimal(DecimalSchema),
    |             ------------- tuple variant has 1 field

error[E0164]: expected tuple struct or tuple variant, found struct variant `AvroSchema::Ref`
   --> crates/iceberg/src/avro/schema.rs:518:9
    |
518 |         AvroSchema::Ref(ref name) => Ok(Some(Type::Ref { name: name })),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct or tuple variant

error[E0560]: struct `datatypes::ListType` has no field named `inner`
   --> crates/iceberg/src/avro/schema.rs:462:43
    |
462 |             Ok(Some(Type::List(ListType { inner: inner_type })))
    |                                           ^^^^^ `datatypes::ListType` does not have this field
    |
    = note: available fields are: `element_field`

error[E0560]: struct `datatypes::MapType` has no field named `inner`
   --> crates/iceberg/src/avro/schema.rs:466:41
    |
466 |             Ok(Some(Type::Map(MapType { inner: inner_type })))
    |                                         ^^^^^ `datatypes::MapType` does not have this field
    |
    = note: available fields are: `key_field`, `value_field`

error[E0599]: no method named `iter` found for reference `&RecordSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:33
    |
469 |             let fields = fields.iter().map(|field| {
    |                                 ^^^^ method not found in `&RecordSchema`
    |
help: some of the expressions' fields have a method of the same name
    |
469 |             let fields = fields.aliases.iter().map(|field| {
    |                                 ++++++++
469 |             let fields = fields.attributes.iter().map(|field| {
    |                                 +++++++++++
469 |             let fields = fields.doc.iter().map(|field| {
    |                                 ++++
469 |             let fields = fields.fields.iter().map(|field| {
    |                                 +++++++
      and 2 other candidates

error[E0615]: attempted to take value of method `name` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:471:24
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |              ^^^^ method, not a field
    |
help: use parentheses to call the method
    |
471 |                 (field.name().clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                            ++

error[E0609]: no field `r#type` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:471:44
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                  ^^^^ unknown field

error[E0609]: no field `default` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:471:64
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                                      ^^^^^^^ unknown field

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:87
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                                                             ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:102
    |
471 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), field.default(), fiel...
    |                                                                                            ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:120
    |
471 | ...t.clone(), field.order(), field.required(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no method named `default` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:133
    |
471 | ...red(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                        ------^^^^^^^--
    |                        |     |
    |                        |     this is an associated function, not a method
    |                        help: use associated function syntax instead: `apache_avro::Schema::default()`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in the trait `Default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/default.rs:134:5

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:150
    |
471 | ....required(), field.doc(), field.default(), field.order(), field.required(), field.doc())
    |                                                     ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:165
    |
471 | ...ld.doc(), field.default(), field.order(), field.required(), field.doc())
    |                                                    ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:183
    |
471 | ...default(), field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error: cannot construct `datatypes::StructType` with struct literal syntax due to private fields
   --> crates/iceberg/src/avro/schema.rs:473:34
    |
473 |             Ok(Some(Type::Struct(StructType { fields })))
    |                                  ^^^^^^^^^^   ------ private field
    |
    = note: ...and other private fields `id_lookup` and `name_lookup` that were not provided
help: you might have meant to use the `new` associated function
    |
473 |             Ok(Some(Type::Struct(StructType::new(_))))
    |                                            ~~~~~~~~
help: consider using the `Default` trait
    |
473 |             Ok(Some(Type::Struct(<StructType as std::default::Default>::default())))
    |                                  +           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `iter` found for reference `&UnionSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:476:37
    |
476 |             let variants = variants.iter().map(|variant| {
    |                                     ^^^^ method not found in `&UnionSchema`

error[E0599]: no variant or associated item named `Union` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:480:27
    |
480 |             Ok(Some(Type::Union(UnionSchema { variants })))
    |                           ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Union` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `UnionSchema` has no field named `variants`
   --> crates/iceberg/src/avro/schema.rs:480:47
    |
480 |             Ok(Some(Type::Union(UnionSchema { variants })))
    |                                               ^^^^^^^^ `UnionSchema` does not have this field
    |
    = note: all struct fields are already assigned

error[E0615]: attempted to take value of method `name` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:485:24
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |              ^^^^ method, not a field
    |
help: use parentheses to call the method
    |
485 |                 (field.name().clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.order(), required field.doc())
    |                            ++

error[E0609]: no field `r#type` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:485:44
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                  ^^^^ unknown field

error[E0609]: no field `default` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:485:64
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                                      ^^^^^^^ unknown field

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:87
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                                                             ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:102
    |
485 | ...   (field.name.clone(), field.type.clone(), field.default.clone(), field.order(), field.required(), field.doc(), default(), field.orde...
    |                                                                                            ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:120
    |
485 | ...t.clone(), field.order(), field.required(), field.doc(), default(), field.order(), required field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0425]: cannot find function `default` in this scope
   --> crates/iceberg/src/avro/schema.rs:485:127
    |
485 | ...e(), field.order(), field.required(), field.doc(), default(), field.order(), required field.doc())
    |                                                       ^^^^^^^ not found in this scope

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:144
    |
485 | ... field.required(), field.doc(), default(), field.order(), required field.doc())
    |                                                     ^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:168
    |
485 | ...d.doc(), default(), field.order(), required field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:487:27
    |
487 |             Ok(Some(Type::Fixed(FixedSchema { name: name, fields })))
    |                           ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `FixedSchema` has no field named `fields`
   --> crates/iceberg/src/avro/schema.rs:487:59
    |
487 |             Ok(Some(Type::Fixed(FixedSchema { name: name, fields })))
    |                                                           ^^^^^^ `FixedSchema` does not have this field
    |
    = note: available fields are: `aliases`, `doc`, `size`, `attributes`

error[E0061]: this method takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:491:39
    |
491 |                 let field_type = self.primitive()?;
    |                                       ^^^^^^^^^-- an argument of type `&apache_avro::Schema` is missing
    |
note: method defined here
   --> crates/iceberg/src/avro/schema.rs:293:8
    |
293 |     fn primitive(&mut self, schema: &AvroSchema) -> Result<Self::T>;
    |        ^^^^^^^^^
help: provide the argument
    |
491 |                 let field_type = self.primitive(/* &apache_avro::Schema */)?;
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:494:27
    |
494 |             Ok(Some(Type::Decimal(DecimalSchema { name: name, fields })))
    |                           ^^^^^^^
    |                           |
    |                           variant or associated item not found in `Type`
    |                           help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `DecimalSchema` has no field named `name`
   --> crates/iceberg/src/avro/schema.rs:494:51
    |
494 |             Ok(Some(Type::Decimal(DecimalSchema { name: name, fields })))
    |                                                   ^^^^ `DecimalSchema` does not have this field
    |
    = note: available fields are: `precision`, `scale`, `inner`

error[E0560]: struct `DecimalSchema` has no field named `fields`
   --> crates/iceberg/src/avro/schema.rs:494:63
    |
494 |             Ok(Some(Type::Decimal(DecimalSchema { name: name, fields })))
    |                                                               ^^^^^^ `DecimalSchema` does not have this field
    |
    = note: available fields are: `precision`, `scale`, `inner`

error[E0599]: no variant or associated item named `Uuid` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:496:43
    |
496 |         AvroSchema::Uuid => Ok(Some(Type::Uuid)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Uuid` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Date` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:497:43
    |
497 |         AvroSchema::Date => Ok(Some(Type::Date)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Date` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Time` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:498:43
    |
498 |         AvroSchema::Time => Ok(Some(Type::Time)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Time` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:499:48
    |
499 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                                                ^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Timestamp` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Timestamp` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:500:48
    |
500 |         AvroSchema::Timestamp => Ok(Some(Type::Timestamp)),
    |                                                ^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Timestamp` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Binary` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:501:44
    |
501 |         AvroSchema::Bytes => Ok(Some(Type::Binary)),
    |                                            ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Binary` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0615]: attempted to take value of method `name` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:505:24
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |              ^^^^ method, not a field
    |
help: use parentheses to call the method
    |
505 |                 (field.name().clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                            ++

error[E0609]: no field `r#type` on type `&apache_avro::Schema`
   --> crates/iceberg/src/avro/schema.rs:505:44
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                  ^^^^ unknown field

error[E0599]: no method named `default` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:64
    |
505 | ...field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                        ------^^^^^^^--
    |                        |     |
    |                        |     this is an associated function, not a method
    |                        help: use associated function syntax instead: `apache_avro::Schema::default()`
    |
    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in the trait `Default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/default.rs:134:5

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:81
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                                                       ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:96
    |
505 | ...   (field.name.clone(), field.type.clone(), field.default(), field.order(), field.required(), field.doc(), default field.order(), fiel...
    |                                                                                      ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:114
    |
505 | ...default(), field.order(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no method named `order` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:135
    |
505 | ...(), field.required(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                     ^^^^^ method not found in `&Schema`

error[E0599]: no method named `required` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:150
    |
505 | ...ed(), field.doc(), default field.order(), field.required(), field.doc())
    |                                                    ^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `doc` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:505:168
    |
505 | ...), default field.order(), field.required(), field.doc())
    |                                                      ^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:507:27
    |
507 |             Ok(Some(Type::Fixed(Fixed { name: name, fields })))
    |                           ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this method takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/avro/schema.rs:511:39
    |
511 |                 let field_type = self.primitive()?;
    |                                       ^^^^^^^^^-- an argument of type `&apache_avro::Schema` is missing
    |
note: method defined here
   --> crates/iceberg/src/avro/schema.rs:293:8
    |
293 |     fn primitive(&mut self, schema: &AvroSchema) -> Result<Self::T>;
    |        ^^^^^^^^^
help: provide the argument
    |
511 |                 let field_type = self.primitive(/* &apache_avro::Schema */)?;
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:514:27
    |
514 |             Ok(Some(Type::Decimal(Decimal { name: name, fields })))
    |                           ^^^^^^^
    |                           |
    |                           variant or associated item not found in `Type`
    |                           help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Uuid` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:516:43
    |
516 |         AvroSchema::Uuid => Ok(Some(Type::Uuid)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Uuid` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Duration` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:517:47
    |
517 |         AvroSchema::Duration => Ok(Some(Type::Duration)),
    |                                               ^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Duration` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant named `Ref` found for enum `datatypes::Type`
   --> crates/iceberg/src/avro/schema.rs:518:52
    |
518 |         AvroSchema::Ref(ref name) => Ok(Some(Type::Ref { name: name })),
    |                                                    ^^^ variant not found in `datatypes::Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant `Ref` not found here

Some errors have detailed explanations: E0023, E0061, E0164, E0422, E0425, E0560, E0599, E0609, E0615.
For more information about an error, try `rustc --explain E0023`.
error: could not compile `iceberg` (lib) due to 75 previous errors

