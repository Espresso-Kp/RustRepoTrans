Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `InvalidRange` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:236:42
    |
236 |         return Err(Error::new(ErrorKind::InvalidRange));
    |                                          ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidRange` not found for this enum

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/io.rs:236:20
    |
236 |         return Err(Error::new(ErrorKind::InvalidRange));
    |                    ^^^^^^^^^^------------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
236 |         return Err(Error::new(ErrorKind::InvalidRange, /* message */));
    |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `_input_stream` on type `&opendal::Reader`
   --> crates/iceberg/src/io.rs:243:30
    |
243 |         let data_read = self._input_stream.read(n_remaining).await?;
    |                              ^^^^^^^^^^^^^ unknown field

error[E0599]: no variant or associated item named `Eof` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:250:46
    |
250 |             return Err(Error::new(ErrorKind::Eof));
    |                                              ^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `Eof` not found for this enum

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/io.rs:250:24
    |
250 |             return Err(Error::new(ErrorKind::Eof));
    |                        ^^^^^^^^^^---------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
250 |             return Err(Error::new(ErrorKind::Eof, /* message */));
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 5 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `InvalidRange` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:236:42
    |
236 |         return Err(Error::new(ErrorKind::InvalidRange));
    |                                          ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidRange` not found for this enum

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/io.rs:236:20
    |
236 |         return Err(Error::new(ErrorKind::InvalidRange));
    |                    ^^^^^^^^^^------------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
236 |         return Err(Error::new(ErrorKind::InvalidRange, /* message */));
    |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `_input_stream` on type `&opendal::Reader`
   --> crates/iceberg/src/io.rs:243:30
    |
243 |         let data_read = self._input_stream.read(n_remaining).await?;
    |                              ^^^^^^^^^^^^^ unknown field

error[E0599]: no variant or associated item named `Eof` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:250:46
    |
250 |             return Err(Error::new(ErrorKind::Eof));
    |                                              ^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `Eof` not found for this enum

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/io.rs:250:24
    |
250 |             return Err(Error::new(ErrorKind::Eof));
    |                        ^^^^^^^^^^---------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
250 |             return Err(Error::new(ErrorKind::Eof, /* message */));
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 5 previous errors

