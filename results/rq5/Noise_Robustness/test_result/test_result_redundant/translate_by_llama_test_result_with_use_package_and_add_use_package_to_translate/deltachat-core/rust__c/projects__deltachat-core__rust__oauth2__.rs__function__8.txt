Fail
file path is :
projects/deltachat-core/rust/src/oauth2.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: usage of an `unsafe` block
   --> src/oauth2.rs:363:27
    |
363 |     let addr_normalized = unsafe { ptr::slice_from_raw_parts_mut(addr_normalized.as_ptr(), addr_normalized.len()) };
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> src/lib.rs:4:11
    |
4   | #![forbid(unsafe_code)]
    |           ^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/oauth2.rs:368:31
    |
368 |         let addr_normalized = unsafe { ptr::slice_from_raw_parts_mut(addr_normalized.as_ptr(), addr_normalized.len()) };
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/oauth2.rs:371:5
    |
371 |     unsafe { CString::from_raw(addr_normalized) }.into_raw().as_ptr()
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/oauth2.rs:363:66
    |
363 |     let addr_normalized = unsafe { ptr::slice_from_raw_parts_mut(addr_normalized.as_ptr(), addr_normalized.len()) };
    |                                    ----------------------------- ^^^^^^^^^^^^^^^^^^^^^^^^ types differ in mutability
    |                                    |
    |                                    arguments to this function are incorrect
    |
    = note: expected raw pointer `*mut _`
               found raw pointer `*const u8`
note: function defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs:803:14
    |
803 | pub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `dc_trim` in this scope
   --> src/oauth2.rs:364:5
    |
364 |     dc_trim(addr_normalized);
    |     ^^^^^^^ not found in this scope

error[E0599]: no method named `as_ptr` found for raw pointer `*mut [_]` in the current scope
   --> src/oauth2.rs:365:24
    |
365 |     if addr_normalized.as_ptr().offset(7).readable() == b"mailto:" {
    |                        ^^^^^^ help: there is a method with a similar name: `as_mut_ptr`
    |
    = note: try using `<*const T>::as_ref()` to get a reference to the type behind the pointer: https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref
    = note: using `<*const T>::as_ref()` on a pointer which is unaligned or points to invalid or uninitialized memory is undefined behavior

error[E0599]: no method named `as_ptr` found for raw pointer `*mut [_]` in the current scope
   --> src/oauth2.rs:366:35
    |
366 |         let old = addr_normalized.as_ptr();
    |                                   ^^^^^^ help: there is a method with a similar name: `as_mut_ptr`
    |
    = note: try using `<*const T>::as_ref()` to get a reference to the type behind the pointer: https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref
    = note: using `<*const T>::as_ref()` on a pointer which is unaligned or points to invalid or uninitialized memory is undefined behavior

error[E0277]: the trait bound `Vec<u8>: From<*mut _>` is not satisfied
   --> src/oauth2.rs:367:44
    |
367 |         let addr_normalized = CString::new(mem::replace(old, ptr::null_mut())).unwrap().into_bytes_with_nul();
    |                               ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<*mut _>` is not implemented for `Vec<u8>`, which is required by `*mut _: Into<Vec<u8>>`
    |                               |
    |                               required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <Vec<u8> as From<tokio_util::bytes::Bytes>>
              <Vec<u8> as From<BytesMut>>
              <Vec<u8> as From<Uuid>>
              <Vec<u8> as From<bstr::bstring::BString>>
              <Vec<u8> as From<CString>>
              <Vec<u8> as From<std::string::String>>
              <Vec<u8> as From<&str>>
    = note: required for `*mut _` to implement `Into<Vec<u8>>`
note: required by a bound in `CString::new`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs:261:19
    |
261 |     pub fn new<T: Into<Vec<u8>>>(t: T) -> Result<CString, NulError> {
    |                   ^^^^^^^^^^^^^ required by this bound in `CString::new`

error[E0308]: mismatched types
   --> src/oauth2.rs:368:70
    |
368 |         let addr_normalized = unsafe { ptr::slice_from_raw_parts_mut(addr_normalized.as_ptr(), addr_normalized.len()) };
    |                                        ----------------------------- ^^^^^^^^^^^^^^^^^^^^^^^^ types differ in mutability
    |                                        |
    |                                        arguments to this function are incorrect
    |
    = note: expected raw pointer `*mut _`
               found raw pointer `*const u8`
note: function defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs:803:14
    |
803 | pub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `dc_trim` in this scope
   --> src/oauth2.rs:369:9
    |
369 |         dc_trim(addr_normalized);
    |         ^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> src/oauth2.rs:371:32
    |
371 |     unsafe { CString::from_raw(addr_normalized) }.into_raw().as_ptr()
    |              ----------------- ^^^^^^^^^^^^^^^ expected `*mut i8`, found `*mut [_]`
    |              |
    |              arguments to this function are incorrect
    |
    = note: expected raw pointer `*mut i8`
               found raw pointer `*mut [_]`
note: associated function defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs:397:19
    |
397 |     pub unsafe fn from_raw(ptr: *mut c_char) -> CString {
    |                   ^^^^^^^^

error[E0599]: no method named `as_ptr` found for raw pointer `*mut i8` in the current scope
   --> src/oauth2.rs:371:62
    |
371 |     unsafe { CString::from_raw(addr_normalized) }.into_raw().as_ptr()
    |     ---------------------------------------------            ^^^^^^ method not found in `*mut i8`
    |     |
    |     method `as_ptr` is available on `CString`
    |
    = note: try using `<*const T>::as_ref()` to get a reference to the type behind the pointer: https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref
    = note: using `<*const T>::as_ref()` on a pointer which is unaligned or points to invalid or uninitialized memory is undefined behavior

Some errors have detailed explanations: E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: the trait bound `Vec<u8>: From<*mut _>` is not satisfied
   --> src/oauth2.rs:367:44
    |
367 |         let addr_normalized = CString::new(mem::replace(old, ptr::null_mut())).unwrap().into_bytes_with_nul();
    |                               ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<*mut _>` is not implemented for `Vec<u8>`, which is required by `*mut _: Into<Vec<u8>>`
    |                               |
    |                               required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <Vec<u8> as From<tokio_util::bytes::Bytes>>
              <Vec<u8> as From<BytesMut>>
              <Vec<u8> as From<Uuid>>
              <Vec<u8> as From<bstr::bstring::BString>>
              <Vec<u8> as From<clap::builder::Str>>
              <Vec<u8> as From<CString>>
              <Vec<u8> as From<std::string::String>>
              <Vec<u8> as From<&str>>
    = note: required for `*mut _` to implement `Into<Vec<u8>>`
note: required by a bound in `CString::new`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs:261:19
    |
261 |     pub fn new<T: Into<Vec<u8>>>(t: T) -> Result<CString, NulError> {
    |                   ^^^^^^^^^^^^^ required by this bound in `CString::new`

error: could not compile `deltachat` (lib test) due to 12 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

