Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0428]: the name `filter_alt_coherence_matches` is defined multiple times
   --> src/cd.rs:247:1
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    | ------------------------------------------------------------------------------------------ previous definition of the value `filter_alt_coherence_matches` here
...
247 | fn filter_alt_coherence_matches(results: &[(String, f32)]) -> Vec<CoherenceMatch> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `filter_alt_coherence_matches` redefined here
    |
    = note: `filter_alt_coherence_matches` must be defined only once in the value namespace of this module

error[E0428]: the name `characters_popularity_compare` is defined multiple times
   --> src/cd.rs:261:1
    |
150 | / pub(crate) fn characters_popularity_compare(
151 | |     language: &Language,
152 | |     ordered_characters: &str,
153 | | ) -> Result<f32, String> {
154 | |     let language_data = get_language_data(language)?;
155 | |     Ok(jaro(ordered_characters, language_data.0) as f32)
156 | | }
    | |_- previous definition of the value `characters_popularity_compare` here
...
261 | / fn characters_popularity_compare(
262 | |     language: &str,
263 | |     ordered_characters: &str,
264 | | ) -> Result<f32, String> {
265 | |     let language_data = get_language_data(language)?;
266 | |     Ok(jaro(ordered_characters, language_data.0) as f32)
267 | | }
    | |_^ `characters_popularity_compare` redefined here
    |
    = note: `characters_popularity_compare` must be defined only once in the value namespace of this module

error[E0412]: cannot find type `Ordering` in this scope
   --> src/cd.rs:270:25
    |
270 |     F: FnMut(&T, &T) -> Ordering,
    |                         ^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
2   + use core::cmp::Ordering;
    |
2   + use core::sync::atomic::Ordering;
    |
2   + use std::cmp::Ordering;
    |
2   + use std::sync::atomic::Ordering;
    |

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/cd.rs:217:53
    |
217 |         let sequence_frequencies: Counter<String> = Counter::new(layer);
    |                                                     ^^^^^^^^^^^^ -----
    |                                                                  |
    |                                                                  unexpected argument of type `std::string::String`
    |                                                                  help: remove the extra argument
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/counter-0.5.7/src/lib.rs:337:12
    |
337 |     pub fn new() -> Counter<T, N> {
    |            ^^^

error[E0271]: expected `[closure@cd.rs:225:77]` to be a closure that returns `&_`, but it returns `String`
    --> src/cd.rs:225:92
     |
225  |         let popular_character_ordered: Vec<String> = most_common.iter().map(|&(ch, _)| ch).cloned().collect();
     |                                                                                            ^^^^^^ expected `&_`, found `String`
     |
     = note: expected reference `&_`
                   found struct `std::string::String`
     = note: required for `std::iter::Map<std::slice::Iter<'_, (std::string::String, usize)>, [closure@src/cd.rs:225:77: 225:87]>` to implement `Iterator`
note: required by a bound in `cloned`
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:3361:32
     |
3361 |         Self: Sized + Iterator<Item = &'a T>,
     |                                ^^^^^^^^^^^^ required by this bound in `Iterator::cloned`

error[E0599]: the method `collect` exists for struct `Cloned<Map<Iter<'_, (String, usize)>, [closure@cd.rs:225:77]>>`, but its trait bounds were not satisfied
   --> src/cd.rs:225:101
    |
225 |         let popular_character_ordered: Vec<String> = most_common.iter().map(|&(ch, _)| ch).cloned().collect();
    |                                                                                                     ^^^^^^^ method cannot be called due to unsatisfied trait bounds
    |
   ::: /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/map.rs:61:1
    |
61  | pub struct Map<I, F> {
    | -------------------- doesn't satisfy `<_ as Iterator>::Item = &_`
    |
   ::: /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/cloned.rs:17:1
    |
17  | pub struct Cloned<I> {
    | -------------------- doesn't satisfy `_: Iterator`
    |
    = note: the following trait bounds were not satisfied:
            `<std::iter::Map<std::slice::Iter<'_, (std::string::String, usize)>, [closure@src/cd.rs:225:77: 225:87]> as Iterator>::Item = &_`
            which is required by `Cloned<std::iter::Map<std::slice::Iter<'_, (std::string::String, usize)>, [closure@src/cd.rs:225:77: 225:87]>>: Iterator`
            `Cloned<std::iter::Map<std::slice::Iter<'_, (std::string::String, usize)>, [closure@src/cd.rs:225:77: 225:87]>>: Iterator`
            which is required by `&mut Cloned<std::iter::Map<std::slice::Iter<'_, (std::string::String, usize)>, [closure@src/cd.rs:225:77: 225:87]>>: Iterator`

error[E0271]: expected `[closure@cd.rs:227:132]` to be a closure that returns `&&str`, but it returns `&str`
   --> src/cd.rs:227:56
    |
227 | ...iter().chain(alphabet_languages(&popular_character_ordered, ignore_non_latin).iter().map(|lang| lang.to_string().as_str())) {
    |           ----- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&&str`, found `&str`
    |           |
    |           required by a bound introduced by this call
    |
    = note: expected reference `&&str`
               found reference `&str`
    = note: required for `std::iter::Map<std::slice::Iter<'_, &Language>, [closure@src/cd.rs:227:132: 227:138]>` to implement `Iterator`
note: required by a bound in `std::iter::Iterator::chain`
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:523:25
    |
523 |         U: IntoIterator<Item = Self::Item>,
    |                         ^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::chain`

error[E0271]: expected `[closure@cd.rs:227:132]` to be a closure that returns `&&str`, but it returns `&str`
   --> src/cd.rs:227:25
    |
227 | ...in lg_inclusion_list.iter().chain(alphabet_languages(&popular_character_ordered, ignore_non_latin).iter().map(|lang| lang.to_string().as_str())...
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&&str`
    |
    = note: expected reference `&str`
               found reference `&&str`
    = note: required for `std::iter::Map<std::slice::Iter<'_, &Language>, [closure@src/cd.rs:227:132: 227:138]>` to implement `Iterator`
    = note: 1 redundant requirement hidden
    = note: required for `std::iter::Chain<std::slice::Iter<'_, &str>, std::iter::Map<std::slice::Iter<'_, &Language>, [closure@src/cd.rs:227:132: 227:138]>>` to implement `Iterator`
    = note: required for `std::iter::Chain<std::slice::Iter<'_, &str>, std::iter::Map<std::slice::Iter<'_, &Language>, [closure@src/cd.rs:227:132: 227:138]>>` to implement `IntoIterator`

error[E0271]: expected `[closure@cd.rs:227:132]` to be a closure that returns `&&str`, but it returns `&str`
   --> src/cd.rs:227:25
    |
227 | ...in lg_inclusion_list.iter().chain(alphabet_languages(&popular_character_ordered, ignore_non_latin).iter().map(|lang| lang.to_string().as_str())...
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&&str`
    |
    = note: expected reference `&str`
               found reference `&&str`
    = note: required for `std::iter::Map<std::slice::Iter<'_, &Language>, [closure@src/cd.rs:227:132: 227:138]>` to implement `Iterator`
    = note: 1 redundant requirement hidden
    = note: required for `std::iter::Chain<std::slice::Iter<'_, &str>, std::iter::Map<std::slice::Iter<'_, &Language>, [closure@src/cd.rs:227:132: 227:138]>>` to implement `Iterator`

error[E0308]: mismatched types
   --> src/cd.rs:228:60
    |
228 |             let ratio: f32 = characters_popularity_compare(language, &popular_character_ordered.join("")).unwrap_or(0.0);
    |                              ----------------------------- ^^^^^^^^ expected `&Language`, found `&&str`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&Language`
               found reference `&&str`
note: function defined here
   --> src/cd.rs:150:15
    |
150 | pub(crate) fn characters_popularity_compare(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
151 |     language: &Language,
    |     -------------------

error[E0308]: mismatched types
   --> src/cd.rs:244:57
    |
244 |     let filtered_results = filter_alt_coherence_matches(&results);
    |                            ---------------------------- ^^^^^^^^ expected `&Vec<CoherenceMatch>`, found `&Vec<(String, f32)>`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&Vec<CoherenceMatch>`
               found reference `&Vec<(std::string::String, f32)>`
note: function defined here
   --> src/cd.rs:160:15
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------

error[E0593]: closure is expected to take 2 arguments, but it takes 1 argument
   --> src/cd.rs:245:8
    |
245 |     Ok(sorted(filtered_results, |&(_, score)| score))
    |        ^^^^^^                   ------------- takes 1 argument
    |        |
    |        expected closure that takes 2 arguments

error[E0277]: the trait bound `&Language: FromStr` is not satisfied
    --> src/cd.rs:256:32
     |
256  |             language: language.parse().unwrap(),
     |                                ^^^^^ the trait `FromStr` is not implemented for `&Language`
     |
     = help: the following other types implement trait `FromStr`:
               ColorChoice
               IpAddr
               Ipv4Addr
               Ipv6Addr
               Level
               LevelFilter
               NonZeroI128
               NonZeroI16
             and 82 others
note: required by a bound in `core::str::<impl str>::parse`
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs:2352:21
     |
2352 |     pub fn parse<F: FromStr>(&self) -> Result<F, F::Err> {
     |                     ^^^^^^^ required by this bound in `core::str::<impl str>::parse`

error[E0308]: mismatched types
   --> src/cd.rs:265:43
    |
265 |     let language_data = get_language_data(language)?;
    |                         ----------------- ^^^^^^^^ expected `&Language`, found `&str`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected reference `&Language`
               found reference `&str`
note: function defined here
   --> src/utils.rs:363:15
    |
363 | pub(crate) fn get_language_data(language: &Language) -> Result<(&'static str, bool, bool), String> {
    |               ^^^^^^^^^^^^^^^^^ -------------------

error[E0277]: the trait bound `&Language: FromStr` is not satisfied
    --> src/cd.rs:256:32
     |
256  |             language: language.parse().unwrap(),
     |                                ^^^^^ the trait `FromStr` is not implemented for `&Language`
     |
     = help: the following other types implement trait `FromStr`:
               ColorChoice
               IpAddr
               Ipv4Addr
               Ipv6Addr
               Level
               LevelFilter
               NonZeroI128
               NonZeroI16
             and 87 others
note: required by a bound in `core::str::<impl str>::parse`
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs:2352:21
     |
2352 |     pub fn parse<F: FromStr>(&self) -> Result<F, F::Err> {
     |                     ^^^^^^^ required by this bound in `core::str::<impl str>::parse`

Some errors have detailed explanations: E0061, E0271, E0277, E0308, E0412, E0428, E0593, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `charset-normalizer-rs` (lib) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `charset-normalizer-rs` (lib test) due to 14 previous errors

