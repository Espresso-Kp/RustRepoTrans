Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `create_folder` is defined multiple times
 --> src/imex.rs:8:20
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                    ------------- previous import of the value `create_folder` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                    ^^^^^^^^^^^^^--
  |                    |
  |                    `create_folder` reimported here
  |                    help: remove unnecessary import
  |
  = note: `create_folder` must be defined only once in the value namespace of this module

error[E0252]: the name `delete_file` is defined multiple times
 --> src/imex.rs:8:35
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                   ----------- previous import of the value `delete_file` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                   ^^^^^^^^^^^--
  |                                   |
  |                                   `delete_file` reimported here
  |                                   help: remove unnecessary import
  |
  = note: `delete_file` must be defined only once in the value namespace of this module

error[E0252]: the name `get_filesuffix_lc` is defined multiple times
 --> src/imex.rs:8:48
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                ----------------- previous import of the value `get_filesuffix_lc` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                ^^^^^^^^^^^^^^^^^--
  |                                                |
  |                                                `get_filesuffix_lc` reimported here
  |                                                help: remove unnecessary import
  |
  = note: `get_filesuffix_lc` must be defined only once in the value namespace of this module

error[E0252]: the name `open_file_std` is defined multiple times
 --> src/imex.rs:8:67
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                   ------------- previous import of the value `open_file_std` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                   ^^^^^^^^^^^^^--
  |                                                                   |
  |                                                                   `open_file_std` reimported here
  |                                                                   help: remove unnecessary import
  |
  = note: `open_file_std` must be defined only once in the value namespace of this module

error[E0252]: the name `read_file` is defined multiple times
 --> src/imex.rs:8:82
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                                  --------- previous import of the value `read_file` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                                  ^^^^^^^^^--
  |                                                                                  |
  |                                                                                  `read_file` reimported here
  |                                                                                  help: remove unnecessary import
  |
  = note: `read_file` must be defined only once in the value namespace of this module

error[E0252]: the name `time` is defined multiple times
 --> src/imex.rs:8:93
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                                             ---- previous import of the value `time` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                                             ^^^^--
  |                                                                                             |
  |                                                                                             `time` reimported here
  |                                                                                             help: remove unnecessary import
  |
  = note: `time` must be defined only once in the value namespace of this module

error[E0252]: the name `write_file` is defined multiple times
 --> src/imex.rs:8:99
  |
6 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                                                   ---------- previous import of the value `write_file` here
7 | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                                                                                                   ^^^^^^^^^^ `write_file` reimported here
  |
  = note: `write_file` must be defined only once in the value namespace of this module

error[E0252]: the name `key` is defined multiple times
  --> src/imex.rs:31:5
   |
7  | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                  ---- previous import of the module `key` here
...
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |     ^^^^--
   |     |
   |     `key` reimported here
   |     help: remove unnecessary import
   |
   = note: `key` must be defined only once in the type namespace of this module

error[E0252]: the name `load_self_secret_key` is defined multiple times
  --> src/imex.rs:31:11
   |
5  | use crate::key::load_self_secret_key;
   |     -------------------------------- previous import of the value `load_self_secret_key` here
...
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |           ^^^^^^^^^^^^^^^^^^^^--
   |           |
   |           `load_self_secret_key` reimported here
   |           help: remove unnecessary import
   |
   = note: `load_self_secret_key` must be defined only once in the value namespace of this module

error[E0252]: the name `DcKey` is defined multiple times
  --> src/imex.rs:31:33
   |
7  | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                        ----- previous import of the trait `DcKey` here
...
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                 ^^^^^--
   |                                 |
   |                                 `DcKey` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `DcKey` must be defined only once in the type namespace of this module

error[E0252]: the name `DcSecretKey` is defined multiple times
  --> src/imex.rs:31:40
   |
7  | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                               ----------- previous import of the trait `DcSecretKey` here
...
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                        ^^^^^^^^^^^--
   |                                        |
   |                                        `DcSecretKey` reimported here
   |                                        help: remove unnecessary import
   |
   = note: `DcSecretKey` must be defined only once in the type namespace of this module

error[E0252]: the name `create_folder` is defined multiple times
  --> src/imex.rs:41:5
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                    ------------- previous import of the value `create_folder` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |     ^^^^^^^^^^^^^--
   |     |
   |     `create_folder` reimported here
   |     help: remove unnecessary import
   |
   = note: `create_folder` must be defined only once in the value namespace of this module

error[E0252]: the name `delete_file` is defined multiple times
  --> src/imex.rs:41:20
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                                   ----------- previous import of the value `delete_file` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |                    ^^^^^^^^^^^--
   |                    |
   |                    `delete_file` reimported here
   |                    help: remove unnecessary import
   |
   = note: `delete_file` must be defined only once in the value namespace of this module

error[E0252]: the name `get_filesuffix_lc` is defined multiple times
  --> src/imex.rs:41:33
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                                                ----------------- previous import of the value `get_filesuffix_lc` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |                                 ^^^^^^^^^^^^^^^^^--
   |                                 |
   |                                 `get_filesuffix_lc` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `get_filesuffix_lc` must be defined only once in the value namespace of this module

error[E0252]: the name `open_file_std` is defined multiple times
  --> src/imex.rs:41:52
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                                                                   ------------- previous import of the value `open_file_std` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |                                                    ^^^^^^^^^^^^^--
   |                                                    |
   |                                                    `open_file_std` reimported here
   |                                                    help: remove unnecessary import
   |
   = note: `open_file_std` must be defined only once in the value namespace of this module

error[E0252]: the name `read_file` is defined multiple times
  --> src/imex.rs:41:67
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                                                                                  --------- previous import of the value `read_file` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |                                                                   ^^^^^^^^^--
   |                                                                   |
   |                                                                   `read_file` reimported here
   |                                                                   help: remove unnecessary import
   |
   = note: `read_file` must be defined only once in the value namespace of this module

error[E0252]: the name `time` is defined multiple times
  --> src/imex.rs:41:78
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                                                                                             ---- previous import of the value `time` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |                                                                              ^^^^--
   |                                                                              |
   |                                                                              `time` reimported here
   |                                                                              help: remove unnecessary import
   |
   = note: `time` must be defined only once in the value namespace of this module

error[E0252]: the name `write_file` is defined multiple times
  --> src/imex.rs:41:84
   |
6  | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
   |                                                                                                   ---------- previous import of the value `write_file` here
...
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |                                                                                    ^^^^^^^^^^-
   |                                                                                    |
   |                                                                                    `write_file` reimported here
   |                                                                                    help: remove unnecessary import
   |
   = note: `write_file` must be defined only once in the value namespace of this module

error[E0252]: the name `SignedPublicKey` is defined multiple times
  --> src/imex.rs:31:53
   |
7  | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                                            --------------- previous import of the type `SignedPublicKey` here
...
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                                     ^^^^^^^^^^^^^^^--
   |                                                     |
   |                                                     `SignedPublicKey` reimported here
   |                                                     help: remove unnecessary import
   |
   = note: `SignedPublicKey` must be defined only once in the type namespace of this module

error[E0252]: the name `SignedSecretKey` is defined multiple times
  --> src/imex.rs:31:70
   |
7  | use crate::key::{self, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                                                             --------------- previous import of the type `SignedSecretKey` here
...
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                                                      ^^^^^^^^^^^^^^^-
   |                                                                      |
   |                                                                      `SignedSecretKey` reimported here
   |                                                                      help: remove unnecessary import
   |
   = note: `SignedSecretKey` must be defined only once in the type namespace of this module

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/imex.rs:186:57
    |
186 |         chat_id = dc_create_chat_by_contact_id(context, DC_CONTACT_ID_SELF).await?;
    |                                                         ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `Ordering`
   --> src/imex.rs:205:44
    |
205 |         if context.shall_stop_ongoing.load(Ordering::Relaxed) {
    |                                            ^^^^^^^^ use of undeclared type `Ordering`
    |
help: consider importing one of these items
    |
4   + use core::cmp::Ordering;
    |
4   + use core::sync::atomic::Ordering;
    |
4   + use std::cmp::Ordering;
    |
4   + use std::sync::atomic::Ordering;
    |

error[E0433]: failed to resolve: use of undeclared type `Duration`
   --> src/imex.rs:209:28
    |
209 |         tokio::time::sleep(Duration::from_secs(1)).await;
    |                            ^^^^^^^^ use of undeclared type `Duration`
    |
help: consider importing one of these items
    |
4   + use chrono::Duration;
    |
4   + use core::time::Duration;
    |
4   + use std::time::Duration;
    |
4   + use tokio::time::Duration;
    |

warning: unused import: `std::sync::Arc`
 --> src/imex.rs:4:5
  |
4 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `create_folder`, `delete_file`, `get_filesuffix_lc`, `open_file_std`, `read_file`, `time`, `write_file`
 --> src/imex.rs:8:20
  |
8 | use crate::tools::{create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file};
  |                    ^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^  ^^^^^^^^^^

warning: unused import: `BlobObject`
  --> src/imex.rs:23:36
   |
23 | use crate::blob::{BlobDirContents, BlobObject};
   |                                    ^^^^^^^^^^

warning: unused import: `ChatId`
  --> src/imex.rs:24:59
   |
24 | use crate::chat::{self, delete_and_reset_all_device_msgs, ChatId};
   |                                                           ^^^^^^

warning: unused import: `crate::contact::ContactId`
  --> src/imex.rs:26:5
   |
26 | use crate::contact::ContactId;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DcKey`, `DcSecretKey`, `SignedPublicKey`, `SignedSecretKey`, `load_self_secret_key`, `self`
  --> src/imex.rs:31:5
   |
31 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |     ^^^^  ^^^^^^^^^^^^^^^^^^^^  ^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused imports: `create_folder`, `delete_file`, `get_filesuffix_lc`, `open_file_std`, `read_file`, `time`, `write_file`
  --> src/imex.rs:41:5
   |
41 |     create_folder, delete_file, get_filesuffix_lc, open_file_std, read_file, time, write_file,
   |     ^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^  ^^^^^^^^^^

error[E0425]: cannot find function `dc_alloc_ongoing` in this scope
   --> src/imex.rs:165:9
    |
165 |     if !dc_alloc_ongoing(context).await? {
    |         ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dc_create_setup_code` in this scope
   --> src/imex.rs:170:27
    |
170 |         setup_code = Some(dc_create_setup_code(context).await?);
    |                           ^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `create_setup_code`
...
291 | pub fn create_setup_code(_context: &Context) -> String {
    | ------------------------------------------------------ similarly named function `create_setup_code` defined here

error[E0425]: cannot find function `dc_render_setup_file` in this scope
   --> src/imex.rs:174:35
    |
174 |         setup_file_content = Some(dc_render_setup_file(context, &setup_code.as_ref().unwrap()).await?);
    |                                   ^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `render_setup_file`
...
243 | pub async fn render_setup_file(context: &Context, passphrase: &str) -> Result<String> {
    | ------------------------------------------------------------------------------------- similarly named function `render_setup_file` defined here

error[E0425]: cannot find function `dc_get_fine_path_filename` in this scope
   --> src/imex.rs:178:32
    |
178 |         setup_file_name = Some(dc_get_fine_path_filename(context, "$BLOBDIR", "autocrypt-setup-message.html").await?);
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0282]: type annotations needed for `std::option::Option<T>`
   --> src/imex.rs:159:9
    |
159 | ...et mut setup_file_content = None;
    |       ^^^^^^^^^^^^^^^^^^^^^^
...
181 | ...f setup_file_name.is_none() || !dc_write_file(context, &setup_file_name.as_ref().unwrap(), &setup_file_content.as_ref().unwrap(), setup_file_content.as_ref().unwrap().len())...
    |                                                                                                                                                                           --- type must be known at this point
    |
help: consider giving `setup_file_content` an explicit type, where the type for type parameter `T` is specified
    |
159 |     let mut setup_file_content: std::option::Option<T> = None;
    |                               ++++++++++++++++++++++++

error[E0425]: cannot find function `dc_write_file` in this scope
   --> src/imex.rs:181:38
    |
181 |       if setup_file_name.is_none() || !dc_write_file(context, &setup_file_name.as_ref().unwrap(), &setup_file_content.as_ref().unwrap(), se...
    |                                        ^^^^^^^^^^^^^ help: a function with a similar name exists: `write_file`
    |
   ::: src/tools.rs:388:1
    |
388 | / pub(crate) async fn write_file(
389 | |     context: &Context,
390 | |     path: impl AsRef<Path>,
391 | |     buf: &[u8],
...   |
403 | |     })
404 | | }
    | |_- similarly named function `write_file` defined here

error[E0425]: cannot find function `dc_create_chat_by_contact_id` in this scope
   --> src/imex.rs:186:19
    |
186 |         chat_id = dc_create_chat_by_contact_id(context, DC_CONTACT_ID_SELF).await?;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no variant or associated item named `DC_MSG_FILE` found for enum `Viewtype` in the current scope
    --> src/imex.rs:189:39
     |
189  |     msg = Some(Message::new(Viewtype::DC_MSG_FILE));
     |                                       ^^^^^^^^^^^ variant or associated item not found in `Viewtype`
     |
    ::: src/message.rs:1950:1
     |
1950 | pub enum Viewtype {
     | ----------------- variant or associated item `DC_MSG_FILE` not found for this enum

error[E0599]: no method named `set` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:190:27
    |
190 |     msg.as_mut().unwrap().set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                           ^^^ method not found in `&mut Message`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `set`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `prometheus_client::metrics::gauge::Atomic`
help: one of the expressions' fields has a method of the same name
    |
190 |     msg.as_mut().unwrap().param.set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                           ++++++

error[E0599]: no variant or associated item named `FILE` found for enum `Param` in the current scope
   --> src/imex.rs:190:38
    |
190 |     msg.as_mut().unwrap().set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                                      ^^^^
    |                                      |
    |                                      variant or associated item not found in `Param`
    |                                      help: there is a variant with a similar name: `File`
    |
   ::: src/param.rs:19:1
    |
19  | pub enum Param {
    | -------------- variant or associated item `FILE` not found for this enum

error[E0282]: type annotations needed for `std::option::Option<T>`
   --> src/imex.rs:160:9
    |
160 |     let mut setup_file_name = None;
    |         ^^^^^^^^^^^^^^^^^^^
...
190 |     msg.as_mut().unwrap().set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                                                                              ----- type must be known at this point
    |
help: consider giving `setup_file_name` an explicit type, where the type for type parameter `T` is specified
    |
160 |     let mut setup_file_name: std::option::Option<T> = None;
    |                            ++++++++++++++++++++++++

error[E0599]: no method named `set` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:191:27
    |
191 |     msg.as_mut().unwrap().set(Param::MIMETYPE, "application/autocrypt-setup");
    |                           ^^^ method not found in `&mut Message`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `set`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `prometheus_client::metrics::gauge::Atomic`
help: one of the expressions' fields has a method of the same name
    |
191 |     msg.as_mut().unwrap().param.set(Param::MIMETYPE, "application/autocrypt-setup");
    |                           ++++++

error[E0599]: no variant or associated item named `MIMETYPE` found for enum `Param` in the current scope
   --> src/imex.rs:191:38
    |
191 |     msg.as_mut().unwrap().set(Param::MIMETYPE, "application/autocrypt-setup");
    |                                      ^^^^^^^^
    |                                      |
    |                                      variant or associated item not found in `Param`
    |                                      help: there is a variant with a similar name: `MimeType`
    |
   ::: src/param.rs:19:1
    |
19  | pub enum Param {
    | -------------- variant or associated item `MIMETYPE` not found for this enum

error[E0599]: no method named `set_cmd` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:192:27
    |
192 |     msg.as_mut().unwrap().set_cmd(SystemMessage::AutocryptSetupMessage);
    |                           ^^^^^^^ method not found in `&mut Message`
    |
help: one of the expressions' fields has a method of the same name
    |
192 |     msg.as_mut().unwrap().param.set_cmd(SystemMessage::AutocryptSetupMessage);
    |                           ++++++

error[E0425]: cannot find function `dc_send_msg` in this scope
   --> src/imex.rs:196:18
    |
196 |         msg_id = dc_send_msg(context, chat_id, msg.as_ref().unwrap()).await?;
    |                  ^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `unref` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:199:27
    |
199 |     msg.as_mut().unwrap().unref();
    |                           ^^^^^ method not found in `&mut Message`

error[E0599]: no method named `log_info` found for reference `&context::Context` in the current scope
   --> src/imex.rs:202:13
    |
202 |     context.log_info(0, "Wait for setup message being sent ...").await;
    |             ^^^^^^^^ method not found in `&Context`

error[E0615]: attempted to take value of method `shall_stop_ongoing` on type `&context::Context`
   --> src/imex.rs:205:20
    |
205 |         if context.shall_stop_ongoing.load(Ordering::Relaxed) {
    |                    ^^^^^^^^^^^^^^^^^^ method, not a field
    |
help: use parentheses to call the method
    |
205 |         if context.shall_stop_ongoing().load(Ordering::Relaxed) {
    |                                      ++

error[E0425]: cannot find function `dc_get_msg` in this scope
   --> src/imex.rs:211:20
    |
211 |         msg = Some(dc_get_msg(context, msg_id).await?);
    |                    ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dc_msg_is_sent` in this scope
   --> src/imex.rs:212:12
    |
212 |         if dc_msg_is_sent(msg.as_ref().unwrap()).await? {
    |            ^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `unref` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:215:31
    |
215 |         msg.as_mut().unwrap().unref();
    |                               ^^^^^ method not found in `&mut Message`

error[E0599]: no method named `log_info` found for reference `&context::Context` in the current scope
   --> src/imex.rs:219:13
    |
219 |     context.log_info(0, "... setup message sent.").await;
    |             ^^^^^^^^ method not found in `&Context`

error[E0599]: no method named `unref` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:232:31
    |
232 |         msg.as_mut().unwrap().unref();
    |                               ^^^^^ method not found in `&mut Message`

error[E0425]: cannot find function `dc_free_ongoing` in this scope
   --> src/imex.rs:234:5
    |
234 |     dc_free_ongoing(context).await?;
    |     ^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no variant or associated item named `DC_MSG_FILE` found for enum `message::Viewtype` in the current scope
    --> src/imex.rs:189:39
     |
189  |     msg = Some(Message::new(Viewtype::DC_MSG_FILE));
     |                                       ^^^^^^^^^^^ variant or associated item not found in `Viewtype`
     |
    ::: src/message.rs:1950:1
     |
1950 | pub enum Viewtype {
     | ----------------- variant or associated item `DC_MSG_FILE` not found for this enum

error[E0599]: no method named `set` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:190:27
    |
190 |     msg.as_mut().unwrap().set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                           ^^^ method not found in `&mut Message`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `set`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `BitSetLike`
            candidate #3: `prometheus_client::metrics::gauge::Atomic`
            candidate #4: `criterion_plot::prelude::Set`
help: one of the expressions' fields has a method of the same name
    |
190 |     msg.as_mut().unwrap().param.set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                           ++++++

error[E0599]: no variant or associated item named `FILE` found for enum `param::Param` in the current scope
   --> src/imex.rs:190:38
    |
190 |     msg.as_mut().unwrap().set(Param::FILE, setup_file_name.as_ref().unwrap().clone());
    |                                      ^^^^
    |                                      |
    |                                      variant or associated item not found in `Param`
    |                                      help: there is a variant with a similar name: `File`
    |
   ::: src/param.rs:19:1
    |
19  | pub enum Param {
    | -------------- variant or associated item `FILE` not found for this enum

error[E0599]: no method named `set` found for mutable reference `&mut message::Message` in the current scope
   --> src/imex.rs:191:27
    |
191 |     msg.as_mut().unwrap().set(Param::MIMETYPE, "application/autocrypt-setup");
    |                           ^^^ method not found in `&mut Message`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `set`, perhaps you need to implement one of them:
            candidate #1: `bitflags::traits::Flags`
            candidate #2: `BitSetLike`
            candidate #3: `prometheus_client::metrics::gauge::Atomic`
            candidate #4: `criterion_plot::prelude::Set`
help: one of the expressions' fields has a method of the same name
    |
191 |     msg.as_mut().unwrap().param.set(Param::MIMETYPE, "application/autocrypt-setup");
    |                           ++++++

error[E0599]: no variant or associated item named `MIMETYPE` found for enum `param::Param` in the current scope
   --> src/imex.rs:191:38
    |
191 |     msg.as_mut().unwrap().set(Param::MIMETYPE, "application/autocrypt-setup");
    |                                      ^^^^^^^^
    |                                      |
    |                                      variant or associated item not found in `Param`
    |                                      help: there is a variant with a similar name: `MimeType`
    |
   ::: src/param.rs:19:1
    |
19  | pub enum Param {
    | -------------- variant or associated item `MIMETYPE` not found for this enum

Some errors have detailed explanations: E0252, E0282, E0425, E0433, E0599, E0615.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 7 warnings
error: could not compile `deltachat` (lib) due to 47 previous errors; 7 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 7 warnings (7 duplicates)
error: could not compile `deltachat` (lib test) due to 47 previous errors; 7 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

