Fail
file path is :
projects/deltachat-core/rust/src/qr.rs

output is:


error is :
    Blocking waiting for file lock on package cache
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `ChatIdBlocked` is defined multiple times
  --> src/qr.rs:17:41
   |
5  | use crate::chat::{ChatIdBlocked, create_group_chat};
   |                   ------------- previous import of the type `ChatIdBlocked` here
...
17 | use crate::chat::{get_chat_id_by_grpid, ChatIdBlocked};
   |                                         ^^^^^^^^^^^^^ `ChatIdBlocked` reimported here
   |
   = note: `ChatIdBlocked` must be defined only once in the type namespace of this module

warning: unused import: `create_group_chat`
 --> src/qr.rs:5:34
  |
5 | use crate::chat::{ChatIdBlocked, create_group_chat};
  |                                  ^^^^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `ChatIdBlocked`
  --> src/qr.rs:17:41
   |
17 | use crate::chat::{get_chat_id_by_grpid, ChatIdBlocked};
   |                                         ^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `default` found for enum `Qr` in the current scope
   --> src/qr.rs:263:25
    |
47  | pub enum Qr {
    | ----------- variant or associated item `default` not found for this enum
...
263 |     let qr_parsed = Qr::default();
    |                         ^^^^^^^ variant or associated item not found in `Qr`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `default`, perhaps you need to implement one of them:
            candidate #1: `std::default::Default`
            candidate #2: `tinyvec::array::Array`

error[E0599]: no function or associated item named `new` found for struct `Peerstate` in the current scope
   --> src/qr.rs:264:32
    |
264 |     let peerstate = Peerstate::new(context).await?;
    |                                ^^^ function or associated item not found in `Peerstate`
    |
   ::: src/peerstate.rs:35:1
    |
35  | pub struct Peerstate {
    | -------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `Peerstate` consider using one of the following associated functions:
      Peerstate::from_header
      Peerstate::from_public_key
      Peerstate::from_gossip
   --> src/peerstate.rs:102:5
    |
102 |       pub fn from_header(header: &Aheader, message_time: i64) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112 | /     pub fn from_public_key(
113 | |         addr: &str,
114 | |         last_seen: i64,
115 | |         prefer_encrypt: EncryptPreference,
116 | |         public_key: &SignedPublicKey,
117 | |     ) -> Self {
    | |_____________^
...
140 |       pub fn from_gossip(gossip_header: &Aheader, message_time: i64) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `iroh_metrics::core::Metric`
            candidate #20: `bitvec::store::BitStore`
            candidate #21: `radium::Radium`
            candidate #22: `netlink_sys::async_socket::AsyncSocket`
            candidate #23: `nonzero_ext::NonZero`
            candidate #24: `Allocable`
            candidate #25: `AnyBoxConstructor`

error[E0599]: no method named `transpose` found for enum `std::option::Option<std::string::String>` in the current scope
   --> src/qr.rs:283:68
    |
283 |         let addr = param.get("a").map(|addr| addr_normalize(addr)).transpose()?;
    |                          --------                                  ^^^^^^^^^ method not found in `Option<String>`
    |                          |
    |                          method `transpose` is available on `std::option::Option<&&str>`
    |
    = note: the method was found for
            - `std::option::Option<std::result::Result<T, E>>`

error[E0308]: mismatched types
   --> src/qr.rs:308:21
    |
308 |                     contact_id,
    |                     ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `ContactId`
                found tuple `(ContactId, Modifier)`

error[E0308]: mismatched types
   --> src/qr.rs:315:21
    |
315 |                     contact_id,
    |                     ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `ContactId`
                found tuple `(ContactId, Modifier)`

error[E0609]: no field `addr` on type `std::option::Option<Peerstate>`
   --> src/qr.rs:322:65
    |
322 |             let peerstate_addr = ContactAddress::new(&peerstate.addr)?;
    |                                                                 ^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
322 |             let peerstate_addr = ContactAddress::new(&peerstate.unwrap().addr)?;
    |                                                                 +++++++++

error[E0308]: mismatched types
   --> src/qr.rs:324:28
    |
324 |             Ok(Qr::FprOk { contact_id })
    |                            ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `ContactId`
                found tuple `(ContactId, Modifier)`

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/qr.rs:332:20
    |
332 |         let addr = addr_normalize(addr)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `std::string::String`
    |
    = help: the trait `Try` is not implemented for `std::string::String`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:332:13
    |
332 |         let addr = addr_normalize(addr)?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:332:20
    |
332 |         let addr = addr_normalize(addr)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:332:20
    |
332 |         let addr = addr_normalize(addr)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:332:40
    |
332 |         let addr = addr_normalize(addr)?;
    |                                        ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `Break`
...
93  |     Break(B),
    |     ----- required by a bound in this variant

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/qr.rs:336:20
    |
336 |         let addr = addr_normalize(addr)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `std::string::String`
    |
    = help: the trait `Try` is not implemented for `std::string::String`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:336:13
    |
336 |         let addr = addr_normalize(addr)?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:336:20
    |
336 |         let addr = addr_normalize(addr)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:336:20
    |
336 |         let addr = addr_normalize(addr)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/qr.rs:336:40
    |
336 |         let addr = addr_normalize(addr)?;
    |                                        ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `Break`
...
93  |     Break(B),
    |     ----- required by a bound in this variant

Some errors have detailed explanations: E0252, E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 2 warnings
error: could not compile `deltachat` (lib) due to 18 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no variant or associated item named `default` found for enum `qr::Qr` in the current scope
   --> src/qr.rs:263:25
    |
47  | pub enum Qr {
    | ----------- variant or associated item `default` not found for this enum
...
263 |     let qr_parsed = Qr::default();
    |                         ^^^^^^^ variant or associated item not found in `qr::Qr`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `default`, perhaps you need to implement one of them:
            candidate #1: `std::default::Default`
            candidate #2: `tinyvec::array::Array`

error[E0599]: no function or associated item named `new` found for struct `peerstate::Peerstate` in the current scope
   --> src/qr.rs:264:32
    |
264 |     let peerstate = Peerstate::new(context).await?;
    |                                ^^^ function or associated item not found in `Peerstate`
    |
   ::: src/peerstate.rs:35:1
    |
35  | pub struct Peerstate {
    | -------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `peerstate::Peerstate` consider using one of the following associated functions:
      peerstate::Peerstate::from_header
      peerstate::Peerstate::from_public_key
      peerstate::Peerstate::from_gossip
   --> src/peerstate.rs:102:5
    |
102 |       pub fn from_header(header: &Aheader, message_time: i64) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112 | /     pub fn from_public_key(
113 | |         addr: &str,
114 | |         last_seen: i64,
115 | |         prefer_encrypt: EncryptPreference,
116 | |         public_key: &SignedPublicKey,
117 | |     ) -> Self {
    | |_____________^
...
140 |       pub fn from_gossip(gossip_header: &Aheader, message_time: i64) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `sysinfo::traits::SystemExt`
            candidate #20: `gimli::read::lookup::PubStuffEntry`
            candidate #21: `iroh_metrics::core::Metric`
            candidate #22: `bitvec::store::BitStore`
            candidate #23: `radium::Radium`
            candidate #24: `netlink_sys::async_socket::AsyncSocket`
            candidate #25: `nonzero_ext::NonZero`
            candidate #26: `Allocable`
            candidate #27: `AnyBoxConstructor`

error[E0308]: mismatched types
   --> src/qr.rs:308:21
    |
308 |                     contact_id,
    |                     ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `contact::ContactId`
                found tuple `(contact::ContactId, contact::Modifier)`

error[E0308]: mismatched types
   --> src/qr.rs:315:21
    |
315 |                     contact_id,
    |                     ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `contact::ContactId`
                found tuple `(contact::ContactId, contact::Modifier)`

error[E0609]: no field `addr` on type `std::option::Option<peerstate::Peerstate>`
   --> src/qr.rs:322:65
    |
322 |             let peerstate_addr = ContactAddress::new(&peerstate.addr)?;
    |                                                                 ^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
322 |             let peerstate_addr = ContactAddress::new(&peerstate.unwrap().addr)?;
    |                                                                 +++++++++

error[E0308]: mismatched types
   --> src/qr.rs:324:28
    |
324 |             Ok(Qr::FprOk { contact_id })
    |                            ^^^^^^^^^^ expected `ContactId`, found `(ContactId, Modifier)`
    |
    = note: expected struct `contact::ContactId`
                found tuple `(contact::ContactId, contact::Modifier)`

warning: `deltachat` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `deltachat` (lib test) due to 18 previous errors; 2 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

