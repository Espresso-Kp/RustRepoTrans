Fail
file path is :
projects/deltachat-core/rust/src/chatlist.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `Blocked` is defined multiple times
  --> src/chatlist.rs:14:5
   |
4  | use crate::constants::{Blocked, ChatVisibility};
   |                        ------- previous import of the type `Blocked` here
...
14 |     Blocked, Chattype, DC_CHAT_ID_ALLDONE_HINT, DC_CHAT_ID_ARCHIVED_LINK, DC_GCL_ADD_ALLDONE_HINT,
   |     ^^^^^^^--
   |     |
   |     `Blocked` reimported here
   |     help: remove unnecessary import
   |
   = note: `Blocked` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::constants::ChatVisibility`
 --> src/chatlist.rs:4:33
  |
4 | use crate::constants::{Blocked, ChatVisibility};
  |                                 ^^^^^^^^^^^^^^ no `ChatVisibility` in `constants`
  |
  = help: consider importing this enum instead:
          crate::chat::ChatVisibility

warning: unused import: `Blocked`
 --> src/chatlist.rs:4:24
  |
4 | use crate::constants::{Blocked, ChatVisibility};
  |                        ^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `Connection`
 --> src/chatlist.rs:5:24
  |
5 | use rusqlite::{params, Connection};
  |                        ^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src/chatlist.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::Mutex`
 --> src/chatlist.rs:7:5
  |
7 | use tokio::sync::Mutex;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `Blocked`
  --> src/chatlist.rs:14:5
   |
14 |     Blocked, Chattype, DC_CHAT_ID_ALLDONE_HINT, DC_CHAT_ID_ARCHIVED_LINK, DC_GCL_ADD_ALLDONE_HINT,
   |     ^^^^^^^

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chatlist.rs:454:8
    |
452 |     let count = sql.count(&format!(
    |                     ----- required by a bound introduced by this call
453 |         "SELECT COUNT(*) FROM chats WHERE blocked=0 AND archived=1;"
454 |     ), params![]).await?;
    |        ^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::count`
   --> src/sql.rs:446:76
    |
446 |     pub async fn count(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
    |                                                                            ^^^^ required by this bound in `Sql::count`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chatlist.rs:454:8
    |
452 |     let count = sql.count(&format!(
    |                     ----- required by a bound introduced by this call
453 |         "SELECT COUNT(*) FROM chats WHERE blocked=0 AND archived=1;"
454 |     ), params![]).await?;
    |        ^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::count`
   --> src/sql.rs:446:76
    |
446 |     pub async fn count(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
    |                                                                            ^^^^ required by this bound in `Sql::count`

Some errors have detailed explanations: E0252, E0277, E0432.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 5 warnings
error: could not compile `deltachat` (lib) due to 3 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 5 warnings (5 duplicates)
error: could not compile `deltachat` (lib test) due to 3 previous errors; 5 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

