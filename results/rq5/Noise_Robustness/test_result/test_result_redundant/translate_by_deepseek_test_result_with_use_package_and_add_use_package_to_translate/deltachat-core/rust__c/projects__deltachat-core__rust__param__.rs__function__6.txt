Fail
file path is :
projects/deltachat-core/rust/src/param.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0277]: `Param` doesn't implement `std::fmt::Display`
   --> src/param.rs:300:56
    |
300 |             if p2.unwrap().starts_with(&format!("{}=", key)) {
    |                                                        ^^^ `Param` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Param`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> src/param.rs:313:12
    |
313 |     if let Some(value) = value.to_string().as_str() {
    |            ^^^^^^^^^^^   -------------------------- this expression has type `&str`
    |            |
    |            expected `str`, found `Option<_>`
    |
    = note: expected type `str`
               found enum `std::option::Option<_>`

error[E0277]: `Param` doesn't implement `std::fmt::Display`
   --> src/param.rs:317:13
    |
317 |             key,
    |             ^^^ `Param` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Param`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: `param::Param` doesn't implement `std::fmt::Display`
   --> src/param.rs:300:56
    |
300 |             if p2.unwrap().starts_with(&format!("{}=", key)) {
    |                                                        ^^^ `param::Param` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `param::Param`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `param::Param` doesn't implement `std::fmt::Display`
   --> src/param.rs:317:13
    |
317 |             key,
    |             ^^^ `param::Param` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `param::Param`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `deltachat` (lib test) due to 3 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

