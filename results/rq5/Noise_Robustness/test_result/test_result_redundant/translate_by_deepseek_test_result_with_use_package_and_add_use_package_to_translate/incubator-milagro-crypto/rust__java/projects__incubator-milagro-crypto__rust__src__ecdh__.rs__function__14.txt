Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `cbc_iv0_encrypt` is defined multiple times
   --> src/./ecdh.rs:663:1
    |
272 | pub fn cbc_iv0_encrypt(k: &[u8], m: &[u8]) -> Vec<u8> {
    | ----------------------------------------------------- previous definition of the value `cbc_iv0_encrypt` here
...
663 | fn cbc_iv0_encrypt(k: &[u8], m: &[u8]) -> Vec<u8> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `cbc_iv0_encrypt` redefined here
    |
    = note: `cbc_iv0_encrypt` must be defined only once in the value namespace of this module

error[E0428]: the name `hmac` is defined multiple times
   --> src/./ecdh.rs:708:1
    |
227 | pub fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | -------------------------------------------------------------------------------- previous definition of the value `hmac` here
...
708 | fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> Option<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hmac` redefined here
    |
    = note: `hmac` must be defined only once in the value namespace of this module

error[E0428]: the name `kdf2` is defined multiple times
   --> src/./ecdh.rs:748:1
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    | ------------------------------------------------------------------------------ previous definition of the value `kdf2` here
...
748 | fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize) -> Vec<u8> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `kdf2` redefined here
    |
    = note: `kdf2` must be defined only once in the value namespace of this module

error[E0428]: the name `key_pair_generate` is defined multiple times
   --> src/./ecdh.rs:776:1
    |
397 | pub fn key_pair_generate(rng: Option<&mut RAND>, s: &mut [u8], w: &mut [u8]) -> isize {
    | ------------------------------------------------------------------------------------- previous definition of the value `key_pair_generate` here
...
776 | fn key_pair_generate(rng: Option<&mut RAND>, s: &mut [u8], w: &mut [u8]) -> Option<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `key_pair_generate` redefined here
    |
    = note: `key_pair_generate` must be defined only once in the value namespace of this module

error[E0599]: no method named `is_none` found for type `isize` in the current scope
   --> src/./ecdh.rs:621:48
    |
621 |     if key_pair_generate(Some(rng), &mut u, v).is_none() {
    |                                                ^^^^^^^ method not found in `isize`

error[E0599]: no method named `is_none` found for type `isize` in the current scope
   --> src/./ecdh.rs:624:34
    |
624 |     if ecpsvdp_dh(&u, w, &mut z).is_none() {
    |                                  ^^^^^^^ method not found in `isize`

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:635:13
    |
635 |     let k = kdf2(sha, &vz, Some(p1), 2 * aeskey);
    |             ^^^^-------------------------------- an argument of type `&mut [u8]` is missing
    |
note: function defined here
   --> src/./ecdh.rs:153:8
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |        ^^^^ ----------  --------  ----------------  -----------  ------------
help: provide the argument
    |
635 |     let k = kdf2(sha, &vz, Some(p1), 2 * aeskey, /* &mut [u8] */);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:638:17
    |
638 |         k1[i] = k[i];
    |                 ^^-^
    |                   |
    |                   cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:639:17
    |
639 |         k2[i] = k[aeskey + i];
    |                 ^^^^^^^^^^^^^
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:654:38
    |
654 |         ac[c.len() + p2.len() + i] = l2[i];
    |                                      ^^^-^
    |                                         |
    |                                         cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:657:8
    |
657 |     if hmac(sha, &ac, &k2, t).is_none() {
    |        ^^^^                - an argument of type `usize` is missing
    |
note: function defined here
   --> src/./ecdh.rs:227:8
    |
227 | pub fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    |        ^^^^ ----------  --------  --------  -----------  --------------
help: provide the argument
    |
657 |     if hmac(sha, &ac, &k2, /* usize */, t).is_none() {
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `is_none` found for type `bool` in the current scope
   --> src/./ecdh.rs:657:31
    |
657 |     if hmac(sha, &ac, &k2, t).is_none() {
    |                               ^^^^^^^ method not found in `bool`

Some errors have detailed explanations: E0061, E0428, E0599, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 12 previous errors

