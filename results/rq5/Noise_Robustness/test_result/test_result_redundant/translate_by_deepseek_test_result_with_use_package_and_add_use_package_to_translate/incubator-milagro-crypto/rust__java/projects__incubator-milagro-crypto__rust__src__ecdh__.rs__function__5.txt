Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `intto_bytes` is defined multiple times
   --> src/./ecdh.rs:235:1
    |
44  | fn intto_bytes(n: usize, b: &mut [u8]) {
    | -------------------------------------- previous definition of the value `intto_bytes` here
...
235 | fn intto_bytes(n: usize, len: usize) -> Vec<u8> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `intto_bytes` redefined here
    |
    = note: `intto_bytes` must be defined only once in the value namespace of this module

error[E0428]: the name `hashit` is defined multiple times
   --> src/./ecdh.rs:286:1
    |
55  | fn hashit(sha: usize, a: &[u8], n: usize, b: Option<&[u8]>, pad: usize, w: &mut [u8]) {
    | ------------------------------------------------------------------------------------- previous definition of the value `hashit` here
...
286 | fn hashit(sha: usize, data: Option<&[u8]>, len: isize, key: Option<&[u8]>, olen: usize, tag: &mut [u8]) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hashit` redefined here
    |
    = note: `hashit` must be defined only once in the value namespace of this module

error[E0428]: the name `hmac` is defined multiple times
   --> src/./ecdh.rs:294:1
    |
246 | fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | ---------------------------------------------------------------------------- previous definition of the value `hmac` here
...
294 | pub fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hmac` redefined here
    |
    = note: `hmac` must be defined only once in the value namespace of this module

error[E0308]: mismatched types
   --> src/./ecdh.rs:209:32
    |
209 |         let n = intto_bytes(i, 4);
    |                 -----------    ^ expected `&mut [u8]`, found integer
    |                 |
    |                 arguments to this function are incorrect
    |
note: function defined here
   --> src/./ecdh.rs:44:4
    |
44  | fn intto_bytes(n: usize, b: &mut [u8]) {
    |    ^^^^^^^^^^^           ------------

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:211:33
    |
211 |             s[salt.len() + j] = n[j];
    |                                 ^^-^
    |                                   |
    |                                   cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:214:9
    |
214 |         hmac(sha, &s, pass, &mut f);
    |         ^^^^                ------ an argument of type `usize` is missing
    |
note: function defined here
   --> src/./ecdh.rs:246:4
    |
246 | fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    |    ^^^^ ----------  --------  --------  -----------  --------------
help: provide the argument
    |
214 |         hmac(sha, &s, pass, /* usize */, &mut f);
    |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:220:13
    |
220 |             hmac(sha, &u, pass, &mut u);
    |             ^^^^                ------ an argument of type `usize` is missing
    |
note: function defined here
   --> src/./ecdh.rs:246:4
    |
246 | fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    |    ^^^^ ----------  --------  --------  -----------  --------------
help: provide the argument
    |
220 |             hmac(sha, &u, pass, /* usize */, &mut u);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `usize`
   --> src/./ecdh.rs:232:9
    |
232 |         k[i] = k_vec[i];
    |         ^^^^

Some errors have detailed explanations: E0061, E0308, E0428, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 8 previous errors

