Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `hashit` is defined multiple times
   --> src/./ecdh.rs:254:1
    |
55  | fn hashit(sha: usize, a: &[u8], n: usize, b: Option<&[u8]>, pad: usize, w: &mut [u8]) {
    | ------------------------------------------------------------------------------------- previous definition of the value `hashit` here
...
254 | fn hashit(sha: usize, m: Option<&[u8]>, _: i32, _: Option<&[u8]>, _: usize, _: &mut [u8]) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hashit` redefined here
    |
    = note: `hashit` must be defined only once in the value namespace of this module

error[E0428]: the name `hmac` is defined multiple times
   --> src/./ecdh.rs:262:1
    |
214 | pub fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | -------------------------------------------------------------------------------- previous definition of the value `hmac` here
...
262 | pub fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hmac` redefined here
    |
    = note: `hmac` must be defined only once in the value namespace of this module

error[E0422]: cannot find struct, variant or union type `OCT` in this scope
   --> src/./ecdh.rs:198:27
    |
198 |         let mut f_octet = OCT { len: hmac_result.len(), data: hmac_result };
    |                           ^^^ not found in this scope

error[E0308]: mismatched types
   --> src/./ecdh.rs:193:24
    |
193 |         intto_bytes(i, &mut len);
    |         -----------    ^^^^^^^^ expected `&mut [u8]`, found `&mut usize`
    |         |
    |         arguments to this function are incorrect
    |
    = note: expected mutable reference `&mut [u8]`
               found mutable reference `&mut usize`
note: function defined here
   --> src/./ecdh.rs:44:4
    |
44  | fn intto_bytes(n: usize, b: &mut [u8]) {
    |    ^^^^^^^^^^^           ------------

error[E0308]: mismatched types
   --> src/./ecdh.rs:212:10
    |
212 |     *k = chopped_key;
    |     --   ^^^^^^^^^^^ expected `[u8]`, found `Vec<_>`
    |     |
    |     expected due to the type of this binding
    |
    = note: expected slice `[u8]`
              found struct `Vec<_>`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> src/./ecdh.rs:212:5
    |
212 |     *k = chopped_key;
    |     ^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: the left-hand-side of an assignment must have a statically known size

Some errors have detailed explanations: E0277, E0308, E0422, E0428.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 6 previous errors

