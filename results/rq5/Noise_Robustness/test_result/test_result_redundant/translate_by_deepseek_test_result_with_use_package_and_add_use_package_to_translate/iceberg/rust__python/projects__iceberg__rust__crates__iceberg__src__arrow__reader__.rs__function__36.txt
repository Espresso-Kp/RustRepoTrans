Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:558:12
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |            ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:558:32
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |                                ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:560:19
    |
560 |     } else if lhs(RecordBatch) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:562:19
    |
562 |     } else if rhs(RecordBatch) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:558:8
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |        ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:558:28
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |                            ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:559:64
    |
559 |         Ok(Box::new(move |batch: RecordBatch| Ok(BooleanArray::from_slice(&[true]))))
    |                                                                ^^^^^^^^^^
    |                                                                |
    |                                                                function or associated item not found in `BooleanArray`
    |                                                                help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:560:15
    |
560 |     } else if lhs(RecordBatch) {
    |               ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:562:15
    |
562 |     } else if rhs(RecordBatch) {
    |               ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0609]: no field `left` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:567:13
    |
567 |         obj.left = lhs;
    |             ^^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0609]: no field `right` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:568:13
    |
568 |         obj.right = rhs;
    |             ^^^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0277]: expected a `FnMut(RecordBatch)` closure, found `PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:569:12
    |
569 |         Ok(Box::new(obj))
    |            ^^^^^^^^^^^^^ expected an `FnMut(RecordBatch)` closure, found `PredicateConverter<'a>`
    |
    = help: the trait `FnMut<(RecordBatch,)>` is not implemented for `PredicateConverter<'a>`, which is required by `&mut PredicateConverter<'a>: FnMut(RecordBatch)`
    = note: required for `&mut PredicateConverter<'a>` to implement `FnMut<(RecordBatch,)>`
    = note: required for the cast from `Box<&mut PredicateConverter<'a>>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

Some errors have detailed explanations: E0277, E0308, E0423, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 12 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 12 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:558:12
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |            ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:558:32
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |                                ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:560:19
    |
560 |     } else if lhs(RecordBatch) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:562:19
    |
562 |     } else if rhs(RecordBatch) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:558:8
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |        ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:558:28
    |
558 |     if lhs(RecordBatch) || rhs(RecordBatch) {
    |                            ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:559:64
    |
559 |         Ok(Box::new(move |batch: RecordBatch| Ok(BooleanArray::from_slice(&[true]))))
    |                                                                ^^^^^^^^^^
    |                                                                |
    |                                                                function or associated item not found in `BooleanArray`
    |                                                                help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:560:15
    |
560 |     } else if lhs(RecordBatch) {
    |               ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:562:15
    |
562 |     } else if rhs(RecordBatch) {
    |               ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<BooleanArray, ArrowError>`
    |
    = note: expected type `bool`
               found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`

error[E0609]: no field `left` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:567:13
    |
567 |         obj.left = lhs;
    |             ^^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0609]: no field `right` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:568:13
    |
568 |         obj.right = rhs;
    |             ^^^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0277]: expected a `FnMut(RecordBatch)` closure, found `PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:569:12
    |
569 |         Ok(Box::new(obj))
    |            ^^^^^^^^^^^^^ expected an `FnMut(RecordBatch)` closure, found `PredicateConverter<'a>`
    |
    = help: the trait `FnMut<(RecordBatch,)>` is not implemented for `PredicateConverter<'a>`, which is required by `&mut PredicateConverter<'a>: FnMut(RecordBatch)`
    = note: required for `&mut PredicateConverter<'a>` to implement `FnMut<(RecordBatch,)>`
    = note: required for the cast from `Box<&mut PredicateConverter<'a>>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

Some errors have detailed explanations: E0277, E0308, E0423, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 12 previous errors; 1 warning emitted

