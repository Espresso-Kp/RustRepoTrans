Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:318:19
    |
318 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
20  + use serde_json::json;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace).await?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:323:25
    |
323 |     let response = self._session.post(self.url(Endpoints::create_namespace)).send_json(&payload).await?;
    |                         ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `url` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:323:44
    |
323 |     let response = self._session.post(self.url(Endpoints::create_namespace)).send_json(&payload).await?;
    |                                            ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:323:48
    |
323 |     let response = self._session.post(self.url(Endpoints::create_namespace)).send_json(&payload).await?;
    |                                                ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:9
    |
326 |     let response_text = response.text().await?;
    |         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:25
    |
326 |     let response_text = response.text().await?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:25
    |
326 |     let response_text = response.text().await?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:46
    |
326 |     let response_text = response.text().await?;
    |                                              ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

Some errors have detailed explanations: E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:318:19
    |
318 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
20  + use serde_json::json;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace).await?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:323:25
    |
323 |     let response = self._session.post(self.url(Endpoints::create_namespace)).send_json(&payload).await?;
    |                         ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `url` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:323:44
    |
323 |     let response = self._session.post(self.url(Endpoints::create_namespace)).send_json(&payload).await?;
    |                                            ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:323:48
    |
323 |     let response = self._session.post(self.url(Endpoints::create_namespace)).send_json(&payload).await?;
    |                                                ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:9
    |
326 |     let response_text = response.text().await?;
    |         ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:25
    |
326 |     let response_text = response.text().await?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:25
    |
326 |     let response_text = response.text().await?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:326:46
    |
326 |     let response_text = response.text().await?;
    |                                              ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

Some errors have detailed explanations: E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

