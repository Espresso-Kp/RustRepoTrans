Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/iceberg/src/io.rs:234:1
    |
234 | pub async fn read(&self, range: Range<u64>) -> Result<Bytes> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:236:46
    |
236 |             return Err(Error::new(ErrorKind::InvalidInput, "Requested negative range to read, expected non-negative integer."));
    |                                              ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0609]: no field `_input_stream` on type `&opendal::Reader`
   --> crates/iceberg/src/io.rs:243:33
    |
243 |             let read_len = self._input_stream.read(&mut data[..], n_remaining).await?;
    |                                 ^^^^^^^^^^^^^ unknown field

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:247:24
    |
247 |                 return Bytes::from(data);
    |                        ^^^^^^^^^^^^^^^^^ expected `Result<Bytes, Error>`, found `Bytes`
    |
    = note: expected enum `std::result::Result<bytes::Bytes, error::Error>`
             found struct `bytes::Bytes`
note: return type inferred to be `std::result::Result<bytes::Bytes, error::Error>` here
   --> crates/iceberg/src/io.rs:230:1
    |
230 | #[async_trait::async_trait]
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: this error originates in the attribute macro `async_trait::async_trait` (in Nightly builds, run with -Z macro-backtrace for more info)
help: try wrapping the expression in `Ok`
    |
247 |                 return Ok(Bytes::from(data));
    |                        +++                 +

error[E0599]: no variant or associated item named `UnexpectedEof` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:249:50
    |
249 |                 return Err(Error::new(ErrorKind::UnexpectedEof, "EOF: read 0 bytes"));
    |                                                  ^^^^^^^^^^^^^
    |                                                  |
    |                                                  variant or associated item not found in `ErrorKind`
    |                                                  help: there is a variant with a similar name: `Unexpected`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnexpectedEof` not found for this enum

Some errors have detailed explanations: E0308, E0449, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 5 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/iceberg/src/io.rs:234:1
    |
234 | pub async fn read(&self, range: Range<u64>) -> Result<Bytes> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:236:46
    |
236 |             return Err(Error::new(ErrorKind::InvalidInput, "Requested negative range to read, expected non-negative integer."));
    |                                              ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0609]: no field `_input_stream` on type `&opendal::Reader`
   --> crates/iceberg/src/io.rs:243:33
    |
243 |             let read_len = self._input_stream.read(&mut data[..], n_remaining).await?;
    |                                 ^^^^^^^^^^^^^ unknown field

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:247:24
    |
247 |                 return Bytes::from(data);
    |                        ^^^^^^^^^^^^^^^^^ expected `Result<Bytes, Error>`, found `Bytes`
    |
    = note: expected enum `std::result::Result<bytes::Bytes, error::Error>`
             found struct `bytes::Bytes`
note: return type inferred to be `std::result::Result<bytes::Bytes, error::Error>` here
   --> crates/iceberg/src/io.rs:230:1
    |
230 | #[async_trait::async_trait]
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: this error originates in the attribute macro `async_trait::async_trait` (in Nightly builds, run with -Z macro-backtrace for more info)
help: try wrapping the expression in `Ok`
    |
247 |                 return Ok(Bytes::from(data));
    |                        +++                 +

error[E0599]: no variant or associated item named `UnexpectedEof` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:249:50
    |
249 |                 return Err(Error::new(ErrorKind::UnexpectedEof, "EOF: read 0 bytes"));
    |                                                  ^^^^^^^^^^^^^
    |                                                  |
    |                                                  variant or associated item not found in `ErrorKind`
    |                                                  help: there is a variant with a similar name: `Unexpected`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnexpectedEof` not found for this enum

Some errors have detailed explanations: E0308, E0449, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 5 previous errors

