Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0277]: `std::result::Result<DatabaseInput, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:152:69
    |
152 |     let database_name = convert_to_database(namespace, &properties).await?;
    |                         ------------------------------------------- ^^^^^ `std::result::Result<DatabaseInput, iceberg::Error>` is not a future
    |                         |
    |                         this call returns `std::result::Result<DatabaseInput, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `std::result::Result<DatabaseInput, iceberg::Error>`, which is required by `std::result::Result<DatabaseInput, iceberg::Error>: IntoFuture`
    = note: std::result::Result<DatabaseInput, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<DatabaseInput, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
152 -     let database_name = convert_to_database(namespace, &properties).await?;
152 +     let database_name = convert_to_database(namespace, &properties)?;
    |
help: alternatively, consider making `fn convert_to_database` asynchronous
   --> crates/catalog/glue/src/utils.rs:96:11
    |
96  | pub(crate) async fn convert_to_database(
    |            +++++

error[E0599]: no variant or associated item named `InvalidInput` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:154:20
    |
154 |         ErrorKind::InvalidInput,
    |                    ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:158:16
    |
158 |     match self.glue.create_database().input(database_name).send().await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:163:32
    |
163 |                     ErrorKind::AlreadyExists,
    |                                ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

Some errors have detailed explanations: E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0277]: `Result<DatabaseInput, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:152:69
    |
152 |     let database_name = convert_to_database(namespace, &properties).await?;
    |                         ------------------------------------------- ^^^^^ `Result<DatabaseInput, iceberg::Error>` is not a future
    |                         |
    |                         this call returns `Result<DatabaseInput, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `Result<DatabaseInput, iceberg::Error>`, which is required by `Result<DatabaseInput, iceberg::Error>: IntoFuture`
    = note: Result<DatabaseInput, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<DatabaseInput, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
152 -     let database_name = convert_to_database(namespace, &properties).await?;
152 +     let database_name = convert_to_database(namespace, &properties)?;
    |
help: alternatively, consider making `fn convert_to_database` asynchronous
   --> crates/catalog/glue/src/utils.rs:96:11
    |
96  | pub(crate) async fn convert_to_database(
    |            +++++

error[E0599]: no variant or associated item named `InvalidInput` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:154:20
    |
154 |         ErrorKind::InvalidInput,
    |                    ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:158:16
    |
158 |     match self.glue.create_database().input(database_name).send().await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:163:32
    |
163 |                     ErrorKind::AlreadyExists,
    |                                ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

Some errors have detailed explanations: E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...

