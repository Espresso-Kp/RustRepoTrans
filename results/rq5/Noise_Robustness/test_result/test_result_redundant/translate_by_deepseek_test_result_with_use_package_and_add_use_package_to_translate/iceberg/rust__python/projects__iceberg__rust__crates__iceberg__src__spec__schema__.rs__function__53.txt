Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/spec/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `visit_schema` is defined multiple times
   --> crates/iceberg/src/spec/schema.rs:756:1
    |
462 | pub fn visit_schema<V: SchemaVisitor>(schema: &Schema, visitor: &mut V) -> Result<V::T> {
    | --------------------------------------------------------------------------------------- previous definition of the value `visit_schema` here
...
756 | pub fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_schema` redefined here
    |
    = note: `visit_schema` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:766:11
    |
766 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:780:10
    |
780 | fn field(&mut self, field: &NestedFieldRef, result: Self::T) -> Result<Self::T> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:752:20
    |
752 |         id_lookup: OnceLock::new(),
    |                    ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:753:22
    |
753 |         name_lookup: OnceLock::new(),
    |                      ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0405]: cannot find trait `ArrowSchemaVisitor` in this scope
   --> crates/iceberg/src/spec/schema.rs:756:24
    |
365 | pub trait SchemaVisitor {
    | ----------------------- similarly named trait `SchemaVisitor` defined here
...
756 | pub fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    |                        ^^^^^^^^^^^^^^^^^^
    |
help: a trait with a similar name exists
    |
756 | pub fn visit_schema<V: SchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    |                        ~~~~~~~~~~~~~
help: consider importing this trait through its public re-export
    |
20  + use crate::arrow::ArrowSchemaVisitor;
    |

error[E0412]: cannot find type `ArrowSchema` in this scope
   --> crates/iceberg/src/spec/schema.rs:756:53
    |
756 | pub fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    |                                                     ^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:776:24
    |
776 |             id_lookup: OnceLock::new(),
    |                        ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:777:26
    |
777 |             name_lookup: OnceLock::new(),
    |                          ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:766:47
    |
766 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                               ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:766:66
    |
766 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                                                  ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:780:53
    |
780 | fn field(&mut self, field: &NestedFieldRef, result: Self::T) -> Result<Self::T> {
    |                                                     ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:780:72
    |
780 | fn field(&mut self, field: &NestedFieldRef, result: Self::T) -> Result<Self::T> {
    |                                                                        ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0405, E0412, E0428, E0433.
For more information about an error, try `rustc --explain E0405`.
error: could not compile `iceberg` (lib) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 13 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `visit_schema` is defined multiple times
   --> crates/iceberg/src/spec/schema.rs:756:1
    |
462 | pub fn visit_schema<V: SchemaVisitor>(schema: &Schema, visitor: &mut V) -> Result<V::T> {
    | --------------------------------------------------------------------------------------- previous definition of the value `visit_schema` here
...
756 | pub fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_schema` redefined here
    |
    = note: `visit_schema` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:766:11
    |
766 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/spec/schema.rs:780:10
    |
780 | fn field(&mut self, field: &NestedFieldRef, result: Self::T) -> Result<Self::T> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:752:20
    |
752 |         id_lookup: OnceLock::new(),
    |                    ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:753:22
    |
753 |         name_lookup: OnceLock::new(),
    |                      ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0405]: cannot find trait `ArrowSchemaVisitor` in this scope
   --> crates/iceberg/src/spec/schema.rs:756:24
    |
365 | pub trait SchemaVisitor {
    | ----------------------- similarly named trait `SchemaVisitor` defined here
...
756 | pub fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    |                        ^^^^^^^^^^^^^^^^^^
    |
help: a trait with a similar name exists
    |
756 | pub fn visit_schema<V: SchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    |                        ~~~~~~~~~~~~~
help: consider importing this trait through its public re-export
    |
20  + use crate::arrow::ArrowSchemaVisitor;
    |

error[E0412]: cannot find type `ArrowSchema` in this scope
   --> crates/iceberg/src/spec/schema.rs:756:53
    |
756 | pub fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<Option<V::U>> {
    |                                                     ^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:776:24
    |
776 |             id_lookup: OnceLock::new(),
    |                        ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: use of undeclared type `OnceLock`
   --> crates/iceberg/src/spec/schema.rs:777:26
    |
777 |             name_lookup: OnceLock::new(),
    |                          ^^^^^^^^ use of undeclared type `OnceLock`
    |
help: consider importing this struct
    |
20  + use std::sync::OnceLock;
    |

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:766:47
    |
766 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                               ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:766:66
    |
766 | fn schema(&mut self, schema: &Schema, result: Self::T) -> Result<Self::T> {
    |                                                                  ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:780:53
    |
780 | fn field(&mut self, field: &NestedFieldRef, result: Self::T) -> Result<Self::T> {
    |                                                     ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/spec/schema.rs:780:72
    |
780 | fn field(&mut self, field: &NestedFieldRef, result: Self::T) -> Result<Self::T> {
    |                                                                        ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0405, E0412, E0428, E0433.
For more information about an error, try `rustc --explain E0405`.
error: could not compile `iceberg` (lib) due to 13 previous errors

