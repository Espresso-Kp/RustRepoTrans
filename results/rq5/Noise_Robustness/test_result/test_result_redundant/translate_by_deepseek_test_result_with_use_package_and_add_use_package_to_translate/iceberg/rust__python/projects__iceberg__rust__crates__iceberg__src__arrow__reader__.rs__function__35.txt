Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:546:12
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |            ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:546:74
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |                                                                          ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:548:19
    |
548 |     } else if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:550:19
    |
550 |     } else if rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

warning: unused import: `and`
  --> crates/iceberg/src/arrow/reader.rs:21:28
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                            ^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:45
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |                                             ^^^^^^^^^^
    |                                             |
    |                                             function or associated item not found in `BooleanArray`
    |                                             help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:107
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |                                                                                                           ^^^^^^^^^^
    |                                                                                                           |
    |                                                                                                           function or associated item not found in `BooleanArray`
    |                                                                                                           help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:547:54
    |
547 |         return Ok(Box::new(move |_| Ok(BooleanArray::from_slice(&[false]))));
    |                                                      ^^^^^^^^^^
    |                                                      |
    |                                                      function or associated item not found in `BooleanArray`
    |                                                      help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:548:52
    |
548 |     } else if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                                                    ^^^^^^^^^^
    |                                                    |
    |                                                    function or associated item not found in `BooleanArray`
    |                                                    help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:550:52
    |
550 |     } else if rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                                                    ^^^^^^^^^^
    |                                                    |
    |                                                    function or associated item not found in `BooleanArray`
    |                                                    help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0609]: no field `lhs` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:555:13
    |
555 |         obj.lhs = lhs;
    |             ^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0609]: no field `rhs` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:556:13
    |
556 |         obj.rhs = rhs;
    |             ^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:562:46
    |
562 |                     if let (Ok(BooleanArray::from_slice(&lhs_slice)), Ok(BooleanArray::from_slice(&rhs_slice))) = (lhs_result, rhs_result) {
    |                                              ^^^^^^^^^^
    |                                              |
    |                                              function or associated item not found in `BooleanArray`
    |                                              help: there is a method with a similar name: `slice`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:562:88
    |
562 |                     if let (Ok(BooleanArray::from_slice(&lhs_slice)), Ok(BooleanArray::from_slice(&rhs_slice))) = (lhs_result, rhs_result) {
    |                                                                                        ^^^^^^^^^^
    |                                                                                        |
    |                                                                                        function or associated item not found in `BooleanArray`
    |                                                                                        help: there is a method with a similar name: `slice`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:564:42
    |
564 |                         Ok(BooleanArray::from_slice(&result_slice))
    |                                          ^^^^^^^^^^
    |                                          |
    |                                          function or associated item not found in `BooleanArray`
    |                                          help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:566:41
    |
566 |                         Err(ArrowError::General("Mismatch in BooleanArray slices".to_string()))
    |                                         ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:569:38
    |
569 |                 _ => Err(ArrowError::General("Error in predicate evaluation".to_string())),
    |                                      ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0423, E0599, E0609.
For more information about an error, try `rustc --explain E0423`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 16 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 16 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:546:12
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |            ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:546:74
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |                                                                          ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:548:19
    |
548 |     } else if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

error[E0423]: expected value, found struct `RecordBatch`
   --> crates/iceberg/src/arrow/reader.rs:550:19
    |
550 |     } else if rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                   ^^^^^^^^^^^
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/record_batch.rs:72:1
    |
72  | pub struct RecordBatch {
    | ---------------------- `RecordBatch` defined here

warning: unused import: `and`
  --> crates/iceberg/src/arrow/reader.rs:21:28
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                            ^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:45
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |                                             ^^^^^^^^^^
    |                                             |
    |                                             function or associated item not found in `BooleanArray`
    |                                             help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:107
    |
546 |     if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) || rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[false])) {
    |                                                                                                           ^^^^^^^^^^
    |                                                                                                           |
    |                                                                                                           function or associated item not found in `BooleanArray`
    |                                                                                                           help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:547:54
    |
547 |         return Ok(Box::new(move |_| Ok(BooleanArray::from_slice(&[false]))));
    |                                                      ^^^^^^^^^^
    |                                                      |
    |                                                      function or associated item not found in `BooleanArray`
    |                                                      help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:548:52
    |
548 |     } else if lhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                                                    ^^^^^^^^^^
    |                                                    |
    |                                                    function or associated item not found in `BooleanArray`
    |                                                    help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:550:52
    |
550 |     } else if rhs(RecordBatch) == Ok(BooleanArray::from_slice(&[true])) {
    |                                                    ^^^^^^^^^^
    |                                                    |
    |                                                    function or associated item not found in `BooleanArray`
    |                                                    help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0609]: no field `lhs` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:555:13
    |
555 |         obj.lhs = lhs;
    |             ^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0609]: no field `rhs` on type `&mut PredicateConverter<'a>`
   --> crates/iceberg/src/arrow/reader.rs:556:13
    |
556 |         obj.rhs = rhs;
    |             ^^^ unknown field
    |
    = note: available fields are: `parquet_schema`, `column_map`, `column_indices`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:562:46
    |
562 |                     if let (Ok(BooleanArray::from_slice(&lhs_slice)), Ok(BooleanArray::from_slice(&rhs_slice))) = (lhs_result, rhs_result) {
    |                                              ^^^^^^^^^^
    |                                              |
    |                                              function or associated item not found in `BooleanArray`
    |                                              help: there is a method with a similar name: `slice`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:562:88
    |
562 |                     if let (Ok(BooleanArray::from_slice(&lhs_slice)), Ok(BooleanArray::from_slice(&rhs_slice))) = (lhs_result, rhs_result) {
    |                                                                                        ^^^^^^^^^^
    |                                                                                        |
    |                                                                                        function or associated item not found in `BooleanArray`
    |                                                                                        help: there is a method with a similar name: `slice`

error[E0599]: no function or associated item named `from_slice` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:564:42
    |
564 |                         Ok(BooleanArray::from_slice(&result_slice))
    |                                          ^^^^^^^^^^
    |                                          |
    |                                          function or associated item not found in `BooleanArray`
    |                                          help: there is a method with a similar name: `slice`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:566:41
    |
566 |                         Err(ArrowError::General("Mismatch in BooleanArray slices".to_string()))
    |                                         ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:569:38
    |
569 |                 _ => Err(ArrowError::General("Error in predicate evaluation".to_string())),
    |                                      ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0423, E0599, E0609.
For more information about an error, try `rustc --explain E0423`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 16 previous errors; 1 warning emitted

