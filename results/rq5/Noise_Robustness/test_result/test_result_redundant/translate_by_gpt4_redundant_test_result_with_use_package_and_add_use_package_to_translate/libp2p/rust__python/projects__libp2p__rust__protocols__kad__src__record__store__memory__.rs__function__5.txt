Fail
file path is :
projects/libp2p/rust/protocols/kad/src/record/store/memory.rs

output is:


error is :
   Compiling libp2p-kad v0.46.1 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/libp2p/rust/protocols/kad)
   Compiling libp2p-gossipsub v0.47.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/libp2p/rust/protocols/gossipsub)
error[E0412]: cannot find type `PeerStoreError` in this scope
   --> protocols/kad/src/record/store/memory.rs:111:74
    |
111 | fn get(&self, peer_id: &kbucket::Key<PeerId>) -> Result<Cow<'_, Record>, PeerStoreError> {
    |                                                                          ^^^^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
100 | impl<PeerStoreError> RecordStore for MemoryStore {
    |     ++++++++++++++++

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> protocols/kad/src/record/store/memory.rs:111:50
    |
111 | fn get(&self, peer_id: &kbucket::Key<PeerId>) -> Result<Cow<'_, Record>, PeerStoreError> {
    |                                                  ^^^^^^                  -------------- help: remove this generic argument
    |                                                  |
    |                                                  expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> protocols/kad/src/record/store.rs:31:10
    |
31  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0053]: method `get` has an incompatible type for trait
   --> protocols/kad/src/record/store/memory.rs:111:24
    |
111 | fn get(&self, peer_id: &kbucket::Key<PeerId>) -> Result<Cow<'_, Record>, PeerStoreError> {
    |                        ^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected `record::Key`, found `key::Key<libp2p_core::PeerId>`
    |                        help: change the parameter type to match the trait: `&record::Key`
    |
note: type in trait
   --> protocols/kad/src/record/store.rs:76:22
    |
76  |     fn get(&self, k: &Key) -> Option<Cow<'_, Record>>;
    |                      ^^^^
    = note: expected signature `fn(&MemoryStore, &record::Key) -> Option<std::borrow::Cow<'_, record::Record>>`
               found signature `fn(&MemoryStore, &key::Key<libp2p_core::PeerId>) -> std::result::Result<std::borrow::Cow<'_, record::Record>, store::Error>`

error[E0053]: method `get` has an incompatible type for trait
   --> protocols/kad/src/record/store/memory.rs:111:24
    |
111 | fn get(&self, peer_id: &kbucket::Key<PeerId>) -> Result<Cow<'_, Record>, PeerStoreError> {
    |                        ^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected `record::Key`, found `key::Key<libp2p_core::PeerId>`
    |                        help: change the parameter type to match the trait: `&record::Key`
    |
note: type in trait
   --> protocols/kad/src/record/store.rs:76:22
    |
76  |     fn get(&self, k: &Key) -> Option<Cow<'_, Record>>;
    |                      ^^^^
    = note: expected signature `fn(&store::memory::MemoryStore, &record::Key) -> Option<std::borrow::Cow<'_, record::Record>>`
               found signature `fn(&store::memory::MemoryStore, &key::Key<libp2p_core::PeerId>) -> std::result::Result<std::borrow::Cow<'_, record::Record>, store::Error>`

error[E0277]: the trait bound `record::Key: Borrow<key::Key<libp2p_core::PeerId>>` is not satisfied
    --> protocols/kad/src/record/store/memory.rs:112:33
     |
112  |    if self.records.contains_key(peer_id) {
     |                    ------------ ^^^^^^^ the trait `Borrow<key::Key<libp2p_core::PeerId>>` is not implemented for `record::Key`
     |                    |
     |                    required by a bound introduced by this call
     |
     = help: the trait `Borrow<[u8]>` is implemented for `record::Key`
     = help: for that trait implementation, expected `[u8]`, found `key::Key<libp2p_core::PeerId>`
note: required by a bound in `HashMap::<K, V, S>::contains_key`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1044:12
     |
1042 |     pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool
     |            ------------ required by a bound in this associated function
1043 |     where
1044 |         K: Borrow<Q>,
     |            ^^^^^^^^^ required by this bound in `HashMap::<K, V, S>::contains_key`

error[E0277]: the trait bound `record::Key: Borrow<key::Key<libp2p_core::PeerId>>` is not satisfied
   --> protocols/kad/src/record/store/memory.rs:113:32
    |
113 |         match self.records.get(peer_id) {
    |                            --- ^^^^^^^ the trait `Borrow<key::Key<libp2p_core::PeerId>>` is not implemented for `record::Key`
    |                            |
    |                            required by a bound introduced by this call
    |
    = help: the trait `Borrow<[u8]>` is implemented for `record::Key`
    = help: for that trait implementation, expected `[u8]`, found `key::Key<libp2p_core::PeerId>`
note: required by a bound in `HashMap::<K, V, S>::get`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:879:12
    |
877 |     pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>
    |            --- required by a bound in this associated function
878 |     where
879 |         K: Borrow<Q>,
    |            ^^^^^^^^^ required by this bound in `HashMap::<K, V, S>::get`

error[E0433]: failed to resolve: use of undeclared type `PeerStoreError`
   --> protocols/kad/src/record/store/memory.rs:115:32
    |
115 |             None => return Err(PeerStoreError::DataError),
    |                                ^^^^^^^^^^^^^^ use of undeclared type `PeerStoreError`

error[E0433]: failed to resolve: use of undeclared type `PeerStoreError`
   --> protocols/kad/src/record/store/memory.rs:119:8
    |
119 |    Err(PeerStoreError::PeerIdNotFound)
    |        ^^^^^^^^^^^^^^ use of undeclared type `PeerStoreError`

Some errors have detailed explanations: E0053, E0107, E0277, E0412, E0433.
For more information about an error, try `rustc --explain E0053`.
error: could not compile `libp2p-kad` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: the trait bound `record::Key: Borrow<key::Key<libp2p_core::PeerId>>` is not satisfied
    --> protocols/kad/src/record/store/memory.rs:112:33
     |
112  |    if self.records.contains_key(peer_id) {
     |                    ------------ ^^^^^^^ the trait `Borrow<key::Key<libp2p_core::PeerId>>` is not implemented for `record::Key`
     |                    |
     |                    required by a bound introduced by this call
     |
     = help: the trait `Borrow<[u8]>` is implemented for `record::Key`
     = help: for that trait implementation, expected `[u8]`, found `key::Key<libp2p_core::PeerId>`
note: required by a bound in `std::collections::HashMap::<K, V, S>::contains_key`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1044:12
     |
1042 |     pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool
     |            ------------ required by a bound in this associated function
1043 |     where
1044 |         K: Borrow<Q>,
     |            ^^^^^^^^^ required by this bound in `HashMap::<K, V, S>::contains_key`

error[E0277]: the trait bound `record::Key: Borrow<key::Key<libp2p_core::PeerId>>` is not satisfied
   --> protocols/kad/src/record/store/memory.rs:113:32
    |
113 |         match self.records.get(peer_id) {
    |                            --- ^^^^^^^ the trait `Borrow<key::Key<libp2p_core::PeerId>>` is not implemented for `record::Key`
    |                            |
    |                            required by a bound introduced by this call
    |
    = help: the trait `Borrow<[u8]>` is implemented for `record::Key`
    = help: for that trait implementation, expected `[u8]`, found `key::Key<libp2p_core::PeerId>`
note: required by a bound in `std::collections::HashMap::<K, V, S>::get`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:879:12
    |
877 |     pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>
    |            --- required by a bound in this associated function
878 |     where
879 |         K: Borrow<Q>,
    |            ^^^^^^^^^ required by this bound in `HashMap::<K, V, S>::get`

error: could not compile `libp2p-kad` (lib test) due to 7 previous errors

