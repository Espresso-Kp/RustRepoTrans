Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0599]: no method named `identifier_to_tuple_without_catalog` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:33
    |
490 |     let identifier_tuple = self.identifier_to_tuple_without_catalog(identifier);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `table_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:21
    |
491 |     let path = self.table_endpoint(identifier_tuple);
    |                     ^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
491 |     let path = self.config.table_endpoint(identifier_tuple);
    |                     +++++++

error[E0308]: arguments to this function are incorrect
   --> crates/catalog/rest/src/catalog.rs:493:19
    |
493 |     let request = Request::new(Url::parse(&path).expect("Failed to parse URL"), reqwest::Method::DELETE);
    |                   ^^^^^^^^^^^^ -----------------------------------------------  ----------------------- expected `Url`, found `Method`
    |                                |
    |                                expected `Method`, found `Url`
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:12
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |            ^^^
help: swap these arguments
    |
493 |     let request = Request::new(reqwest::Method::DELETE, Url::parse(&path).expect("Failed to parse URL"));
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `execute` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:494:21
    |
494 |     let resp = self.execute::<ErrorResponse, NO_CONTENT>(request).await?;
    |                     ^^^^^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `execute`, perhaps you need to implement one of them:
            candidate #1: `hyper::rt::Executor`
            candidate #2: `opendal::types::execute::api::Execute`
            candidate #3: `hyper::rt::Executor`
help: one of the expressions' fields has a method of the same name
    |
494 |     let resp = self.client.execute::<ErrorResponse, NO_CONTENT>(request).await?;
    |                     +++++++

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:13
    |
498 |         let text = resp.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:20
    |
498 |         let text = resp.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:20
    |
498 |         let text = resp.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:38
    |
498 |         let text = resp.bytes().await?;
    |                                      ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0599]: no method named `identifier_to_tuple_without_catalog` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:33
    |
490 |     let identifier_tuple = self.identifier_to_tuple_without_catalog(identifier);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `table_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:21
    |
491 |     let path = self.table_endpoint(identifier_tuple);
    |                     ^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
491 |     let path = self.config.table_endpoint(identifier_tuple);
    |                     +++++++

error[E0308]: arguments to this function are incorrect
   --> crates/catalog/rest/src/catalog.rs:493:19
    |
493 |     let request = Request::new(Url::parse(&path).expect("Failed to parse URL"), reqwest::Method::DELETE);
    |                   ^^^^^^^^^^^^ -----------------------------------------------  ----------------------- expected `Url`, found `Method`
    |                                |
    |                                expected `Method`, found `Url`
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:12
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |            ^^^
help: swap these arguments
    |
493 |     let request = Request::new(reqwest::Method::DELETE, Url::parse(&path).expect("Failed to parse URL"));
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `execute` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:494:21
    |
494 |     let resp = self.execute::<ErrorResponse, NO_CONTENT>(request).await?;
    |                     ^^^^^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `execute`, perhaps you need to implement one of them:
            candidate #1: `hyper::rt::Executor`
            candidate #2: `opendal::types::execute::api::Execute`
help: one of the expressions' fields has a method of the same name
    |
494 |     let resp = self.client.execute::<ErrorResponse, NO_CONTENT>(request).await?;
    |                     +++++++

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:13
    |
498 |         let text = resp.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:20
    |
498 |         let text = resp.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:20
    |
498 |         let text = resp.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:498:38
    |
498 |         let text = resp.bytes().await?;
    |                                      ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

