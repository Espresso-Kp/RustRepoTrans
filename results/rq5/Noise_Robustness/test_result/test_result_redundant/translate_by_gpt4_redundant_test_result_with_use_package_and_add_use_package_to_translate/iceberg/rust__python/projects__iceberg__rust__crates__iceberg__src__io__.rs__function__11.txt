Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0432]: unresolved import `thiserror`
  --> crates/iceberg/src/io.rs:54:5
   |
54 | use thiserror::Error;
   |     ^^^^^^^^^ use of undeclared crate or module `thiserror`

error[E0412]: cannot find type `MyError` in this scope
   --> crates/iceberg/src/io.rs:239:49
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, MyError> {
    |                                                 ^^^^^^^
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- similarly named struct `Error` defined here
    |
help: a struct with a similar name exists
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, Error> {
    |                                                 ~~~~~
help: you might be missing a type parameter
    |
236 | impl<MyError> FileRead for opendal::Reader {
    |     +++++++++

warning: unused import: `std::io`
  --> crates/iceberg/src/io.rs:52:5
   |
52 | use std::io;
   |     ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/io.rs:239:35
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, MyError> {
    |                                   ^^^^^^        ------- help: remove this generic argument
    |                                   |
    |                                   expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0053]: method `read` has an incompatible type for trait
   --> crates/iceberg/src/io.rs:239:25
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, MyError> {
    |                         ^^^^^
    |                         |
    |                         expected `std::ops::Range<u64>`, found `usize`
    |                         help: change the parameter type to match the trait: `std::ops::Range<u64>`
    |
note: type in trait
   --> crates/iceberg/src/io.rs:232:33
    |
232 |     async fn read(&self, range: Range<u64>) -> Result<Bytes>;
    |                                 ^^^^^^^^^^
    = note: expected signature `fn(&'life0 opendal::Reader, std::ops::Range<u64>) -> Pin<_>`
               found signature `fn(&'life0 opendal::Reader, usize) -> Pin<_>`

error[E0433]: failed to resolve: use of undeclared type `MyError`
   --> crates/iceberg/src/io.rs:241:24
    |
241 |             return Err(MyError::InvalidRead(format!("Requested {} bytes to read, expected positive integer.", n)));
    |                        ^^^^^^^
    |                        |
    |                        use of undeclared type `MyError`
    |                        help: a struct with a similar name exists: `Error`

error[E0609]: no field `_input_stream` on type `&opendal::Reader`
   --> crates/iceberg/src/io.rs:248:33
    |
248 |             let read_len = self._input_stream.read(&mut buffer).await.unwrap();
    |                                 ^^^^^^^^^^^^^ unknown field

error[E0433]: failed to resolve: use of undeclared type `MyError`
   --> crates/iceberg/src/io.rs:254:28
    |
254 |                 return Err(MyError::InvalidRead(format!("EOF: read {} bytes", read_len)));
    |                            ^^^^^^^
    |                            |
    |                            use of undeclared type `MyError`
    |                            help: a struct with a similar name exists: `Error`

warning: unused import: `futures::io::AsyncReadExt`
  --> crates/iceberg/src/io.rs:53:5
   |
53 | use futures::io::AsyncReadExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0053, E0107, E0412, E0432, E0433, E0609.
For more information about an error, try `rustc --explain E0053`.
warning: `iceberg` (lib) generated 2 warnings
error: could not compile `iceberg` (lib) due to 7 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `iceberg` (lib test) due to 7 previous errors; 2 warnings emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0432]: unresolved import `thiserror`
  --> crates/iceberg/src/io.rs:54:5
   |
54 | use thiserror::Error;
   |     ^^^^^^^^^ use of undeclared crate or module `thiserror`

error[E0412]: cannot find type `MyError` in this scope
   --> crates/iceberg/src/io.rs:239:49
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, MyError> {
    |                                                 ^^^^^^^
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- similarly named struct `Error` defined here
    |
help: a struct with a similar name exists
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, Error> {
    |                                                 ~~~~~
help: you might be missing a type parameter
    |
236 | impl<MyError> FileRead for opendal::Reader {
    |     +++++++++

warning: unused import: `std::io`
  --> crates/iceberg/src/io.rs:52:5
   |
52 | use std::io;
   |     ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/io.rs:239:35
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, MyError> {
    |                                   ^^^^^^        ------- help: remove this generic argument
    |                                   |
    |                                   expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0053]: method `read` has an incompatible type for trait
   --> crates/iceberg/src/io.rs:239:25
    |
239 | async fn read(&self, n: usize) -> Result<Bytes, MyError> {
    |                         ^^^^^
    |                         |
    |                         expected `std::ops::Range<u64>`, found `usize`
    |                         help: change the parameter type to match the trait: `std::ops::Range<u64>`
    |
note: type in trait
   --> crates/iceberg/src/io.rs:232:33
    |
232 |     async fn read(&self, range: Range<u64>) -> Result<Bytes>;
    |                                 ^^^^^^^^^^
    = note: expected signature `fn(&'life0 opendal::Reader, std::ops::Range<u64>) -> Pin<_>`
               found signature `fn(&'life0 opendal::Reader, usize) -> Pin<_>`

error[E0433]: failed to resolve: use of undeclared type `MyError`
   --> crates/iceberg/src/io.rs:241:24
    |
241 |             return Err(MyError::InvalidRead(format!("Requested {} bytes to read, expected positive integer.", n)));
    |                        ^^^^^^^
    |                        |
    |                        use of undeclared type `MyError`
    |                        help: a struct with a similar name exists: `Error`

error[E0609]: no field `_input_stream` on type `&opendal::Reader`
   --> crates/iceberg/src/io.rs:248:33
    |
248 |             let read_len = self._input_stream.read(&mut buffer).await.unwrap();
    |                                 ^^^^^^^^^^^^^ unknown field

error[E0433]: failed to resolve: use of undeclared type `MyError`
   --> crates/iceberg/src/io.rs:254:28
    |
254 |                 return Err(MyError::InvalidRead(format!("EOF: read {} bytes", read_len)));
    |                            ^^^^^^^
    |                            |
    |                            use of undeclared type `MyError`
    |                            help: a struct with a similar name exists: `Error`

warning: unused import: `futures::io::AsyncReadExt`
  --> crates/iceberg/src/io.rs:53:5
   |
53 | use futures::io::AsyncReadExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0053, E0107, E0412, E0432, E0433, E0609.
For more information about an error, try `rustc --explain E0053`.
warning: `iceberg` (lib) generated 2 warnings
error: could not compile `iceberg` (lib) due to 7 previous errors; 2 warnings emitted

