Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0728]: `await` is only allowed inside `async` functions and blocks
   --> crates/catalog/glue/src/catalog.rs:566:31
    |
557 |     self.drop_table(src).await.or_else(|e| {
    |                                        --- this is not `async`
...
566 |         delete_builder.send().await.map_err(from_aws_sdk_error)?;
    |                               ^^^^^ only allowed inside `async` functions and blocks

error[E0609]: no field `aws` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:524:23
    |
524 |     let exists = self.aws.glue.list_databases().send().await.ok().map_or(false, |resp| {
    |                       ^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:543:85
    |
543 |     let builder = self.client.0.get_table().database_name(&from_table_db_name).name(&from_table_name);
    |                                                                                ---- ^^^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |                                                                                |
    |                                                                                required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `GetTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_table/builders.rs:131:39
    |
131 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTableFluentBuilder::name`
help: consider dereferencing here
    |
543 |     let builder = self.client.0.get_table().database_name(&from_table_db_name).name(&*from_table_name);
    |                                                                                      +

error[E0639]: cannot create non-exhaustive struct using struct expression
   --> crates/catalog/glue/src/catalog.rs:547:23
    |
547 |       let table_input = TableInput {
    |  _______________________^
548 | |         owner: from_table.owner,
549 | |         name: Some(to_table_name.clone()),
550 | |         ..from_table.table_input
551 | |     };
    | |_____^

error[E0609]: no field `owner` on type `GetTableOutput`
   --> crates/catalog/glue/src/catalog.rs:548:27
    |
548 |         owner: from_table.owner,
    |                           ^^^^^ unknown field
    |
    = note: available field is: `table`

error[E0609]: no field `table_input` on type `GetTableOutput`
   --> crates/catalog/glue/src/catalog.rs:550:22
    |
550 |         ..from_table.table_input
    |                      ^^^^^^^^^^^ unknown field
    |
    = note: available field is: `table`

error[E0609]: no field `name` on type `GetTableOutput`
   --> crates/catalog/glue/src/catalog.rs:560:24
    |
560 |             from_table.name,
    |                        ^^^^ unknown field
    |
    = note: available field is: `table`

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:564:97
    |
564 |         let delete_builder = self.client.0.delete_table().database_name(&to_table_db_name).name(&to_table_name);
    |                                                                                            ---- ^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |                                                                                            |
    |                                                                                            required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:143:39
    |
143 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::name`
help: consider dereferencing here
    |
564 |         let delete_builder = self.client.0.delete_table().database_name(&to_table_db_name).name(&*to_table_name);
    |                                                                                                  +

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:549:15
    |
549 |         name: Some(to_table_name.clone()),
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<&str>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<&str>`

Some errors have detailed explanations: E0277, E0308, E0609, E0639, E0728.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 9 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0728]: `await` is only allowed inside `async` functions and blocks
   --> crates/catalog/glue/src/catalog.rs:566:31
    |
557 |     self.drop_table(src).await.or_else(|e| {
    |                                        --- this is not `async`
...
566 |         delete_builder.send().await.map_err(from_aws_sdk_error)?;
    |                               ^^^^^ only allowed inside `async` functions and blocks

error[E0609]: no field `aws` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:524:23
    |
524 |     let exists = self.aws.glue.list_databases().send().await.ok().map_or(false, |resp| {
    |                       ^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:543:85
    |
543 |     let builder = self.client.0.get_table().database_name(&from_table_db_name).name(&from_table_name);
    |                                                                                ---- ^^^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |                                                                                |
    |                                                                                required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `GetTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_table/builders.rs:131:39
    |
131 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTableFluentBuilder::name`
help: consider dereferencing here
    |
543 |     let builder = self.client.0.get_table().database_name(&from_table_db_name).name(&*from_table_name);
    |                                                                                      +

error[E0639]: cannot create non-exhaustive struct using struct expression
   --> crates/catalog/glue/src/catalog.rs:547:23
    |
547 |       let table_input = TableInput {
    |  _______________________^
548 | |         owner: from_table.owner,
549 | |         name: Some(to_table_name.clone()),
550 | |         ..from_table.table_input
551 | |     };
    | |_____^

error[E0609]: no field `owner` on type `GetTableOutput`
   --> crates/catalog/glue/src/catalog.rs:548:27
    |
548 |         owner: from_table.owner,
    |                           ^^^^^ unknown field
    |
    = note: available field is: `table`

error[E0609]: no field `table_input` on type `GetTableOutput`
   --> crates/catalog/glue/src/catalog.rs:550:22
    |
550 |         ..from_table.table_input
    |                      ^^^^^^^^^^^ unknown field
    |
    = note: available field is: `table`

error[E0609]: no field `name` on type `GetTableOutput`
   --> crates/catalog/glue/src/catalog.rs:560:24
    |
560 |             from_table.name,
    |                        ^^^^ unknown field
    |
    = note: available field is: `table`

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:564:97
    |
564 |         let delete_builder = self.client.0.delete_table().database_name(&to_table_db_name).name(&to_table_name);
    |                                                                                            ---- ^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`, which is required by `&&str: Into<std::string::String>`
    |                                                                                            |
    |                                                                                            required by a bound introduced by this call
    |
    = note: required for `&&str` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:143:39
    |
143 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::name`
help: consider dereferencing here
    |
564 |         let delete_builder = self.client.0.delete_table().database_name(&to_table_db_name).name(&*to_table_name);
    |                                                                                                  +

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:549:15
    |
549 |         name: Some(to_table_name.clone()),
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<&str>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<&str>`

Some errors have detailed explanations: E0277, E0308, E0609, E0639, E0728.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 9 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

