Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_BAK_PREFIX` in this scope
   --> src/imex.rs:121:22
    |
121 |     let prefix_len = DC_BAK_PREFIX.len();
    |                      ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BAK_SUFFIX` in this scope
   --> src/imex.rs:122:22
    |
122 |     let suffix_len = DC_BAK_SUFFIX.len();
    |                      ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BAK_PREFIX` in this scope
   --> src/imex.rs:142:39
    |
142 |             && &name[..prefix_len] == DC_BAK_PREFIX
    |                                       ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BAK_SUFFIX` in this scope
   --> src/imex.rs:144:69
    |
144 |             && &name[name_len - suffix_len - 1..] == format!(".{}", DC_BAK_SUFFIX)
    |                                                                     ^^^^^^^^^^^^^ not found in this scope

error[E0599]: the method `next` exists for struct `ReadDir`, but its trait bounds were not satisfied
   --> src/imex.rs:136:48
    |
136 |     while let Some(Ok(dir_entry)) = dir_handle.next().await {
    |                                                ^^^^ method cannot be called on `ReadDir` due to unsatisfied trait bounds
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/fs/read_dir.rs:65:1
    |
65  | pub struct ReadDir(State);
    | ------------------ doesn't satisfy `tokio::fs::ReadDir: Stream` or `tokio::fs::ReadDir: futures::StreamExt`
    |
    = note: the following trait bounds were not satisfied:
            `tokio::fs::ReadDir: Stream`
            which is required by `tokio::fs::ReadDir: futures::StreamExt`

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> src/imex.rs:149:29
    |
149 |             test_sql = Some(sql::Sql::new());
    |                             ^^^^^^^^^^^^^-- an argument of type `PathBuf` is missing
    |
note: associated function defined here
   --> src/sql.rs:79:12
    |
79  |     pub fn new(dbfile: PathBuf) -> Sql {
    |            ^^^ ---------------
help: provide the argument
    |
149 |             test_sql = Some(sql::Sql::new(/* PathBuf */));
    |                                          ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 3 arguments were supplied
   --> src/imex.rs:151:29
    |
151 |                 if test_sql.open(&context, &curr_pathNfilename, 0).await.is_ok(){
    |                             ^^^^           -------------------  - unexpected argument of type `{integer}`
    |                                            |
    |                                            expected `String`, found `&String`
    |
note: method defined here
   --> src/sql.rs:280:18
    |
280 |     pub async fn open(&self, context: &Context, passphrase: String) -> Result<()> {
    |                  ^^^^        -----------------  ------------------
help: consider removing the borrow
    |
151 -                 if test_sql.open(&context, &curr_pathNfilename, 0).await.is_ok(){
151 +                 if test_sql.open(&context, curr_pathNfilename, 0).await.is_ok(){
    |
help: remove the extra argument
    |
151 -                 if test_sql.open(&context, &curr_pathNfilename, 0).await.is_ok(){
151 +                 if test_sql.open(&context, /* std::string::String */).await.is_ok(){
    |

error[E0599]: no method named `get_config_int` found for mutable reference `&mut Sql` in the current scope
   --> src/imex.rs:153:35
    |
153 |                          test_sql.get_config_int(context, "backup_time").await.unwrap_or_default();
    |                                   ^^^^^^^^^^^^^^ help: there is a method with a similar name: `get_raw_config_int`

Some errors have detailed explanations: E0061, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> src/imex.rs:149:29
    |
149 |             test_sql = Some(sql::Sql::new());
    |                             ^^^^^^^^^^^^^-- an argument of type `std::path::PathBuf` is missing
    |
note: associated function defined here
   --> src/sql.rs:79:12
    |
79  |     pub fn new(dbfile: PathBuf) -> Sql {
    |            ^^^ ---------------
help: provide the argument
    |
149 |             test_sql = Some(sql::Sql::new(/* std::path::PathBuf */));
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `get_config_int` found for mutable reference `&mut sql::Sql` in the current scope
   --> src/imex.rs:153:35
    |
153 |                          test_sql.get_config_int(context, "backup_time").await.unwrap_or_default();
    |                                   ^^^^^^^^^^^^^^ help: there is a method with a similar name: `get_raw_config_int`

error: could not compile `deltachat` (lib test) due to 8 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

