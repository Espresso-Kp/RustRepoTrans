Fail
file path is :
projects/deltachat-core/rust/src/message.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
    --> src/message.rs:1762:9
     |
1762 |         paramsv![msg.state, msg.param.to_string(), msg.id.to_u32()],
     |         ^^^^^^^ help: a macro with a similar name exists: `params`
     |
    ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
     |
176  | macro_rules! params {
     | ------------------- similarly named macro `params` defined here

error[E0308]: mismatched types
    --> src/chat.rs:2935:51
     |
2935 |             message::set_msg_failed(context, msg, &err.to_string()).await?;
     |             -----------------------               ^^^^^^^^^^^^^^^^ expected `Option<&str>`, found `&String`
     |             |
     |             arguments to this function are incorrect
     |
     = note:   expected enum `std::option::Option<&str>`
             found reference `&std::string::String`
note: function defined here
    --> src/message.rs:1745:21
     |
1745 | pub(crate) async fn set_msg_failed(
     |                     ^^^^^^^^^^^^^^
...
1748 |     error: Option<&str>,
     |     -------------------
help: try wrapping the expression in `Some`
     |
2935 |             message::set_msg_failed(context, msg, Some(&err.to_string())).await?;
     |                                                   +++++                +

error[E0308]: mismatched types
    --> src/chat.rs:2945:13
     |
2942 |         message::set_msg_failed(
     |         ----------------------- arguments to this function are incorrect
...
2945 |             "End-to-end-encryption unavailable unexpectedly.",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<&str>`, found `&str`
     |
     = note:   expected enum `std::option::Option<&str>`
             found reference `&'static str`
note: function defined here
    --> src/message.rs:1745:21
     |
1745 | pub(crate) async fn set_msg_failed(
     |                     ^^^^^^^^^^^^^^
...
1748 |     error: Option<&str>,
     |     -------------------
help: try wrapping the expression in `Some`
     |
2945 |             Some("End-to-end-encryption unavailable unexpectedly."),
     |             +++++                                                 +

error[E0308]: mismatched types
    --> src/mimeparser.rs:2246:47
     |
2246 |         set_msg_failed(context, &mut message, &error).await?;
     |         --------------                        ^^^^^^ expected `Option<&str>`, found `&String`
     |         |
     |         arguments to this function are incorrect
     |
     = note:   expected enum `std::option::Option<&str>`
             found reference `&std::string::String`
note: function defined here
    --> src/message.rs:1745:21
     |
1745 | pub(crate) async fn set_msg_failed(
     |                     ^^^^^^^^^^^^^^
...
1748 |     error: Option<&str>,
     |     -------------------
help: try wrapping the expression in `Some`
     |
2246 |         set_msg_failed(context, &mut message, Some(&error)).await?;
     |                                               +++++      +

error[E0308]: mismatched types
    --> src/smtp.rs:556:52
     |
556  |         message::set_msg_failed(context, &mut msg, "Number of retries exceeded the limit.").await?;
     |         -----------------------                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<&str>`, found `&str`
     |         |
     |         arguments to this function are incorrect
     |
     = note:   expected enum `std::option::Option<&str>`
             found reference `&'static str`
note: function defined here
    --> src/message.rs:1745:21
     |
1745 | pub(crate) async fn set_msg_failed(
     |                     ^^^^^^^^^^^^^^
...
1748 |     error: Option<&str>,
     |     -------------------
help: try wrapping the expression in `Some`
     |
556  |         message::set_msg_failed(context, &mut msg, Some("Number of retries exceeded the limit.")).await?;
     |                                                    +++++                                       +

error[E0308]: mismatched types
    --> src/smtp.rs:497:78
     |
497  |                 if let Err(err) = message::set_msg_failed(context, &mut msg, &err.to_string()).await
     |                                   -----------------------                    ^^^^^^^^^^^^^^^^ expected `Option<&str>`, found `&String`
     |                                   |
     |                                   arguments to this function are incorrect
     |
     = note:   expected enum `std::option::Option<&str>`
             found reference `&std::string::String`
note: function defined here
    --> src/message.rs:1745:21
     |
1745 | pub(crate) async fn set_msg_failed(
     |                     ^^^^^^^^^^^^^^
...
1748 |     error: Option<&str>,
     |     -------------------
help: try wrapping the expression in `Some`
     |
497  |                 if let Err(err) = message::set_msg_failed(context, &mut msg, Some(&err.to_string())).await
     |                                                                              +++++                +

error[E0599]: no variant or associated item named `Error` found for enum `Param` in the current scope
    --> src/message.rs:1756:30
     |
1756 |         msg.param.set(Param::Error, err);
     |                              ^^^^^ variant or associated item not found in `Param`
     |
    ::: src/param.rs:19:1
     |
19   | pub enum Param {
     | -------------- variant or associated item `Error` not found for this enum

Some errors have detailed explanations: E0308, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no variant or associated item named `Error` found for enum `param::Param` in the current scope
    --> src/message.rs:1756:30
     |
1756 |         msg.param.set(Param::Error, err);
     |                              ^^^^^ variant or associated item not found in `Param`
     |
    ::: src/param.rs:19:1
     |
19   | pub enum Param {
     | -------------- variant or associated item `Error` not found for this enum

error[E0308]: mismatched types
    --> src/message.rs:2463:48
     |
2463 |         set_msg_failed(&alice, &mut alice_msg, "badly failed").await?;
     |         --------------                         ^^^^^^^^^^^^^^ expected `Option<&str>`, found `&str`
     |         |
     |         arguments to this function are incorrect
     |
     = note:   expected enum `std::option::Option<&str>`
             found reference `&'static str`
note: function defined here
    --> src/message.rs:1745:21
     |
1745 | pub(crate) async fn set_msg_failed(
     |                     ^^^^^^^^^^^^^^
...
1748 |     error: Option<&str>,
     |     -------------------
help: try wrapping the expression in `Some`
     |
2463 |         set_msg_failed(&alice, &mut alice_msg, Some("badly failed")).await?;
     |                                                +++++              +

error: could not compile `deltachat` (lib test) due to 8 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

