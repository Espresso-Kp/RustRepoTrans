Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `NO_PARAMS` in this scope
    --> src/chat.rs:1008:30
     |
1008 |         res = stmt.query_row(NO_PARAMS, |row| Ok(row.get(0)?))?;
     |                              ^^^^^^^^^ not found in this scope

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/chat.rs:987:41
    |
987 |     if let Some(mut stmt) = context.sql.prepare(
    |                             ------------^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `into_inner` found for reference `&ChatId` in the current scope
    --> src/chat.rs:1005:34
     |
1005 |             stmt.bind(1, chat_id.into_inner())?;
     |                                  ^^^^^^^^^^ method not found in `&ChatId`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `into_inner`, perhaps you need to implement one of them:
             candidate #1: `std::sys_common::IntoInner`
             candidate #2: `radium::Radium`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/chat.rs:987:41
    |
987 |     if let Some(mut stmt) = context.sql.prepare(
    |                             ------------^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `into_inner` found for reference `&chat::ChatId` in the current scope
    --> src/chat.rs:1005:34
     |
1005 |             stmt.bind(1, chat_id.into_inner())?;
     |                                  ^^^^^^^^^^ method not found in `&ChatId`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `into_inner`, perhaps you need to implement one of them:
             candidate #1: `std::sys_common::IntoInner`
             candidate #2: `radium::Radium`

Some errors have detailed explanations: E0425, E0599.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `deltachat` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/events/chatlist_events.rs:486:33
    |
486 |         assert!(chat_id_for_bob.get_fresh_msg_cnt(&bob).await? >= 1);
    |                                 ^^^^^^^^^^^^^^^^^------ an argument of type `&chat::ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:984:14
    |
984 | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
    |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
    |
486 |         assert!(chat_id_for_bob.get_fresh_msg_cnt(&bob, /* &chat::ChatId */).await? >= 1);
    |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5773:45
     |
5773 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 0);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5773 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 0);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5776:45
     |
5776 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 1);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5776 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5779:45
     |
5779 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 1);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5779 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5791:32
     |
5791 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 2);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5791 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 2);
     |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5792:35
     |
5792 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 3);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5792 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 3);
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5793:45
     |
5793 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 2);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5793 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 2);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5797:32
     |
5797 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 2);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5797 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 2);
     |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5798:35
     |
5798 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 0);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5798 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 0);
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5799:45
     |
5799 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 1);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5799 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5803:32
     |
5803 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 2);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5803 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 2);
     |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5804:35
     |
5804 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5804 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5805:45
     |
5805 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 2);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5805 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 2);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5811:33
     |
5811 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                                 ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5811 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5812:45
     |
5812 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 2);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5812 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 2);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5817:32
     |
5817 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 0);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5817 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 0);
     |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5818:35
     |
5818 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 0);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5818 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 0);
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5819:33
     |
5819 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                                 ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5819 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5820:45
     |
5820 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 0);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
5820 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 0);
     |                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6233:28
     |
6233 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
6233 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6251:28
     |
6251 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t).await?, 0);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
6251 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 0);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6285:28
     |
6285 |         assert_eq!(chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
6285 |         assert_eq!(chat_id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6366:28
     |
6366 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^-------- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
6366 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice, /* &chat::ChatId */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6378:28
     |
6378 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^-------- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
6378 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice, /* &chat::ChatId */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1461:27
     |
1461 |         assert_eq!(bob.id.get_fresh_msg_cnt(&t).await.unwrap(), 1);
     |                           ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
1461 |         assert_eq!(bob.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await.unwrap(), 1);
     |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1467:30
     |
1467 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 2);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
1467 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await.unwrap(), 2);
     |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1474:28
     |
1474 |         assert_eq!(dave.id.get_fresh_msg_cnt(&t).await.unwrap(), 3);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
1474 |         assert_eq!(dave.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await.unwrap(), 3);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1481:30
     |
1481 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 2);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
1481 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await.unwrap(), 2);
     |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1489:30
     |
1489 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 3);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
1489 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await.unwrap(), 3);
     |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1496:30
     |
1496 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 3);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
1496 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* &chat::ChatId */).await.unwrap(), 3);
     |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2398:34
     |
2398 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 2);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
2398 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* &chat::ChatId */).await?, 2);
     |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2407:34
     |
2407 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 2);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
2407 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* &chat::ChatId */).await?, 2);
     |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2413:34
     |
2413 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 1);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
2413 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* &chat::ChatId */).await?, 1);
     |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2419:34
     |
2419 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 0);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `&chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:984:14
     |
984  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: &ChatId) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ----------------
help: provide the argument
     |
2419 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* &chat::ChatId */).await?, 0);
     |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib test) due to 37 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

