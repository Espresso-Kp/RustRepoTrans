Fail
file path is :
projects/deltachat-core/rust/src/sql.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0599]: no method named `iter` found for type parameter `impl rusqlite::Params + Send` in the current scope
   --> src/sql.rs:409:29
    |
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
    |                                                  ---------------------------- method `iter` not found for this type parameter
...
409 |         for param in params.iter() {
    |                             ^^^^ method not found in `impl rusqlite::Params + Send`
    |
    = help: items from traits can only be used if the type parameter is bounded by the trait
help: the following traits define an item `iter`, perhaps you need to restrict type parameter `impl rusqlite::Params + Send` with one of them:
    |
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + bitflags::traits::Flags) -> Result<usize> {
    |                                                                               +++++++++++++++++++++++++
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + IntoEnumIterator) -> Result<usize> {
    |                                                                               ++++++++++++++++++
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + VariantIterator) -> Result<usize> {
    |                                                                               +++++++++++++++++
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + struct_iterable_internal::Iterable) -> Result<usize> {
    |                                                                               ++++++++++++++++++++++++++++++++++++
      and 1 other candidate

error[E0624]: method `bind_parameter` is private
   --> src/sql.rs:410:18
    |
410 |             stmt.bind_parameter(param.0, &param.1)?;
    |                  ^^^^^^^^^^^^^^ private method
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/statement.rs:594:5
    |
594 |     fn bind_parameter<P: ?Sized + ToSql>(&self, param: &P, col: usize) -> Result<()> {
    |     -------------------------------------------------------------------------------- private method defined here

error[E0061]: this method takes 1 argument but 0 arguments were supplied
   --> src/sql.rs:413:24
    |
413 |         let res = stmt.execute();
    |                        ^^^^^^^-- an argument is missing
    |
note: method defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/statement.rs:112:12
    |
112 |     pub fn execute<P: Params>(&mut self, params: P) -> Result<usize> {
    |            ^^^^^^^
help: provide the argument
    |
413 |         let res = stmt.execute(/* params */);
    |                               ~~~~~~~~~~~~~~

error[E0599]: no method named `iter` found for type parameter `impl rusqlite::Params + Send` in the current scope
   --> src/sql.rs:409:29
    |
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
    |                                                  ---------------------------- method `iter` not found for this type parameter
...
409 |         for param in params.iter() {
    |                             ^^^^ method not found in `impl rusqlite::Params + Send`
    |
    = help: items from traits can only be used if the type parameter is bounded by the trait
help: the following traits define an item `iter`, perhaps you need to restrict type parameter `impl rusqlite::Params + Send` with one of them:
    |
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + bitflags::traits::Flags) -> Result<usize> {
    |                                                                               +++++++++++++++++++++++++
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + IntoEnumIterator) -> Result<usize> {
    |                                                                               ++++++++++++++++++
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + VariantIterator) -> Result<usize> {
    |                                                                               +++++++++++++++++
403 | pub async fn execute(&self, query: &str, params: impl rusqlite::Params + Send + sysinfo::traits::NetworksExt) -> Result<usize> {
    |                                                                               ++++++++++++++++++++++++++++++
      and 2 other candidates

Some errors have detailed explanations: E0061, E0599, E0624.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 3 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

