Fail
file path is :
projects/deltachat-core/rust/src/summary.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0423]: expected function, found crate `image`
   --> src/summary.rs:174:27
    |
174 |             prefix = Some(image(context).await);
    |                           ^^^^^ not a function
    |
help: consider importing this function instead
    |
3   + use crate::stock_str::image;
    |

error[E0425]: cannot find function `gif` in this scope
   --> src/summary.rs:177:27
    |
177 |             prefix = Some(gif(context).await);
    |                           ^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::stock_str::gif;
    |

error[E0425]: cannot find function `ac_setup_msg_subject` in this scope
   --> src/summary.rs:182:35
    |
182 |                     prefix = Some(ac_setup_msg_subject(context).await);
    |                                   ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::stock_str::ac_setup_msg_subject;
    |

error[E0425]: cannot find function `audio` in this scope
   --> src/summary.rs:186:42
    |
186 |                         let label = Some(audio(context).await);
    |                                          ^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::stock_str::audio;
    |

error[E0425]: cannot find function `ac_setup_msg_subject` in this scope
   --> src/summary.rs:195:35
    |
195 |                     prefix = Some(ac_setup_msg_subject(context).await);
    |                                   ^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::stock_str::ac_setup_msg_subject;
    |

error[E0423]: expected function, found macro `file`
   --> src/summary.rs:199:42
    |
199 |                         let label = Some(file(context).await);
    |                                          ^^^^ not a function
    |
help: use `!` to invoke the macro
    |
199 |                         let label = Some(file!(context).await);
    |                                              +
help: consider importing this function instead
    |
3   + use crate::stock_str::file;
    |

error[E0425]: cannot find function `voice_message` in this scope
   --> src/summary.rs:206:27
    |
206 |             prefix = Some(voice_message(context).await);
    |                           ^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::stock_str::voice_message;
    |

error[E0425]: cannot find function `location` in this scope
   --> src/summary.rs:211:35
    |
211 |                     prefix = Some(location(context).await);
    |                                   ^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::stock_str::location;
    |

error[E0609]: no field `type_` on type `&message::Message`
   --> src/summary.rs:169:16
    |
169 |     match self.type_ {
    |                ^^^^^ unknown field
    |
    = note: available fields are: `id`, `from_id`, `to_id`, `chat_id`, `viewtype` ... and 18 others

error[E0308]: mismatched types
   --> src/summary.rs:171:28
    |
168 |     let mut message_text = None;
    |                            ---- expected due to this value
...
171 |             message_text = self.text.clone();
    |                            ^^^^^^^^^^^^^^^^^ expected `Option<_>`, found `String`
    |
    = note: expected enum `std::option::Option<_>`
             found struct `std::string::String`
help: try wrapping the expression in `Some`
    |
171 |             message_text = Some(self.text.clone());
    |                            +++++                 +

error[E0599]: no method named `get_cmd` found for reference `&message::Message` in the current scope
   --> src/summary.rs:180:37
    |
180 |             if let Some(cmd) = self.get_cmd() {
    |                                     ^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
180 |             if let Some(cmd) = self.param.get_cmd() {
    |                                     ++++++
help: there is a method with a similar name
    |
180 |             if let Some(cmd) = self.get_id() {
    |                                     ~~~~~~

error[E0599]: no method named `get_cmd` found for reference `&message::Message` in the current scope
   --> src/summary.rs:193:37
    |
193 |             if let Some(cmd) = self.get_cmd() {
    |                                     ^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
193 |             if let Some(cmd) = self.param.get_cmd() {
    |                                     ++++++
help: there is a method with a similar name
    |
193 |             if let Some(cmd) = self.get_id() {
    |                                     ~~~~~~

error[E0599]: no method named `get_cmd` found for reference `&message::Message` in the current scope
   --> src/summary.rs:209:37
    |
209 |             if let Some(cmd) = self.get_cmd() {
    |                                     ^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
209 |             if let Some(cmd) = self.param.get_cmd() {
    |                                     ++++++
help: there is a method with a similar name
    |
209 |             if let Some(cmd) = self.get_id() {
    |                                     ~~~~~~

error[E0308]: mismatched types
   --> src/summary.rs:218:28
    |
218 |                     if let Some(t) = self.text {
    |                            ^^^^^^^   --------- this expression has type `std::string::String`
    |                            |
    |                            expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0308]: mismatched types
   --> src/summary.rs:225:20
    |
225 |             if let Some(t) = self.text {
    |                    ^^^^^^^   --------- this expression has type `std::string::String`
    |                    |
    |                    expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

Some errors have detailed explanations: E0308, E0423, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 15 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 15 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

