Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: expected identifier, found keyword `type`
   --> src/imex.rs:751:34
    |
751 |             let key_str = if key.type == DC_KEY_PUBLIC {
    |                                  ^^^^ expected identifier, found keyword

error: expected identifier, found keyword `type`
   --> src/imex.rs:759:34
    |
759 |             let key_str = if key.type == DC_KEY_PUBLIC {
    |                                  ^^^^ expected identifier, found keyword

error[E0252]: the name `Path` is defined multiple times
  --> src/imex.rs:14:17
   |
5  | use std::path::Path;
   |     --------------- previous import of the type `Path` here
...
14 | use std::path::{Path, PathBuf};
   |                 ^^^^--
   |                 |
   |                 `Path` reimported here
   |                 help: remove unnecessary import
   |
   = note: `Path` must be defined only once in the type namespace of this module

error[E0252]: the name `PathBuf` is defined multiple times
  --> src/imex.rs:14:23
   |
10 | use std::path::PathBuf;
   |     ------------------ previous import of the type `PathBuf` here
...
14 | use std::path::{Path, PathBuf};
   |                       ^^^^^^^ `PathBuf` reimported here
   |
   = note: `PathBuf` must be defined only once in the type namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> src/imex.rs:17:54
   |
6  | use std::result::Result;
   |     ------------------- previous import of the type `Result` here
...
17 | use anyhow::{bail, ensure, format_err, Context as _, Result};
   |                                                      ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
17 | use anyhow::{bail, ensure, format_err, Context as _, Result as OtherResult};
   |                                                      ~~~~~~~~~~~~~~~~~~~~~

error[E0252]: the name `fs` is defined multiple times
  --> src/imex.rs:22:17
   |
7  | use std::fs;
   |     ------- previous import of the module `fs` here
...
22 | use tokio::fs::{self, File};
   |                 ^^^^ `fs` reimported here
   |
   = note: `fs` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
22 | use tokio::fs::{self as other_fs, File};
   |                 ~~~~~~~~~~~~~~~~

error[E0252]: the name `DcKey` is defined multiple times
  --> src/imex.rs:33:33
   |
4  | use crate::key::DcKey;
   |     ----------------- previous import of the trait `DcKey` here
...
33 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                 ^^^^^--
   |                                 |
   |                                 `DcKey` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `DcKey` must be defined only once in the type namespace of this module

error[E0425]: cannot find value `DC_KEY_PUBLIC` in this scope
   --> src/imex.rs:751:42
    |
751 |             let key_str = if key.type == DC_KEY_PUBLIC {
    |                                          ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_KEY_PUBLIC` in this scope
   --> src/imex.rs:759:42
    |
759 |             let key_str = if key.type == DC_KEY_PUBLIC {
    |                                          ^^^^^^^^^^^^^ not found in this scope

warning: unused import: `std::fs::write`
 --> src/imex.rs:8:5
  |
8 | use std::fs::write;
  |     ^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `PathBuf`, `Path`
  --> src/imex.rs:14:17
   |
14 | use std::path::{Path, PathBuf};
   |                 ^^^^  ^^^^^^^

warning: unused import: `Result`
  --> src/imex.rs:17:54
   |
17 | use anyhow::{bail, ensure, format_err, Context as _, Result};
   |                                                      ^^^^^^

warning: unused import: `self`
  --> src/imex.rs:22:17
   |
22 | use tokio::fs::{self, File};
   |                 ^^^^

warning: unused import: `DcKey`
  --> src/imex.rs:33:33
   |
33 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                 ^^^^^

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:100:6
    |
100 | ) -> Result<()> {
    |      ^^^^^^ -- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
100 | ) -> Result<(), E> {
    |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:127:65
    |
127 | pub async fn has_backup(_context: &Context, dir_name: &Path) -> Result<String> {
    |                                                                 ^^^^^^ ------ supplied 1 generic argument
    |                                                                 |
    |                                                                 expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
127 | pub async fn has_backup(_context: &Context, dir_name: &Path) -> Result<String, E> {
    |                                                                              +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:156:58
    |
156 | pub async fn initiate_key_transfer(context: &Context) -> Result<String> {
    |                                                          ^^^^^^ ------ supplied 1 generic argument
    |                                                          |
    |                                                          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
156 | pub async fn initiate_key_transfer(context: &Context) -> Result<String, E> {
    |                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:193:72
    |
193 | pub async fn render_setup_file(context: &Context, passphrase: &str) -> Result<String> {
    |                                                                        ^^^^^^ ------ supplied 1 generic argument
    |                                                                        |
    |                                                                        expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
193 | pub async fn render_setup_file(context: &Context, passphrase: &str) -> Result<String, E> {
    |                                                                                     +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:264:62
    |
264 | async fn maybe_add_bcc_self_device_msg(context: &Context) -> Result<()> {
    |                                                              ^^^^^^ -- supplied 1 generic argument
    |                                                              |
    |                                                              expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
264 | async fn maybe_add_bcc_self_device_msg(context: &Context) -> Result<(), E> {
    |                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:285:6
    |
285 | ) -> Result<()> {
    |      ^^^^^^ -- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
285 | ) -> Result<(), E> {
    |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:307:79
    |
307 | async fn set_self_key(context: &Context, armored: &str, set_default: bool) -> Result<()> {
    |                                                                               ^^^^^^ -- supplied 1 generic argument
    |                                                                               |
    |                                                                               expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
307 | async fn set_self_key(context: &Context, armored: &str, set_default: bool) -> Result<(), E> {
    |                                                                                        +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:360:6
    |
360 | ) -> Result<String> {
    |      ^^^^^^ ------ supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
360 | ) -> Result<String, E> {
    |                   +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:385:6
    |
385 | ) -> Result<()> {
    |      ^^^^^^ -- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
385 | ) -> Result<(), E> {
    |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:430:6
    |
430 | ) -> Result<()> {
    |      ^^^^^^ -- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
430 | ) -> Result<(), E> {
    |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:508:6
    |
508 | ) -> Result<(PathBuf, PathBuf, PathBuf)> {
    |      ^^^^^^ --------------------------- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
508 | ) -> Result<(PathBuf, PathBuf, PathBuf), E> {
    |                                        +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:537:78
    |
537 | async fn export_backup(context: &Context, dir: &Path, passphrase: String) -> Result<()> {
    |                                                                              ^^^^^^ -- supplied 1 generic argument
    |                                                                              |
    |                                                                              expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
537 | async fn export_backup(context: &Context, dir: &Path, passphrase: String) -> Result<(), E> {
    |                                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:584:6
    |
584 | ) -> Result<()> {
    |      ^^^^^^ -- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
584 | ) -> Result<(), E> {
    |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:612:82
    |
612 | async fn import_secret_key(context: &Context, path: &Path, set_default: bool) -> Result<()> {
    |                                                                                  ^^^^^^ -- supplied 1 generic argument
    |                                                                                  |
    |                                                                                  expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
612 | async fn import_secret_key(context: &Context, path: &Path, set_default: bool) -> Result<(), E> {
    |                                                                                           +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:628:62
    |
628 | async fn import_self_keys(context: &Context, path: &Path) -> Result<()> {
    |                                                              ^^^^^^ -- supplied 1 generic argument
    |                                                              |
    |                                                              expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
628 | async fn import_self_keys(context: &Context, path: &Path) -> Result<(), E> {
    |                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:683:61
    |
683 | async fn export_self_keys(context: &Context, dir: &Path) -> Result<()> {
    |                                                             ^^^^^^ -- supplied 1 generic argument
    |                                                             |
    |                                                             expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
683 | async fn export_self_keys(context: &Context, dir: &Path) -> Result<(), E> {
    |                                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:813:6
    |
813 | ) -> Result<()> {
    |      ^^^^^^ -- supplied 1 generic argument
    |      |
    |      expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
813 | ) -> Result<(), E> {
    |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/imex.rs:978:42
    |
978 |     async fn test_import_second_key() -> Result<()> {
    |                                          ^^^^^^ -- supplied 1 generic argument
    |                                          |
    |                                          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
978 |     async fn test_import_second_key() -> Result<(), E> {
    |                                                   +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/imex.rs:1009:49
     |
1009 |     async fn test_export_and_import_backup() -> Result<()> {
     |                                                 ^^^^^^ -- supplied 1 generic argument
     |                                                 |
     |                                                 expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1009 |     async fn test_export_and_import_backup() -> Result<(), E> {
     |                                                          +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/imex.rs:1084:57
     |
1084 |     async fn test_import_backup_reset_config_cache() -> Result<()> {
     |                                                         ^^^^^^ -- supplied 1 generic argument
     |                                                         |
     |                                                         expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1084 |     async fn test_import_backup_reset_config_cache() -> Result<(), E> {
     |                                                                  +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/imex.rs:1180:37
     |
1180 |     async fn test_key_transfer() -> Result<()> {
     |                                     ^^^^^^ -- supplied 1 generic argument
     |                                     |
     |                                     expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1180 |     async fn test_key_transfer() -> Result<(), E> {
     |                                              +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/imex.rs:1219:51
     |
1219 |     async fn test_key_transfer_non_self_sent() -> Result<()> {
     |                                                   ^^^^^^ -- supplied 1 generic argument
     |                                                   |
     |                                                   expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1219 |     async fn test_key_transfer_non_self_sent() -> Result<(), E> {
     |                                                            +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/imex.rs:1240:41
     |
1240 |     async fn test_key_transfer_k_9() -> Result<()> {
     |                                         ^^^^^^ -- supplied 1 generic argument
     |                                         |
     |                                         expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1240 |     async fn test_key_transfer_k_9() -> Result<(), E> {
     |                                                  +++

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/imex.rs:297:13
    |
297 |         let armored_key = decrypt_setup_file(&sc, file).await?;
    |             ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/imex.rs:297:27
    |
297 |         let armored_key = decrypt_setup_file(&sc, file).await?;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/imex.rs:297:27
    |
297 |         let armored_key = decrypt_setup_file(&sc, file).await?;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/imex.rs:297:62
    |
297 |         let armored_key = decrypt_setup_file(&sc, file).await?;
    |                                                              ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
    |
85  | pub enum ControlFlow<B, C = ()> {
    |                         ^^^^^^ required by this bound in `Break`
...
93  |     Break(B),
    |     ----- required by a bound in this variant

error[E0277]: `std::result::Result<(), std::io::Error>` is not a future
   --> src/imex.rs:475:18
    |
474 |             fs::remove_file(unpacked_database)
    |             ---------------------------------- this call returns `std::result::Result<(), std::io::Error>`
475 |                 .await
    |                 -^^^^^
    |                 ||
    |                 |`std::result::Result<(), std::io::Error>` is not a future
    |                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<(), std::io::Error>`, which is required by `std::result::Result<(), std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<(), std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<(), std::io::Error>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<(), std::io::Error>` is not a future
   --> src/imex.rs:483:78
    |
483 |                     fs::rename(&from_path, context.get_blobdir().join(name)).await?;
    |                     ---------------------------------------------------------^^^^^
    |                     |                                                       ||
    |                     |                                                       |`std::result::Result<(), std::io::Error>` is not a future
    |                     |                                                       help: remove the `.await`
    |                     this call returns `std::result::Result<(), std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<(), std::io::Error>`, which is required by `std::result::Result<(), std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<(), std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<(), std::io::Error>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<(), std::io::Error>` is not a future
   --> src/imex.rs:560:47
    |
560 |             fs::rename(temp_path, &dest_path).await?;
    |             ----------------------------------^^^^^
    |             |                                ||
    |             |                                |`std::result::Result<(), std::io::Error>` is not a future
    |             |                                help: remove the `.await`
    |             this call returns `std::result::Result<(), std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<(), std::io::Error>`, which is required by `std::result::Result<(), std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<(), std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<(), std::io::Error>` to implement `std::future::IntoFuture`

error[E0609]: no field `r#type` on type `&T`
   --> src/imex.rs:751:34
    |
738 | async fn export_key_to_asc_file<T>(
    |                                 - type parameter 'T' declared here
...
751 |             let key_str = if key.type == DC_KEY_PUBLIC {
    |                                  ^^^^ unknown field

error[E0609]: no field `r#type` on type `&T`
   --> src/imex.rs:759:34
    |
738 | async fn export_key_to_asc_file<T>(
    |                                 - type parameter 'T' declared here
...
759 |             let key_str = if key.type == DC_KEY_PUBLIC {
    |                                  ^^^^ unknown field

error[E0308]: mismatched types
   --> src/imex.rs:777:24
    |
777 |             return Err(err);
    |                    --- ^^^ expected `std::io::Error`, found `anyhow::Error`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: `anyhow::Error` and `std::io::Error` have similar names, but are actually distinct types
note: `anyhow::Error` is defined in crate `anyhow`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:387:1
    |
387 | pub struct Error {
    | ^^^^^^^^^^^^^^^^
note: `std::io::Error` is defined in crate `std`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/io/error.rs:67:1
    |
67  | pub struct Error {
    | ^^^^^^^^^^^^^^^^
help: the type constructed contains `anyhow::Error` due to the type of the argument passed
   --> src/imex.rs:777:20
    |
777 |             return Err(err);
    |                    ^^^^---^
    |                        |
    |                        this argument influences the type of `Err`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:511:5
    |
511 |     Err(#[stable(feature = "rust1", since = "1.0.0")] E),
    |     ^^^

Some errors have detailed explanations: E0107, E0252, E0277, E0308, E0425, E0609.
For more information about an error, try `rustc --explain E0107`.
warning: `deltachat` (lib) generated 5 warnings
error: could not compile `deltachat` (lib) due to 36 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/imex.rs:1183:13
     |
1183 |         let setup_code = initiate_key_transfer(&alice).await?;
     |             ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/imex.rs:1183:26
     |
1183 |         let setup_code = initiate_key_transfer(&alice).await?;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/imex.rs:1183:26
     |
1183 |         let setup_code = initiate_key_transfer(&alice).await?;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/imex.rs:1183:61
     |
1183 |         let setup_code = initiate_key_transfer(&alice).await?;
     |                                                             ^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `Break`
...
93   |     Break(B),
     |     ----- required by a bound in this variant

warning: `deltachat` (lib test) generated 5 warnings (5 duplicates)
error: could not compile `deltachat` (lib test) due to 46 previous errors; 5 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

