Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `Result` is defined multiple times
  --> src/chat.rs:16:50
   |
7  | use anyhow::Result;
   |     -------------- previous import of the type `Result` here
...
16 | use anyhow::{anyhow, bail, ensure, Context as _, Result};
   |                                                  ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `MsgId` is defined multiple times
  --> src/chat.rs:42:51
   |
5  | use crate::message::{MsgId};
   |                      ----- previous import of the type `MsgId` here
...
42 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                                   ^^^^^--
   |                                                   |
   |                                                   `MsgId` reimported here
   |                                                   help: remove unnecessary import
   |
   = note: `MsgId` must be defined only once in the type namespace of this module

warning: unused imports: `EnumProperty`, `ToString`
 --> src/chat.rs:4:20
  |
4 | use strum_macros::{EnumProperty, ToString};
  |                    ^^^^^^^^^^^^  ^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `crate::message::MessageState::OutDraft`
 --> src/chat.rs:6:5
  |
6 | use crate::message::MessageState::OutDraft;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `anyhow::Result`
 --> src/chat.rs:7:5
  |
7 | use anyhow::Result;
  |     ^^^^^^^^^^^^^^

warning: unused import: `MsgId`
  --> src/chat.rs:42:51
   |
42 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                                   ^^^^^

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:834:32
    |
834 |                     match self.get_draft_msg_id(context).await? {
    |                                ^^^^^^^^^^^^^^^^--------- an argument of type `u32` is missing
    |
note: method defined here
   --> src/chat.rs:850:10
    |
850 | async fn get_draft_msg_id(&self, context: &Context, chat_id: u32) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
    |
834 |                     match self.get_draft_msg_id(context, /* u32 */).await? {
    |                                                ~~~~~~~~~~~~~~~~~~~~

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:853:9
    |
851 |     let draft_msg_id = context.inner.sql.query_get_value(
    |                                          --------------- required by a bound introduced by this call
852 |         "SELECT id FROM msgs WHERE chat_id=? AND state=?;",
853 |         rusqlite::params![chat_id, MessageState::OutDraft as i32],
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_get_value`
   --> src/sql.rs:563:41
    |
560 |     pub async fn query_get_value<T>(
    |                  --------------- required by a bound in this associated function
...
563 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_get_value`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:865:20
    |
865 |         match self.get_draft_msg_id(context).await? {
    |                    ^^^^^^^^^^^^^^^^--------- an argument of type `u32` is missing
    |
note: method defined here
   --> src/chat.rs:850:10
    |
850 | async fn get_draft_msg_id(&self, context: &Context, chat_id: u32) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
    |
865 |         match self.get_draft_msg_id(context, /* u32 */).await? {
    |                                    ~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:878:20
    |
878 |         match self.get_draft_msg_id(context).await? {
    |                    ^^^^^^^^^^^^^^^^--------- an argument of type `u32` is missing
    |
note: method defined here
   --> src/chat.rs:850:10
    |
850 | async fn get_draft_msg_id(&self, context: &Context, chat_id: u32) -> Result<Option<MsgId>> {
    |          ^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
    |
878 |         match self.get_draft_msg_id(context, /* u32 */).await? {
    |                                    ~~~~~~~~~~~~~~~~~~~~

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/chat.rs:853:9
    |
851 |     let draft_msg_id = context.inner.sql.query_get_value(
    |                                          --------------- required by a bound introduced by this call
852 |         "SELECT id FROM msgs WHERE chat_id=? AND state=?;",
853 |         rusqlite::params![chat_id, MessageState::OutDraft as i32],
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_get_value`
   --> src/sql.rs:563:41
    |
560 |     pub async fn query_get_value<T>(
    |                  --------------- required by a bound in this associated function
...
563 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_get_value`

Some errors have detailed explanations: E0061, E0252, E0277.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 4 warnings
error: could not compile `deltachat` (lib) due to 6 previous errors; 4 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4765:25
     |
4765 |         assert!(chat_id.get_draft_msg_id(&t).await?.is_none());
     |                         ^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:850:10
     |
850  | async fn get_draft_msg_id(&self, context: &Context, chat_id: u32) -> Result<Option<MsgId>> {
     |          ^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
4765 |         assert!(chat_id.get_draft_msg_id(&t, /* u32 */).await?.is_none());
     |                                         ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4772:21
     |
4772 |             chat_id.get_draft_msg_id(&t).await?.unwrap()
     |                     ^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:850:10
     |
850  | async fn get_draft_msg_id(&self, context: &Context, chat_id: u32) -> Result<Option<MsgId>> {
     |          ^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
4772 |             chat_id.get_draft_msg_id(&t, /* u32 */).await?.unwrap()
     |                                     ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4783:21
     |
4783 |             chat_id.get_draft_msg_id(&t).await?.unwrap()
     |                     ^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:850:10
     |
850  | async fn get_draft_msg_id(&self, context: &Context, chat_id: u32) -> Result<Option<MsgId>> {
     |          ^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
4783 |             chat_id.get_draft_msg_id(&t, /* u32 */).await?.unwrap()
     |                                     ~~~~~~~~~~~~~~~

warning: `deltachat` (lib test) generated 4 warnings (4 duplicates)
error: could not compile `deltachat` (lib test) due to 9 previous errors; 4 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

