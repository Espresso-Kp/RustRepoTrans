Fail
file path is :
projects/deltachat-core/rust/src/oauth2.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `fomat` in this scope
   --> src/oauth2.rs:132:31
    |
132 |     let request_url: String = fomat!(
    |                               ^^^^^ help: a macro with a similar name exists: `format`
    |
   ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:123:1
    |
123 | macro_rules! format {
    | ------------------- similarly named macro `format` defined here

error: cannot find macro `fomat` in this scope
   --> src/oauth2.rs:146:9
    |
146 |         fomat!((request_url) "&refresh_token="
    |         ^^^^^ help: a macro with a similar name exists: `format`
    |
   ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:123:1
    |
123 | macro_rules! format {
    | ------------------- similarly named macro `format` defined here

error[E0425]: cannot find function `get_client` in this scope
   --> src/oauth2.rs:156:18
    |
156 |     let client = get_client(Socks5Config::from_database(&context.sql).await?).unwrap();
    |                  ^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::net::http::get_client;
    |

error[E0425]: cannot find function `get_oauth2_info` in this scope
   --> src/oauth2.rs:94:24
    |
94  |       let oauth2 = match get_oauth2_info(addr) {
    |                          ^^^^^^^^^^^^^^^ help: a function with a similar name exists: `get_oauth2_addr`
...
230 | / pub(crate) async fn get_oauth2_addr(
231 | |     context: &Context,
232 | |     addr: &str,
233 | |     code: &str,
...   |
258 | |     }
259 | | }
    | |_- similarly named function `get_oauth2_addr` defined here

error[E0308]: mismatched types
   --> src/oauth2.rs:104:38
    |
104 |         return Ok(context.get_config("oauth2_access_token").await.ok().flatten());
    |                           ---------- ^^^^^^^^^^^^^^^^^^^^^ expected `Config`, found `&str`
    |                           |
    |                           arguments to this method are incorrect
    |
note: method defined here
   --> src/config.rs:411:18
    |
411 |     pub async fn get_config(&self, key: Config) -> Result<Option<String>> {
    |                  ^^^^^^^^^^        -----------

error[E0599]: no method named `get_raw_config` found for reference `&context::Context` in the current scope
   --> src/oauth2.rs:110:37
    |
110 |     let mut refresh_token = context.get_raw_config("oauth2_refresh_token").await.ok().flatten();
    |                                     ^^^^^^^^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
110 |     let mut refresh_token = context.inner.sql.get_raw_config("oauth2_refresh_token").await.ok().flatten();
    |                                     ++++++++++
help: one of the expressions' fields has a method of the same name
    |
110 |     let mut refresh_token = context.sql.get_raw_config("oauth2_refresh_token").await.ok().flatten();
    |                                     ++++
help: there is a method with a similar name
    |
110 |     let mut refresh_token = context.get_config("oauth2_refresh_token").await.ok().flatten();
    |                                     ~~~~~~~~~~

error[E0599]: no method named `get_raw_config` found for reference `&context::Context` in the current scope
   --> src/oauth2.rs:116:14
    |
115 | /         context
116 | |             .get_raw_config("oauth2_refresh_token_for")
    | |_____________-^^^^^^^^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
116 |             .inner.sql.get_raw_config("oauth2_refresh_token_for")
    |              ++++++++++
help: one of the expressions' fields has a method of the same name
    |
116 |             .sql.get_raw_config("oauth2_refresh_token_for")
    |              ++++
help: there is a method with a similar name
    |
116 |             .get_config("oauth2_refresh_token_for")
    |              ~~~~~~~~~~

error[E0599]: no method named `get_raw_config` found for reference `&context::Context` in the current scope
   --> src/oauth2.rs:122:36
    |
122 |             redirect_uri = context.get_raw_config("oauth2_pending_redirect_uri").await.ok().flatten();
    |                                    ^^^^^^^^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
122 |             redirect_uri = context.inner.sql.get_raw_config("oauth2_pending_redirect_uri").await.ok().flatten();
    |                                    ++++++++++
help: one of the expressions' fields has a method of the same name
    |
122 |             redirect_uri = context.sql.get_raw_config("oauth2_pending_redirect_uri").await.ok().flatten();
    |                                    ++++
help: there is a method with a similar name
    |
122 |             redirect_uri = context.get_config("oauth2_pending_redirect_uri").await.ok().flatten();
    |                                    ~~~~~~~~~~

error[E0599]: no method named `get_raw_config` found for reference `&context::Context` in the current scope
   --> src/oauth2.rs:127:36
    |
127 |             redirect_uri = context.get_raw_config("oauth2_redirect_uri").await.ok().flatten();
    |                                    ^^^^^^^^^^^^^^
    |
help: one of the expressions' fields has a method of the same name
    |
127 |             redirect_uri = context.inner.sql.get_raw_config("oauth2_redirect_uri").await.ok().flatten();
    |                                    ++++++++++
help: one of the expressions' fields has a method of the same name
    |
127 |             redirect_uri = context.sql.get_raw_config("oauth2_redirect_uri").await.ok().flatten();
    |                                    ++++
help: there is a method with a similar name
    |
127 |             redirect_uri = context.get_config("oauth2_redirect_uri").await.ok().flatten();
    |                                    ~~~~~~~~~~

error[E0308]: mismatched types
   --> src/oauth2.rs:189:28
    |
189 |         context.set_config("oauth2_refresh_token", Some(&refresh_token)).await?;
    |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^ expected `Config`, found `&str`
    |                 |
    |                 arguments to this method are incorrect
    |
note: method defined here
   --> src/config.rs:578:18
    |
578 |     pub async fn set_config(&self, key: Config, value: Option<&str>) -> Result<()> {
    |                  ^^^^^^^^^^        -----------

error[E0308]: mismatched types
   --> src/oauth2.rs:190:28
    |
190 |         context.set_config("oauth2_refresh_token_for", Some(code)).await?;
    |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Config`, found `&str`
    |                 |
    |                 arguments to this method are incorrect
    |
note: method defined here
   --> src/config.rs:578:18
    |
578 |     pub async fn set_config(&self, key: Config, value: Option<&str>) -> Result<()> {
    |                  ^^^^^^^^^^        -----------

error[E0308]: mismatched types
   --> src/oauth2.rs:191:25
    |
188 |     if let Some(refresh_token) = new_refresh_token {
    |                 ------------- expected due to the type of this binding
...
191 |         refresh_token = Some(refresh_token);
    |                         ^^^^^^^^^^^^^^^^^^^ expected `String`, found `Option<String>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<std::string::String>`

error[E0599]: no variant or associated item named `AccessToken` found for enum `config::Config` in the current scope
   --> src/oauth2.rs:203:36
    |
203 |         context.set_config(Config::AccessToken, Some(token)).await?;
    |                                    ^^^^^^^^^^^ variant or associated item not found in `Config`
    |
   ::: src/config.rs:43:1
    |
43  | pub enum Config {
    | --------------- variant or associated item `AccessToken` not found for this enum

error[E0599]: no variant or associated item named `RedirectUri` found for enum `config::Config` in the current scope
   --> src/oauth2.rs:222:36
    |
222 |         context.set_config(Config::RedirectUri, Some(&redirect_uri.unwrap_or_else(|| "unset".to_string()))).await?;
    |                                    ^^^^^^^^^^^ variant or associated item not found in `Config`
    |
   ::: src/config.rs:43:1
    |
43  | pub enum Config {
    | --------------- variant or associated item `RedirectUri` not found for this enum

Some errors have detailed explanations: E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 14 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

