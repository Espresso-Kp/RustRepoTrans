Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0308]: mismatched types
   --> src/./mpin192.rs:695:13
    |
694 |         match hid {
    |               --- this expression has type `&[u8]`
695 |             Some(hid) => ECP::from_bytes(hid),
    |             ^^^^^^^^^ expected `[u8]`, found `Option<_>`
    |
    = note: expected slice `[u8]`
                found enum `Option<_>`

error[E0308]: mismatched types
   --> src/./mpin192.rs:696:13
    |
694 |         match hid {
    |               --- this expression has type `&[u8]`
695 |             Some(hid) => ECP::from_bytes(hid),
696 |             None => return BAD_PARAMS,
    |             ^^^^ expected `[u8]`, found `Option<_>`
    |
    = note: expected slice `[u8]`
                found enum `Option<_>`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> src/./mpin192.rs:695:13
    |
695 |             Some(hid) => ECP::from_bytes(hid),
    |             ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Some`
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:564:17
    |
564 | pub enum Option<T> {
    |                 ^ required by this bound in `Some`

error[E0308]: mismatched types
   --> src/./mpin192.rs:704:36
    |
704 |     let mut p = pair192::g1mul(&p, &y);
    |                 --------------     ^^ types differ in mutability
    |                 |
    |                 arguments to this function are incorrect
    |
    = note: expected mutable reference `&mut bls24::big::Big`
                       found reference `&bls24::big::Big`
note: function defined here
   --> src/./pair192.rs:464:8
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    |        ^^^^^          -----------

error[E0599]: no method named `is_some` found for reference `&[u8]` in the current scope
   --> src/./mpin192.rs:716:16
    |
716 |         if hid.is_some() && xid.is_some() && e.is_some() && f.is_some() {
    |                ^^^^^^^ method not found in `&[u8]`

error[E0599]: no method named `unwrap` found for reference `&[u8]` in the current scope
   --> src/./mpin192.rs:719:45
    |
719 |                 let p = ECP::from_bytes(hid.unwrap());
    |                                             ^^^^^^ help: there is a method with a similar name: `swap`

error[E0308]: mismatched types
   --> src/./mpin192.rs:728:48
    |
728 |                 let mut p = pair192::g1mul(&p, &y);
    |                             --------------     ^^ types differ in mutability
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected mutable reference `&mut bls24::big::Big`
                       found reference `&bls24::big::Big`
note: function defined here
   --> src/./pair192.rs:464:8
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    |        ^^^^^          -----------

error[E0308]: mismatched types
   --> src/./mpin192.rs:695:13
    |
694 |         match hid {
    |               --- this expression has type `&[u8]`
695 |             Some(hid) => ECP::from_bytes(hid),
    |             ^^^^^^^^^ expected `[u8]`, found `Option<_>`
    |
    = note: expected slice `[u8]`
                found enum `std::option::Option<_>`

error[E0308]: mismatched types
   --> src/./mpin192.rs:696:13
    |
694 |         match hid {
    |               --- this expression has type `&[u8]`
695 |             Some(hid) => ECP::from_bytes(hid),
696 |             None => return BAD_PARAMS,
    |             ^^^^ expected `[u8]`, found `Option<_>`
    |
    = note: expected slice `[u8]`
                found enum `std::option::Option<_>`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> src/./mpin192.rs:695:13
    |
695 |             Some(hid) => ECP::from_bytes(hid),
    |             ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `std::prelude::v1::Some`
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:564:17
    |
564 | pub enum Option<T> {
    |                 ^ required by this bound in `std::prelude::v1::Some`

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 7 previous errors

