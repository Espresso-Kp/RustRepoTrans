Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `Schema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:139:28
    |
139 |         AvroSchemaOrField::Schema(AvroSchema::String) => {
    |                            ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0277]: the trait bound `serde_json::Value: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:143:53
    |
143 |             map_schema.insert("values".to_string(), Value::from(value));
    |                                                     ^^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `serde_json::Value`
    |
    = help: the following other types implement trait `From<T>`:
              <serde_json::Value as From<bool>>
              <serde_json::Value as From<isize>>
              <serde_json::Value as From<i8>>
              <serde_json::Value as From<i16>>
              <serde_json::Value as From<i32>>
              <serde_json::Value as From<i64>>
              <serde_json::Value as From<usize>>
              <serde_json::Value as From<u8>>
            and 14 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:144:85
    |
144 |             map_schema.insert("key-id".to_string(), Value::Number(Number::from(self.last_map_key_field_id)));
    |                                                                                     ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:145:87
    |
145 |             map_schema.insert("value-id".to_string(), Value::Number(Number::from(self.last_map_value_field_id)));
    |                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0599]: no variant or associated item named `Schema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:146:35
    |
146 |             Ok(AvroSchemaOrField::Schema(AvroSchema::Map(Box::new(value.into()))))
    |                                   ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0277]: the trait bound `apache_avro::Schema: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:146:73
    |
146 |             Ok(AvroSchemaOrField::Schema(AvroSchema::Map(Box::new(value.into()))))
    |                                                                         ^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `apache_avro::Schema`, which is required by `itertools::Either<apache_avro::Schema, RecordField>: Into<apache_avro::Schema>`
    |
    = help: the trait `Into<std::result::Result<RecordField, apache_avro::Schema>>` is implemented for `itertools::Either<apache_avro::Schema, RecordField>`
    = help: for that trait implementation, expected `std::result::Result<RecordField, apache_avro::Schema>`, found `apache_avro::Schema`
    = note: required for `itertools::Either<apache_avro::Schema, RecordField>` to implement `Into<apache_avro::Schema>`

error[E0277]: the trait bound `apache_avro::Schema: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:156:39
    |
156 |                     schema: key_value.into(),
    |                                       ^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `apache_avro::Schema`, which is required by `itertools::Either<apache_avro::Schema, RecordField>: Into<apache_avro::Schema>`
    |
    = help: the trait `Into<std::result::Result<RecordField, apache_avro::Schema>>` is implemented for `itertools::Either<apache_avro::Schema, RecordField>`
    = help: for that trait implementation, expected `std::result::Result<RecordField, apache_avro::Schema>`, found `apache_avro::Schema`
    = note: required for `itertools::Either<apache_avro::Schema, RecordField>` to implement `Into<apache_avro::Schema>`

error[E0063]: missing field `aliases` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:152:17
    |
152 |                 AvroRecordField {
    |                 ^^^^^^^^^^^^^^^ missing `aliases`

error[E0277]: the trait bound `apache_avro::Schema: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:165:35
    |
165 |                     schema: value.into(),
    |                                   ^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `apache_avro::Schema`, which is required by `itertools::Either<apache_avro::Schema, RecordField>: Into<apache_avro::Schema>`
    |
    = help: the trait `Into<std::result::Result<RecordField, apache_avro::Schema>>` is implemented for `itertools::Either<apache_avro::Schema, RecordField>`
    = help: for that trait implementation, expected `std::result::Result<RecordField, apache_avro::Schema>`, found `apache_avro::Schema`
    = note: required for `itertools::Either<apache_avro::Schema, RecordField>` to implement `Into<apache_avro::Schema>`

error[E0063]: missing field `aliases` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:161:17
    |
161 |                 AvroRecordField {
    |                 ^^^^^^^^^^^^^^^ missing `aliases`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:172:55
    |
172 |             let record_name = format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id);
    |                                                       ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:172:83
    |
172 |             let record_name = format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id);
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0599]: no variant or associated item named `Schema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:179:35
    |
179 |             Ok(AvroSchemaOrField::Schema(AvroSchema::Array(Box::new(array_schema))))
    |                                   ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

Some errors have detailed explanations: E0063, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0063`.
error: could not compile `iceberg` (lib) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 13 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `Schema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:139:28
    |
139 |         AvroSchemaOrField::Schema(AvroSchema::String) => {
    |                            ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0277]: the trait bound `serde_json::Value: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:143:53
    |
143 |             map_schema.insert("values".to_string(), Value::from(value));
    |                                                     ^^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `serde_json::Value`
    |
    = help: the following other types implement trait `From<T>`:
              <serde_json::Value as From<bool>>
              <serde_json::Value as From<isize>>
              <serde_json::Value as From<i8>>
              <serde_json::Value as From<i16>>
              <serde_json::Value as From<i32>>
              <serde_json::Value as From<i64>>
              <serde_json::Value as From<usize>>
              <serde_json::Value as From<u8>>
            and 14 others

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:144:85
    |
144 |             map_schema.insert("key-id".to_string(), Value::Number(Number::from(self.last_map_key_field_id)));
    |                                                                                     ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:145:87
    |
145 |             map_schema.insert("value-id".to_string(), Value::Number(Number::from(self.last_map_value_field_id)));
    |                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0599]: no variant or associated item named `Schema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:146:35
    |
146 |             Ok(AvroSchemaOrField::Schema(AvroSchema::Map(Box::new(value.into()))))
    |                                   ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0277]: the trait bound `apache_avro::Schema: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:146:73
    |
146 |             Ok(AvroSchemaOrField::Schema(AvroSchema::Map(Box::new(value.into()))))
    |                                                                         ^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `apache_avro::Schema`, which is required by `itertools::Either<apache_avro::Schema, RecordField>: Into<apache_avro::Schema>`
    |
    = help: the trait `Into<std::result::Result<RecordField, apache_avro::Schema>>` is implemented for `itertools::Either<apache_avro::Schema, RecordField>`
    = help: for that trait implementation, expected `std::result::Result<RecordField, apache_avro::Schema>`, found `apache_avro::Schema`
    = note: required for `itertools::Either<apache_avro::Schema, RecordField>` to implement `Into<apache_avro::Schema>`

error[E0277]: the trait bound `apache_avro::Schema: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:156:39
    |
156 |                     schema: key_value.into(),
    |                                       ^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `apache_avro::Schema`, which is required by `itertools::Either<apache_avro::Schema, RecordField>: Into<apache_avro::Schema>`
    |
    = help: the trait `Into<std::result::Result<RecordField, apache_avro::Schema>>` is implemented for `itertools::Either<apache_avro::Schema, RecordField>`
    = help: for that trait implementation, expected `std::result::Result<RecordField, apache_avro::Schema>`, found `apache_avro::Schema`
    = note: required for `itertools::Either<apache_avro::Schema, RecordField>` to implement `Into<apache_avro::Schema>`

error[E0063]: missing field `aliases` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:152:17
    |
152 |                 AvroRecordField {
    |                 ^^^^^^^^^^^^^^^ missing `aliases`

error[E0277]: the trait bound `apache_avro::Schema: From<itertools::Either<apache_avro::Schema, RecordField>>` is not satisfied
   --> crates/iceberg/src/avro/schema.rs:165:35
    |
165 |                     schema: value.into(),
    |                                   ^^^^ the trait `From<itertools::Either<apache_avro::Schema, RecordField>>` is not implemented for `apache_avro::Schema`, which is required by `itertools::Either<apache_avro::Schema, RecordField>: Into<apache_avro::Schema>`
    |
    = help: the trait `Into<std::result::Result<RecordField, apache_avro::Schema>>` is implemented for `itertools::Either<apache_avro::Schema, RecordField>`
    = help: for that trait implementation, expected `std::result::Result<RecordField, apache_avro::Schema>`, found `apache_avro::Schema`
    = note: required for `itertools::Either<apache_avro::Schema, RecordField>` to implement `Into<apache_avro::Schema>`

error[E0063]: missing field `aliases` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:161:17
    |
161 |                 AvroRecordField {
    |                 ^^^^^^^^^^^^^^^ missing `aliases`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:172:55
    |
172 |             let record_name = format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id);
    |                                                       ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:172:83
    |
172 |             let record_name = format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id);
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0599]: no variant or associated item named `Schema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:179:35
    |
179 |             Ok(AvroSchemaOrField::Schema(AvroSchema::Array(Box::new(array_schema))))
    |                                   ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

Some errors have detailed explanations: E0063, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0063`.
error: could not compile `iceberg` (lib) due to 13 previous errors

