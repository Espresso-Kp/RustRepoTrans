Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:219:17
    |
219 | fn before_field(&mut self, _field: &Field) -> Result<()> {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:222:16
    |
222 | fn after_field(&mut self, _field: &Field) -> Result<()> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:225:11
    |
225 | fn schema(&mut self, _schema: &ArrowSchema, _results: Vec<Self::T>) -> Result<Self::U> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:228:13
    |
228 | fn r#struct(&mut self, fields: &Fields, _results: Vec<Self::T>) -> Result<Self::T> {
    |             ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:234:10
    |
234 | fn build(&self) -> Schema {
    |          ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:249:16
    |
249 | fn visit_field(&mut self, field: &Field) -> Result<()> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:240:35
    |
240 |             identifier_field_ids: HashSet::new(),
    |                                   ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:241:26
    |
241 |             alias_to_id: BiHashMap::new(),
    |                          ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
241 |             alias_to_id: HashMap::new(),
    |                          ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:225:59
    |
225 | fn schema(&mut self, _schema: &ArrowSchema, _results: Vec<Self::T>) -> Result<Self::U> {
    |                                                           ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:225:79
    |
225 | fn schema(&mut self, _schema: &ArrowSchema, _results: Vec<Self::T>) -> Result<Self::U> {
    |                                                                               ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:228:55
    |
228 | fn r#struct(&mut self, fields: &Fields, _results: Vec<Self::T>) -> Result<Self::T> {
    |                                                       ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:228:75
    |
228 | fn r#struct(&mut self, fields: &Fields, _results: Vec<Self::T>) -> Result<Self::T> {
    |                                                                           ^^^^ `Self` is only available in impls, traits, and type definitions

For more information about this error, try `rustc --explain E0433`.
error: could not compile `iceberg` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 12 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:219:17
    |
219 | fn before_field(&mut self, _field: &Field) -> Result<()> {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:222:16
    |
222 | fn after_field(&mut self, _field: &Field) -> Result<()> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:225:11
    |
225 | fn schema(&mut self, _schema: &ArrowSchema, _results: Vec<Self::T>) -> Result<Self::U> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:228:13
    |
228 | fn r#struct(&mut self, fields: &Fields, _results: Vec<Self::T>) -> Result<Self::T> {
    |             ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:234:10
    |
234 | fn build(&self) -> Schema {
    |          ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:249:16
    |
249 | fn visit_field(&mut self, field: &Field) -> Result<()> {
    |                ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0433]: failed to resolve: use of undeclared type `HashSet`
   --> crates/iceberg/src/arrow/schema.rs:240:35
    |
240 |             identifier_field_ids: HashSet::new(),
    |                                   ^^^^^^^ use of undeclared type `HashSet`
    |
help: consider importing this struct
    |
20  + use std::collections::HashSet;
    |

error[E0433]: failed to resolve: use of undeclared type `BiHashMap`
   --> crates/iceberg/src/arrow/schema.rs:241:26
    |
241 |             alias_to_id: BiHashMap::new(),
    |                          ^^^^^^^^^ use of undeclared type `BiHashMap`
    |
help: a struct with a similar name exists
    |
241 |             alias_to_id: HashMap::new(),
    |                          ~~~~~~~
help: consider importing this struct
    |
20  + use bimap::BiHashMap;
    |

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:225:59
    |
225 | fn schema(&mut self, _schema: &ArrowSchema, _results: Vec<Self::T>) -> Result<Self::U> {
    |                                                           ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:225:79
    |
225 | fn schema(&mut self, _schema: &ArrowSchema, _results: Vec<Self::T>) -> Result<Self::U> {
    |                                                                               ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:228:55
    |
228 | fn r#struct(&mut self, fields: &Fields, _results: Vec<Self::T>) -> Result<Self::T> {
    |                                                       ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:228:75
    |
228 | fn r#struct(&mut self, fields: &Fields, _results: Vec<Self::T>) -> Result<Self::T> {
    |                                                                           ^^^^ `Self` is only available in impls, traits, and type definitions

For more information about this error, try `rustc --explain E0433`.
error: could not compile `iceberg` (lib) due to 12 previous errors

