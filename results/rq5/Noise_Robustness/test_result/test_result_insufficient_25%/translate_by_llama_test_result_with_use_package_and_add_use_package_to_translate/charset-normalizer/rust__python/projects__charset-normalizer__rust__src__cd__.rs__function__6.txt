Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0252]: the name `HashMap` is defined multiple times
  --> src/cd.rs:14:13
   |
3  | use std::collections::HashMap;
   |     ------------------------- previous import of the type `HashMap` here
...
14 | use ahash::{HashMap, HashMapExt, HashSet};
   |             ^^^^^^^ `HashMap` reimported here
   |
   = note: `HashMap` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
14 | use ahash::{HashMap as OtherHashMap, HashMapExt, HashSet};
   |             ~~~~~~~~~~~~~~~~~~~~~~~

error[E0252]: the name `HashSet` is defined multiple times
  --> src/cd.rs:14:34
   |
4  | use std::collections::HashSet;
   |     ------------------------- previous import of the type `HashSet` here
...
14 | use ahash::{HashMap, HashMapExt, HashSet};
   |                                  ^^^^^^^ `HashSet` reimported here
   |
   = note: `HashSet` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
14 | use ahash::{HashMap, HashMapExt, HashSet as OtherHashSet};
   |                                  ~~~~~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `std::collections::Vec`
 --> src/cd.rs:5:5
  |
5 | use std::collections::Vec;
  |     ^^^^^^^^^^^^^^^^^^^^^ no `Vec` in `collections`
  |
help: consider importing one of these items instead
  |
5 | use serde::__private::Vec;
  |     ~~~~~~~~~~~~~~~~~~~~~
5 | use std::vec::Vec;
  |     ~~~~~~~~~~~~~

warning: unused imports: `HashMap`, `HashSet`
  --> src/cd.rs:14:13
   |
14 | use ahash::{HashMap, HashMapExt, HashSet};
   |             ^^^^^^^              ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: arguments to this function are incorrect
   --> src/cd.rs:151:20
    |
151 |                 if!is_suspiciously_successive_range(range, character_range.as_ref()) {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: expected `Option<&str>`, found `&&str`
   --> src/cd.rs:151:53
    |
151 |                 if!is_suspiciously_successive_range(range, character_range.as_ref()) {
    |                                                     ^^^^^
    = note:   expected enum `std::option::Option<&'static str>`
            found reference `&&str`
note: expected `Option<&str>`, found `Option<&&str>`
   --> src/cd.rs:151:60
    |
151 |                 if!is_suspiciously_successive_range(range, character_range.as_ref()) {
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `std::option::Option<&'static str>`
               found enum `std::option::Option<&&str>`
note: function defined here
   --> src/utils.rs:307:15
    |
307 | pub(crate) fn is_suspiciously_successive_range(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
308 |     range_a: Option<&'static str>,
    |     -----------------------------
309 |     range_b: Option<&'static str>,
    |     -----------------------------
help: try wrapping the expression in `Some`
    |
151 |                 if!is_suspiciously_successive_range(Some(range), character_range.as_ref()) {
    |                                                     +++++     +
help: try removing the method call
    |
151 -                 if!is_suspiciously_successive_range(range, character_range.as_ref()) {
151 +                 if!is_suspiciously_successive_range(range, character_range) {
    |

error[E0308]: mismatched types
   --> src/cd.rs:157:24
    |
157 |            .or_else(|| character_range);
    |                        ^^^^^^^^^^^^^^^ expected `Option<&&str>`, found `Option<&str>`
    |
    = note: expected enum `std::option::Option<&&str>`
               found enum `std::option::Option<&str>`

error[E0308]: mismatched types
   --> src/cd.rs:160:39
    |
160 |             layer_target_range = Some(character_range.unwrap());
    |                                  ---- ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&&str`, found `&str`
    |                                  |
    |                                  arguments to this enum variant are incorrect
    |
    = note: expected reference `&&str`
               found reference `&str`
help: the type constructed contains `&str` due to the type of the argument passed
   --> src/cd.rs:160:34
    |
160 |             layer_target_range = Some(character_range.unwrap());
    |                                  ^^^^^------------------------^
    |                                       |
    |                                       this argument influences the type of `Some`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:572:5
    |
572 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^^^

error[E0308]: mismatched types
    --> src/cd.rs:163:32
     |
163  |         if!layers.contains_key(layer_target_range.as_ref()) {
     |                   ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |                   |            |
     |                   |            expected `&_`, found `Option<&&&str>`
     |                   |            help: consider borrowing here: `&layer_target_range.as_ref()`
     |                   arguments to this method are incorrect
     |
     = note: expected reference `&_`
                     found enum `std::option::Option<&&&str>`
note: method defined here
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1041:12
     |
1041 |     pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool
     |            ^^^^^^^^^^^^

error[E0308]: mismatched types
    --> src/cd.rs:164:56
     |
164  |             layers.insert(layer_target_range.unwrap(), character.to_lowercase());
     |                    ------                              ^^^^^^^^^^^^^^^^^^^^^^^^- help: try using a conversion method: `.to_string()`
     |                    |                                   |
     |                    |                                   expected `String`, found `ToLowercase`
     |                    arguments to this method are incorrect
     |
help: the return type of this call is `ToLowercase` due to the type of the argument passed
    --> src/cd.rs:164:13
     |
164  |             layers.insert(layer_target_range.unwrap(), character.to_lowercase());
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------^
     |                                                        |
     |                                                        this argument influences the return type of `insert`
note: method defined here
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1103:12
     |
1103 |     pub fn insert(&mut self, k: K, v: V) -> Option<V> {
     |            ^^^^^^

error[E0308]: mismatched types
   --> src/cd.rs:168:115
    |
168 | ...e.unwrap()).unwrap().to_string() + &character.to_lowercase());
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&ToLowercase`
    |
    = note: expected reference `&str`
               found reference `&ToLowercase`

warning: unused import: `HashMapExt`
  --> src/cd.rs:14:22
   |
14 | use ahash::{HashMap, HashMapExt, HashSet};
   |                      ^^^^^^^^^^

Some errors have detailed explanations: E0252, E0308, E0432.
For more information about an error, try `rustc --explain E0252`.
warning: `charset-normalizer-rs` (lib) generated 2 warnings
error: could not compile `charset-normalizer-rs` (lib) due to 9 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `charset-normalizer-rs` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `charset-normalizer-rs` (lib test) due to 9 previous errors; 2 warnings emitted

