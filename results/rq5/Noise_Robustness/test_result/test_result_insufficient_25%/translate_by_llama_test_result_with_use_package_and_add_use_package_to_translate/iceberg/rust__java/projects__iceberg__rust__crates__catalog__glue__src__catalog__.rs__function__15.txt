Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:557:13
    |
557 |             LOG.info("Successfully renamed table from {} to {}", src, dest);
    |             ^^^ not found in this scope

error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:560:13
    |
560 |             LOG.error("Fail to drop old table {} after renaming to {}, rollback to use the old table", src, dest, e);
    |             ^^^ not found in this scope

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0425]: cannot find function `namespace_exists` in this scope
   --> crates/catalog/glue/src/catalog.rs:522:8
    |
522 |     if!namespace_exists(dest_namespace.clone()) {
    |        ^^^^^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
522 |     if!self.namespace_exists(dest_namespace.clone()) {
    |        +++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:525:83
    |
525 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                   ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:525:88
    |
525 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                        ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:529:60
    |
529 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                            ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:529:50
    |
529 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                              ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:530:59
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<&TableIdent>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:530:49
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                           --------------------- ^^^ the trait `From<&TableIdent>` is not implemented for `std::string::String`, which is required by `&TableIdent: Into<std::string::String>`
    |                           |
    |                           required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&TableIdent` to implement `Into<std::string::String>`
note: required by a bound in `utils::convert_to_glue_table`
   --> crates/catalog/glue/src/utils.rs:145:22
    |
144 | pub(crate) fn convert_to_glue_table(
    |               --------------------- required by a bound in this function
145 |     table_name: impl Into<String>,
    |                      ^^^^^^^^^^^^ required by this bound in `convert_to_glue_table`

error[E0061]: this function takes 5 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:530:27
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                           ^^^^^^^^^^^^^^^^^^^^^-------------------------------------------------------------- three arguments of type `&iceberg::spec::TableMetadata`, `&std::collections::HashMap<std::string::String, std::string::String>`, and `std::option::Option<std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
    |     -----------------------------
146 |     metadata_location: String,
    |     -------------------------
147 |     metadata: &TableMetadata,
    |     ------------------------
148 |     properties: &HashMap<String, String>,
    |     ------------------------------------
149 |     prev_metadata_location: Option<String>,
    |     --------------------------------------
help: provide the arguments
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation(), /* &iceberg::spec::TableMetadata */, /* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<std::string::String> */)?;
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:531:59
    |
531 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:531:48
    |
531 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                            ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:532:58
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                          ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<&TableIdent>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:532:47
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                         --------------------- ^^^^ the trait `From<&TableIdent>` is not implemented for `std::string::String`, which is required by `&TableIdent: Into<std::string::String>`
    |                         |
    |                         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&TableIdent` to implement `Into<std::string::String>`
note: required by a bound in `utils::convert_to_glue_table`
   --> crates/catalog/glue/src/utils.rs:145:22
    |
144 | pub(crate) fn convert_to_glue_table(
    |               --------------------- required by a bound in this function
145 |     table_name: impl Into<String>,
    |                      ^^^^^^^^^^^^ required by this bound in `convert_to_glue_table`

error[E0061]: this function takes 5 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:532:25
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                         ^^^^^^^^^^^^^^^^^^^^^--------------------------------------------------------------- three arguments of type `&iceberg::spec::TableMetadata`, `&std::collections::HashMap<std::string::String, std::string::String>`, and `std::option::Option<std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
    |     -----------------------------
146 |     metadata_location: String,
    |     -------------------------
147 |     metadata: &TableMetadata,
    |     ------------------------
148 |     properties: &HashMap<String, String>,
    |     ------------------------------------
149 |     prev_metadata_location: Option<String>,
    |     --------------------------------------
help: provide the arguments
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation(), /* &iceberg::spec::TableMetadata */, /* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<std::string::String> */)?;
    |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:534:29
    |
534 |     let glue_client = &self.glue_client;
    |                             ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:536:15
    |
536 |        .owner(from_table_db_name.clone())
    |         ----- ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::owner`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:188:40
    |
188 |     pub fn owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::owner`

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:537:20
    |
537 |        .table_type(from_table_name.clone())
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::table_type`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:327:45
    |
327 |     pub fn table_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::table_type`

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:538:20
    |
538 |        .parameters(from_table_name.clone())
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:538:9
    |
538 |        .parameters(from_table_name.clone())
    |         ^^^^^^^^^^------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
538 |        .parameters(from_table_name.clone(), /* v */)
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:539:28
    |
539 |        .storage_descriptor(from_table_name.clone());
    |         ------------------ ^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `TableInput`
    |         |
    |         arguments to this method are incorrect
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `CreateTableRequest`
   --> crates/catalog/glue/src/catalog.rs:541:32
    |
541 |     let create_table_request = CreateTableRequest::builder()
    |                                ^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:542:25
    |
542 |        .catalog_id(self.aws_properties.glue_catalog_id())
    |                         ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:544:46
    |
544 |        .table_input(table_input_builder.name(to_table_name.clone()).build())
    |                                         ---- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |                                         |
    |                                         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:160:39
    |
160 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::name`

error[E0433]: failed to resolve: use of undeclared type `DropTableRequest`
   --> crates/catalog/glue/src/catalog.rs:549:30
    |
549 |     let drop_table_request = DropTableRequest::builder()
    |                              ^^^^^^^^^^^^^^^^ use of undeclared type `DropTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:550:25
    |
550 |        .catalog_id(self.aws_properties.glue_catalog_id())
    |                         ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `DeleteTableRequest`
   --> crates/catalog/glue/src/catalog.rs:561:40
    |
561 |             let delete_table_request = DeleteTableRequest::builder()
    |                                        ^^^^^^^^^^^^^^^^^^ use of undeclared type `DeleteTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:562:33
    |
562 |                .catalog_id(self.aws_properties.glue_catalog_id())
    |                                 ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0433, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 28 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:557:13
    |
557 |             LOG.info("Successfully renamed table from {} to {}", src, dest);
    |             ^^^ not found in this scope

error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:560:13
    |
560 |             LOG.error("Fail to drop old table {} after renaming to {}, rollback to use the old table", src, dest, e);
    |             ^^^ not found in this scope

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0425]: cannot find function `namespace_exists` in this scope
   --> crates/catalog/glue/src/catalog.rs:522:8
    |
522 |     if!namespace_exists(dest_namespace.clone()) {
    |        ^^^^^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
522 |     if!self.namespace_exists(dest_namespace.clone()) {
    |        +++++

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:525:83
    |
525 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                   ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:525:88
    |
525 |             format!("Cannot rename {} to {} because namespace {} does not exist", src, dest, dest_namespace),
    |                                                                                        ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:529:60
    |
529 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                            ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:529:50
    |
529 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                              ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:530:59
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<&TableIdent>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:530:49
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                           --------------------- ^^^ the trait `From<&TableIdent>` is not implemented for `std::string::String`, which is required by `&TableIdent: Into<std::string::String>`
    |                           |
    |                           required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&TableIdent` to implement `Into<std::string::String>`
note: required by a bound in `convert_to_glue_table`
   --> crates/catalog/glue/src/utils.rs:145:22
    |
144 | pub(crate) fn convert_to_glue_table(
    |               --------------------- required by a bound in this function
145 |     table_name: impl Into<String>,
    |                      ^^^^^^^^^^^^ required by this bound in `convert_to_glue_table`

error[E0061]: this function takes 5 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:530:27
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                           ^^^^^^^^^^^^^^^^^^^^^-------------------------------------------------------------- three arguments of type `&TableMetadata`, `&HashMap<std::string::String, std::string::String>`, and `std::option::Option<std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
    |     -----------------------------
146 |     metadata_location: String,
    |     -------------------------
147 |     metadata: &TableMetadata,
    |     ------------------------
148 |     properties: &HashMap<String, String>,
    |     ------------------------------------
149 |     prev_metadata_location: Option<String>,
    |     --------------------------------------
help: provide the arguments
    |
530 |     let from_table_name = convert_to_glue_table(src, self.aws_properties.glue_catalog_skip_name_validation(), /* &TableMetadata */, /* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<std::string::String> */)?;
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:531:59
    |
531 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:531:48
    |
531 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                            ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:532:58
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                          ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<&TableIdent>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:532:47
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                         --------------------- ^^^^ the trait `From<&TableIdent>` is not implemented for `std::string::String`, which is required by `&TableIdent: Into<std::string::String>`
    |                         |
    |                         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&TableIdent` to implement `Into<std::string::String>`
note: required by a bound in `convert_to_glue_table`
   --> crates/catalog/glue/src/utils.rs:145:22
    |
144 | pub(crate) fn convert_to_glue_table(
    |               --------------------- required by a bound in this function
145 |     table_name: impl Into<String>,
    |                      ^^^^^^^^^^^^ required by this bound in `convert_to_glue_table`

error[E0061]: this function takes 5 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:532:25
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                         ^^^^^^^^^^^^^^^^^^^^^--------------------------------------------------------------- three arguments of type `&TableMetadata`, `&HashMap<std::string::String, std::string::String>`, and `std::option::Option<std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
    |     -----------------------------
146 |     metadata_location: String,
    |     -------------------------
147 |     metadata: &TableMetadata,
    |     ------------------------
148 |     properties: &HashMap<String, String>,
    |     ------------------------------------
149 |     prev_metadata_location: Option<String>,
    |     --------------------------------------
help: provide the arguments
    |
532 |     let to_table_name = convert_to_glue_table(dest, self.aws_properties.glue_catalog_skip_name_validation(), /* &TableMetadata */, /* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<std::string::String> */)?;
    |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:534:29
    |
534 |     let glue_client = &self.glue_client;
    |                             ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:536:15
    |
536 |        .owner(from_table_db_name.clone())
    |         ----- ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::owner`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:188:40
    |
188 |     pub fn owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::owner`

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:537:20
    |
537 |        .table_type(from_table_name.clone())
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::table_type`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:327:45
    |
327 |     pub fn table_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::table_type`

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:538:20
    |
538 |        .parameters(from_table_name.clone())
    |         ---------- ^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |         |
    |         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:538:9
    |
538 |        .parameters(from_table_name.clone())
    |         ^^^^^^^^^^------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
538 |        .parameters(from_table_name.clone(), /* v */)
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:539:28
    |
539 |        .storage_descriptor(from_table_name.clone());
    |         ------------------ ^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `TableInput`
    |         |
    |         arguments to this method are incorrect
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `CreateTableRequest`
   --> crates/catalog/glue/src/catalog.rs:541:32
    |
541 |     let create_table_request = CreateTableRequest::builder()
    |                                ^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:542:25
    |
542 |        .catalog_id(self.aws_properties.glue_catalog_id())
    |                         ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:544:46
    |
544 |        .table_input(table_input_builder.name(to_table_name.clone()).build())
    |                                         ---- ^^^^^^^^^^^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |                                         |
    |                                         required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:160:39
    |
160 |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::name`

error[E0433]: failed to resolve: use of undeclared type `DropTableRequest`
   --> crates/catalog/glue/src/catalog.rs:549:30
    |
549 |     let drop_table_request = DropTableRequest::builder()
    |                              ^^^^^^^^^^^^^^^^ use of undeclared type `DropTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:550:25
    |
550 |        .catalog_id(self.aws_properties.glue_catalog_id())
    |                         ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `DeleteTableRequest`
   --> crates/catalog/glue/src/catalog.rs:561:40
    |
561 |             let delete_table_request = DeleteTableRequest::builder()
    |                                        ^^^^^^^^^^^^^^^^^^ use of undeclared type `DeleteTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:562:33
    |
562 |                .catalog_id(self.aws_properties.glue_catalog_id())
    |                                 ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0433, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 28 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

