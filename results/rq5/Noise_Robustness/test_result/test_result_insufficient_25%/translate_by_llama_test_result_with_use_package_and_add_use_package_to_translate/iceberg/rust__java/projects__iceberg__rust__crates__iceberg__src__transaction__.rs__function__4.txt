Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/transaction.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `SUPPORTED_TABLE_FORMAT_VERSION` in this scope
  --> crates/iceberg/src/transaction.rs:73:29
   |
73 |         if format_version > SUPPORTED_TABLE_FORMAT_VERSION {
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `SUPPORTED_TABLE_FORMAT_VERSION` in this scope
  --> crates/iceberg/src/transaction.rs:74:88
   |
74 |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
   |                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `std::cmp::Ordering`
  --> crates/iceberg/src/transaction.rs:25:5
   |
25 | use std::cmp::Ordering;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no variant or associated item named `UnsupportedFormatVersion` found for enum `error::ErrorKind` in the current scope
  --> crates/iceberg/src/transaction.rs:74:46
   |
74 |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
   |
  ::: crates/iceberg/src/error.rs:30:1
   |
30 | pub enum ErrorKind {
   | ------------------ variant or associated item `UnsupportedFormatVersion` not found for this enum

error[E0277]: the trait bound `std::string::String: From<table_metadata::FormatVersion>` is not satisfied
   --> crates/iceberg/src/transaction.rs:74:72
    |
74  |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
    |                        ----------                                      ^^^^^^^^^^^^^^ the trait `From<table_metadata::FormatVersion>` is not implemented for `std::string::String`, which is required by `table_metadata::FormatVersion: Into<std::string::String>`
    |                        |
    |                        required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<Scheme>>
              <std::string::String as From<opendal::raw::Operation>>
            and 3 others
    = note: required for `table_metadata::FormatVersion` to implement `Into<std::string::String>`
note: required by a bound in `error::Error::new`
   --> crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/iceberg/src/transaction.rs:74:24
    |
74  |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
    |                        ^^^^^^^^^^                                                    --------------------------------
    |                                                                                      | |
    |                                                                                      | unexpected argument
    |                                                                                      help: remove the extra argument
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:77:34
   |
77 |         if format_version < self.format_version {
   |                                  ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

error[E0599]: no variant or associated item named `CannotDowngrade` found for enum `error::ErrorKind` in the current scope
  --> crates/iceberg/src/transaction.rs:78:46
   |
78 |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
   |                                              ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
   |
  ::: crates/iceberg/src/error.rs:30:1
   |
30 | pub enum ErrorKind {
   | ------------------ variant or associated item `CannotDowngrade` not found for this enum

error[E0277]: the trait bound `std::string::String: From<table_metadata::FormatVersion>` is not satisfied
   --> crates/iceberg/src/transaction.rs:78:63
    |
78  |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
    |                        ----------                             ^^^^^^^^^^^^^^ the trait `From<table_metadata::FormatVersion>` is not implemented for `std::string::String`, which is required by `table_metadata::FormatVersion: Into<std::string::String>`
    |                        |
    |                        required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<Scheme>>
              <std::string::String as From<opendal::raw::Operation>>
            and 3 others
    = note: required for `table_metadata::FormatVersion` to implement `Into<std::string::String>`
note: required by a bound in `error::Error::new`
   --> crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:78:84
   |
78 |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
   |                                                                                    ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/iceberg/src/transaction.rs:78:24
    |
78  |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
    |                        ^^^^^^^^^^                                           ---------------------
    |                                                                             | |
    |                                                                             | unexpected argument
    |                                                                             help: remove the extra argument
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:81:35
   |
81 |         if format_version == self.format_version {
   |                                   ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:85:14
   |
85 |         self.format_version = format_version;
   |              ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

Some errors have detailed explanations: E0061, E0277, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 12 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 12 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `SUPPORTED_TABLE_FORMAT_VERSION` in this scope
  --> crates/iceberg/src/transaction.rs:73:29
   |
73 |         if format_version > SUPPORTED_TABLE_FORMAT_VERSION {
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `SUPPORTED_TABLE_FORMAT_VERSION` in this scope
  --> crates/iceberg/src/transaction.rs:74:88
   |
74 |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
   |                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `std::cmp::Ordering`
  --> crates/iceberg/src/transaction.rs:25:5
   |
25 | use std::cmp::Ordering;
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no variant or associated item named `UnsupportedFormatVersion` found for enum `error::ErrorKind` in the current scope
  --> crates/iceberg/src/transaction.rs:74:46
   |
74 |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
   |
  ::: crates/iceberg/src/error.rs:30:1
   |
30 | pub enum ErrorKind {
   | ------------------ variant or associated item `UnsupportedFormatVersion` not found for this enum

error[E0277]: the trait bound `std::string::String: From<table_metadata::FormatVersion>` is not satisfied
   --> crates/iceberg/src/transaction.rs:74:72
    |
74  |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
    |                        ----------                                      ^^^^^^^^^^^^^^ the trait `From<table_metadata::FormatVersion>` is not implemented for `std::string::String`, which is required by `table_metadata::FormatVersion: Into<std::string::String>`
    |                        |
    |                        required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<Scheme>>
              <std::string::String as From<opendal::raw::Operation>>
            and 3 others
    = note: required for `table_metadata::FormatVersion` to implement `Into<std::string::String>`
note: required by a bound in `error::Error::new`
   --> crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/iceberg/src/transaction.rs:74:24
    |
74  |             return Err(Error::new(ErrorKind::UnsupportedFormatVersion, format_version, SUPPORTED_TABLE_FORMAT_VERSION));
    |                        ^^^^^^^^^^                                                    --------------------------------
    |                                                                                      | |
    |                                                                                      | unexpected argument
    |                                                                                      help: remove the extra argument
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:77:34
   |
77 |         if format_version < self.format_version {
   |                                  ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

error[E0599]: no variant or associated item named `CannotDowngrade` found for enum `error::ErrorKind` in the current scope
  --> crates/iceberg/src/transaction.rs:78:46
   |
78 |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
   |                                              ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
   |
  ::: crates/iceberg/src/error.rs:30:1
   |
30 | pub enum ErrorKind {
   | ------------------ variant or associated item `CannotDowngrade` not found for this enum

error[E0277]: the trait bound `std::string::String: From<table_metadata::FormatVersion>` is not satisfied
   --> crates/iceberg/src/transaction.rs:78:63
    |
78  |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
    |                        ----------                             ^^^^^^^^^^^^^^ the trait `From<table_metadata::FormatVersion>` is not implemented for `std::string::String`, which is required by `table_metadata::FormatVersion: Into<std::string::String>`
    |                        |
    |                        required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<Scheme>>
              <std::string::String as From<opendal::raw::Operation>>
            and 3 others
    = note: required for `table_metadata::FormatVersion` to implement `Into<std::string::String>`
note: required by a bound in `error::Error::new`
   --> crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:78:84
   |
78 |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
   |                                                                                    ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/iceberg/src/transaction.rs:78:24
    |
78  |             return Err(Error::new(ErrorKind::CannotDowngrade, format_version, self.format_version));
    |                        ^^^^^^^^^^                                           ---------------------
    |                                                                             | |
    |                                                                             | unexpected argument
    |                                                                             help: remove the extra argument
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:81:35
   |
81 |         if format_version == self.format_version {
   |                                   ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

error[E0609]: no field `format_version` on type `Transaction<'a>`
  --> crates/iceberg/src/transaction.rs:85:14
   |
85 |         self.format_version = format_version;
   |              ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `table`, `updates`, `requirements`

Some errors have detailed explanations: E0061, E0277, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 12 previous errors; 1 warning emitted

