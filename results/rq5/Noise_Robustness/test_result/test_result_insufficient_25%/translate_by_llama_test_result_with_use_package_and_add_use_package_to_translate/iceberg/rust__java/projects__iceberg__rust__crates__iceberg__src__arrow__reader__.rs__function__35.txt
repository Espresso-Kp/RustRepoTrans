Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:12
    |
546 |     if lhs.is_null() || rhs.is_null() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:29
    |
546 |     if lhs.is_null() || rhs.is_null() {
    |                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:547:60
    |
547 |         return Ok(Box::new(|_record_batch| Err(ArrowError::InvalidArgument)));
    |                                                            ^^^^^^^^^^^^^^^
    |                                                            |
    |                                                            variant or associated item not found in `ArrowError`
    |                                                            help: there is a variant with a similar name: `InvalidArgumentError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_true` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:548:19
    |
548 |     } else if lhs.is_true() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0599]: no method named `is_true` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:550:19
    |
550 |     } else if rhs.is_true() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0308]: arguments to this function are incorrect
   --> crates/iceberg/src/arrow/reader.rs:557:38
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs)),
    |                                      ^^^ ---  --- expected `&BooleanArray`, found `BooleanArray`
    |                                          |
    |                                          expected `&BooleanArray`, found `BooleanArray`
    |
note: function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-arith-52.1.0/src/boolean.rs:254:8
    |
254 | pub fn and(left: &BooleanArray, right: &BooleanArray) -> Result<BooleanArray, ArrowError> {
    |        ^^^
help: consider borrowing here
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(&lhs, rhs)),
    |                                          +
help: consider borrowing here
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, &rhs)),
    |                                               +

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:557:38
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs)),
    |                                   -- ^^^^^^^^^^^^^ expected `BooleanArray`, found `Result<BooleanArray, ArrowError>`
    |                                   |
    |                                   arguments to this enum variant are incorrect
    |
    = note: expected struct `BooleanArray`
                 found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
help: the type constructed contains `std::result::Result<BooleanArray, arrow_schema::ArrowError>` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:557:35
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs)),
    |                                   ^^^-------------^
    |                                      |
    |                                      this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: consider using `Result::expect` to unwrap the `std::result::Result<BooleanArray, arrow_schema::ArrowError>` value, panicking if the value is a `Result::Err`
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs).expect("REASON")),
    |                                                   +++++++++++++++++

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:34
    |
558 |             _ => Err(ArrowError::InvalidArgument),
    |                                  ^^^^^^^^^^^^^^^
    |                                  |
    |                                  variant or associated item not found in `ArrowError`
    |                                  help: there is a variant with a similar name: `InvalidArgumentError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0308, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 8 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:12
    |
546 |     if lhs.is_null() || rhs.is_null() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:29
    |
546 |     if lhs.is_null() || rhs.is_null() {
    |                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:547:60
    |
547 |         return Ok(Box::new(|_record_batch| Err(ArrowError::InvalidArgument)));
    |                                                            ^^^^^^^^^^^^^^^
    |                                                            |
    |                                                            variant or associated item not found in `ArrowError`
    |                                                            help: there is a variant with a similar name: `InvalidArgumentError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_true` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:548:19
    |
548 |     } else if lhs.is_true() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0599]: no method named `is_true` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:550:19
    |
550 |     } else if rhs.is_true() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0308]: arguments to this function are incorrect
   --> crates/iceberg/src/arrow/reader.rs:557:38
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs)),
    |                                      ^^^ ---  --- expected `&BooleanArray`, found `BooleanArray`
    |                                          |
    |                                          expected `&BooleanArray`, found `BooleanArray`
    |
note: function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-arith-52.1.0/src/boolean.rs:254:8
    |
254 | pub fn and(left: &BooleanArray, right: &BooleanArray) -> Result<BooleanArray, ArrowError> {
    |        ^^^
help: consider borrowing here
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(&lhs, rhs)),
    |                                          +
help: consider borrowing here
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, &rhs)),
    |                                               +

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:557:38
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs)),
    |                                   -- ^^^^^^^^^^^^^ expected `BooleanArray`, found `Result<BooleanArray, ArrowError>`
    |                                   |
    |                                   arguments to this enum variant are incorrect
    |
    = note: expected struct `BooleanArray`
                 found enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
help: the type constructed contains `std::result::Result<BooleanArray, arrow_schema::ArrowError>` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:557:35
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs)),
    |                                   ^^^-------------^
    |                                      |
    |                                      this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: consider using `Result::expect` to unwrap the `std::result::Result<BooleanArray, arrow_schema::ArrowError>` value, panicking if the value is a `Result::Err`
    |
557 |             (Ok(lhs), Ok(rhs)) => Ok(and(lhs, rhs).expect("REASON")),
    |                                                   +++++++++++++++++

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:34
    |
558 |             _ => Err(ArrowError::InvalidArgument),
    |                                  ^^^^^^^^^^^^^^^
    |                                  |
    |                                  variant or associated item not found in `ArrowError`
    |                                  help: there is a variant with a similar name: `InvalidArgumentError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0308, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 8 previous errors

