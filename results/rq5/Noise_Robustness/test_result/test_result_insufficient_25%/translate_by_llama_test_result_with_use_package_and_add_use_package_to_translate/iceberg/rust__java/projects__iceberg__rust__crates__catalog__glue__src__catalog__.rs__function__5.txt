Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:164:13
    |
164 |             LOG.info("Created namespace: {}", namespace);
    |             ^^^ not found in this scope

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:152:27
    |
152 |     let catalog_id = self.aws_properties.glue_catalog_id();
    |                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:153:37
    |
153 |     let skip_name_validation = self.aws_properties.glue_catalog_skip_name_validation();
    |                                     ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: `std::result::Result<DatabaseInput, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:155:70
    |
155 |     let database_input = convert_to_database(namespace, &properties).await?;
    |                          ------------------------------------------- ^^^^^ `std::result::Result<DatabaseInput, iceberg::Error>` is not a future
    |                          |
    |                          this call returns `std::result::Result<DatabaseInput, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `std::result::Result<DatabaseInput, iceberg::Error>`, which is required by `std::result::Result<DatabaseInput, iceberg::Error>: IntoFuture`
    = note: std::result::Result<DatabaseInput, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<DatabaseInput, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
155 -     let database_input = convert_to_database(namespace, &properties).await?;
155 +     let database_input = convert_to_database(namespace, &properties)?;
    |
help: alternatively, consider making `fn convert_to_database` asynchronous
   --> crates/catalog/glue/src/utils.rs:96:11
    |
96  | pub(crate) async fn convert_to_database(
    |            +++++

error[E0433]: failed to resolve: use of undeclared type `CreateDatabaseRequest`
   --> crates/catalog/glue/src/catalog.rs:157:19
    |
157 |     let request = CreateDatabaseRequest::builder()
    |                   ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateDatabaseRequest`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:162:16
    |
162 |     match self.glue.create_database(request).await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:165:16
    |
165 |             Ok(namespace.clone())
    |             -- ^^^^^^^^^^^^^^^^^ expected `Namespace`, found `NamespaceIdent`
    |             |
    |             arguments to this enum variant are incorrect
    |
help: the type constructed contains `iceberg::NamespaceIdent` due to the type of the argument passed
   --> crates/catalog/glue/src/catalog.rs:165:13
    |
165 |             Ok(namespace.clone())
    |             ^^^-----------------^
    |                |
    |                this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5

error[E0599]: no associated item named `AlreadyExists` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:168:24
    |
168 |             Err(Error::AlreadyExists(
    |                        ^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:169:89
    |
169 |                 format!("Cannot create namespace {} because it already exists in Glue", namespace),
    |                                                                                         ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:164:13
    |
164 |             LOG.info("Created namespace: {}", namespace);
    |             ^^^ not found in this scope

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:152:27
    |
152 |     let catalog_id = self.aws_properties.glue_catalog_id();
    |                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:153:37
    |
153 |     let skip_name_validation = self.aws_properties.glue_catalog_skip_name_validation();
    |                                     ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: `Result<DatabaseInput, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:155:70
    |
155 |     let database_input = convert_to_database(namespace, &properties).await?;
    |                          ------------------------------------------- ^^^^^ `Result<DatabaseInput, iceberg::Error>` is not a future
    |                          |
    |                          this call returns `Result<DatabaseInput, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `Result<DatabaseInput, iceberg::Error>`, which is required by `Result<DatabaseInput, iceberg::Error>: IntoFuture`
    = note: Result<DatabaseInput, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<DatabaseInput, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
155 -     let database_input = convert_to_database(namespace, &properties).await?;
155 +     let database_input = convert_to_database(namespace, &properties)?;
    |
help: alternatively, consider making `fn convert_to_database` asynchronous
   --> crates/catalog/glue/src/utils.rs:96:11
    |
96  | pub(crate) async fn convert_to_database(
    |            +++++

error[E0433]: failed to resolve: use of undeclared type `CreateDatabaseRequest`
   --> crates/catalog/glue/src/catalog.rs:157:19
    |
157 |     let request = CreateDatabaseRequest::builder()
    |                   ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateDatabaseRequest`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:162:16
    |
162 |     match self.glue.create_database(request).await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:165:16
    |
165 |             Ok(namespace.clone())
    |             -- ^^^^^^^^^^^^^^^^^ expected `Namespace`, found `NamespaceIdent`
    |             |
    |             arguments to this enum variant are incorrect
    |
help: the type constructed contains `NamespaceIdent` due to the type of the argument passed
   --> crates/catalog/glue/src/catalog.rs:165:13
    |
165 |             Ok(namespace.clone())
    |             ^^^-----------------^
    |                |
    |                this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5

error[E0599]: no associated item named `AlreadyExists` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:168:24
    |
168 |             Err(Error::AlreadyExists(
    |                        ^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:169:89
    |
169 |                 format!("Cannot create namespace {} because it already exists in Glue", namespace),
    |                                                                                         ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...

