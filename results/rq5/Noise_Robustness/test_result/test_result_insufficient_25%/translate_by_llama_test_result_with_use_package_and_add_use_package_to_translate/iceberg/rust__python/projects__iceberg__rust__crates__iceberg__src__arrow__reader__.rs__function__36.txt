Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:12
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:29
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments
   --> crates/iceberg/src/arrow/reader.rs:559:28
    |
559 |         return Ok(Box::new(|| -> Result<BooleanArray, ArrowError> {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                            |
    |                            expected closure that takes 1 argument
    |                            takes 0 arguments
    |
help: consider changing the closure to take and ignore the expected argument
    |
559 |         return Ok(Box::new(|_| -> Result<BooleanArray, ArrowError> {
    |                            ~~~

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:559:34
    |
559 |         return Ok(Box::new(|| -> Result<BooleanArray, ArrowError> {
    |                                  ^^^^^^               ---------- help: remove this generic argument
    |                                  |
    |                                  expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0599]: no function or associated item named `full` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:30
    |
560 |             Ok(BooleanArray::full(true, lhs.is_null(), rhs.is_null()))
    |                              ^^^^ function or associated item not found in `BooleanArray`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:45
    |
560 |             Ok(BooleanArray::full(true, lhs.is_null(), rhs.is_null()))
    |                                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:60
    |
560 |             Ok(BooleanArray::full(true, lhs.is_null(), rhs.is_null()))
    |                                                            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:562:19
    |
562 |     } else if lhs.is_null() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:564:19
    |
564 |     } else if rhs.is_null() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:567:57
    |
567 |         Ok(Box::new(move |record_batch: RecordBatch| -> Result<BooleanArray, ArrowError> {
    |                                                         ^^^^^^               ---------- help: remove this generic argument
    |                                                         |
    |                                                         expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0277]: `?` couldn't convert the error to `error::Error`
   --> crates/iceberg/src/arrow/reader.rs:568:41
    |
568 |             let left = lhs(record_batch)?;
    |                                         ^ the trait `From<arrow_schema::ArrowError>` is not implemented for `error::Error`, which is required by `std::result::Result<BooleanArray, error::Error>: FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <error::Error as From<reqwest::Error>>
              <error::Error as From<serde_json::Error>>
              <error::Error as From<uuid::Error>>
              <error::Error as From<url::ParseError>>
              <error::Error as From<rust_decimal::Error>>
              <error::Error as From<opendal::Error>>
              <error::Error as From<apache_avro::Error>>
              <error::Error as From<chrono::ParseError>>
            and 5 others
    = note: required for `std::result::Result<BooleanArray, error::Error>` to implement `FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`

error[E0277]: `?` couldn't convert the error to `error::Error`
   --> crates/iceberg/src/arrow/reader.rs:569:42
    |
569 |             let right = rhs(record_batch)?;
    |                                          ^ the trait `From<arrow_schema::ArrowError>` is not implemented for `error::Error`, which is required by `std::result::Result<BooleanArray, error::Error>: FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <error::Error as From<reqwest::Error>>
              <error::Error as From<serde_json::Error>>
              <error::Error as From<uuid::Error>>
              <error::Error as From<url::ParseError>>
              <error::Error as From<rust_decimal::Error>>
              <error::Error as From<opendal::Error>>
              <error::Error as From<apache_avro::Error>>
              <error::Error as From<chrono::ParseError>>
            and 5 others
    = note: required for `std::result::Result<BooleanArray, error::Error>` to implement `FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`

error[E0369]: no implementation for `BooleanArray | BooleanArray`
   --> crates/iceberg/src/arrow/reader.rs:570:40
    |
570 |             Ok(BooleanArray::from(left | right))
    |                                   ---- ^ ----- BooleanArray
    |                                   |
    |                                   BooleanArray

error[E0271]: expected `{closure@reader.rs:567:21}` to be a closure that returns `Result<BooleanArray, ArrowError>`, but it returns `Result<BooleanArray, Error>`
   --> crates/iceberg/src/arrow/reader.rs:567:12
    |
567 |           Ok(Box::new(move |record_batch: RecordBatch| -> Result<BooleanArray, ArrowError> {
    |  ____________^
568 | |             let left = lhs(record_batch)?;
569 | |             let right = rhs(record_batch)?;
570 | |             Ok(BooleanArray::from(left | right))
571 | |         }))
    | |__________^ expected `Result<BooleanArray, ArrowError>`, found `Result<BooleanArray, Error>`
    |
    = note: expected enum `std::result::Result<_, arrow_schema::ArrowError>`
               found enum `std::result::Result<_, error::Error>`
    = note: required for the cast from `Box<{closure@crates/iceberg/src/arrow/reader.rs:567:21: 567:89}>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

Some errors have detailed explanations: E0107, E0271, E0277, E0369, E0593, E0599.
For more information about an error, try `rustc --explain E0107`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 14 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 14 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:12
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:29
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments
   --> crates/iceberg/src/arrow/reader.rs:559:28
    |
559 |         return Ok(Box::new(|| -> Result<BooleanArray, ArrowError> {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                            |
    |                            expected closure that takes 1 argument
    |                            takes 0 arguments
    |
help: consider changing the closure to take and ignore the expected argument
    |
559 |         return Ok(Box::new(|_| -> Result<BooleanArray, ArrowError> {
    |                            ~~~

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:559:34
    |
559 |         return Ok(Box::new(|| -> Result<BooleanArray, ArrowError> {
    |                                  ^^^^^^               ---------- help: remove this generic argument
    |                                  |
    |                                  expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0599]: no function or associated item named `full` found for struct `BooleanArray` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:30
    |
560 |             Ok(BooleanArray::full(true, lhs.is_null(), rhs.is_null()))
    |                              ^^^^ function or associated item not found in `BooleanArray`
    |
note: if you're trying to build a new `BooleanArray` consider using one of the following associated functions:
      BooleanArray::new
      BooleanArray::new_null
      BooleanArray::from_unary
      BooleanArray::from_binary
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:89:5
    |
89  |       pub fn new(values: BooleanBuffer, nulls: Option<NullBuffer>) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
97  |       pub fn new_null(len: usize) -> Self {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
213 | /     pub fn from_unary<T: ArrayAccessor, F>(left: T, mut op: F) -> Self
214 | |     where
215 | |         F: FnMut(T::Item) -> bool,
    | |__________________________________^
...
241 | /     pub fn from_binary<T: ArrayAccessor, S: ArrayAccessor, F>(left: T, right: S, mut op: F) -> Self
242 | |     where
243 | |         F: FnMut(T::Item, S::Item) -> bool,
    | |___________________________________________^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:45
    |
560 |             Ok(BooleanArray::full(true, lhs.is_null(), rhs.is_null()))
    |                                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:560:60
    |
560 |             Ok(BooleanArray::full(true, lhs.is_null(), rhs.is_null()))
    |                                                            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:562:19
    |
562 |     } else if lhs.is_null() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:564:19
    |
564 |     } else if rhs.is_null() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:567:57
    |
567 |         Ok(Box::new(move |record_batch: RecordBatch| -> Result<BooleanArray, ArrowError> {
    |                                                         ^^^^^^               ---------- help: remove this generic argument
    |                                                         |
    |                                                         expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0277]: `?` couldn't convert the error to `error::Error`
   --> crates/iceberg/src/arrow/reader.rs:568:41
    |
568 |             let left = lhs(record_batch)?;
    |                                         ^ the trait `From<arrow_schema::ArrowError>` is not implemented for `error::Error`, which is required by `std::result::Result<BooleanArray, error::Error>: FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <error::Error as From<reqwest::Error>>
              <error::Error as From<serde_json::Error>>
              <error::Error as From<uuid::Error>>
              <error::Error as From<url::ParseError>>
              <error::Error as From<rust_decimal::Error>>
              <error::Error as From<opendal::Error>>
              <error::Error as From<apache_avro::Error>>
              <error::Error as From<chrono::ParseError>>
            and 5 others
    = note: required for `std::result::Result<BooleanArray, error::Error>` to implement `FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`

error[E0277]: `?` couldn't convert the error to `error::Error`
   --> crates/iceberg/src/arrow/reader.rs:569:42
    |
569 |             let right = rhs(record_batch)?;
    |                                          ^ the trait `From<arrow_schema::ArrowError>` is not implemented for `error::Error`, which is required by `std::result::Result<BooleanArray, error::Error>: FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <error::Error as From<reqwest::Error>>
              <error::Error as From<serde_json::Error>>
              <error::Error as From<uuid::Error>>
              <error::Error as From<url::ParseError>>
              <error::Error as From<rust_decimal::Error>>
              <error::Error as From<opendal::Error>>
              <error::Error as From<apache_avro::Error>>
              <error::Error as From<chrono::ParseError>>
            and 5 others
    = note: required for `std::result::Result<BooleanArray, error::Error>` to implement `FromResidual<std::result::Result<Infallible, arrow_schema::ArrowError>>`

error[E0369]: no implementation for `BooleanArray | BooleanArray`
   --> crates/iceberg/src/arrow/reader.rs:570:40
    |
570 |             Ok(BooleanArray::from(left | right))
    |                                   ---- ^ ----- BooleanArray
    |                                   |
    |                                   BooleanArray

error[E0271]: expected `{closure@reader.rs:567:21}` to be a closure that returns `Result<BooleanArray, ArrowError>`, but it returns `Result<BooleanArray, Error>`
   --> crates/iceberg/src/arrow/reader.rs:567:12
    |
567 |           Ok(Box::new(move |record_batch: RecordBatch| -> Result<BooleanArray, ArrowError> {
    |  ____________^
568 | |             let left = lhs(record_batch)?;
569 | |             let right = rhs(record_batch)?;
570 | |             Ok(BooleanArray::from(left | right))
571 | |         }))
    | |__________^ expected `Result<BooleanArray, ArrowError>`, found `Result<BooleanArray, Error>`
    |
    = note: expected enum `std::result::Result<_, arrow_schema::ArrowError>`
               found enum `std::result::Result<_, error::Error>`
    = note: required for the cast from `Box<{closure@crates/iceberg/src/arrow/reader.rs:567:21: 567:89}>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

Some errors have detailed explanations: E0107, E0271, E0277, E0369, E0593, E0599.
For more information about an error, try `rustc --explain E0107`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 14 previous errors; 1 warning emitted

