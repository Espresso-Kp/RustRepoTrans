Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `Boolean` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:46
    |
453 |         AvroSchema::Boolean => Ok(Some(Type::Boolean)),
    |                                              ^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Boolean` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Int` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:454:42
    |
454 |         AvroSchema::Int => Ok(Some(Type::Int)),
    |                                          ^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Int` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Long` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:455:43
    |
455 |         AvroSchema::Long => Ok(Some(Type::Long)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Long` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Float` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:456:44
    |
456 |         AvroSchema::Float => Ok(Some(Type::Float)),
    |                                            ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Float` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Double` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:457:45
    |
457 |         AvroSchema::Double => Ok(Some(Type::Double)),
    |                                             ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Double` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Bytes` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:458:44
    |
458 |         AvroSchema::Bytes => Ok(Some(Type::Bytes)),
    |                                            ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Bytes` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `String` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:459:45
    |
459 |         AvroSchema::String => Ok(Some(Type::String)),
    |                                             ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `String` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:460:43
    |
460 |         AvroSchema::Array(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
460 |         AvroSchema::Array(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
460 -         AvroSchema::Array(inner) => match primitive(self, inner) {
460 +         AvroSchema::Array(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Array` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:461:42
    |
461 |             Ok(Some(t)) => Ok(Some(Type::Array(Box::new(t)))),
    |                                          ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Array` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:462:44
    |
462 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported array type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:464:41
    |
464 |         AvroSchema::Map(inner) => match primitive(self, inner) {
    |                                         ^^^^^^^^^
    |
help: you might have meant to call the method
    |
464 |         AvroSchema::Map(inner) => match self.primitive(self, inner) {
    |                                         +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
464 -         AvroSchema::Map(inner) => match primitive(self, inner) {
464 +         AvroSchema::Map(inner) => match self.primitive(inner) {
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:465:46
    |
465 |             Ok(Some(t)) => Ok(Some(Type::Map(Box::new(t)))),
    |                                    --------- ^^^^^^^^^^^ expected `MapType`, found `Box<_>`
    |                                    |
    |                                    arguments to this enum variant are incorrect
    |
    = note: expected struct `datatypes::MapType`
               found struct `Box<_>`
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:88:5
    |
88  |     Map(MapType),
    |     ^^^
help: consider unboxing the value
    |
465 |             Ok(Some(t)) => Ok(Some(Type::Map(*Box::new(t)))),
    |                                              +

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:466:44
    |
466 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported map type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:468:43
    |
468 |         AvroSchema::Union(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
468 |         AvroSchema::Union(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
468 -         AvroSchema::Union(inner) => match primitive(self, inner) {
468 +         AvroSchema::Union(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Union` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:42
    |
469 |             Ok(Some(t)) => Ok(Some(Type::Union(inner.clone()))),
    |                                          ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Union` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:470:44
    |
470 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported union type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:472:44
    |
472 |         AvroSchema::Record(inner) => match primitive(self, inner) {
    |                                            ^^^^^^^^^
    |
help: you might have meant to call the method
    |
472 |         AvroSchema::Record(inner) => match self.primitive(self, inner) {
    |                                            +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
472 -         AvroSchema::Record(inner) => match primitive(self, inner) {
472 +         AvroSchema::Record(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Record` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:473:42
    |
473 |             Ok(Some(t)) => Ok(Some(Type::Record(inner.clone()))),
    |                                          ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Record` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:474:44
    |
474 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported record type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:476:42
    |
476 |         AvroSchema::Enum(inner) => match primitive(self, inner) {
    |                                          ^^^^^^^^^
    |
help: you might have meant to call the method
    |
476 |         AvroSchema::Enum(inner) => match self.primitive(self, inner) {
    |                                          +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
476 -         AvroSchema::Enum(inner) => match primitive(self, inner) {
476 +         AvroSchema::Enum(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Enum` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:477:42
    |
477 |             Ok(Some(t)) => Ok(Some(Type::Enum(inner.clone()))),
    |                                          ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Enum` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:478:44
    |
478 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported enum type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:480:43
    |
480 |         AvroSchema::Fixed(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
480 |         AvroSchema::Fixed(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
480 -         AvroSchema::Fixed(inner) => match primitive(self, inner) {
480 +         AvroSchema::Fixed(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:481:42
    |
481 |             Ok(Some(t)) => Ok(Some(Type::Fixed(inner.clone()))),
    |                                          ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:482:44
    |
482 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported fixed type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:484:45
    |
484 |         AvroSchema::Decimal(inner) => match primitive(self, inner) {
    |                                             ^^^^^^^^^
    |
help: you might have meant to call the method
    |
484 |         AvroSchema::Decimal(inner) => match self.primitive(self, inner) {
    |                                             +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
484 -         AvroSchema::Decimal(inner) => match primitive(self, inner) {
484 +         AvroSchema::Decimal(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:42
    |
485 |             Ok(Some(t)) => Ok(Some(Type::Decimal(inner.clone()))),
    |                                          ^^^^^^^
    |                                          |
    |                                          variant or associated item not found in `Type`
    |                                          help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:486:44
    |
486 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported decimal type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0599]: no variant or associated item named `Date` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:488:43
    |
488 |         AvroSchema::Date => Ok(Some(Type::Date)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Date` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimeMillis` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:489:49
    |
489 |         AvroSchema::TimeMillis => Ok(Some(Type::TimeMillis)),
    |                                                 ^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimeMillis` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimeMicros` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:490:49
    |
490 |         AvroSchema::TimeMicros => Ok(Some(Type::TimeMicros)),
    |                                                 ^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimeMicros` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimestampMillis` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:491:54
    |
491 |         AvroSchema::TimestampMillis => Ok(Some(Type::TimestampMillis)),
    |                                                      ^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimestampMillis` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimestampMicros` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:492:54
    |
492 |         AvroSchema::TimestampMicros => Ok(Some(Type::TimestampMicros)),
    |                                                      ^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimestampMicros` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `LocalTimestampMillis` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:493:59
    |
493 |         AvroSchema::LocalTimestampMillis => Ok(Some(Type::LocalTimestampMillis)),
    |                                                           ^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `LocalTimestampMillis` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `LocalTimestampMicros` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:494:59
    |
494 |         AvroSchema::LocalTimestampMicros => Ok(Some(Type::LocalTimestampMicros)),
    |                                                           ^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `LocalTimestampMicros` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Duration` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:495:47
    |
495 |         AvroSchema::Duration => Ok(Some(Type::Duration)),
    |                                               ^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Duration` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant named `Ref` found for enum `datatypes::Type`
   --> crates/iceberg/src/avro/schema.rs:496:51
    |
496 |         AvroSchema::Ref { name } => Ok(Some(Type::Ref { name: name.clone() })),
    |                                                   ^^^ variant not found in `datatypes::Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant `Ref` not found here

Some errors have detailed explanations: E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 37 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:460:43
    |
460 |         AvroSchema::Array(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
460 |         AvroSchema::Array(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
460 -         AvroSchema::Array(inner) => match primitive(self, inner) {
460 +         AvroSchema::Array(inner) => match self.primitive(inner) {
    |

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:464:41
    |
464 |         AvroSchema::Map(inner) => match primitive(self, inner) {
    |                                         ^^^^^^^^^
    |
help: you might have meant to call the method
    |
464 |         AvroSchema::Map(inner) => match self.primitive(self, inner) {
    |                                         +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
464 -         AvroSchema::Map(inner) => match primitive(self, inner) {
464 +         AvroSchema::Map(inner) => match self.primitive(inner) {
    |

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:468:43
    |
468 |         AvroSchema::Union(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
468 |         AvroSchema::Union(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
468 -         AvroSchema::Union(inner) => match primitive(self, inner) {
468 +         AvroSchema::Union(inner) => match self.primitive(inner) {
    |

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:472:44
    |
472 |         AvroSchema::Record(inner) => match primitive(self, inner) {
    |                                            ^^^^^^^^^
    |
help: you might have meant to call the method
    |
472 |         AvroSchema::Record(inner) => match self.primitive(self, inner) {
    |                                            +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
472 -         AvroSchema::Record(inner) => match primitive(self, inner) {
472 +         AvroSchema::Record(inner) => match self.primitive(inner) {
    |

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:476:42
    |
476 |         AvroSchema::Enum(inner) => match primitive(self, inner) {
    |                                          ^^^^^^^^^
    |
help: you might have meant to call the method
    |
476 |         AvroSchema::Enum(inner) => match self.primitive(self, inner) {
    |                                          +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
476 -         AvroSchema::Enum(inner) => match primitive(self, inner) {
476 +         AvroSchema::Enum(inner) => match self.primitive(inner) {
    |

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:480:43
    |
480 |         AvroSchema::Fixed(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
480 |         AvroSchema::Fixed(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
480 -         AvroSchema::Fixed(inner) => match primitive(self, inner) {
480 +         AvroSchema::Fixed(inner) => match self.primitive(inner) {
    |

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:484:45
    |
484 |         AvroSchema::Decimal(inner) => match primitive(self, inner) {
    |                                             ^^^^^^^^^
    |
help: you might have meant to call the method
    |
484 |         AvroSchema::Decimal(inner) => match self.primitive(self, inner) {
    |                                             +++++
help: use the `.` operator to call the method `avro::schema::AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
484 -         AvroSchema::Decimal(inner) => match primitive(self, inner) {
484 +         AvroSchema::Decimal(inner) => match self.primitive(inner) {
    |

error: could not compile `iceberg` (lib test) due to 37 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `Boolean` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:46
    |
453 |         AvroSchema::Boolean => Ok(Some(Type::Boolean)),
    |                                              ^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Boolean` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Int` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:454:42
    |
454 |         AvroSchema::Int => Ok(Some(Type::Int)),
    |                                          ^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Int` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Long` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:455:43
    |
455 |         AvroSchema::Long => Ok(Some(Type::Long)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Long` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Float` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:456:44
    |
456 |         AvroSchema::Float => Ok(Some(Type::Float)),
    |                                            ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Float` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Double` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:457:45
    |
457 |         AvroSchema::Double => Ok(Some(Type::Double)),
    |                                             ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Double` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Bytes` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:458:44
    |
458 |         AvroSchema::Bytes => Ok(Some(Type::Bytes)),
    |                                            ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Bytes` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `String` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:459:45
    |
459 |         AvroSchema::String => Ok(Some(Type::String)),
    |                                             ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `String` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:460:43
    |
460 |         AvroSchema::Array(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
460 |         AvroSchema::Array(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
460 -         AvroSchema::Array(inner) => match primitive(self, inner) {
460 +         AvroSchema::Array(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Array` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:461:42
    |
461 |             Ok(Some(t)) => Ok(Some(Type::Array(Box::new(t)))),
    |                                          ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Array` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:462:44
    |
462 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported array type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:464:41
    |
464 |         AvroSchema::Map(inner) => match primitive(self, inner) {
    |                                         ^^^^^^^^^
    |
help: you might have meant to call the method
    |
464 |         AvroSchema::Map(inner) => match self.primitive(self, inner) {
    |                                         +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
464 -         AvroSchema::Map(inner) => match primitive(self, inner) {
464 +         AvroSchema::Map(inner) => match self.primitive(inner) {
    |

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:465:46
    |
465 |             Ok(Some(t)) => Ok(Some(Type::Map(Box::new(t)))),
    |                                    --------- ^^^^^^^^^^^ expected `MapType`, found `Box<_>`
    |                                    |
    |                                    arguments to this enum variant are incorrect
    |
    = note: expected struct `datatypes::MapType`
               found struct `Box<_>`
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:88:5
    |
88  |     Map(MapType),
    |     ^^^
help: consider unboxing the value
    |
465 |             Ok(Some(t)) => Ok(Some(Type::Map(*Box::new(t)))),
    |                                              +

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:466:44
    |
466 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported map type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:468:43
    |
468 |         AvroSchema::Union(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
468 |         AvroSchema::Union(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
468 -         AvroSchema::Union(inner) => match primitive(self, inner) {
468 +         AvroSchema::Union(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Union` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:42
    |
469 |             Ok(Some(t)) => Ok(Some(Type::Union(inner.clone()))),
    |                                          ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Union` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:470:44
    |
470 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported union type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:472:44
    |
472 |         AvroSchema::Record(inner) => match primitive(self, inner) {
    |                                            ^^^^^^^^^
    |
help: you might have meant to call the method
    |
472 |         AvroSchema::Record(inner) => match self.primitive(self, inner) {
    |                                            +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
472 -         AvroSchema::Record(inner) => match primitive(self, inner) {
472 +         AvroSchema::Record(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Record` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:473:42
    |
473 |             Ok(Some(t)) => Ok(Some(Type::Record(inner.clone()))),
    |                                          ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Record` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:474:44
    |
474 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported record type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:476:42
    |
476 |         AvroSchema::Enum(inner) => match primitive(self, inner) {
    |                                          ^^^^^^^^^
    |
help: you might have meant to call the method
    |
476 |         AvroSchema::Enum(inner) => match self.primitive(self, inner) {
    |                                          +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
476 -         AvroSchema::Enum(inner) => match primitive(self, inner) {
476 +         AvroSchema::Enum(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Enum` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:477:42
    |
477 |             Ok(Some(t)) => Ok(Some(Type::Enum(inner.clone()))),
    |                                          ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Enum` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:478:44
    |
478 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported enum type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:480:43
    |
480 |         AvroSchema::Fixed(inner) => match primitive(self, inner) {
    |                                           ^^^^^^^^^
    |
help: you might have meant to call the method
    |
480 |         AvroSchema::Fixed(inner) => match self.primitive(self, inner) {
    |                                           +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
480 -         AvroSchema::Fixed(inner) => match primitive(self, inner) {
480 +         AvroSchema::Fixed(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:481:42
    |
481 |             Ok(Some(t)) => Ok(Some(Type::Fixed(inner.clone()))),
    |                                          ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:482:44
    |
482 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported fixed type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0425]: cannot find function `primitive` in this scope
   --> crates/iceberg/src/avro/schema.rs:484:45
    |
484 |         AvroSchema::Decimal(inner) => match primitive(self, inner) {
    |                                             ^^^^^^^^^
    |
help: you might have meant to call the method
    |
484 |         AvroSchema::Decimal(inner) => match self.primitive(self, inner) {
    |                                             +++++
help: use the `.` operator to call the method `AvroSchemaVisitor::primitive` on `&mut AvroSchemaToSchema`
    |
484 -         AvroSchema::Decimal(inner) => match primitive(self, inner) {
484 +         AvroSchema::Decimal(inner) => match self.primitive(inner) {
    |

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:485:42
    |
485 |             Ok(Some(t)) => Ok(Some(Type::Decimal(inner.clone()))),
    |                                          ^^^^^^^
    |                                          |
    |                                          variant or associated item not found in `Type`
    |                                          help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:486:44
    |
486 |             _ => Err(Error::new(ErrorKind::UnsupportedType, "Unsupported decimal type")),
    |                                            ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0599]: no variant or associated item named `Date` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:488:43
    |
488 |         AvroSchema::Date => Ok(Some(Type::Date)),
    |                                           ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Date` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimeMillis` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:489:49
    |
489 |         AvroSchema::TimeMillis => Ok(Some(Type::TimeMillis)),
    |                                                 ^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimeMillis` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimeMicros` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:490:49
    |
490 |         AvroSchema::TimeMicros => Ok(Some(Type::TimeMicros)),
    |                                                 ^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimeMicros` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimestampMillis` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:491:54
    |
491 |         AvroSchema::TimestampMillis => Ok(Some(Type::TimestampMillis)),
    |                                                      ^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimestampMillis` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `TimestampMicros` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:492:54
    |
492 |         AvroSchema::TimestampMicros => Ok(Some(Type::TimestampMicros)),
    |                                                      ^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `TimestampMicros` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `LocalTimestampMillis` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:493:59
    |
493 |         AvroSchema::LocalTimestampMillis => Ok(Some(Type::LocalTimestampMillis)),
    |                                                           ^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `LocalTimestampMillis` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `LocalTimestampMicros` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:494:59
    |
494 |         AvroSchema::LocalTimestampMicros => Ok(Some(Type::LocalTimestampMicros)),
    |                                                           ^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `LocalTimestampMicros` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Duration` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:495:47
    |
495 |         AvroSchema::Duration => Ok(Some(Type::Duration)),
    |                                               ^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Duration` not found for this enum
    |
note: if you're trying to build a new `datatypes::Type`, consider using `datatypes::Type::decimal` which returns `std::result::Result<datatypes::Type, error::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:158:5
    |
158 |     pub fn decimal(precision: u32, scale: u32) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant named `Ref` found for enum `datatypes::Type`
   --> crates/iceberg/src/avro/schema.rs:496:51
    |
496 |         AvroSchema::Ref { name } => Ok(Some(Type::Ref { name: name.clone() })),
    |                                                   ^^^ variant not found in `datatypes::Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant `Ref` not found here

Some errors have detailed explanations: E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 37 previous errors

