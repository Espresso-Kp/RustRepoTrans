Fail
file path is :
projects/deltachat-core/rust/src/pgp.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `CryptoRng` is defined multiple times
  --> src/pgp.rs:24:24
   |
5  | use rand::CryptoRng;
   |     --------------- previous import of the trait `CryptoRng` here
...
24 | use rand::{thread_rng, CryptoRng, Rng};
   |                        ^^^^^^^^^--
   |                        |
   |                        `CryptoRng` reimported here
   |                        help: remove unnecessary import
   |
   = note: `CryptoRng` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::test_utils`
   --> src/pgp.rs:6:5
    |
6   | use crate::test_utils;
    |     ^^^^^^^^^^^^^^^^^ no `test_utils` in the root
    |
note: found an item that was configured out
   --> src/lib.rs:116:5
    |
116 | mod test_utils;
    |     ^^^^^^^^^^
help: consider importing this module instead
    |
6   | use iroh_net::test_utils;
    |     ~~~~~~~~~~~~~~~~~~~~

error[E0433]: failed to resolve: could not find `PublicKeyParamsBuilder` in `composed`
   --> src/pgp.rs:159:32
    |
159 |     let mut pubkey = composed::PublicKeyParamsBuilder::new()
    |                                ^^^^^^^^^^^^^^^^^^^^^^
    |                                |
    |                                could not find `PublicKeyParamsBuilder` in `composed`
    |                                help: a struct with a similar name exists: `SubkeyParamsBuilder`

error[E0433]: failed to resolve: could not find `Memory` in `composed`
   --> src/pgp.rs:175:32
    |
175 |     let mut pubmem = composed::Memory::new();
    |                                ^^^^^^ could not find `Memory` in `composed`

error[E0433]: failed to resolve: could not find `Memory` in `composed`
   --> src/pgp.rs:176:32
    |
176 |     let mut secmem = composed::Memory::new();
    |                                ^^^^^^ could not find `Memory` in `composed`

error[E0433]: failed to resolve: could not find `Keyid` in `composed`
   --> src/pgp.rs:185:34
    |
185 |     let mut subkeyid = composed::Keyid::new(pubkey, composed::HashAlgorithm::SHA1);
    |                                  ^^^^^ could not find `Keyid` in `composed`

error[E0433]: failed to resolve: could not find `Output` in `composed`
   --> src/pgp.rs:177:32
    |
177 |     let mut pubout = composed::Output::new();
    |                                ^^^^^^ could not find `Output` in `composed`
    |
help: consider importing this struct
    |
4   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
177 -     let mut pubout = composed::Output::new();
177 +     let mut pubout = Output::new();
    |

error[E0433]: failed to resolve: could not find `Output` in `composed`
   --> src/pgp.rs:178:32
    |
178 |     let mut secout = composed::Output::new();
    |                                ^^^^^^ could not find `Output` in `composed`
    |
help: consider importing this struct
    |
4   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
178 -     let mut secout = composed::Output::new();
178 +     let mut secout = Output::new();
    |

error[E0425]: cannot find function `rsa_generate_keypair` in module `composed`
   --> src/pgp.rs:180:18
    |
180 |     if!composed::rsa_generate_keypair(&mut seckey, &mut pubkey, &mut subkey, None, None, None, 0) {
    |                  ^^^^^^^^^^^^^^^^^^^^ not found in `composed`

error[E0433]: failed to resolve: could not find `HashAlgorithm` in `composed`
   --> src/pgp.rs:185:63
    |
185 |     let mut subkeyid = composed::Keyid::new(pubkey, composed::HashAlgorithm::SHA1);
    |                                                               ^^^^^^^^^^^^^ could not find `HashAlgorithm` in `composed`
    |
help: consider importing one of these items
    |
4   + use crate::pgp::crypto::hash::HashAlgorithm;
    |
4   + use pgp::crypto::hash::HashAlgorithm;
    |
help: if you import `HashAlgorithm`, refer to it directly
    |
185 -     let mut subkeyid = composed::Keyid::new(pubkey, composed::HashAlgorithm::SHA1);
185 +     let mut subkeyid = composed::Keyid::new(pubkey, HashAlgorithm::SHA1);
    |

error[E0433]: failed to resolve: could not find `Writer` in `composed`
   --> src/pgp.rs:194:32
    |
194 |     let mut writer = composed::Writer::new(pubout);
    |                                ^^^^^^ could not find `Writer` in `composed`
    |
help: consider importing one of these items
    |
4   + use exif::experimental::Writer;
    |
4   + use quick_xml::Writer;
    |
help: if you import `Writer`, refer to it directly
    |
194 -     let mut writer = composed::Writer::new(pubout);
194 +     let mut writer = Writer::new(pubout);
    |

error[E0425]: cannot find function `write_xfer_key` in module `composed`
   --> src/pgp.rs:195:18
    |
195 |     if!composed::write_xfer_key(&mut writer, &pubkey, 0) {
    |                  ^^^^^^^^^^^^^^ not found in `composed`

error[E0433]: failed to resolve: could not find `Writer` in `composed`
   --> src/pgp.rs:199:32
    |
199 |     let mut writer = composed::Writer::new(secout);
    |                                ^^^^^^ could not find `Writer` in `composed`
    |
help: consider importing one of these items
    |
4   + use exif::experimental::Writer;
    |
4   + use quick_xml::Writer;
    |
help: if you import `Writer`, refer to it directly
    |
199 -     let mut writer = composed::Writer::new(secout);
199 +     let mut writer = Writer::new(secout);
    |

error[E0425]: cannot find function `write_xfer_key` in module `composed`
   --> src/pgp.rs:200:18
    |
200 |     if!composed::write_xfer_key(&mut writer, &seckey, 0) {
    |                  ^^^^^^^^^^^^^^ not found in `composed`

warning: unused `#[macro_use]` import
  --> src/lib.rs:31:1
   |
31 | #[macro_use]
   | ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `armor`, `types`
 --> src/pgp.rs:4:11
  |
4 | use pgp::{armor, composed, crypto, types};
  |           ^^^^^                    ^^^^^

warning: unused imports: `KeyType as PgpKeyType`, `SecretKeyParamsBuilder`, `SubkeyParamsBuilder`
  --> src/pgp.rs:16:21
   |
16 |     Deserializable, KeyType as PgpKeyType, Message, SecretKeyParamsBuilder, SignedPublicKey,
   |                     ^^^^^^^^^^^^^^^^^^^^^           ^^^^^^^^^^^^^^^^^^^^^^
17 |     SignedPublicSubKey, SignedSecretKey, StandaloneSignature, SubkeyParamsBuilder,
   |                                                               ^^^^^^^^^^^^^^^^^^^

warning: unused import: `SecretKeyTrait`
  --> src/pgp.rs:22:58
   |
22 |     CompressionAlgorithm, KeyTrait, Mpi, PublicKeyTrait, SecretKeyTrait, StringToKey,
   |                                                          ^^^^^^^^^^^^^^

warning: unused import: `CryptoRng`
  --> src/pgp.rs:24:24
   |
24 | use rand::{thread_rng, CryptoRng, Rng};
   |                        ^^^^^^^^^

warning: unused import: `crate::test_utils`
 --> src/pgp.rs:6:5
  |
6 | use crate::test_utils;
  |     ^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `new` found for struct `SecretKeyParamsBuilder` in the current scope
   --> src/pgp.rs:152:56
    |
152 |     let mut seckey = composed::SecretKeyParamsBuilder::new()
    |                                                        ^^^ function or associated item not found in `SecretKeyParamsBuilder`
    |
note: if you're trying to build a new `SecretKeyParamsBuilder`, consider using `SecretKeyParamsBuilder::create_empty` which returns `SecretKeyParamsBuilder`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/key/builder.rs:17:32
    |
17  | #[derive(Debug, PartialEq, Eq, Builder)]
    |                                ^^^^^^^
    = note: this error originates in the derive macro `Builder` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `RSA` found for enum `KeyType` in the current scope
   --> src/pgp.rs:153:37
    |
153 |        .key_type(composed::KeyType::RSA)
    |                                     ^^^
    |                                     |
    |                                     variant or associated item not found in `KeyType`
    |                                     help: there is a variant with a similar name: `Rsa`

error[E0599]: no variant or associated item named `RSA` found for enum `KeyType` in the current scope
   --> src/pgp.rs:160:37
    |
160 |        .key_type(composed::KeyType::RSA)
    |                                     ^^^
    |                                     |
    |                                     variant or associated item not found in `KeyType`
    |                                     help: there is a variant with a similar name: `Rsa`

error[E0599]: no function or associated item named `new` found for struct `SecretKeyParamsBuilder` in the current scope
   --> src/pgp.rs:166:56
    |
166 |     let mut subkey = composed::SecretKeyParamsBuilder::new()
    |                                                        ^^^ function or associated item not found in `SecretKeyParamsBuilder`
    |
note: if you're trying to build a new `SecretKeyParamsBuilder`, consider using `SecretKeyParamsBuilder::create_empty` which returns `SecretKeyParamsBuilder`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/key/builder.rs:17:32
    |
17  | #[derive(Debug, PartialEq, Eq, Builder)]
    |                                ^^^^^^^
    = note: this error originates in the derive macro `Builder` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `RSA` found for enum `KeyType` in the current scope
   --> src/pgp.rs:167:37
    |
167 |        .key_type(composed::KeyType::RSA)
    |                                     ^^^
    |                                     |
    |                                     variant or associated item not found in `KeyType`
    |                                     help: there is a variant with a similar name: `Rsa`

error[E0061]: this function takes 3 arguments but 2 arguments were supplied
   --> src/pgp.rs:184:22
    |
184 |     let mut pubkey = composed::SignedPublicKey::new(pubkey, user_id.clone());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------- an argument of type `Vec<SignedPublicSubKey>` is missing
    |
note: expected `SignedKeyDetails`, found `Vec<u8>`
   --> src/pgp.rs:184:61
    |
184 |     let mut pubkey = composed::SignedPublicKey::new(pubkey, user_id.clone());
    |                                                             ^^^^^^^^^^^^^^^
    = note: expected struct `SignedKeyDetails`
               found struct `Vec<u8>`
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:12
    |
39  |     pub fn new(
    |            ^^^
help: provide the argument
    |
184 |     let mut pubkey = composed::SignedPublicKey::new(pubkey, /* SignedKeyDetails */, /* Vec<SignedPublicSubKey> */);
    |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `add_subkey_binding_signature` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:188:12
    |
188 |     pubkey.add_subkey_binding_signature(&subkey, &pubkey, &subkey, &seckey);
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0061]: this function takes 4 arguments but 2 arguments were supplied
   --> src/pgp.rs:190:22
    |
190 |     let mut seckey = composed::SecretKey::new(seckey, user_id.clone());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^------------------------- two arguments of type `Vec<pgp::PublicSubkey>` and `Vec<pgp::SecretSubkey>` are missing
    |
note: expected `KeyDetails`, found `Vec<u8>`
   --> src/pgp.rs:190:55
    |
190 |     let mut seckey = composed::SecretKey::new(seckey, user_id.clone());
    |                                                       ^^^^^^^^^^^^^^^
    = note: expected struct `KeyDetails`
               found struct `Vec<u8>`
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/key/secret.rs:28:12
    |
28  |     pub fn new(
    |            ^^^
help: provide the arguments
    |
190 |     let mut seckey = composed::SecretKey::new(seckey, /* KeyDetails */, /* Vec<pgp::PublicSubkey> */, /* Vec<pgp::SecretSubkey> */);
    |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 4 arguments but 2 arguments were supplied
   --> src/pgp.rs:191:22
    |
191 |     let mut subkey = composed::SignedSecretKey::new(subkey, seckey.clone());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------
    |                                                    ||       |
    |                                                    ||       expected `SignedKeyDetails`, found `SecretKey`
    |                                                    |expected `SecretKey`, found `SignedPublicSubKey`
    |                                                    two arguments of type `Vec<SignedPublicSubKey>` and `Vec<SignedSecretSubKey>` are missing
    |
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:12
    |
47  |     pub fn new(
    |            ^^^
help: provide the arguments
    |
191 |     let mut subkey = composed::SignedSecretKey::new(/* pgp::packet::SecretKey */, /* SignedKeyDetails */, /* Vec<SignedPublicSubKey> */, /* Vec<SignedSecretSubKey> */);
    |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `add_subkey_binding_signature` found for struct `pgp::SecretKey` in the current scope
   --> src/pgp.rs:192:12
    |
192 |     seckey.add_subkey_binding_signature(&subkey, &seckey, &subkey, &seckey);
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `SecretKey`

error[E0599]: no function or associated item named `from_binary` found for trait `DcKey`
   --> src/pgp.rs:204:29
    |
204 |     let public_key = DcKey::from_binary(pubmem.buf, pubmem.length, DcKey::Public);
    |                             ^^^^^^^^^^^ function or associated item not found in `DcKey`

error[E0599]: no associated item named `Public` found for trait `DcKey`
   --> src/pgp.rs:204:75
    |
204 |     let public_key = DcKey::from_binary(pubmem.buf, pubmem.length, DcKey::Public);
    |                                                                           ^^^^^^ associated item not found in `DcKey`

error[E0433]: failed to resolve: use of undeclared type `Dc`
   --> src/pgp.rs:205:23
    |
205 |     let private_key = Dc::from_binary(secmem, secmem, Dc::Private);
    |                       ^^ use of undeclared type `Dc`

error[E0433]: failed to resolve: use of undeclared type `Dc`
   --> src/pgp.rs:205:55
    |
205 |     let private_key = Dc::from_binary(secmem, secmem, Dc::Private);
    |                                                       ^^ use of undeclared type `Dc`

error[E0560]: struct `KeyPair` has no field named `public_key`
   --> src/pgp.rs:207:18
    |
207 |     Ok(KeyPair { public_key: public_key, private_key: private_key })
    |                  ^^^^^^^^^^ `KeyPair` does not have this field
    |
    = note: available fields are: `addr`, `public`, `secret`

error[E0560]: struct `KeyPair` has no field named `private_key`
   --> src/pgp.rs:207:42
    |
207 |     Ok(KeyPair { public_key: public_key, private_key: private_key })
    |                                          ^^^^^^^^^^^ `KeyPair` does not have this field
    |
    = note: available fields are: `addr`, `public`, `secret`

Some errors have detailed explanations: E0061, E0252, E0425, E0432, E0433, E0560, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 5 warnings
error: could not compile `deltachat` (lib) due to 30 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `add_subkey_binding_signature` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:188:12
    |
188 |     pubkey.add_subkey_binding_signature(&subkey, &pubkey, &subkey, &seckey);
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `SignedPublicKey`

error[E0599]: no function or associated item named `from_binary` found for trait `key::DcKey`
   --> src/pgp.rs:204:29
    |
204 |     let public_key = DcKey::from_binary(pubmem.buf, pubmem.length, DcKey::Public);
    |                             ^^^^^^^^^^^ function or associated item not found in `key::DcKey`

error[E0599]: no associated item named `Public` found for trait `key::DcKey`
   --> src/pgp.rs:204:75
    |
204 |     let public_key = DcKey::from_binary(pubmem.buf, pubmem.length, DcKey::Public);
    |                                                                           ^^^^^^ associated item not found in `key::DcKey`

error[E0560]: struct `pgp::KeyPair` has no field named `public_key`
   --> src/pgp.rs:207:18
    |
207 |     Ok(KeyPair { public_key: public_key, private_key: private_key })
    |                  ^^^^^^^^^^ `pgp::KeyPair` does not have this field
    |
    = note: available fields are: `addr`, `public`, `secret`

error[E0560]: struct `pgp::KeyPair` has no field named `private_key`
   --> src/pgp.rs:207:42
    |
207 |     Ok(KeyPair { public_key: public_key, private_key: private_key })
    |                                          ^^^^^^^^^^^ `pgp::KeyPair` does not have this field
    |
    = note: available fields are: `addr`, `public`, `secret`

Some errors have detailed explanations: E0061, E0252, E0425, E0433, E0560, E0599.
warning: `deltachat` (lib test) generated 6 warnings (5 duplicates)
error: could not compile `deltachat` (lib test) due to 29 previous errors; 6 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

