Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
   --> src/location.rs:346:45
    |
346 |     if context.is_none() || context.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                                             ^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:352:11
    |
352 |         &[time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64]
    |           ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
352 |         &[mime::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64]
    |           ~~~~
help: consider importing one of these items
    |
13  + use crate::tools::SystemTime;
    |
13  + use std::time::SystemTime;
    |
help: if you import `SystemTime`, refer to it directly
    |
352 -         &[time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64]
352 +         &[SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64]
    |

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:352:49
    |
352 |         &[time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64]
    |                                                 ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
352 |         &[time::SystemTime::now().elapsed_since(mime::SystemTime::UNIX_EPOCH).as_secs() as i64]
    |                                                 ~~~~
help: consider importing one of these items
    |
13  + use crate::tools::SystemTime;
    |
13  + use std::time::SystemTime;
    |
help: if you import `SystemTime`, refer to it directly
    |
352 -         &[time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64]
352 +         &[time::SystemTime::now().elapsed_since(SystemTime::UNIX_EPOCH).as_secs() as i64]
    |

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:364:17
    |
364 |                 time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64,
    |                 ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
364 |                 mime::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64,
    |                 ~~~~
help: consider importing one of these items
    |
13  + use crate::tools::SystemTime;
    |
13  + use std::time::SystemTime;
    |
help: if you import `SystemTime`, refer to it directly
    |
364 -                 time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64,
364 +                 SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64,
    |

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:364:55
    |
364 |                 time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64,
    |                                                       ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
364 |                 time::SystemTime::now().elapsed_since(mime::SystemTime::UNIX_EPOCH).as_secs() as i64,
    |                                                       ~~~~
help: consider importing one of these items
    |
13  + use crate::tools::SystemTime;
    |
13  + use std::time::SystemTime;
    |
help: if you import `SystemTime`, refer to it directly
    |
364 -                 time::SystemTime::now().elapsed_since(time::SystemTime::UNIX_EPOCH).as_secs() as i64,
364 +                 time::SystemTime::now().elapsed_since(SystemTime::UNIX_EPOCH).as_secs() as i64,
    |

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:366:27
    |
366 |                 ContactId(DC_CONTACT_ID_SELF).0
    |                           ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:370:67
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                                                                   ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_none` found for reference `&context::Context` in the current scope
   --> src/location.rs:346:16
    |
346 |     if context.is_none() || context.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/location.rs:346:37
    |
346 |     if context.is_none() || context.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0423]: cannot initialize a tuple struct which contains private fields
   --> src/location.rs:366:17
    |
366 |                 ContactId(DC_CONTACT_ID_SELF).0
    |                 ^^^^^^^^^
    |
note: constructor is not visible here due to private fields
   --> src/contact.rs:55:22
    |
55  | pub struct ContactId(u32);
    |                      ^^^ private field
help: consider making the field publicly accessible
   --> src/contact.rs:55:22
    |
55  | pub struct ContactId(pub u32);
    |                      +++

error[E0423]: cannot initialize a tuple struct which contains private fields
   --> src/location.rs:370:57
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                                                         ^^^^^^^^^
    |
note: constructor is not visible here due to private fields
   --> src/contact.rs:55:22
    |
55  | pub struct ContactId(u32);
    |                      ^^^ private field
help: consider making the field publicly accessible
   --> src/contact.rs:55:22
    |
55  | pub struct ContactId(pub u32);
    |                      +++

error[E0061]: this method takes 1 argument but 3 arguments were supplied
   --> src/location.rs:370:24
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                        ^^^^                             -----------------------------  - unexpected argument of type `{integer}`
    |                                                         |
    |                                                         unexpected argument
    |
note: expected `Event`, found enum constructor
   --> src/location.rs:370:29
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:        expected struct `events::Event`
            found enum constructor `fn(std::option::Option<ContactId>) -> payload::EventType {payload::EventType::LocationChanged}`
note: method defined here
   --> src/events.rs:47:12
    |
47  |     pub fn emit(&self, event: Event) {
    |            ^^^^        ------------
help: remove the extra arguments
    |
370 -         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
370 +         context.events.emit(/* events::Event */).await?;
    |

error[E0277]: `()` is not a future
   --> src/location.rs:370:91
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                                                                                          -^^^^^
    |                                                                                          ||
    |                                                                                          |`()` is not a future
    |                                                                                          help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `()`, which is required by `(): std::future::IntoFuture`
    = note: () must be a future or must implement `IntoFuture` to be awaited
    = note: required for `()` to implement `std::future::IntoFuture`

error[E0425]: cannot find function `schedule_MAYBE_SEND_LOCATIONS` in this scope
   --> src/location.rs:371:9
    |
371 |         schedule_MAYBE_SEND_LOCATIONS(context, 0).await?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0061, E0277, E0423, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 14 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 1 argument but 3 arguments were supplied
   --> src/location.rs:370:24
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                        ^^^^                             -----------------------------  - unexpected argument of type `{integer}`
    |                                                         |
    |                                                         unexpected argument
    |
note: expected `Event`, found enum constructor
   --> src/location.rs:370:29
    |
370 |         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:        expected struct `events::Event`
            found enum constructor `fn(std::option::Option<contact::ContactId>) -> payload::EventType {payload::EventType::LocationChanged}`
note: method defined here
   --> src/events.rs:47:12
    |
47  |     pub fn emit(&self, event: Event) {
    |            ^^^^        ------------
help: remove the extra arguments
    |
370 -         context.events.emit(EventType::LocationChanged, ContactId(DC_CONTACT_ID_SELF), 0).await?;
370 +         context.events.emit(/* events::Event */).await?;
    |

error: could not compile `deltachat` (lib test) due to 14 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

