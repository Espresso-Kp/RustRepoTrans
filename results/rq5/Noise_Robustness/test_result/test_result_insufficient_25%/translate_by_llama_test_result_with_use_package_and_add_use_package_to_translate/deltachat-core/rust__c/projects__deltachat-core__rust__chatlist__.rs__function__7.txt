Fail
file path is :
projects/deltachat-core/rust/src/chatlist.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: expected identifier, found keyword `type`
   --> src/chatlist.rs:389:88
    |
389 |         if lastmsg.from_id!= DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.unwrap().type()) {
    |                                                                                        ^^^^ expected identifier, found keyword
    |
help: escape `type` to use it as an identifier
    |
389 |         if lastmsg.from_id!= DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.unwrap().r#type()) {
    |                                                                                        ++

error: cannot find macro `anyhow` in this scope
   --> src/chatlist.rs:372:20
    |
372 |         return Err(anyhow!("ErrBadChatlistIndex"));
    |                    ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
3   + use anyhow::anyhow;
    |

error: cannot find macro `anyhow` in this scope
   --> src/chatlist.rs:382:24
    |
382 |             return Err(anyhow!("ErrCannotReadChat"));
    |                        ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
3   + use anyhow::anyhow;
    |

error[E0425]: cannot find value `DC_CHATLIST_MAGIC` in this scope
   --> src/chatlist.rs:370:29
    |
370 |     let chatlist = self.get(DC_CHATLIST_MAGIC)?;
    |                             ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CHATLIST_IDS_PER_RESULT` in this scope
   --> src/chatlist.rs:375:56
    |
375 |     let lastmsg_id = chatlist.chatNlastmsg_ids[index * DC_CHATLIST_IDS_PER_RESULT + 1];
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/chatlist.rs:389:30
    |
389 |         if lastmsg.from_id!= DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.unwrap().type()) {
    |                              ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_STR_NOMESSAGES` in this scope
   --> src/chatlist.rs:403:56
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                                                        ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `get` found for reference `&Chatlist` in the current scope
   --> src/chatlist.rs:370:25
    |
370 |     let chatlist = self.get(DC_CHATLIST_MAGIC)?;
    |                         ^^^ method not found in `&Chatlist`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `get`, perhaps you need to implement one of them:
            candidate #1: `SliceIndex`
            candidate #2: `fallible_streaming_iterator::FallibleStreamingIterator`
            candidate #3: `quinn_proto::coding::BufExt`
            candidate #4: `rustls::server::server_conn::StoresServerSessions`
            candidate #5: `prometheus_client::metrics::counter::Atomic`
            candidate #6: `prometheus_client::metrics::gauge::Atomic`
            candidate #7: `rustls::server::server_conn::StoresServerSessions`
            candidate #8: `bitvec::slice::api::BitSliceIndex`
            candidate #9: `iroh_quinn_proto::coding::BufExt`
            candidate #10: `nonzero_ext::NonZero`
            candidate #11: `toml_edit::table::TableLike`
help: one of the expressions' fields has a method of the same name
    |
370 |     let chatlist = self.ids.get(DC_CHATLIST_MAGIC)?;
    |                         ++++

error[E0599]: no function or associated item named `new` found for struct `Chat` in the current scope
    --> src/chatlist.rs:379:27
     |
379  |         chat = Some(Chat::new(context));
     |                           ^^^ function or associated item not found in `Chat`
     |
    ::: src/chat.rs:1480:1
     |
1480 | pub struct Chat {
     | --------------- function or associated item `new` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `iroh_metrics::core::Metric`
             candidate #20: `bitvec::store::BitStore`
             candidate #21: `radium::Radium`
             candidate #22: `netlink_sys::async_socket::AsyncSocket`
             candidate #23: `nonzero_ext::NonZero`
             candidate #24: `Allocable`
             candidate #25: `AnyBoxConstructor`
             candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0599]: no method named `load_from_db` found for reference `&Chat` in the current scope
    --> src/chatlist.rs:381:26
     |
381  |         if!chat.unwrap().load_from_db(lastmsg_id) {
     |            --------------^^^^^^^^^^^^------------
     |            |             |
     |            |             this is an associated function, not a method
     |            help: use associated function syntax instead: `Chat::load_from_db(lastmsg_id)`
     |
     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in an impl for the type `Chat`
    --> src/chat.rs:1515:5
     |
1515 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `new_untyped` found for struct `message::Message` in the current scope
   --> src/chatlist.rs:387:32
    |
387 |         let lastmsg = Message::new_untyped(context);
    |                                ^^^^^^^^^^^ function or associated item not found in `Message`
    |
   ::: src/message.rs:420:1
    |
420 | pub struct Message {
    | ------------------ function or associated item `new_untyped` not found for this struct
    |
note: if you're trying to build a new `message::Message`, consider using `message::Message::new` which returns `message::Message`
   --> src/message.rs:469:5
    |
469 |     pub fn new(viewtype: Viewtype) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `r#type` found for reference `&Chat` in the current scope
   --> src/chatlist.rs:389:88
    |
389 |         if lastmsg.from_id!= DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.unwrap().type()) {
    |                                                                                        ^^^^ help: there is a method with a similar name: `get_type`

error[E0425]: cannot find function, tuple struct or tuple variant `DC_CHAT_TYPE_IS_MULTI` in this scope
   --> src/chatlist.rs:389:52
    |
389 |         if lastmsg.from_id!= DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.unwrap().type()) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `new` found for struct `Contact` in the current scope
   --> src/chatlist.rs:390:40
    |
390 |             let lastcontact = Contact::new(context);
    |                                        ^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `iroh_metrics::core::Metric`
            candidate #20: `bitvec::store::BitStore`
            candidate #21: `radium::Radium`
            candidate #22: `netlink_sys::async_socket::AsyncSocket`
            candidate #23: `nonzero_ext::NonZero`
            candidate #24: `Allocable`
            candidate #25: `AnyBoxConstructor`
            candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> src/chatlist.rs:401:19
    |
401 |         return Ok(Summary::new(None));
    |                   ^^^^^^^^^^^^------ three arguments of type `&context::Context`, `&message::Message`, and `&Chat` are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
401 |         return Ok(Summary::new(/* &context::Context */, /* &message::Message */, /* &Chat */, None));
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:401:19
    |
401 |         return Ok(Summary::new(None));
    |                -- ^^^^^^^^^^^^^^^^^^ expected `Summary`, found future
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:401:16
    |
401 |         return Ok(Summary::new(None));
    |                ^^^------------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0423]: expected function, found module `stock_str`
   --> src/chatlist.rs:403:37
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                                     ^^^^^^^^^ not a function

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> src/chatlist.rs:403:19
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                   ^^^^^^^^^^^^--------------------------------------------- three arguments of type `&message::Message`, `&Chat`, and `std::option::Option<&Contact>` are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES)), /* &message::Message */, /* &Chat */, /* std::option::Option<&Contact> */));
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:403:19
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Summary`, found future
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:403:16
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                ^^^---------------------------------------------------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> src/chatlist.rs:406:23
    |
406 |         let summary = Summary::new(Some(lastmsg));
    |                       ^^^^^^^^^^^^--------------- three arguments of type `&context::Context`, `&message::Message`, and `&Chat` are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
406 |         let summary = Summary::new(/* &context::Context */, /* &message::Message */, /* &Chat */, Some(lastmsg));
    |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0425]: cannot find function `dc_lot_fill` in this scope
   --> src/chatlist.rs:407:9
    |
407 |         dc_lot_fill(summary, lastmsg, chat.unwrap(), lastcontact, context)?;
    |         ^^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> src/chatlist.rs:408:12
    |
408 |         Ok(summary)
    |         -- ^^^^^^^ expected `Summary`, found future
    |         |
    |         arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:408:9
    |
408 |         Ok(summary)
    |         ^^^-------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0599]: no method named `get` found for reference `&chatlist::Chatlist` in the current scope
   --> src/chatlist.rs:370:25
    |
370 |     let chatlist = self.get(DC_CHATLIST_MAGIC)?;
    |                         ^^^ method not found in `&Chatlist`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `get`, perhaps you need to implement one of them:
            candidate #1: `SliceIndex`
            candidate #2: `fallible_streaming_iterator::FallibleStreamingIterator`
            candidate #3: `quinn_proto::coding::BufExt`
            candidate #4: `rustls::server::server_conn::StoresServerSessions`
            candidate #5: `ResultCache`
            candidate #6: `prometheus_client::metrics::counter::Atomic`
            candidate #7: `prometheus_client::metrics::gauge::Atomic`
            candidate #8: `rustls::server::server_conn::StoresServerSessions`
            candidate #9: `bitvec::slice::api::BitSliceIndex`
            candidate #10: `iroh_quinn_proto::coding::BufExt`
            candidate #11: `nonzero_ext::NonZero`
            candidate #12: `toml_edit::table::TableLike`
help: one of the expressions' fields has a method of the same name
    |
370 |     let chatlist = self.ids.get(DC_CHATLIST_MAGIC)?;
    |                         ++++

error[E0599]: no function or associated item named `new` found for struct `chat::Chat` in the current scope
    --> src/chatlist.rs:379:27
     |
379  |         chat = Some(Chat::new(context));
     |                           ^^^ function or associated item not found in `chat::Chat`
     |
    ::: src/chat.rs:1480:1
     |
1480 | pub struct Chat {
     | --------------- function or associated item `new` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `sysinfo::traits::SystemExt`
             candidate #20: `gimli::read::lookup::PubStuffEntry`
             candidate #21: `iroh_metrics::core::Metric`
             candidate #22: `bitvec::store::BitStore`
             candidate #23: `radium::Radium`
             candidate #24: `netlink_sys::async_socket::AsyncSocket`
             candidate #25: `nonzero_ext::NonZero`
             candidate #26: `Allocable`
             candidate #27: `AnyBoxConstructor`
             candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
             candidate #29: `plotters::style::font::FontData`

error[E0599]: no method named `load_from_db` found for reference `&chat::Chat` in the current scope
    --> src/chatlist.rs:381:26
     |
381  |         if!chat.unwrap().load_from_db(lastmsg_id) {
     |            --------------^^^^^^^^^^^^------------
     |            |             |
     |            |             this is an associated function, not a method
     |            help: use associated function syntax instead: `chat::Chat::load_from_db(lastmsg_id)`
     |
     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
note: the candidate is defined in an impl for the type `chat::Chat`
    --> src/chat.rs:1515:5
     |
1515 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `r#type` found for reference `&chat::Chat` in the current scope
   --> src/chatlist.rs:389:88
    |
389 |         if lastmsg.from_id!= DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.unwrap().type()) {
    |                                                                                        ^^^^ help: there is a method with a similar name: `get_type`

error[E0599]: no function or associated item named `new` found for struct `contact::Contact` in the current scope
   --> src/chatlist.rs:390:40
    |
390 |             let lastcontact = Contact::new(context);
    |                                        ^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `sysinfo::traits::SystemExt`
            candidate #20: `gimli::read::lookup::PubStuffEntry`
            candidate #21: `iroh_metrics::core::Metric`
            candidate #22: `bitvec::store::BitStore`
            candidate #23: `radium::Radium`
            candidate #24: `netlink_sys::async_socket::AsyncSocket`
            candidate #25: `nonzero_ext::NonZero`
            candidate #26: `Allocable`
            candidate #27: `AnyBoxConstructor`
            candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
            candidate #29: `plotters::style::font::FontData`

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> src/chatlist.rs:401:19
    |
401 |         return Ok(Summary::new(None));
    |                   ^^^^^^^^^^^^------ three arguments of type `&context::Context`, `&message::Message`, and `&chat::Chat` are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
401 |         return Ok(Summary::new(/* &context::Context */, /* &message::Message */, /* &chat::Chat */, None));
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:401:19
    |
401 |         return Ok(Summary::new(None));
    |                -- ^^^^^^^^^^^^^^^^^^ expected `Summary`, found future
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:401:16
    |
401 |         return Ok(Summary::new(None));
    |                ^^^------------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> src/chatlist.rs:403:19
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                   ^^^^^^^^^^^^--------------------------------------------- three arguments of type `&message::Message`, `&chat::Chat`, and `std::option::Option<&contact::Contact>` are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES)), /* &message::Message */, /* &chat::Chat */, /* std::option::Option<&contact::Contact> */));
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:403:19
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Summary`, found future
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:403:16
    |
403 |         return Ok(Summary::new(Some(stock_str(context, DC_STR_NOMESSAGES))));
    |                ^^^---------------------------------------------------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> src/chatlist.rs:406:23
    |
406 |         let summary = Summary::new(Some(lastmsg));
    |                       ^^^^^^^^^^^^--------------- three arguments of type `&context::Context`, `&message::Message`, and `&chat::Chat` are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
406 |         let summary = Summary::new(/* &context::Context */, /* &message::Message */, /* &chat::Chat */, Some(lastmsg));
    |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:408:12
    |
408 |         Ok(summary)
    |         -- ^^^^^^^ expected `Summary`, found future
    |         |
    |         arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:408:9
    |
408 |         Ok(summary)
    |         ^^^-------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

Some errors have detailed explanations: E0061, E0308, E0423, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 22 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 22 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

