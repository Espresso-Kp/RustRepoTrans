Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0599]: no method named `is_none` found for struct `Sql` in the current scope
    --> src/chat.rs:2475:20
     |
2475 |     if context.sql.is_none() {
     |                    ^^^^^^^ method not found in `Sql`
     |
    ::: src/sql.rs:57:1
     |
57   | pub struct Sql {
     | -------------- method `is_none` not found for this struct

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:2486:13
     |
2481 |         .query_row_optional(
     |          ------------------ required by a bound introduced by this call
...
2486 |             params!(Chattype::Single, DC_CHAT_ID_LAST_SPECIAL, contact_id),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row_optional`
    --> src/sql.rs:541:41
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ------------------ required by a bound in this associated function
...
541  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0308]: mismatched types
    --> src/chat.rs:2496:39
     |
2496 |         Some((chat_id, _)) => Ok(Some(ChatId::new(chat_id as u32))),
     |                                  ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ChatIdBlocked`, found `ChatId`
     |                                  |
     |                                  arguments to this enum variant are incorrect
     |
help: the type constructed contains `ChatId` due to the type of the argument passed
    --> src/chat.rs:2496:34
     |
2496 |         Some((chat_id, _)) => Ok(Some(ChatId::new(chat_id as u32))),
     |                                  ^^^^^---------------------------^
     |                                       |
     |                                       this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `is_none` found for struct `sql::Sql` in the current scope
    --> src/chat.rs:2475:20
     |
2475 |     if context.sql.is_none() {
     |                    ^^^^^^^ method not found in `sql::Sql`
     |
    ::: src/sql.rs:57:1
     |
57   | pub struct Sql {
     | -------------- method `is_none` not found for this struct

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/chat.rs:2486:13
     |
2481 |         .query_row_optional(
     |          ------------------ required by a bound introduced by this call
...
2486 |             params!(Chattype::Single, DC_CHAT_ID_LAST_SPECIAL, contact_id),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
     = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
     = note: required because it appears within the type `&dyn rusqlite::ToSql`
     = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
     = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row_optional`
    --> src/sql.rs:541:41
     |
538  |     pub async fn query_row_optional<T, F>(
     |                  ------------------ required by a bound in this associated function
...
541  |         params: impl rusqlite::Params + Send,
     |                                         ^^^^ required by this bound in `Sql::query_row_optional`

error[E0308]: mismatched types
    --> src/chat.rs:2496:39
     |
2496 |         Some((chat_id, _)) => Ok(Some(ChatId::new(chat_id as u32))),
     |                                  ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ChatIdBlocked`, found `ChatId`
     |                                  |
     |                                  arguments to this enum variant are incorrect
     |
help: the type constructed contains `chat::ChatId` due to the type of the argument passed
    --> src/chat.rs:2496:34
     |
2496 |         Some((chat_id, _)) => Ok(Some(ChatId::new(chat_id as u32))),
     |                                  ^^^^^---------------------------^
     |                                       |
     |                                       this argument influences the type of `Some`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:578:5
     |
578  |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^^^

error: could not compile `deltachat` (lib test) due to 3 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

