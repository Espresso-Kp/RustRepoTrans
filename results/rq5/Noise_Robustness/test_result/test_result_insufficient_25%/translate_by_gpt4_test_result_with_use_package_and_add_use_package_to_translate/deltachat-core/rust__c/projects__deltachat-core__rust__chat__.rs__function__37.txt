Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `MessageState` is defined multiple times
  --> src/chat.rs:40:37
   |
5  | use crate::message::MessageState;
   |     ---------------------------- previous import of the type `MessageState` here
...
40 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                     ^^^^^^^^^^^^--
   |                                     |
   |                                     `MessageState` reimported here
   |                                     help: remove unnecessary import
   |
   = note: `MessageState` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `rusqlite::NO_PARAMS`
 --> src/chat.rs:4:5
  |
4 | use rusqlite::NO_PARAMS;
  |     ^^^^^^^^^^^^^^^^^^^ no `NO_PARAMS` in the root

error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
   --> src/chat.rs:991:46
    |
991 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC {
    |                                              ^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `MessageState`
  --> src/chat.rs:40:37
   |
40 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                     ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
   --> src/chat.rs:991:16
    |
991 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC {
    |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/chat.rs:991:37
    |
991 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC {
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0277]: can't compare `u32` with `ChatId`
   --> src/chat.rs:996:16
    |
996 |     if chat_id == DC_CHAT_ID_ARCHIVED_LINK {
    |                ^^ no implementation for `u32 == ChatId`
    |
    = help: the trait `PartialEq<ChatId>` is not implemented for `u32`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u32 as PartialEq>
              <u32 as PartialEq<precis_core::Codepoints>>
              <u32 as PartialEq<stun_rs::types::Cookie>>
              <u32 as PartialEq<serde_json::Value>>

error[E0599]: `&ChatId` is not an iterator
    --> src/chat.rs:1013:22
     |
170  | pub struct ChatId(u32);
     | ----------------- doesn't satisfy `ChatId: Iterator`
...
1013 |         count = self.count(query, params).await?;
     |                      ^^^^^ `&ChatId` is not an iterator
     |
     = note: the following trait bounds were not satisfied:
             `&ChatId: Iterator`
             which is required by `&mut &ChatId: Iterator`
             `ChatId: Iterator`
             which is required by `&mut ChatId: Iterator`
note: the trait `Iterator` must be implemented
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:75:1
     |
75   | pub trait Iterator {
     | ^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `count`, perhaps you need to implement it:
             candidate #1: `Iterator`

error[E0277]: can't compare `u32` with `chat::ChatId`
   --> src/chat.rs:996:16
    |
996 |     if chat_id == DC_CHAT_ID_ARCHIVED_LINK {
    |                ^^ no implementation for `u32 == chat::ChatId`
    |
    = help: the trait `PartialEq<chat::ChatId>` is not implemented for `u32`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u32 as PartialEq>
              <u32 as PartialEq<precis_core::Codepoints>>
              <u32 as PartialEq<stun_rs::types::Cookie>>
              <u32 as PartialEq<serde_json::Value>>

error[E0599]: `&chat::ChatId` is not an iterator
    --> src/chat.rs:1013:22
     |
170  | pub struct ChatId(u32);
     | ----------------- doesn't satisfy `chat::ChatId: Iterator`
...
1013 |         count = self.count(query, params).await?;
     |                      ^^^^^ `&chat::ChatId` is not an iterator
     |
     = note: the following trait bounds were not satisfied:
             `&chat::ChatId: Iterator`
             which is required by `&mut &chat::ChatId: Iterator`
             `chat::ChatId: Iterator`
             which is required by `&mut chat::ChatId: Iterator`
note: the trait `Iterator` must be implemented
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:75:1
     |
75   | pub trait Iterator {
     | ^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `count`, perhaps you need to implement it:
             candidate #1: `Iterator`

Some errors have detailed explanations: E0252, E0277, E0425, E0432, E0599, E0609.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 7 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/events/chatlist_events.rs:486:33
    |
486 |         assert!(chat_id_for_bob.get_fresh_msg_cnt(&bob).await? >= 1);
    |                                 ^^^^^^^^^^^^^^^^^------ an argument of type `u32` is missing
    |
note: method defined here
   --> src/chat.rs:988:14
    |
988 | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
    |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
    |
486 |         assert!(chat_id_for_bob.get_fresh_msg_cnt(&bob, /* u32 */).await? >= 1);
    |                                                  ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5776:45
     |
5776 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 0);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5776 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 0);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5779:45
     |
5779 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 1);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5779 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5782:45
     |
5782 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 1);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5782 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5794:32
     |
5794 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 2);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5794 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 2);
     |                                                 ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5795:35
     |
5795 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 3);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5795 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 3);
     |                                                    ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5796:45
     |
5796 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 2);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5796 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 2);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5800:32
     |
5800 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 2);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5800 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 2);
     |                                                 ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5801:35
     |
5801 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 0);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5801 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 0);
     |                                                    ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5802:45
     |
5802 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 1);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5802 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5806:32
     |
5806 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 2);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5806 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 2);
     |                                                 ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5807:35
     |
5807 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5807 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                                    ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5808:45
     |
5808 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 2);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5808 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 2);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5814:33
     |
5814 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                                 ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5814 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                                  ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5815:45
     |
5815 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 2);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5815 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 2);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5820:32
     |
5820 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t).await?, 0);
     |                                ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5820 |         assert_eq!(bob_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 0);
     |                                                 ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5821:35
     |
5821 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t).await?, 0);
     |                                   ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5821 |         assert_eq!(claire_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 0);
     |                                                    ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5822:33
     |
5822 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                                 ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5822 |         assert_eq!(dave_chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                                  ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:5823:45
     |
5823 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t).await?, 0);
     |                                             ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
5823 |         assert_eq!(DC_CHAT_ID_ARCHIVED_LINK.get_fresh_msg_cnt(&t, /* u32 */).await?, 0);
     |                                                              ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6236:28
     |
6236 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
6236 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6254:28
     |
6254 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t).await?, 0);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
6254 |         assert_eq!(chat.id.get_fresh_msg_cnt(&t, /* u32 */).await?, 0);
     |                                             ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6288:28
     |
6288 |         assert_eq!(chat_id.get_fresh_msg_cnt(&t).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
6288 |         assert_eq!(chat_id.get_fresh_msg_cnt(&t, /* u32 */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6369:28
     |
6369 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^-------- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
6369 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice, /* u32 */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6381:28
     |
6381 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice).await?, 1);
     |                            ^^^^^^^^^^^^^^^^^-------- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
6381 |         assert_eq!(chat_id.get_fresh_msg_cnt(&alice, /* u32 */).await?, 1);
     |                                             ~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1461:27
     |
1461 |         assert_eq!(bob.id.get_fresh_msg_cnt(&t).await.unwrap(), 1);
     |                           ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
1461 |         assert_eq!(bob.id.get_fresh_msg_cnt(&t, /* u32 */).await.unwrap(), 1);
     |                                            ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1467:30
     |
1467 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 2);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
1467 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* u32 */).await.unwrap(), 2);
     |                                               ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1474:28
     |
1474 |         assert_eq!(dave.id.get_fresh_msg_cnt(&t).await.unwrap(), 3);
     |                            ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
1474 |         assert_eq!(dave.id.get_fresh_msg_cnt(&t, /* u32 */).await.unwrap(), 3);
     |                                             ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1481:30
     |
1481 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 2);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
1481 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* u32 */).await.unwrap(), 2);
     |                                               ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1489:30
     |
1489 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 3);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
1489 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* u32 */).await.unwrap(), 3);
     |                                               ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1496:30
     |
1496 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t).await.unwrap(), 3);
     |                              ^^^^^^^^^^^^^^^^^---- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
1496 |         assert_eq!(claire.id.get_fresh_msg_cnt(&t, /* u32 */).await.unwrap(), 3);
     |                                               ~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2398:34
     |
2398 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 2);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
2398 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* u32 */).await?, 2);
     |                                                   ~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2407:34
     |
2407 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 2);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
2407 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* u32 */).await?, 2);
     |                                                   ~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2413:34
     |
2413 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 1);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
2413 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* u32 */).await?, 1);
     |                                                   ~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2419:34
     |
2419 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice).await?, 0);
     |                                  ^^^^^^^^^^^^^^^^^-------- an argument of type `u32` is missing
     |
note: method defined here
    --> src/chat.rs:988:14
     |
988  | pub async fn get_fresh_msg_cnt(&self, context: &Context, chat_id: u32) -> Result<usize> {
     |              ^^^^^^^^^^^^^^^^^        -----------------  ------------
help: provide the argument
     |
2419 |         assert_eq!(alice_chat.id.get_fresh_msg_cnt(&alice, /* u32 */).await?, 0);
     |                                                   ~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0252, E0277, E0425, E0432, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 41 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

