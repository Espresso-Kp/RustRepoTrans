Fail
file path is :
projects/deltachat-core/rust/src/chatlist.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CHATLIST_MAGIC` in this scope
   --> src/chatlist.rs:377:23
    |
377 |         self.magic == DC_CHATLIST_MAGIC && index < self.cnt,
    |                       ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CHATLIST_IDS_PER_RESULT` in this scope
   --> src/chatlist.rs:381:52
    |
381 |     lastmsg_id = self.chatNlastmsg_ids.get(index * DC_CHATLIST_IDS_PER_RESULT + 1);
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/chatlist.rs:400:40
    |
400 |         if lastmsg.unwrap().from_id != DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.typ) {
    |                                        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dc_stock_str` in module `stock_str`
   --> src/chatlist.rs:410:32
    |
410 |         ret.text2 = stock_str::dc_stock_str(context, StockMessage::NoMessages).await;
    |                                ^^^^^^^^^^^^ not found in `stock_str`

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/chatlist.rs:410:54
    |
410 |         ret.text2 = stock_str::dc_stock_str(context, StockMessage::NoMessages).await;
    |                                                      ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

error[E0061]: this function takes 4 arguments but 0 arguments were supplied
   --> src/chatlist.rs:370:19
    |
370 |     let mut ret = Summary::new();
    |                   ^^^^^^^^^^^^-- multiple arguments are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
370 |     let mut ret = Summary::new(/* &context::Context */, /* &message::Message */, /* &Chat */, /* std::option::Option<&Contact> */);
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `magic` on type `&Chatlist`
   --> src/chatlist.rs:377:14
    |
377 |         self.magic == DC_CHATLIST_MAGIC && index < self.cnt,
    |              ^^^^^ unknown field
    |
    = note: available field is: `ids`

error[E0609]: no field `cnt` on type `&Chatlist`
   --> src/chatlist.rs:377:57
    |
377 |         self.magic == DC_CHATLIST_MAGIC && index < self.cnt,
    |                                                         ^^^ unknown field
    |
    = note: available field is: `ids`

error[E0609]: no field `chatNlastmsg_ids` on type `&Chatlist`
   --> src/chatlist.rs:381:23
    |
381 |     lastmsg_id = self.chatNlastmsg_ids.get(index * DC_CHATLIST_IDS_PER_RESULT + 1);
    |                       ^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `ids`

error[E0599]: no function or associated item named `new` found for struct `Chat` in the current scope
    --> src/chatlist.rs:386:30
     |
386  |             let chat = Chat::new(context);
     |                              ^^^ function or associated item not found in `Chat`
     |
    ::: src/chat.rs:1480:1
     |
1480 | pub struct Chat {
     | --------------- function or associated item `new` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `iroh_metrics::core::Metric`
             candidate #20: `bitvec::store::BitStore`
             candidate #21: `radium::Radium`
             candidate #22: `netlink_sys::async_socket::AsyncSocket`
             candidate #23: `nonzero_ext::NonZero`
             candidate #24: `Allocable`
             candidate #25: `AnyBoxConstructor`
             candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0061]: this function takes 4 arguments but 0 arguments were supplied
   --> src/chatlist.rs:370:19
    |
370 |     let mut ret = Summary::new();
    |                   ^^^^^^^^^^^^-- multiple arguments are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
370 |     let mut ret = Summary::new(/* &context::Context */, /* &message::Message */, /* &chat::Chat */, /* std::option::Option<&contact::Contact> */);
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `magic` on type `&chatlist::Chatlist`
   --> src/chatlist.rs:377:14
    |
377 |         self.magic == DC_CHATLIST_MAGIC && index < self.cnt,
    |              ^^^^^ unknown field
    |
    = note: available field is: `ids`

error[E0609]: no field `cnt` on type `&chatlist::Chatlist`
   --> src/chatlist.rs:377:57
    |
377 |         self.magic == DC_CHATLIST_MAGIC && index < self.cnt,
    |                                                         ^^^ unknown field
    |
    = note: available field is: `ids`

error[E0609]: no field `chatNlastmsg_ids` on type `&chatlist::Chatlist`
   --> src/chatlist.rs:381:23
    |
381 |     lastmsg_id = self.chatNlastmsg_ids.get(index * DC_CHATLIST_IDS_PER_RESULT + 1);
    |                       ^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `ids`

error[E0599]: no function or associated item named `new` found for struct `chat::Chat` in the current scope
    --> src/chatlist.rs:386:30
     |
386  |             let chat = Chat::new(context);
     |                              ^^^ function or associated item not found in `chat::Chat`
     |
    ::: src/chat.rs:1480:1
     |
1480 | pub struct Chat {
     | --------------- function or associated item `new` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `sysinfo::traits::SystemExt`
             candidate #20: `gimli::read::lookup::PubStuffEntry`
             candidate #21: `iroh_metrics::core::Metric`
             candidate #22: `bitvec::store::BitStore`
             candidate #23: `radium::Radium`
             candidate #24: `netlink_sys::async_socket::AsyncSocket`
             candidate #25: `nonzero_ext::NonZero`
             candidate #26: `Allocable`
             candidate #27: `AnyBoxConstructor`
             candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
             candidate #29: `plotters::style::font::FontData`

error[E0599]: no method named `unwrap_or_default` found for type `{integer}` in the current scope
   --> src/chatlist.rs:388:46
    |
388 |             if !chat.load_from_db(lastmsg_id.unwrap_or_default()) {
    |                                              ^^^^^^^^^^^^^^^^^ method not found in `{integer}`

error[E0599]: no method named `is_some` found for type `{integer}` in the current scope
   --> src/chatlist.rs:395:19
    |
395 |     if lastmsg_id.is_some() {
    |                   ^^^^^^^ method not found in `{integer}`

error[E0599]: no function or associated item named `new_untyped` found for struct `message::Message` in the current scope
   --> src/chatlist.rs:396:28
    |
396 |         let msg = Message::new_untyped(context);
    |                            ^^^^^^^^^^^ function or associated item not found in `Message`
    |
   ::: src/message.rs:420:1
    |
420 | pub struct Message {
    | ------------------ function or associated item `new_untyped` not found for this struct
    |
note: if you're trying to build a new `message::Message`, consider using `message::Message::new` which returns `message::Message`
   --> src/message.rs:469:5
    |
469 |     pub fn new(viewtype: Viewtype) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0689]: can't call method `unwrap` on ambiguous numeric type `{integer}`
   --> src/chatlist.rs:397:37
    |
397 |         msg.load_from_db(lastmsg_id.unwrap());
    |                                     ^^^^^^
    |
help: you must specify a type for this binding, like `i32`
    |
371 |     let mut lastmsg_id: i32 = 0;
    |                       +++++

error[E0425]: cannot find function, tuple struct or tuple variant `DC_CHAT_TYPE_IS_MULTI` in this scope
   --> src/chatlist.rs:400:62
    |
400 |         if lastmsg.unwrap().from_id != DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(chat.typ) {
    |                                                              ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `new` found for struct `Contact` in the current scope
   --> src/chatlist.rs:401:36
    |
401 |             let contact = Contact::new(context);
    |                                    ^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `iroh_metrics::core::Metric`
            candidate #20: `bitvec::store::BitStore`
            candidate #21: `radium::Radium`
            candidate #22: `netlink_sys::async_socket::AsyncSocket`
            candidate #23: `nonzero_ext::NonZero`
            candidate #24: `Allocable`
            candidate #25: `AnyBoxConstructor`
            candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0609]: no field `text2` on type `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>`
   --> src/chatlist.rs:408:13
    |
408 |         ret.text2 = "".to_string();
    |             ^^^^^ unknown field

error[E0308]: mismatched types
   --> src/chatlist.rs:409:64
    |
409 |     } else if lastmsg.is_none() || lastmsg.unwrap().from_id == 0 {
    |                                    ------------------------    ^ expected `ContactId`, found integer
    |                                    |
    |                                    expected because this is `ContactId`
    |
help: try wrapping the expression in `contact::ContactId` (its field is private, but it's local to this crate and its privacy can be changed)
    |
409 |     } else if lastmsg.is_none() || lastmsg.unwrap().from_id == contact::ContactId(0) {
    |                                                                +++++++++++++++++++ +

error[E0599]: no function or associated item named `new` found for struct `contact::Contact` in the current scope
   --> src/chatlist.rs:401:36
    |
401 |             let contact = Contact::new(context);
    |                                    ^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `sysinfo::traits::SystemExt`
            candidate #20: `gimli::read::lookup::PubStuffEntry`
            candidate #21: `iroh_metrics::core::Metric`
            candidate #22: `bitvec::store::BitStore`
            candidate #23: `radium::Radium`
            candidate #24: `netlink_sys::async_socket::AsyncSocket`
            candidate #25: `nonzero_ext::NonZero`
            candidate #26: `Allocable`
            candidate #27: `AnyBoxConstructor`
            candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
            candidate #29: `plotters::style::font::FontData`

error[E0609]: no field `text2` on type `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>`
   --> src/chatlist.rs:410:13
    |
410 |         ret.text2 = stock_str::dc_stock_str(context, StockMessage::NoMessages).await;
    |             ^^^^^ unknown field

error[E0609]: no field `text2` on type `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>`
   --> src/chatlist.rs:408:13
    |
408 |         ret.text2 = "".to_string();
    |             ^^^^^ unknown field

error[E0308]: mismatched types
   --> src/chatlist.rs:409:64
    |
409 |     } else if lastmsg.is_none() || lastmsg.unwrap().from_id == 0 {
    |                                    ------------------------    ^ expected `ContactId`, found integer
    |                                    |
    |                                    expected because this is `contact::ContactId`
    |
help: try wrapping the expression in `contact::ContactId` (its field is private, but it's local to this crate and its privacy can be changed)
    |
409 |     } else if lastmsg.is_none() || lastmsg.unwrap().from_id == contact::ContactId(0) {
    |                                                                +++++++++++++++++++ +

error[E0609]: no field `text2` on type `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>`
   --> src/chatlist.rs:410:13
    |
410 |         ret.text2 = stock_str::dc_stock_str(context, StockMessage::NoMessages).await;
    |             ^^^^^ unknown field

error[E0599]: no method named `fill` found for opaque type `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` in the current scope
   --> src/chatlist.rs:412:13
    |
412 |         ret.fill(lastmsg.unwrap(), chat, lastcontact, context).await?;
    |             ^^^^ method not found in `impl Future<Output = Result<Summary, Error>>`

error[E0425]: cannot find function `remove_reference` in this scope
   --> src/chatlist.rs:415:5
    |
415 |     remove_reference(lastmsg);
    |     ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `remove_reference` in this scope
   --> src/chatlist.rs:416:5
    |
416 |     remove_reference(lastcontact);
    |     ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `remove_reference` in this scope
   --> src/chatlist.rs:417:5
    |
417 |     remove_reference(chat_to_delete);
    |     ^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `fill` found for opaque type `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` in the current scope
   --> src/chatlist.rs:412:13
    |
412 |         ret.fill(lastmsg.unwrap(), chat, lastcontact, context).await?;
    |             ^^^^ method not found in `impl Future<Output = Result<Summary, Error>>`

error[E0308]: mismatched types
   --> src/chatlist.rs:419:8
    |
419 |     Ok(ret)
    |     -- ^^^ expected `Summary`, found future
    |     |
    |     arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:419:5
    |
419 |     Ok(ret)
    |     ^^^---^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0308]: mismatched types
   --> src/chatlist.rs:419:8
    |
419 |     Ok(ret)
    |     -- ^^^ expected `Summary`, found future
    |     |
    |     arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/chatlist.rs:419:5
    |
419 |     Ok(ret)
    |     ^^^---^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

Some errors have detailed explanations: E0061, E0308, E0425, E0433, E0599, E0609, E0689.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 24 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 24 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

