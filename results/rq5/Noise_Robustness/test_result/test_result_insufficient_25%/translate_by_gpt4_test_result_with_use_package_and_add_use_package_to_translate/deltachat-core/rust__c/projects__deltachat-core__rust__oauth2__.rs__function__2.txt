Fail
file path is :
projects/deltachat-core/rust/src/oauth2.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `format_err` in this scope
   --> src/oauth2.rs:115:37
    |
115 |                      .map_err(|err| format_err!("HTTP POST error: {}", err))?;
    |                                     ^^^^^^^^^^
    |
   ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:978:5
    |
978 |     macro_rules! format_args {
    |     ------------------------ similarly named macro `format_args` defined here
    |
help: a macro with a similar name exists
    |
115 |                      .map_err(|err| format_args!("HTTP POST error: {}", err))?;
    |                                     ~~~~~~~~~~~
help: consider importing one of these items
    |
3   + use anyhow::format_err;
    |
3   + use pgp::format_err;
    |

error: cannot find macro `format_err` in this scope
   --> src/oauth2.rs:119:39
    |
119 |                        .map_err(|err| format_err!("Can't get response text: {}", err))?;
    |                                       ^^^^^^^^^^
    |
   ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:978:5
    |
978 |     macro_rules! format_args {
    |     ------------------------ similarly named macro `format_args` defined here
    |
help: a macro with a similar name exists
    |
119 |                        .map_err(|err| format_args!("Can't get response text: {}", err))?;
    |                                       ~~~~~~~~~~~
help: consider importing one of these items
    |
3   + use anyhow::format_err;
    |
3   + use pgp::format_err;
    |

error: cannot find macro `format_err` in this scope
   --> src/oauth2.rs:122:20
    |
122 |         return Err(format_err!("Failed with status {}", text));
    |                    ^^^^^^^^^^
    |
   ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:978:5
    |
978 |     macro_rules! format_args {
    |     ------------------------ similarly named macro `format_args` defined here
    |
help: a macro with a similar name exists
    |
122 |         return Err(format_args!("Failed with status {}", text));
    |                    ~~~~~~~~~~~
help: consider importing one of these items
    |
3   + use anyhow::format_err;
    |
3   + use pgp::format_err;
    |

error: cannot find macro `format_err` in this scope
   --> src/oauth2.rs:126:24
    |
126 |         .map_err(|err| format_err!("Failed to parse OAuth2 response: {}", err))?;
    |                        ^^^^^^^^^^
    |
   ::: /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:978:5
    |
978 |     macro_rules! format_args {
    |     ------------------------ similarly named macro `format_args` defined here
    |
help: a macro with a similar name exists
    |
126 |         .map_err(|err| format_args!("Failed to parse OAuth2 response: {}", err))?;
    |                        ~~~~~~~~~~~
help: consider importing one of these items
    |
3   + use anyhow::format_err;
    |
3   + use pgp::format_err;
    |

error[E0425]: cannot find function `get_info` in this scope
  --> src/oauth2.rs:87:22
   |
87 |     let oauth2_url = get_info(addr)?.await?;
   |                      ^^^^^^^^ not found in this scope
   |
help: consider importing this function
   |
3  + use crate::context::get_info;
   |

error[E0425]: cannot find function `get_client` in this scope
   --> src/oauth2.rs:110:18
    |
110 |     let client = get_client(None)?;
    |                  ^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
3   + use crate::net::http::get_client;
    |

error[E0412]: cannot find type `OAuth2Response` in this scope
   --> src/oauth2.rs:125:17
    |
125 |     let parsed: OAuth2Response = serde_json::from_str(&text)
    |                 ^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: function `time` is not a crate or module
  --> src/oauth2.rs:88:99
   |
88 |     let regenerate_token = (context.sql.get_raw_config_int64("oauth2_timestamp_expires").await? - time::seconds() < 10) || regenerate;
   |                                                                                                   ^^^^ function `time` is not a crate or module
   |
help: there is a crate or module with a similar name
   |
88 |     let regenerate_token = (context.sql.get_raw_config_int64("oauth2_timestamp_expires").await? - mime::seconds() < 10) || regenerate;
   |                                                                                                   ~~~~

error[E0308]: mismatched types
  --> src/oauth2.rs:88:117
   |
88 |     let regenerate_token = (context.sql.get_raw_config_int64("oauth2_timestamp_expires").await? - time::seconds() < 10) || regenerate;
   |                             -------------------------------------------------------------------------------------   ^^ expected `Option<i64>`, found integer
   |                             |
   |                             expected because this is `std::option::Option<i64>`
   |
   = note: expected enum `std::option::Option<i64>`
              found type `{integer}`
help: try wrapping the expression in `Some`
   |
88 |     let regenerate_token = (context.sql.get_raw_config_int64("oauth2_timestamp_expires").await? - time::seconds() < Some(10)) || regenerate;
   |                                                                                                                     +++++  +

error[E0599]: no variant or associated item named `RefreshToken` found for enum `config::Config` in the current scope
  --> src/oauth2.rs:91:56
   |
91 |         let refresh_token = context.get_config(Config::RefreshToken).await?;
   |                                                        ^^^^^^^^^^^^ variant or associated item not found in `Config`
   |
  ::: src/config.rs:43:1
   |
43 | pub enum Config {
   | --------------- variant or associated item `RefreshToken` not found for this enum

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> src/oauth2.rs:87:9
   |
87 |     let oauth2_url = get_info(addr)?.await?;
   |         ^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `str`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> src/oauth2.rs:87:22
   |
87 |     let oauth2_url = get_info(addr)?.await?;
   |                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `str`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> src/oauth2.rs:87:22
   |
87 |     let oauth2_url = get_info(addr)?.await?;
   |                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
  --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
   |
85 | pub enum ControlFlow<B, C = ()> {
   |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> src/oauth2.rs:87:43
   |
87 |     let oauth2_url = get_info(addr)?.await?;
   |                                           ^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
  --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
   |
85 | pub enum ControlFlow<B, C = ()> {
   |                         ^^^^^^ required by this bound in `Break`
...
93 |     Break(B),
   |     ----- required by a bound in this variant

error[E0308]: mismatched types
   --> src/oauth2.rs:92:63
    |
92  |         let oauth2_url = replace_in_uri(&oauth2_url, "$CODE", &refresh_token).await?;
    |                          --------------                       ^^^^^^^^^^^^^^ expected `&str`, found `&Option<String>`
    |                          |
    |                          arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&std::option::Option<std::string::String>`
note: function defined here
   --> src/oauth2.rs:256:4
    |
256 | fn replace_in_uri(uri: &str, key: &str, value: &str) -> String {
    |    ^^^^^^^^^^^^^^                       -----------

error[E0277]: `std::string::String` is not a future
  --> src/oauth2.rs:92:79
   |
92 |         let oauth2_url = replace_in_uri(&oauth2_url, "$CODE", &refresh_token).await?;
   |                          ---------------------------------------------------- ^^^^^ `std::string::String` is not a future
   |                          |
   |                          this call returns `std::string::String`
   |
   = help: the trait `futures::Future` is not implemented for `std::string::String`, which is required by `std::string::String: std::future::IntoFuture`
   = note: std::string::String must be a future or must implement `IntoFuture` to be awaited
   = note: required for `std::string::String` to implement `std::future::IntoFuture`
help: remove the `.await`
   |
92 -         let oauth2_url = replace_in_uri(&oauth2_url, "$CODE", &refresh_token).await?;
92 +         let oauth2_url = replace_in_uri(&oauth2_url, "$CODE", &refresh_token)?;
   |
help: alternatively, consider making `fn replace_in_uri` asynchronous
   |
256| async fn replace_in_uri(uri: &str, key: &str, value: &str) -> String {
   | +++++

error[E0308]: mismatched types
    --> src/oauth2.rs:96:38
     |
95   |         data.insert("grant_type", "refresh_token");
     |         ----                      --------------- this argument has type `&str`...
     |         |
     |         ... which causes `data` to have type `HashMap<&str, &str>`
96   |         data.insert("refresh_token", &refresh_token);
     |              ------                  ^^^^^^^^^^^^^^ expected `&str`, found `&Option<String>`
     |              |
     |              arguments to this method are incorrect
     |
     = note: expected reference `&str`
                found reference `&std::option::Option<std::string::String>`
help: the return type of this call is `&std::option::Option<std::string::String>` due to the type of the argument passed
    --> src/oauth2.rs:96:9
     |
96   |         data.insert("refresh_token", &refresh_token);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------^
     |                                      |
     |                                      this argument influences the return type of `insert`
note: method defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1104:12
     |
1104 |     pub fn insert(&mut self, k: K, v: V) -> Option<V> {
     |            ^^^^^^

error[E0599]: no variant or associated item named `add_client_id_and_secret` found for enum `Oauth2Authorizer` in the current scope
  --> src/oauth2.rs:98:27
   |
98 |         Oauth2Authorizer::add_client_id_and_secret(context, &mut data, addr).await?;
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `Oauth2Authorizer`
   |
  ::: src/provider.rs:71:1
   |
71 | pub enum Oauth2Authorizer {
   | ------------------------- variant or associated item `add_client_id_and_secret` not found for this enum

error[E0599]: no variant or associated item named `add_client_id_and_secret` found for enum `Oauth2Authorizer` in the current scope
   --> src/oauth2.rs:106:27
    |
106 |         Oauth2Authorizer::add_client_id_and_secret(context, &mut data, addr).await?;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `Oauth2Authorizer`
    |
   ::: src/provider.rs:71:1
    |
71  | pub enum Oauth2Authorizer {
    | ------------------------- variant or associated item `add_client_id_and_secret` not found for this enum

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/oauth2.rs:128:67
    |
128 |     context.sql.set_raw_config_int64("oauth2_timestamp_expires", &time::seconds().await? + parsed.expires_in).await?;
    |                                                                   ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
128 |     context.sql.set_raw_config_int64("oauth2_timestamp_expires", &mime::seconds().await? + parsed.expires_in).await?;
    |                                                                   ~~~~

error[E0308]: mismatched types
   --> src/oauth2.rs:131:62
    |
131 |     context.sql.set_raw_config("oauth2_userdefined_account", addr).await?;
    |                 --------------                               ^^^^ expected `Option<&str>`, found `&str`
    |                 |
    |                 arguments to this method are incorrect
    |
    = note:   expected enum `std::option::Option<&str>`
            found reference `&str`
note: method defined here
   --> src/sql.rs:576:18
    |
576 |     pub async fn set_raw_config(&self, key: &str, value: Option<&str>) -> Result<()> {
    |                  ^^^^^^^^^^^^^^                   -------------------
help: try wrapping the expression in `Some`
    |
131 |     context.sql.set_raw_config("oauth2_userdefined_account", Some(addr)).await?;
    |                                                              +++++    +

Some errors have detailed explanations: E0277, E0308, E0412, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 21 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 21 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

