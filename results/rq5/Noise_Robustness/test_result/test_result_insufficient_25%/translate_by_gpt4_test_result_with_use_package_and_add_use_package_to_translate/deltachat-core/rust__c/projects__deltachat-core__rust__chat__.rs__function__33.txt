Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:925:43
    |
925 |             if let Some(old_draft) = self.get_draft(context).await? {
    |                                           ^^^^^^^^^--------- an argument of type `ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:856:21
    |
856 | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
    |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
    |
925 |             if let Some(old_draft) = self.get_draft(context, /* ChatId */).await? {
    |                                                    ~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: can't compare `u32` with `ChatId`
   --> src/chat.rs:860:18
    |
860 |     if chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL {
    |                  ^^ no implementation for `u32 < ChatId` and `u32 > ChatId`
    |
    = help: the trait `PartialOrd<ChatId>` is not implemented for `u32`
    = help: the following other types implement trait `PartialOrd<Rhs>`:
              <u32 as PartialOrd>
              <u32 as PartialOrd<precis_core::Codepoints>>

error[E0425]: cannot find function `get_draft_msg_id` in this scope
   --> src/chat.rs:864:20
    |
864 |     draft_msg_id = get_draft_msg_id(context, chat_id).await?;
    |                    ^^^^^^^^^^^^^^^^
    |
help: consider using the method on `Self`
    |
864 |     draft_msg_id = self.get_draft_msg_id(context, chat_id).await?;
    |                    +++++
help: a local variable with a similar name exists
    |
864 |     draft_msg_id = draft_msg_id(context, chat_id).await?;
    |                    ~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chat.rs:869:53
    |
869 |     draft_msg = Some(Message::load_from_db(context, draft_msg_id).await?);
    |                      ---------------------          ^^^^^^^^^^^^ expected `MsgId`, found integer
    |                      |
    |                      arguments to this function are incorrect
    |
note: associated function defined here
   --> src/message.rs:479:18
    |
479 |     pub async fn load_from_db(context: &Context, id: MsgId) -> Result<Message> {
    |                  ^^^^^^^^^^^^                    ---------
help: try wrapping the expression in `message::MsgId` (its field is private, but it's local to this crate and its privacy can be changed)
    |
869 |     draft_msg = Some(Message::load_from_db(context, message::MsgId(draft_msg_id)).await?);
    |                                                     +++++++++++++++            +

error[E0616]: field `0` of struct `MsgId` is private
   --> src/chat.rs:871:32
    |
871 |         Some(msg) => if msg.id.0 == 0 {
    |                                ^ private field

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:1800:35
     |
1800 |         let draft = match self.id.get_draft(context).await? {
     |                                   ^^^^^^^^^--------- an argument of type `ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
1800 |         let draft = match self.id.get_draft(context, /* ChatId */).await? {
     |                                            ~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:925:43
    |
925 |             if let Some(old_draft) = self.get_draft(context).await? {
    |                                           ^^^^^^^^^--------- an argument of type `chat::ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:856:21
    |
856 | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
    |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
    |
925 |             if let Some(old_draft) = self.get_draft(context, /* chat::ChatId */).await? {
    |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: can't compare `u32` with `chat::ChatId`
   --> src/chat.rs:860:18
    |
860 |     if chat_id.0 <= DC_CHAT_ID_LAST_SPECIAL {
    |                  ^^ no implementation for `u32 < chat::ChatId` and `u32 > chat::ChatId`
    |
    = help: the trait `PartialOrd<chat::ChatId>` is not implemented for `u32`
    = help: the following other types implement trait `PartialOrd<Rhs>`:
              <u32 as PartialOrd>
              <u32 as PartialOrd<precis_core::Codepoints>>

error[E0616]: field `0` of struct `message::MsgId` is private
   --> src/chat.rs:871:32
    |
871 |         Some(msg) => if msg.id.0 == 0 {
    |                                ^ private field

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:1800:35
     |
1800 |         let draft = match self.id.get_draft(context).await? {
     |                                   ^^^^^^^^^--------- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
1800 |         let draft = match self.id.get_draft(context, /* chat::ChatId */).await? {
     |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0616.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/sql.rs:1133:36
     |
1133 |         let loaded_draft = chat.id.get_draft(&t).await.unwrap();
     |                                    ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
1133 |         let loaded_draft = chat.id.get_draft(&t, /* chat::ChatId */).await.unwrap();
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4697:29
     |
4697 |         let draft = chat.id.get_draft(&t).await.unwrap();
     |                             ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4697 |         let draft = chat.id.get_draft(&t, /* chat::ChatId */).await.unwrap();
     |                                      ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4704:45
     |
4704 |         let draft = DC_CHAT_ID_LAST_SPECIAL.get_draft(&t).await.unwrap();
     |                                             ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4704 |         let draft = DC_CHAT_ID_LAST_SPECIAL.get_draft(&t, /* chat::ChatId */).await.unwrap();
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4713:37
     |
4713 |         let draft = ChatId::new(42).get_draft(&t).await.unwrap();
     |                                     ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4713 |         let draft = ChatId::new(42).get_draft(&t, /* chat::ChatId */).await.unwrap();
     |                                              ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4725:29
     |
4725 |         let draft = chat_id.get_draft(&t).await.unwrap().unwrap();
     |                             ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4725 |         let draft = chat_id.get_draft(&t, /* chat::ChatId */).await.unwrap().unwrap();
     |                                      ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4739:25
     |
4739 |         assert!(chat_id.get_draft(&t).await?.is_some());
     |                         ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4739 |         assert!(chat_id.get_draft(&t, /* chat::ChatId */).await?.is_some());
     |                                  ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4744:25
     |
4744 |         assert!(chat_id.get_draft(&t).await?.is_some());
     |                         ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4744 |         assert!(chat_id.get_draft(&t, /* chat::ChatId */).await?.is_some());
     |                                  ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4747:25
     |
4747 |         assert!(chat_id.get_draft(&t).await?.is_none());
     |                         ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4747 |         assert!(chat_id.get_draft(&t, /* chat::ChatId */).await?.is_none());
     |                                  ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4759:36
     |
4759 |         assert_eq!(msg.id, chat_id.get_draft(&t).await?.unwrap().id);
     |                                    ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4759 |         assert_eq!(msg.id, chat_id.get_draft(&t, /* chat::ChatId */).await?.unwrap().id);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4782:46
     |
4782 |         assert_eq!(id_after_1st_set, chat_id.get_draft(&t).await?.unwrap().id);
     |                                              ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4782 |         assert_eq!(id_after_1st_set, chat_id.get_draft(&t, /* chat::ChatId */).await?.unwrap().id);
     |                                                       ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4793:28
     |
4793 |         let test = chat_id.get_draft(&t).await?.unwrap();
     |                            ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
4793 |         let test = chat_id.get_draft(&t, /* chat::ChatId */).await?.unwrap();
     |                                     ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6527:37
     |
6527 |         let mut msg = alice_chat.id.get_draft(&alice).await.unwrap().unwrap();
     |                                     ^^^^^^^^^-------- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
6527 |         let mut msg = alice_chat.id.get_draft(&alice, /* chat::ChatId */).await.unwrap().unwrap();
     |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1978:33
     |
1978 |         let mut draft = chat_id.get_draft(&alice).await?.unwrap();
     |                                 ^^^^^^^^^-------- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
1978 |         let mut draft = chat_id.get_draft(&alice, /* chat::ChatId */).await?.unwrap();
     |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2451:43
     |
2451 |         let mut alice_msg = alice_chat.id.get_draft(&alice).await?.unwrap();
     |                                           ^^^^^^^^^-------- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
2451 |         let mut alice_msg = alice_chat.id.get_draft(&alice, /* chat::ChatId */).await?.unwrap();
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/webxdc.rs:1325:32
     |
1325 |         let instance = chat_id.get_draft(&t).await?.unwrap();
     |                                ^^^^^^^^^---- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
1325 |         let instance = chat_id.get_draft(&t, /* chat::ChatId */).await?.unwrap();
     |                                         ~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/webxdc.rs:1834:48
     |
1834 |         let mut alice_instance = alice_chat_id.get_draft(&alice).await?.unwrap();
     |                                                ^^^^^^^^^-------- an argument of type `chat::ChatId` is missing
     |
note: method defined here
    --> src/chat.rs:856:21
     |
856  | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
     |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
     |
1834 |         let mut alice_instance = alice_chat_id.get_draft(&alice, /* chat::ChatId */).await?.unwrap();
     |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/tests/verified_chats.rs:702:31
    |
702 |             alice_bob_chat.id.get_draft(&alice).await?.unwrap().text,
    |                               ^^^^^^^^^-------- an argument of type `chat::ChatId` is missing
    |
note: method defined here
   --> src/chat.rs:856:21
    |
856 | pub(crate) async fn get_draft(self, context: &Context, chat_id: ChatId) -> Result<Option<Message>> {
    |                     ^^^^^^^^^       -----------------  ---------------
help: provide the argument
    |
702 |             alice_bob_chat.id.get_draft(&alice, /* chat::ChatId */).await?.unwrap().text,
    |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: could not compile `deltachat` (lib test) due to 23 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

