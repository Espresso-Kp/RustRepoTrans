Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
   --> src/location.rs:296:13
    |
296 |             paramsv![begin, until, chat_id_i],
    |             ^^^^^^^ help: a macro with a similar name exists: `params`
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
    |
176 | macro_rules! params {
    | ------------------- similarly named macro `params` defined here

error[E0433]: failed to resolve: use of undeclared type `SystemTime`
   --> src/location.rs:277:15
    |
277 |     let now = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH)?.as_secs();
    |               ^^^^^^^^^^ use of undeclared type `SystemTime`
    |
help: consider importing one of these items
    |
13  + use crate::tools::SystemTime;
    |
13  + use std::time::SystemTime;
    |

error[E0433]: failed to resolve: use of undeclared type `SystemTime`
   --> src/location.rs:277:48
    |
277 |     let now = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH)?.as_secs();
    |                                                ^^^^^^^^^^ use of undeclared type `SystemTime`
    |
help: consider importing one of these items
    |
13  + use crate::tools::SystemTime;
    |
13  + use std::time::SystemTime;
    |

error[E0425]: cannot find value `DC_CHAT_ID_LAST_SPECIAL` in this scope
   --> src/location.rs:282:65
    |
282 |     if context.is_special() || seconds < 0 || chat_id <= ChatId(DC_CHAT_ID_LAST_SPECIAL) {
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this constant
    |
13  + use crate::constants::DC_CHAT_ID_LAST_SPECIAL;
    |

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/location.rs:308:43
    |
308 |             context.stock_string_repl_str(StockMessage::MsgLocationEnabled, "").await,
    |                                           ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
13  + use crate::stock_str::StockMessage;
    |

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/location.rs:315:40
    |
315 |                 .stock_string_repl_str(StockMessage::MsgLocationDisabled, "")
    |                                        ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
13  + use crate::stock_str::StockMessage;
    |

error[E0425]: cannot find function `add_device_msg_with_body` in module `chat`
   --> src/location.rs:318:15
    |
318 |         chat::add_device_msg_with_body(context, chat_id, &stock_str, None)
    |               ^^^^^^^^^^^^^^^^^^^^^^^^ not found in `chat`

error[E0433]: failed to resolve: use of undeclared type `Action`
   --> src/location.rs:327:40
    |
327 |         schedule_action(context, when, Action::MaybeSendLocationsEnded, 0, 0, "")
    |                                        ^^^^^^ use of undeclared type `Action`
    |
help: an enum with a similar name exists
    |
327 |         schedule_action(context, when, Option::MaybeSendLocationsEnded, 0, 0, "")
    |                                        ~~~~~~
help: consider importing this struct
    |
13  + use reqwest::redirect::Action;
    |

error[E0599]: no method named `is_special` found for reference `&context::Context` in the current scope
   --> src/location.rs:282:16
    |
282 |     if context.is_special() || seconds < 0 || chat_id <= ChatId(DC_CHAT_ID_LAST_SPECIAL) {
    |                ^^^^^^^^^^ method not found in `&Context`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `is_special`, perhaps you need to implement it:
            candidate #1: `aho_corasick::automaton::Automaton`

error[E0423]: cannot initialize a tuple struct which contains private fields
   --> src/location.rs:282:58
    |
282 |     if context.is_special() || seconds < 0 || chat_id <= ChatId(DC_CHAT_ID_LAST_SPECIAL) {
    |                                                          ^^^^^^
    |
note: constructor is not visible here due to private fields
   --> src/chat.rs:166:19
    |
166 | pub struct ChatId(u32);
    |                   ^^^ private field
help: consider making the field publicly accessible
   --> src/chat.rs:166:19
    |
166 | pub struct ChatId(pub u32);
    |                   +++

error[E0277]: the trait bound `i64: From<ChatId>` is not satisfied
   --> src/location.rs:286:34
    |
286 |     let chat_id_i: i64 = chat_id.into();
    |                                  ^^^^ the trait `From<ChatId>` is not implemented for `i64`, which is required by `ChatId: Into<_>`
    |
    = help: the following other types implement trait `From<T>`:
              <i64 as From<bool>>
              <i64 as From<i8>>
              <i64 as From<i16>>
              <i64 as From<i32>>
              <i64 as From<u8>>
              <i64 as From<u16>>
              <i64 as From<u32>>
              <i64 as From<std::num::NonZero<i64>>>
              <i64 as From<deranged::RangedI64<MIN, MAX>>>
    = note: required for `ChatId` to implement `Into<i64>`

error[E0308]: mismatched types
   --> src/location.rs:290:50
    |
290 |     let until = begin.and_then(|t| t.checked_add(secs_as_duration));
    |                                      ----------- ^^^^^^^^^^^^^^^^ expected `i64`, found `Duration`
    |                                      |
    |                                      arguments to this method are incorrect
    |
note: method defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/mod.rs:370:5
    |
370 | /     int_impl! {
371 | |         Self = i64,
372 | |         ActualT = i64,
373 | |         UnsignedT = u64,
...   |
388 | |         bound_condition = "",
389 | |     }
    | |_____^
    = note: this error originates in the macro `int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `query_execute` found for struct `Sql` in the current scope
   --> src/location.rs:294:10
    |
292 | /     context
293 | |         .sql
294 | |         .query_execute(
    | |         -^^^^^^^^^^^^^ help: there is a method with a similar name: `execute`
    | |_________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `query_execute` not found for this struct

error[E0425]: cannot find function `dc_is_sending_locations_to_chat` in this scope
   --> src/location.rs:300:41
    |
300 |       is_sending_locations_before = match dc_is_sending_locations_to_chat(context, chat_id).await {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `is_sending_locations_to_chat`
...
340 | / pub async fn is_sending_locations_to_chat(
341 | |     context: &Context,
342 | |     chat_id: Option<ChatId>,
343 | | ) -> Result<bool> {
...   |
364 | |     Ok(exists)
365 | | }
    | |_- similarly named function `is_sending_locations_to_chat` defined here

error[E0308]: mismatched types
   --> src/location.rs:306:15
    |
278 |     let mut msg: Option<Message> = None;
    |                  --------------- expected due to this type
...
306 |         msg = Message::new(Viewtype::Text);
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<Message>`, found `Message`
    |
    = note: expected enum `std::option::Option<message::Message>`
             found struct `message::Message`
help: try wrapping the expression in `Some`
    |
306 |         msg = Some(Message::new(Viewtype::Text));
    |               +++++                            +

error[E0599]: no method named `set_text` found for enum `std::option::Option` in the current scope
    --> src/location.rs:307:13
     |
307  |         msg.set_text(Some(
     |         ----^^^^^^^^ method not found in `Option<Message>`
     |
note: the method `set_text` exists on the type `message::Message`
    --> src/message.rs:1048:5
     |
1048 |     pub fn set_text(&mut self, text: String) {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `message::Message` value, panicking if the value is an `Option::None`
     |
307  |         msg.expect("REASON").set_text(Some(
     |            +++++++++++++++++

error[E0277]: the trait bound `i64: From<chat::ChatId>` is not satisfied
   --> src/location.rs:286:34
    |
286 |     let chat_id_i: i64 = chat_id.into();
    |                                  ^^^^ the trait `From<chat::ChatId>` is not implemented for `i64`, which is required by `chat::ChatId: Into<_>`
    |
    = help: the following other types implement trait `From<T>`:
              <i64 as From<bool>>
              <i64 as From<i8>>
              <i64 as From<i16>>
              <i64 as From<i32>>
              <i64 as From<u8>>
              <i64 as From<u16>>
              <i64 as From<u32>>
              <i64 as From<std::num::NonZero<i64>>>
              <i64 as From<deranged::RangedI64<MIN, MAX>>>
    = note: required for `chat::ChatId` to implement `Into<i64>`

error[E0599]: no method named `stock_string_repl_str` found for reference `&context::Context` in the current scope
   --> src/location.rs:308:21
    |
308 |             context.stock_string_repl_str(StockMessage::MsgLocationEnabled, "").await,
    |                     ^^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0609]: no field `param` on type `std::option::Option<message::Message>`
   --> src/location.rs:310:13
    |
310 |         msg.param.set_cmd(SystemMessage::LocationStreamingEnabled);
    |             ^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
310 |         msg.unwrap().param.set_cmd(SystemMessage::LocationStreamingEnabled);
    |             +++++++++

error[E0308]: mismatched types
    --> src/location.rs:311:42
     |
311  |         chat::send_msg(context, chat_id, &mut msg).await?;
     |         --------------                   ^^^^^^^^ expected `&mut Message`, found `&mut Option<Message>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected mutable reference `&mut message::Message`
                found mutable reference `&mut std::option::Option<message::Message>`
note: function defined here
    --> src/chat.rs:2793:14
     |
2793 | pub async fn send_msg(context: &Context, chat_id: ChatId, msg: &mut Message) -> Result<MsgId> {
     |              ^^^^^^^^                                     -----------------

error[E0599]: no method named `query_execute` found for struct `sql::Sql` in the current scope
   --> src/location.rs:294:10
    |
292 | /     context
293 | |         .sql
294 | |         .query_execute(
    | |         -^^^^^^^^^^^^^ help: there is a method with a similar name: `execute`
    | |_________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `query_execute` not found for this struct

error[E0599]: no method named `stock_string_repl_str` found for reference `&context::Context` in the current scope
   --> src/location.rs:315:18
    |
314 | /             context
315 | |                 .stock_string_repl_str(StockMessage::MsgLocationDisabled, "")
    | |                 -^^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`
    | |_________________|
    | 

error[E0277]: `()` is not a future
   --> src/location.rs:322:58
    |
322 |     context.emit_event(EventType::ChatModified(chat_id)).await;
    |                                                         -^^^^^
    |                                                         ||
    |                                                         |`()` is not a future
    |                                                         help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `()`, which is required by `(): std::future::IntoFuture`
    = note: () must be a future or must implement `IntoFuture` to be awaited
    = note: required for `()` to implement `std::future::IntoFuture`

error[E0425]: cannot find function `schedule_maybe_send_locations` in this scope
   --> src/location.rs:325:9
    |
325 |         schedule_maybe_send_locations(context, 0).await?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `maybe_send_locations`
...
797 | async fn maybe_send_locations(context: &Context) -> Result<Option<u64>> {
    | ----------------------------------------------------------------------- similarly named function `maybe_send_locations` defined here

error[E0277]: `i64` is not a future
   --> src/location.rs:326:27
    |
326 |         let when = time().await + Duration::from_secs((seconds + 1) as u64);
    |                    ------ ^^^^^ `i64` is not a future
    |                    |
    |                    this call returns `i64`
    |
    = help: the trait `futures::Future` is not implemented for `i64`, which is required by `i64: std::future::IntoFuture`
    = note: i64 must be a future or must implement `IntoFuture` to be awaited
    = note: required for `i64` to implement `std::future::IntoFuture`
help: remove the `.await`
    |
326 -         let when = time().await + Duration::from_secs((seconds + 1) as u64);
326 +         let when = time() + Duration::from_secs((seconds + 1) as u64);
    |
help: alternatively, consider making `fn time` asynchronous
   --> src/tools.rs:466:11
    |
466 | pub(crate) async fn time() -> i64 {
    |            +++++

error[E0425]: cannot find function `schedule_action` in this scope
   --> src/location.rs:327:9
    |
327 |         schedule_action(context, when, Action::MaybeSendLocationsEnded, 0, 0, "")
    |         ^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0277, E0308, E0423, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 24 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 24 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

