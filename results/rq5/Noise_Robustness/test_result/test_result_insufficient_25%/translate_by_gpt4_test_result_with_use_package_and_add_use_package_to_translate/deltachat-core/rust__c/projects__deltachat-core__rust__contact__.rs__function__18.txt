Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `new_blocking` in this scope
   --> src/contact.rs:620:22
    |
620 |         stmt.bind(1, new_blocking);
    |                      ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `contact_id` in this scope
   --> src/contact.rs:621:22
    |
55  | pub struct ContactId(u32);
    | -------------------------- similarly named tuple struct `ContactId` defined here
...
621 |         stmt.bind(2, contact_id);
    |                      ^^^^^^^^^^ help: a tuple struct with a similar name exists: `ContactId`

error[E0425]: cannot find value `SQLITE_DONE` in this scope
   --> src/contact.rs:622:34
    |
622 |         if stmt.step().await? != SQLITE_DONE {
    |                                  ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `new_blocking` in this scope
   --> src/contact.rs:631:22
    |
631 |         stmt.bind(1, new_blocking);
    |                      ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `contact_id` in this scope
   --> src/contact.rs:633:22
    |
55  | pub struct ContactId(u32);
    | -------------------------- similarly named tuple struct `ContactId` defined here
...
633 |         stmt.bind(3, contact_id);
    |                      ^^^^^^^^^^ help: a tuple struct with a similar name exists: `ContactId`

error[E0425]: cannot find value `SQLITE_DONE` in this scope
   --> src/contact.rs:634:34
    |
634 |         if stmt.step().await? != SQLITE_DONE {
    |                                  ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `contact_id` in this scope
   --> src/contact.rs:638:41
    |
55  | pub struct ContactId(u32);
    | -------------------------- similarly named tuple struct `ContactId` defined here
...
638 |         dc_marknoticed_contact(context, contact_id).await?;
    |                                         ^^^^^^^^^^ help: a tuple struct with a similar name exists: `ContactId`

error[E0599]: no function or associated item named `new` found for struct `Contact` in the current scope
   --> src/contact.rs:606:28
    |
358 | pub struct Contact {
    | ------------------ function or associated item `new` not found for this struct
...
606 |     let contact = Contact::new(context.clone());
    |                            ^^^ function or associated item not found in `Contact`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `iroh_metrics::core::Metric`
            candidate #20: `bitvec::store::BitStore`
            candidate #21: `radium::Radium`
            candidate #22: `netlink_sys::async_socket::AsyncSocket`
            candidate #23: `nonzero_ext::NonZero`
            candidate #24: `Allocable`
            candidate #25: `AnyBoxConstructor`
            candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
   --> src/contact.rs:608:16
    |
608 |     if context.is_null() || context.magic != Context::MAGIC || id.0 <= Contact::ID_LAST_SPECIAL {
    |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/contact.rs:608:37
    |
608 |     if context.is_null() || context.magic != Context::MAGIC || id.0 <= Contact::ID_LAST_SPECIAL {
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no associated item named `MAGIC` found for struct `context::Context` in the current scope
   --> src/contact.rs:608:55
    |
608 |     if context.is_null() || context.magic != Context::MAGIC || id.0 <= Contact::ID_LAST_SPECIAL {
    |                                                       ^^^^^ associated item not found in `Context`
    |
   ::: src/context.rs:209:1
    |
209 | pub struct Context {
    | ------------------ associated item `MAGIC` not found for this struct
    |
note: if you're trying to build a new `context::Context`, consider using `context::Context::with_blobdir` which returns `std::result::Result<context::Context, anyhow::Error>`
   --> src/context.rs:409:5
    |
409 | /     pub(crate) fn with_blobdir(
410 | |         dbfile: PathBuf,
411 | |         blobdir: PathBuf,
412 | |         id: u32,
...   |
415 | |         push_subscriber: PushSubscriber,
416 | |     ) -> Result<Context> {
    | |________________________^

error[E0599]: no associated item named `ID_LAST_SPECIAL` found for struct `Contact` in the current scope
   --> src/contact.rs:608:81
    |
358 | pub struct Contact {
    | ------------------ associated item `ID_LAST_SPECIAL` not found for this struct
...
608 |     if context.is_null() || context.magic != Context::MAGIC || id.0 <= Contact::ID_LAST_SPECIAL {
    |                                                                                 ^^^^^^^^^^^^^^^ associated item not found in `Contact`

error[E0277]: the trait bound `str: StdError` is not satisfied
   --> src/contact.rs:609:31
    |
609 |         return Err(From::from("Invalid contact id"));
    |                    ---------- ^^^^^^^^^^^^^^^^^^^^ the trait `StdError` is not implemented for `str`, which is required by `anyhow::Error: From<&str>`
    |                    |
    |                    required by a bound introduced by this call
    |
    = help: the trait `From<E>` is implemented for `anyhow::Error`
    = note: required for `&str` to implement `StdError`
    = note: required for `anyhow::Error` to implement `From<&str>`

error[E0425]: cannot find function `dc_contact_load_from_db` in this scope
   --> src/contact.rs:612:8
    |
612 |     if dc_contact_load_from_db(&contact, &context.sql, id)
    |        ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/contact.rs:617:14
    |
615 |           let stmt = context
    |  ____________________-
616 | |             .sql
617 | |             .prepare("UPDATE contacts SET blocked=? WHERE id=?")
    | |             -^^^^^^^ method not found in `Sql`
    | |_____________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0277]: the trait bound `str: StdError` is not satisfied
   --> src/contact.rs:623:35
    |
623 |             return Err(From::from("Failed to update contact blocking status"));
    |                        ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `StdError` is not implemented for `str`, which is required by `anyhow::Error: From<&str>`
    |                        |
    |                        required by a bound introduced by this call
    |
    = help: the trait `From<E>` is implemented for `anyhow::Error`
    = note: required for `&str` to implement `StdError`
    = note: required for `anyhow::Error` to implement `From<&str>`

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/contact.rs:629:14
    |
627 |           let stmt = context
    |  ____________________-
628 | |             .sql
629 | |             .prepare("UPDATE chats SET blocked=? WHERE type=? AND id IN (SELECT chat_id FROM chats_contacts WHERE contact_id=?)")
    | |             -^^^^^^^ method not found in `Sql`
    | |_____________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0433]: failed to resolve: use of undeclared type `ChatType`
   --> src/contact.rs:632:22
    |
632 |         stmt.bind(2, ChatType::Single);
    |                      ^^^^^^^^
    |                      |
    |                      use of undeclared type `ChatType`
    |                      help: an enum with a similar name exists: `Chattype`

error[E0277]: the trait bound `str: StdError` is not satisfied
   --> src/contact.rs:635:35
    |
635 |             return Err(From::from("Failed to update chat blocking status"));
    |                        ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `StdError` is not implemented for `str`, which is required by `anyhow::Error: From<&str>`
    |                        |
    |                        required by a bound introduced by this call
    |
    = help: the trait `From<E>` is implemented for `anyhow::Error`
    = note: required for `&str` to implement `StdError`
    = note: required for `anyhow::Error` to implement `From<&str>`

error[E0425]: cannot find function `dc_marknoticed_contact` in this scope
   --> src/contact.rs:638:9
    |
638 |         dc_marknoticed_contact(context, contact_id).await?;
    |         ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> src/contact.rs:643:28
    |
643 |         context.emit_event(EventType::ContactsChanged)?;
    |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `EventType`, found enum constructor
    |                 |
    |                 arguments to this method are incorrect
    |
   ::: src/events/payload.rs:188:5
    |
188 |     ContactsChanged(Option<ContactId>),
    |     --------------- `ContactsChanged` defines an enum variant constructor here, which should be called
    |
    = note:          expected enum `payload::EventType`
            found enum constructor `fn(std::option::Option<ContactId>) -> payload::EventType {payload::EventType::ContactsChanged}`
note: method defined here
   --> src/context.rs:595:12
    |
595 |     pub fn emit_event(&self, event: EventType) {
    |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
    |
643 |         context.emit_event(EventType::ContactsChanged(/* std::option::Option<ContactId> */))?;
    |                                                      ++++++++++++++++++++++++++++++++++++++

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/contact.rs:643:9
    |
643 |         context.emit_event(EventType::ContactsChanged)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `()`
    |
    = help: the trait `Try` is not implemented for `()`

error[E0599]: no function or associated item named `new` found for struct `contact::Contact` in the current scope
   --> src/contact.rs:606:28
    |
358 | pub struct Contact {
    | ------------------ function or associated item `new` not found for this struct
...
606 |     let contact = Contact::new(context.clone());
    |                            ^^^ function or associated item not found in `Contact`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `sysinfo::traits::SystemExt`
            candidate #20: `gimli::read::lookup::PubStuffEntry`
            candidate #21: `iroh_metrics::core::Metric`
            candidate #22: `bitvec::store::BitStore`
            candidate #23: `radium::Radium`
            candidate #24: `netlink_sys::async_socket::AsyncSocket`
            candidate #25: `nonzero_ext::NonZero`
            candidate #26: `Allocable`
            candidate #27: `AnyBoxConstructor`
            candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
            candidate #29: `plotters::style::font::FontData`

error[E0599]: no associated item named `ID_LAST_SPECIAL` found for struct `contact::Contact` in the current scope
   --> src/contact.rs:608:81
    |
358 | pub struct Contact {
    | ------------------ associated item `ID_LAST_SPECIAL` not found for this struct
...
608 |     if context.is_null() || context.magic != Context::MAGIC || id.0 <= Contact::ID_LAST_SPECIAL {
    |                                                                                 ^^^^^^^^^^^^^^^ associated item not found in `Contact`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:617:14
    |
615 |           let stmt = context
    |  ____________________-
616 | |             .sql
617 | |             .prepare("UPDATE contacts SET blocked=? WHERE id=?")
    | |             -^^^^^^^ method not found in `sql::Sql`
    | |_____________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:629:14
    |
627 |           let stmt = context
    |  ____________________-
628 | |             .sql
629 | |             .prepare("UPDATE chats SET blocked=? WHERE type=? AND id IN (SELECT chat_id FROM chats_contacts WHERE contact_id=?)")
    | |             -^^^^^^^ method not found in `sql::Sql`
    | |_____________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0308]: mismatched types
   --> src/contact.rs:643:28
    |
643 |         context.emit_event(EventType::ContactsChanged)?;
    |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `EventType`, found enum constructor
    |                 |
    |                 arguments to this method are incorrect
    |
   ::: src/events/payload.rs:188:5
    |
188 |     ContactsChanged(Option<ContactId>),
    |     --------------- `ContactsChanged` defines an enum variant constructor here, which should be called
    |
    = note:          expected enum `payload::EventType`
            found enum constructor `fn(std::option::Option<contact::ContactId>) -> payload::EventType {payload::EventType::ContactsChanged}`
note: method defined here
   --> src/context.rs:595:12
    |
595 |     pub fn emit_event(&self, event: EventType) {
    |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
    |
643 |         context.emit_event(EventType::ContactsChanged(/* std::option::Option<contact::ContactId> */))?;
    |                                                      +++++++++++++++++++++++++++++++++++++++++++++++

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 22 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 22 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

