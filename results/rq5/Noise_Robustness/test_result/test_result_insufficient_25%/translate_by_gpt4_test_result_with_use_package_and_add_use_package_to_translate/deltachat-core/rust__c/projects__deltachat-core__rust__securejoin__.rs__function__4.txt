Fail
file path is :
projects/deltachat-core/rust/src/securejoin.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: expected one of `)`, `,`, `.`, `?`, or an operator, found `"vg-request-with-auth"`
   --> src/securejoin.rs:189:85
    |
189 |                 bob.send_handshake_msg(contact_chat_id, &own_fingerprint, join_vg ? "vg-request-with-auth" : "vc-request-with-auth",
    |                                                                                    -^^^^^^^^^^^^^^^^^^^^^^ expected one of `)`, `,`, `.`, `?`, or an operator
    |                                                                                    |
    |                                                                                    help: missing `,`

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `:`
   --> src/securejoin.rs:189:108
    |
189 |                 bob.send_handshake_msg(contact_chat_id, &own_fingerprint, join_vg ? "vg-request-with-auth" : "vc-request-with-auth",
    |                                                                                                            ^ expected one of `)`, `,`, `.`, `?`, or an operator

error[E0433]: failed to resolve: use of undeclared crate or module `constants`
   --> src/securejoin.rs:164:31
    |
164 |             if bob.expects != constants::DcBobExpected::DcBobExpecting::NeverIncoming {
    |                               ^^^^^^^^^ use of undeclared crate or module `constants`

error[E0425]: cannot find function `sleep` in this scope
   --> src/securejoin.rs:198:17
    |
198 |                 sleep(Duration::from_millis(300)).await;
    |                 ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
3   + use libc::sleep;
    |
3   + use std::thread::sleep;
    |
3   + use tokio::time::sleep;
    |

error[E0433]: failed to resolve: use of undeclared type `Duration`
   --> src/securejoin.rs:198:23
    |
198 |                 sleep(Duration::from_millis(300)).await;
    |                       ^^^^^^^^ use of undeclared type `Duration`
    |
help: consider importing one of these items
    |
3   + use chrono::Duration;
    |
3   + use core::time::Duration;
    |
3   + use std::time::Duration;
    |
3   + use tokio::time::Duration;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> src/securejoin.rs:155:18
    |
155 |     let qrcode = check_qr(qr)?;
    |                  ^^^^^^^^ -- an argument of type `&context::Context` is missing
    |
note: function defined here
   --> src/qr.rs:252:14
    |
252 | pub async fn check_qr(context: &Context, qr: &str) -> Result<Qr> {
    |              ^^^^^^^^ -----------------  --------
help: provide the argument
    |
155 |     let qrcode = check_qr(/* &context::Context */, qr)?;
    |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/securejoin.rs:155:18
    |
155 |     let qrcode = check_qr(qr)?;
    |                  ^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl futures::Future<Output = std::result::Result<Qr, anyhow::Error>>`
    |
    = help: the trait `Try` is not implemented for `impl futures::Future<Output = std::result::Result<Qr, anyhow::Error>>`
help: consider `await`ing on the `Future`
    |
155 |     let qrcode = check_qr(qr).await?;
    |                              ++++++

error[E0308]: mismatched types
   --> src/securejoin.rs:158:61
    |
158 |         QrInvite::Contact { contact_id, .. } => ChatId::new(contact_id),
    |                                                 ----------- ^^^^^^^^^^ expected `u32`, found `ContactId`
    |                                                 |
    |                                                 arguments to this function are incorrect
    |
note: associated function defined here
   --> src/chat.rs:170:18
    |
170 |     pub const fn new(id: u32) -> ChatId {
    |                  ^^^ -------

error[E0609]: no field `bob` on type `&context::Context`
   --> src/securejoin.rs:162:20
    |
162 |     match &context.bob {
    |                    ^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `get_state` found for enum `QrInvite` in the current scope
   --> src/securejoin.rs:171:26
    |
171 |     let join_vg = qrcode.get_state() == QrInvite::Contact;
    |                          ^^^^^^^^^ method not found in `QrInvite`
    |
   ::: src/securejoin/qrinvite.rs:17:1
    |
17  | pub enum QrInvite {
    | ----------------- method `get_state` not found for this enum

error[E0533]: expected value, found struct variant `QrInvite::Contact`
   --> src/securejoin.rs:171:41
    |
171 |     let join_vg = qrcode.get_state() == QrInvite::Contact;
    |                                         ^^^^^^^^^^^^^^^^^ not a value

error[E0609]: no field `bob` on type `Arc<InnerContext>`
   --> src/securejoin.rs:174:19
    |
174 |     context.inner.bob.write().unwrap().status = 0;
    |                   ^^^ unknown field
    |
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0609]: no field `bob` on type `Arc<InnerContext>`
   --> src/securejoin.rs:176:19
    |
176 |     context.inner.bob.write().unwrap().qrcode = qrcode;
    |                   ^^^ unknown field
    |
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0609]: no field `bob` on type `&context::Context`
   --> src/securejoin.rs:178:42
    |
178 |     let contact_chat_id = match &context.bob {
    |                                          ^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no variant or associated item named `SecurejoinInviterProgress` found for enum `JoinerProgress` in the current scope
   --> src/securejoin.rs:185:47
    |
185 |                 bob.expects = JoinerProgress::SecurejoinInviterProgress(400);
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `JoinerProgress`
    |
   ::: src/securejoin/bob.rs:226:1
    |
226 | pub(crate) enum JoinerProgress {
    | ------------------------------ variant or associated item `SecurejoinInviterProgress` not found for this enum

error[E0433]: failed to resolve: use of undeclared crate or module `key`
   --> src/securejoin.rs:187:39
    |
187 |                 let own_fingerprint = key::get_self_fingerprint(context).await?;
    |                                       ^^^ use of undeclared crate or module `key`

error[E0599]: no method named `is_stopping` found for reference `&context::Context` in the current scope
   --> src/securejoin.rs:195:27
    |
195 |             while context.is_stopping() {
    |                           ^^^^^^^^^^^ help: there is a method with a similar name: `is_open`

warning: unreachable statement
   --> src/securejoin.rs:198:17
    |
196 |                 bail!("context shall stop ongoing");
    |                 ----------------------------------- any code following this expression is unreachable
197 |
198 |                 sleep(Duration::from_millis(300)).await;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement
    |
note: the lint level is defined here
   --> src/lib.rs:6:5
    |
6   |     unused,
    |     ^^^^^^
    = note: `#[warn(unreachable_code)]` implied by `#[warn(unused)]`

error[E0609]: no field `bob` on type `Arc<InnerContext>`
   --> src/securejoin.rs:201:30
    |
201 |             if context.inner.bob.write().unwrap().status == 1 {
    |                              ^^^ unknown field
    |
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `get_chat_id_by_grpid` found for reference `&context::Context` in the current scope
   --> src/securejoin.rs:203:29
    |
203 |                     context.get_chat_id_by_grpid(bob.qrcode.text2.as_ref().unwrap()).await?
    |                             ^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0609]: no field `bob` on type `Arc<InnerContext>`
   --> src/securejoin.rs:215:19
    |
215 |     context.inner.bob.write().unwrap().qrcode = None;
    |                   ^^^ unknown field
    |
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0308]: mismatched types
   --> src/securejoin.rs:221:8
    |
221 |     Ok(contact_chat_id)
    |     -- ^^^^^^^^^^^^^^^ expected `ChatId`, found `ContactId`
    |     |
    |     arguments to this enum variant are incorrect
    |
help: the type constructed contains `ContactId` due to the type of the argument passed
   --> src/securejoin.rs:221:5
    |
221 |     Ok(contact_chat_id)
    |     ^^^---------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0433, E0533, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 21 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/securejoin.rs:155:18
    |
155 |     let qrcode = check_qr(qr)?;
    |                  ^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl futures::Future<Output = std::result::Result<qr::Qr, anyhow::Error>>`
    |
    = help: the trait `Try` is not implemented for `impl futures::Future<Output = std::result::Result<qr::Qr, anyhow::Error>>`
help: consider `await`ing on the `Future`
    |
155 |     let qrcode = check_qr(qr).await?;
    |                              ++++++

error[E0308]: mismatched types
   --> src/securejoin.rs:221:8
    |
221 |     Ok(contact_chat_id)
    |     -- ^^^^^^^^^^^^^^^ expected `ChatId`, found `ContactId`
    |     |
    |     arguments to this enum variant are incorrect
    |
help: the type constructed contains `contact::ContactId` due to the type of the argument passed
   --> src/securejoin.rs:221:5
    |
221 |     Ok(contact_chat_id)
    |     ^^^---------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 21 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

