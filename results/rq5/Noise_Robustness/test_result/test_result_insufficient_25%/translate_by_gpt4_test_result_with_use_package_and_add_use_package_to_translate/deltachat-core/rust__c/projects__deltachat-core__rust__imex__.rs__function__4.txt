Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/imex.rs:217:52
    |
217 |     let setup_message_title = context.stock_string(StockMessage::AcSetupMsgSubject).await;
    |                                                    ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/imex.rs:218:55
    |
218 |     let mut setup_message_body = context.stock_string(StockMessage::AcSetupMsgBody).await;
    |                                                       ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

error[E0599]: no method named `shall_encrypt` found for reference `&context::Context` in the current scope
   --> src/imex.rs:195:49
    |
195 |     if !context.sql.is_open().await || !context.shall_encrypt() {
    |                                                 ^^^^^^^^^^^^^ method not found in `&Context`

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/imex.rs:199:28
    |
199 |     let curr_private_key = load_self_secret_key(context, self_addr).await?;
    |                            ^^^^^^^^^^^^^^^^^^^^        -----------
    |                                                        | |
    |                                                        | unexpected argument of type `std::option::Option<std::string::String>`
    |                                                        help: remove the extra argument
    |
note: function defined here
   --> src/key.rs:124:21
    |
124 | pub(crate) async fn load_self_secret_key(context: &Context) -> Result<SignedSecretKey> {
    |                     ^^^^^^^^^^^^^^^^^^^^ -----------------

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> src/imex.rs:209:23
    |
209 |     let encr_string = pgp::symm_encrypt(&context, passphrase, payload_key_asc).await?;
    |                       ^^^^^^^^^^^^^^^^^ --------              --------------- expected `&[u8]`, found `String`
    |                                         |
    |                                         unexpected argument of type `&&context::Context`
    |
note: function defined here
   --> src/pgp.rs:361:14
    |
361 | pub async fn symm_encrypt(passphrase: &str, plain: &[u8]) -> Result<String> {
    |              ^^^^^^^^^^^^ ----------------  ------------
help: remove the extra argument
    |
209 -     let encr_string = pgp::symm_encrypt(&context, passphrase, payload_key_asc).await?;
209 +     let encr_string = pgp::symm_encrypt(, passphrase, /* &[u8] */).await?;
    |

error[E0599]: no method named `stock_string` found for reference `&context::Context` in the current scope
   --> src/imex.rs:217:39
    |
217 |     let setup_message_title = context.stock_string(StockMessage::AcSetupMsgSubject).await;
    |                                       ^^^^^^^^^^^^ method not found in `&Context`

error[E0599]: no method named `stock_string` found for reference `&context::Context` in the current scope
   --> src/imex.rs:218:42
    |
218 |     let mut setup_message_body = context.stock_string(StockMessage::AcSetupMsgBody).await;
    |                                          ^^^^^^^^^^^^ method not found in `&Context`

Some errors have detailed explanations: E0061, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 7 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

