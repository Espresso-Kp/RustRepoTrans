Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
    --> src/chat.rs:4008:17
     |
4008 |                 paramsv![new_name.to_string(), chat_id],
     |                 ^^^^^^^ help: a macro with a similar name exists: `params`
     |
    ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
     |
176  | macro_rules! params {
     | ------------------- similarly named macro `params` defined here

error[E0425]: cannot find value `success` in this scope
    --> src/chat.rs:4028:9
     |
4028 |         success = true;
     |         ^^^^^^^
     |
help: you might have meant to introduce a new binding
     |
4028 |         let success = true;
     |         +++

error[E0425]: cannot find value `success` in this scope
    --> src/chat.rs:4031:9
     |
4031 |     if !success {
     |         ^^^^^^^ not found in this scope

error[E0308]: arguments to this function are incorrect
    --> src/chat.rs:4024:22
     |
4024 |             msg.id = send_msg_to_smtp(context, chat_id, &mut msg).await?;
     |                      ^^^^^^^^^^^^^^^^          -------  -------- expected `i64`, found `&mut Message`
     |                                                |
     |                                                expected `&mut Smtp`, found `ChatId`
     |
note: function defined here
    --> src/smtp.rs:516:21
     |
516  | pub(crate) async fn send_msg_to_smtp(
     |                     ^^^^^^^^^^^^^^^^
517  |     context: &Context,
     |     -----------------
518  |     smtp: &mut Smtp,
     |     ---------------
519  |     rowid: i64,
     |     ----------

error[E0308]: `?` operator has incompatible types
    --> src/chat.rs:4024:22
     |
4024 |             msg.id = send_msg_to_smtp(context, chat_id, &mut msg).await?;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MsgId`, found `()`
     |
     = note: `?` operator cannot convert from `()` to `MsgId`

error[E0277]: the trait bound `bool: From<for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {sync}>` is not satisfied
    --> src/chat.rs:4035:13
     |
4035 |     if sync.into() && chat.name != new_name {
     |             ^^^^ the trait `From<for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {sync}>` is not implemented for `bool`, which is required by `for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {sync}: Into<_>`
     |
     = help: the following other types implement trait `From<T>`:
               <bool as From<subtle::Choice>>
               <bool as From<crypto_bigint::ct_choice::CtChoice>>
               <bool as From<time::format_description::parse::format_item::HourBase>>
               <bool as From<time::format_description::parse::format_item::MonthCaseSensitive>>
               <bool as From<time::format_description::parse::format_item::PeriodCase>>
               <bool as From<time::format_description::parse::format_item::PeriodCaseSensitive>>
               <bool as From<time::format_description::parse::format_item::SignBehavior>>
               <bool as From<time::format_description::parse::format_item::WeekdayCaseSensitive>>
             and 3 others
     = note: required for `for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {sync}` to implement `Into<bool>`

error[E0308]: `?` operator has incompatible types
    --> src/chat.rs:4024:22
     |
4024 |             msg.id = send_msg_to_smtp(context, chat_id, &mut msg).await?;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MsgId`, found `()`
     |
     = note: `?` operator cannot convert from `()` to `message::MsgId`

error[E0277]: the trait bound `bool: From<for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {chat::sync}>` is not satisfied
    --> src/chat.rs:4035:13
     |
4035 |     if sync.into() && chat.name != new_name {
     |             ^^^^ the trait `From<for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {chat::sync}>` is not implemented for `bool`, which is required by `for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {chat::sync}: Into<_>`
     |
     = help: the following other types implement trait `From<T>`:
               <bool as From<subtle::Choice>>
               <bool as From<crypto_bigint::ct_choice::CtChoice>>
               <bool as From<time::format_description::parse::format_item::HourBase>>
               <bool as From<time::format_description::parse::format_item::MonthCaseSensitive>>
               <bool as From<time::format_description::parse::format_item::PeriodCase>>
               <bool as From<time::format_description::parse::format_item::PeriodCaseSensitive>>
               <bool as From<time::format_description::parse::format_item::SignBehavior>>
               <bool as From<time::format_description::parse::format_item::WeekdayCaseSensitive>>
             and 3 others
     = note: required for `for<'a> fn(&'a context::Context, SyncId, SyncAction) -> impl futures::Future<Output = std::result::Result<(), anyhow::Error>> {chat::sync}` to implement `Into<bool>`

Some errors have detailed explanations: E0277, E0308, E0425.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 6 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

