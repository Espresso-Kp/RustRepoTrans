Fail
file path is :
projects/charset-normalizer/rust/src/entity.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
warning: unused import: `decode`
 --> src/entity.rs:5:20
  |
5 | use crate::utils::{decode, iana_name, is_multi_byte_encoding, range_scan};
  |                    ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `encoding::DecoderTrap`
 --> src/entity.rs:7:5
  |
7 | use encoding::DecoderTrap;
  |     ^^^^^^^^^^^^^^^^^^^^^

error[E0308]: `match` arms have incompatible types
   --> src/entity.rs:182:31
    |
174 |                   let decoded_string = match String::from_utf8(payload.clone()) {
    |                                        ---------------------------------------- `match` arms have incompatible types
175 |                       Ok(v) => {
176 | /                         if v.starts_with('\u{FEFF}') {
177 | |                             v.chars().skip(1).collect()
178 | |                         } else {
179 | |                             v
180 | |                         }
    | |_________________________- this is found to be of type `std::string::String`
181 |                       },
182 |                       Err(_) => None,
    |                                 ^^^^ expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0560]: struct `CharsetMatch` has no field named `unicode_ranges`
   --> src/entity.rs:195:13
    |
195 |             unicode_ranges,
    |             ^^^^^^^^^^^^^^ `CharsetMatch` does not have this field
    |
    = note: available fields are: `payload`, `encoding`, `mean_mess_ratio`, `coherence_matches`, `has_sig_or_bom` ... and 2 others

error[E0560]: struct `CharsetMatch` has no field named `leaves`
   --> src/entity.rs:196:13
    |
196 |             leaves,
    |             ^^^^^^ `CharsetMatch` does not have this field
    |
    = note: available fields are: `payload`, `encoding`, `mean_mess_ratio`, `coherence_matches`, `has_sig_or_bom` ... and 2 others

error[E0308]: arguments to this function are incorrect
   --> src/lib.rs:473:43
    |
473 |                 let fallback_entry = Some(CharsetMatch::new(
    |                                           ^^^^^^^^^^^^^^^^^
474 |                     bytes,
475 |                     encoding_iana,
    |                     ------------- expected `String`, found `&str`
    |
note: expected `Vec<u8>`, found `&[u8]`
   --> src/lib.rs:474:21
    |
474 |                     bytes,
    |                     ^^^^^
    = note: expected struct `Vec<u8>`
            found reference `&[u8]`
note: expected `Vec<CoherenceMatch>`, found `&Vec<_>`
   --> src/lib.rs:478:21
    |
478 |                     &vec![],
    |                     ^^^^^^^
    = note: expected struct `Vec<CoherenceMatch>`
            found reference `&Vec<_>`
note: expected `Option<String>`, found `Option<&str>`
   --> src/lib.rs:479:21
    |
479 |                     decoded_payload.as_deref(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `std::option::Option<std::string::String>`
               found enum `std::option::Option<&str>`
note: associated function defined here
   --> src/entity.rs:160:8
    |
160 | pub fn new(
    |        ^^^
161 |         payload: Vec<u8>,
    |         ----------------
162 |         guessed_encoding: String,
    |         ------------------------
163 |         mean_mess_ratio: f32,
    |         --------------------
164 |         has_sig_or_bom: bool,
    |         --------------------
165 |         languages: CoherenceMatches,
    |         ---------------------------
166 |         decoded_payload: Option<String>,
    |         -------------------------------
help: try using a conversion method
    |
474 |                     bytes.to_vec(),
    |                          +++++++++
help: try using a conversion method
    |
475 |                     encoding_iana.to_string(),
    |                                  ++++++++++++
help: consider removing the borrow
    |
478 -                     &vec![],
478 +                     vec![],
    |
help: try removing the method call
    |
479 -                     decoded_payload.as_deref(),
479 +                     decoded_payload,
    |

error[E0308]: arguments to this function are incorrect
   --> src/tests/entity.rs:9:55
    |
9   |     let mut c_matches = CharsetMatches::new(Some(vec![CharsetMatch::new(
    |                                                       ^^^^^^^^^^^^^^^^^
10  |         &[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82],
11  |         "utf-8",
    |         ------- expected `String`, found `&str`
    |
note: expected `Vec<u8>`, found `&[{integer}; 8]`
   --> src/tests/entity.rs:10:9
    |
10  |         &[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82],
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected struct `Vec<u8>`
            found reference `&[{integer}; 8]`
note: expected `Vec<CoherenceMatch>`, found `&Vec<CoherenceMatch>`
   --> src/tests/entity.rs:14:9
    |
14  | /         &vec![
15  | |             CoherenceMatch {
16  | |                 language: &Language::Russian,
17  | |                 score: 0.99,
...   |
22  | |             },
23  | |         ],
    | |_________^
    = note: expected struct `Vec<CoherenceMatch>`
            found reference `&Vec<CoherenceMatch>`
note: associated function defined here
   --> src/entity.rs:160:8
    |
160 | pub fn new(
    |        ^^^
161 |         payload: Vec<u8>,
    |         ----------------
162 |         guessed_encoding: String,
    |         ------------------------
163 |         mean_mess_ratio: f32,
    |         --------------------
164 |         has_sig_or_bom: bool,
    |         --------------------
165 |         languages: CoherenceMatches,
    |         ---------------------------
166 |         decoded_payload: Option<String>,
    |         -------------------------------
help: try using a conversion method
    |
10  |         (&[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82]).to_vec(),
    |         +                                                 ++++++++++
help: try using a conversion method
    |
11  |         "utf-8".to_string(),
    |                ++++++++++++
help: consider removing the borrow
    |
14  -         &vec![
14  +         vec![
    |

error[E0308]: arguments to this function are incorrect
   --> src/lib.rs:522:24
    |
522 |         results.append(CharsetMatch::new(
    |                        ^^^^^^^^^^^^^^^^^
523 |             bytes,
524 |             encoding_iana,
    |             ------------- expected `String`, found `&str`
    |
note: expected `Vec<u8>`, found `&[u8]`
   --> src/lib.rs:523:13
    |
523 |             bytes,
    |             ^^^^^
    = note: expected struct `Vec<u8>`
            found reference `&[u8]`
note: expected `Vec<CoherenceMatch>`, found `&Vec<CoherenceMatch>`
   --> src/lib.rs:527:13
    |
527 |             &cd_ratios_merged,
    |             ^^^^^^^^^^^^^^^^^
    = note: expected struct `Vec<CoherenceMatch>`
            found reference `&Vec<CoherenceMatch>`
note: expected `Option<String>`, found `Option<&str>`
   --> src/lib.rs:528:13
    |
528 |             decoded_payload.as_deref(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `std::option::Option<std::string::String>`
               found enum `std::option::Option<&str>`
note: associated function defined here
   --> src/entity.rs:160:8
    |
160 | pub fn new(
    |        ^^^
161 |         payload: Vec<u8>,
    |         ----------------
162 |         guessed_encoding: String,
    |         ------------------------
163 |         mean_mess_ratio: f32,
    |         --------------------
164 |         has_sig_or_bom: bool,
    |         --------------------
165 |         languages: CoherenceMatches,
    |         ---------------------------
166 |         decoded_payload: Option<String>,
    |         -------------------------------
help: try using a conversion method
    |
523 |             bytes.to_vec(),
    |                  +++++++++
help: try using a conversion method
    |
524 |             encoding_iana.to_string(),
    |                          ++++++++++++
help: consider removing the borrow
    |
527 -             &cd_ratios_merged,
527 +             cd_ratios_merged,
    |
help: try removing the method call
    |
528 -             decoded_payload.as_deref(),
528 +             decoded_payload,
    |

error[E0308]: arguments to this function are incorrect
   --> src/tests/entity.rs:29:22
    |
29  |     c_matches.append(CharsetMatch::new(
    |                      ^^^^^^^^^^^^^^^^^
30  |         &[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82],
31  |         "utf-16le",
    |         ---------- expected `String`, found `&str`
    |
note: expected `Vec<u8>`, found `&[{integer}; 8]`
   --> src/tests/entity.rs:30:9
    |
30  |         &[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82],
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected struct `Vec<u8>`
            found reference `&[{integer}; 8]`
note: expected `Vec<CoherenceMatch>`, found `&Vec<CoherenceMatch>`
   --> src/tests/entity.rs:34:9
    |
34  | /         &vec![
35  | |             CoherenceMatch {
36  | |                 language: &Language::Russian,
37  | |                 score: 0.95,
...   |
42  | |             },
43  | |         ],
    | |_________^
    = note: expected struct `Vec<CoherenceMatch>`
            found reference `&Vec<CoherenceMatch>`
note: associated function defined here
   --> src/entity.rs:160:8
    |
160 | pub fn new(
    |        ^^^
161 |         payload: Vec<u8>,
    |         ----------------
162 |         guessed_encoding: String,
    |         ------------------------
163 |         mean_mess_ratio: f32,
    |         --------------------
164 |         has_sig_or_bom: bool,
    |         --------------------
165 |         languages: CoherenceMatches,
    |         ---------------------------
166 |         decoded_payload: Option<String>,
    |         -------------------------------
help: try using a conversion method
    |
30  |         (&[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82]).to_vec(),
    |         +                                                 ++++++++++
help: try using a conversion method
    |
31  |         "utf-16le".to_string(),
    |                   ++++++++++++
help: consider removing the borrow
    |
34  -         &vec![
34  +         vec![
    |

Some errors have detailed explanations: E0308, E0560.
For more information about an error, try `rustc --explain E0308`.
warning: `charset-normalizer-rs` (lib) generated 2 warnings (1 duplicate)
error: could not compile `charset-normalizer-rs` (lib) due to 5 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0308]: arguments to this function are incorrect
   --> src/tests/entity.rs:87:9
    |
87  |         CharsetMatch::new(
    |         ^^^^^^^^^^^^^^^^^
88  |             &[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82],
89  |             "utf-16le",
    |             ---------- expected `String`, found `&str`
    |
note: expected `Vec<u8>`, found `&[{integer}; 8]`
   --> src/tests/entity.rs:88:13
    |
88  |             &[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected struct `Vec<u8>`
            found reference `&[{integer}; 8]`
note: expected `Vec<CoherenceMatch>`, found `&Vec<CoherenceMatch>`
   --> src/tests/entity.rs:92:13
    |
92  | /             &vec!(
93  | |                 CoherenceMatch {
94  | |                     language: &Language::Russian,
95  | |                     score: 0.1,
...   |
100 | |                 },
101 | |             ),
    | |_____________^
    = note: expected struct `Vec<CoherenceMatch>`
            found reference `&Vec<CoherenceMatch>`
note: associated function defined here
   --> src/entity.rs:160:8
    |
160 | pub fn new(
    |        ^^^
161 |         payload: Vec<u8>,
    |         ----------------
162 |         guessed_encoding: String,
    |         ------------------------
163 |         mean_mess_ratio: f32,
    |         --------------------
164 |         has_sig_or_bom: bool,
    |         --------------------
165 |         languages: CoherenceMatches,
    |         ---------------------------
166 |         decoded_payload: Option<String>,
    |         -------------------------------
help: try using a conversion method
    |
88  |             (&[0xD0, 0xA2, 0xD0, 0xB5, 0xD1, 0x81, 0xD1, 0x82]).to_vec(),
    |             +                                                 ++++++++++
help: try using a conversion method
    |
89  |             "utf-16le".to_string(),
    |                       ++++++++++++
help: consider removing the borrow
    |
92  -             &vec!(
92  +             vec!(
    |

warning: `charset-normalizer-rs` (lib test) generated 2 warnings (1 duplicate)
error: could not compile `charset-normalizer-rs` (lib test) due to 8 previous errors; 2 warnings emitted

