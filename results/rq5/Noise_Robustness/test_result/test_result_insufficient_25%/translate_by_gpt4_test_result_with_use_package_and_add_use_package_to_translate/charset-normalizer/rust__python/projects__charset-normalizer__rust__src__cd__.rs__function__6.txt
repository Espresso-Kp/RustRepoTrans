Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0308]: arguments to this function are incorrect
   --> src/cd.rs:139:25
    |
139 |                     if !is_suspiciously_successive_range(discovered_range, character_range){
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: expected `Option<&str>`, found `&_`
   --> src/cd.rs:139:58
    |
139 |                     if !is_suspiciously_successive_range(discovered_range, character_range){
    |                                                          ^^^^^^^^^^^^^^^^
    = note:   expected enum `std::option::Option<&'static str>`
            found reference `&_`
note: expected `Option<&str>`, found `&str`
   --> src/cd.rs:139:76
    |
139 |                     if !is_suspiciously_successive_range(discovered_range, character_range){
    |                                                                            ^^^^^^^^^^^^^^^
    = note:   expected enum `std::option::Option<&'static str>`
            found reference `&str`
note: function defined here
   --> src/utils.rs:307:15
    |
307 | pub(crate) fn is_suspiciously_successive_range(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
308 |     range_a: Option<&'static str>,
    |     -----------------------------
309 |     range_b: Option<&'static str>,
    |     -----------------------------
help: consider dereferencing the borrow
    |
139 |                     if !is_suspiciously_successive_range(*discovered_range, character_range){
    |                                                          +
help: try wrapping the expression in `Some`
    |
139 |                     if !is_suspiciously_successive_range(discovered_range, Some(character_range)){
    |                                                                            +++++               +

error[E0277]: the trait bound `std::string::String: From<&&str>` is not satisfied
   --> src/cd.rs:147:55
    |
147 |                 let entry = layers.entry(String::from(layer_target_range)).or_insert_with(String::new);
    |                                          ------------ ^^^^^^^^^^^^^^^^^^ the trait `From<&&str>` is not implemented for `std::string::String`
    |                                          |
    |                                          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<&mut str>>
              <std::string::String as From<&std::string::String>>
              <std::string::String as From<&str>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Id>>
              <std::string::String as From<char>>
              <std::string::String as From<clap::builder::Str>>

error[E0308]: mismatched types
   --> src/cd.rs:147:42
    |
138 |                 for discovered_range in layers.keys() {
    |                                         ------ here the type of `layers` is inferred to be `HashMap<&str, _, ahash::RandomState>`
...
147 |                 let entry = layers.entry(String::from(layer_target_range)).or_insert_with(String::new);
    |                                    ----- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                                    |     |
    |                                    |     expected `&str`, found `String`
    |                                    |     help: consider borrowing here: `&String::from(layer_target_range)`
    |                                    arguments to this method are incorrect
    |
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> src/cd.rs:147:29
    |
147 |                 let entry = layers.entry(String::from(layer_target_range)).or_insert_with(String::new);
    |                             ^^^^^^^^^^^^^--------------------------------^
    |                                          |
    |                                          this argument influences the return type of `entry`
note: method defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:854:12
    |
854 |     pub fn entry(&mut self, key: K) -> Entry<'_, K, V> {
    |            ^^^^^

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `charset-normalizer-rs` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `charset-normalizer-rs` (lib test) due to 3 previous errors

