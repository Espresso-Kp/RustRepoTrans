Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected identifier, found reserved identifier `_`
   --> crates/iceberg/src/avro/schema.rs:221:15
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |               ^ expected identifier, found reserved identifier

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:196:23
    |
196 |     let res = match p.type_id() {
    |                       ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0599]: no variant or associated item named `Binary` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:197:15
    |
197 |         Type::Binary => Ok(Either::Left(AvroSchema::Bytes)),
    |               ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Binary` not found for this enum

error[E0599]: no variant or associated item named `Boolean` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:198:15
    |
198 |         Type::Boolean => Ok(Either::Left(AvroSchema::Boolean)),
    |               ^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Boolean` not found for this enum

error[E0599]: no variant or associated item named `Date` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:199:15
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Date` not found for this enum

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:200:15
    |
200 |         Type::Decimal => {
    |               ^^^^^^^
    |               |
    |               variant or associated item not found in `Type`
    |               help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum

error[E0599]: no variant or associated item named `Double` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:205:15
    |
205 |         Type::Double => Ok(Either::Left(AvroSchema::Double)),
    |               ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Double` not found for this enum

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:206:15
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum

error[E0599]: no variant or associated item named `Float` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:207:15
    |
207 |         Type::Float => Ok(Either::Left(AvroSchema::Float)),
    |               ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Float` not found for this enum

error[E0599]: no variant or associated item named `Integer` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:208:15
    |
208 |         Type::Integer => Ok(Either::Left(AvroSchema::Int)),
    |               ^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Integer` not found for this enum

error[E0599]: no variant or associated item named `Long` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:209:15
    |
209 |         Type::Long => Ok(Either::Left(AvroSchema::Long)),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Long` not found for this enum

error[E0599]: no variant or associated item named `String` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:210:15
    |
210 |         Type::String => Ok(Either::Left(AvroSchema::String)),
    |               ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `String` not found for this enum

error[E0599]: no variant or associated item named `Uuid` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:211:15
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Uuid` not found for this enum

error[E0599]: no variant or associated item named `Timestamp` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:212:15
    |
212 |         Type::Timestamp => {
    |               ^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Timestamp` not found for this enum

error[E0599]: no variant or associated item named `Time` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:220:15
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Time` not found for this enum

error[E0599]: no variant or associated item named `_` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:221:15
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |               ^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `_` not found for this enum

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:199:49
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                 ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:199:97
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                 ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:199:27
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                           ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `as_decimal_type` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:201:31
    |
201 |             let precision = p.as_decimal_type().unwrap().precision();
    |                               ^^^^^^^^^^^^^^^ method not found in `&PrimitiveType`

error[E0599]: no method named `as_decimal_type` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:202:27
    |
202 |             let scale = p.as_decimal_type().unwrap().scale();
    |                           ^^^^^^^^^^^^^^^ method not found in `&PrimitiveType`

error[E0599]: no function or associated item named `new` found for struct `DecimalSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:203:64
    |
203 |             Ok(Either::Left(AvroSchema::Decimal(DecimalSchema::new(precision, scale))))
    |                                                                ^^^ function or associated item not found in `DecimalSchema`

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:206:50
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                  ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:206:98
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                  ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:206:28
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                            ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:211:49
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                 ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:211:97
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                 ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:211:27
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                           ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `as_timestamp_type` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:213:35
    |
213 |             let adjust_to_utc = p.as_timestamp_type().unwrap().should_adjust_to_utc();
    |                                   ^^^^^^^^^^^^^^^^^ method not found in `&PrimitiveType`

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:220:49
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                 ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:220:97
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                 ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:220:27
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                           ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:221:46
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |                                              ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:221:101
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |                                                                                                     ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:221:24
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |                        ^^^^^^^^^^------------------------------------------------------------------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id())), /* message */))
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 35 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 35 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected identifier, found reserved identifier `_`
   --> crates/iceberg/src/avro/schema.rs:221:15
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |               ^ expected identifier, found reserved identifier

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:196:23
    |
196 |     let res = match p.type_id() {
    |                       ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0599]: no variant or associated item named `Binary` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:197:15
    |
197 |         Type::Binary => Ok(Either::Left(AvroSchema::Bytes)),
    |               ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Binary` not found for this enum

error[E0599]: no variant or associated item named `Boolean` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:198:15
    |
198 |         Type::Boolean => Ok(Either::Left(AvroSchema::Boolean)),
    |               ^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Boolean` not found for this enum

error[E0599]: no variant or associated item named `Date` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:199:15
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Date` not found for this enum

error[E0599]: no variant or associated item named `Decimal` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:200:15
    |
200 |         Type::Decimal => {
    |               ^^^^^^^
    |               |
    |               variant or associated item not found in `Type`
    |               help: there is an associated function with a similar name: `decimal`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Decimal` not found for this enum

error[E0599]: no variant or associated item named `Double` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:205:15
    |
205 |         Type::Double => Ok(Either::Left(AvroSchema::Double)),
    |               ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Double` not found for this enum

error[E0599]: no variant or associated item named `Fixed` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:206:15
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Fixed` not found for this enum

error[E0599]: no variant or associated item named `Float` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:207:15
    |
207 |         Type::Float => Ok(Either::Left(AvroSchema::Float)),
    |               ^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Float` not found for this enum

error[E0599]: no variant or associated item named `Integer` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:208:15
    |
208 |         Type::Integer => Ok(Either::Left(AvroSchema::Int)),
    |               ^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Integer` not found for this enum

error[E0599]: no variant or associated item named `Long` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:209:15
    |
209 |         Type::Long => Ok(Either::Left(AvroSchema::Long)),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Long` not found for this enum

error[E0599]: no variant or associated item named `String` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:210:15
    |
210 |         Type::String => Ok(Either::Left(AvroSchema::String)),
    |               ^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `String` not found for this enum

error[E0599]: no variant or associated item named `Uuid` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:211:15
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Uuid` not found for this enum

error[E0599]: no variant or associated item named `Timestamp` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:212:15
    |
212 |         Type::Timestamp => {
    |               ^^^^^^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Timestamp` not found for this enum

error[E0599]: no variant or associated item named `Time` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:220:15
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |               ^^^^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `Time` not found for this enum

error[E0599]: no variant or associated item named `_` found for enum `datatypes::Type` in the current scope
   --> crates/iceberg/src/avro/schema.rs:221:15
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |               ^ variant or associated item not found in `Type`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:80:1
    |
80  | pub enum Type {
    | ------------- variant or associated item `_` not found for this enum

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:199:49
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                 ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:199:97
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                 ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:199:27
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                           ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
199 |         Type::Date => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `as_decimal_type` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:201:31
    |
201 |             let precision = p.as_decimal_type().unwrap().precision();
    |                               ^^^^^^^^^^^^^^^ method not found in `&PrimitiveType`

error[E0599]: no method named `as_decimal_type` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:202:27
    |
202 |             let scale = p.as_decimal_type().unwrap().scale();
    |                           ^^^^^^^^^^^^^^^ method not found in `&PrimitiveType`

error[E0599]: no function or associated item named `new` found for struct `DecimalSchema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:203:64
    |
203 |             Ok(Either::Left(AvroSchema::Decimal(DecimalSchema::new(precision, scale))))
    |                                                                ^^^ function or associated item not found in `DecimalSchema`

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:206:50
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                  ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:206:98
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                  ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:206:28
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                            ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
206 |         Type::Fixed => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:211:49
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                 ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:211:97
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                 ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:211:27
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                           ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
211 |         Type::Uuid => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `as_timestamp_type` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:213:35
    |
213 |             let adjust_to_utc = p.as_timestamp_type().unwrap().should_adjust_to_utc();
    |                                   ^^^^^^^^^^^^^^^^^ method not found in `&PrimitiveType`

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:220:49
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                 ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:220:97
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                                                                                                 ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:220:27
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())))),
    |                           ^^^^^^^^^^------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
220 |         Type::Time => Err(Error::new(ErrorKind::SchemaParseError(format!("Not supported: {}", p.type_id())), /* message */)),
    |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `SchemaParseError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:221:46
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |                                              ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `SchemaParseError` not found for this enum

error[E0599]: no method named `type_id` found for reference `&datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:221:101
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |                                                                                                     ^^^^^^^ method not found in `&PrimitiveType`
    |
    = help: items from traits can only be used if the trait is in scope
help: the following trait is implemented but not in scope; perhaps add a `use` for it:
    |
19  + use std::any::Any;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/avro/schema.rs:221:24
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id()))))
    |                        ^^^^^^^^^^------------------------------------------------------------------------------- an argument is missing
    |
note: associated function defined here
   --> crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^ ---------------  --------------------------
help: provide the argument
    |
221 |         Type::_ => Err(Error::new(ErrorKind::SchemaParseError(format!("{} type is not supported", p.type_id())), /* message */))
    |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 35 previous errors

