Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
warning: unused import: `aws_sdk_glue::types::TableInput`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use aws_sdk_glue::types::TableInput;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^

error[E0277]: `std::result::Result<std::string::String, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:522:57
    |
522 |     let to_db_name = validate_namespace(to.namespace()).await?;
    |                      ---------------------------------- ^^^^^ `std::result::Result<std::string::String, iceberg::Error>` is not a future
    |                      |
    |                      this call returns `std::result::Result<std::string::String, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `std::result::Result<std::string::String, iceberg::Error>`, which is required by `std::result::Result<std::string::String, iceberg::Error>: IntoFuture`
    = note: std::result::Result<std::string::String, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::string::String, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
522 -     let to_db_name = validate_namespace(to.namespace()).await?;
522 +     let to_db_name = validate_namespace(to.namespace())?;
    |
help: alternatively, consider making `fn validate_namespace` asynchronous
   --> crates/catalog/glue/src/utils.rs:183:11
    |
183 | pub(crate) async fn validate_namespace(namespace: &NamespaceIdent) -> Result<String> {
    |            +++++

error[E0599]: no function or associated item named `new` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:536:35
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- function or associated item `new` not found for this struct
...
536 |     let glue_client = GlueClient::new();
    |                                   ^^^ function or associated item not found in `GlueClient`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `vsimd::isa::InstructionSet`
            candidate #2: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #3: `ahash::HashMapExt`
            candidate #4: `ahash::HashSetExt`
            candidate #5: `ring::aead::BoundKey`
            candidate #6: `digest::core_api::VariableOutputCore`
            candidate #7: `digest::digest::Digest`
            candidate #8: `digest::mac::Mac`
            candidate #9: `digest::VariableOutput`
            candidate #10: `crypto_common::KeyInit`
            candidate #11: `crypto_common::KeyIvInit`
            candidate #12: `typenum::marker_traits::Bit`
            candidate #13: `rand::distributions::uniform::UniformSampler`
            candidate #14: `itertools::adaptors::coalesce::CountItem`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #16: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #17: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #18: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #19: `bitvec::store::BitStore`
            candidate #20: `radium::Radium`
            candidate #21: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #22: `itertools::adaptors::coalesce::CountItem`
            candidate #23: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #24: `brotli::enc::threading::AnyBoxConstructor`

error[E0425]: cannot find function `drop_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:559:11
    |
559 |     match drop_table(from, false).await { // Assuming drop_table() exists
    |           ^^^^^^^^^^
    |
help: you might have meant to call the method
    |
559 |     match self.drop_table(from, false).await { // Assuming drop_table() exists
    |           +++++
help: a local variable with a similar name exists
    |
559 |     match from_table(from, false).await { // Assuming drop_table() exists
    |           ~~~~~~~~~~

Some errors have detailed explanations: E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 3 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `aws_sdk_glue::types::TableInput`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use aws_sdk_glue::types::TableInput;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^

error[E0277]: `Result<std::string::String, iceberg::Error>` is not a future
   --> crates/catalog/glue/src/catalog.rs:522:57
    |
522 |     let to_db_name = validate_namespace(to.namespace()).await?;
    |                      ---------------------------------- ^^^^^ `Result<std::string::String, iceberg::Error>` is not a future
    |                      |
    |                      this call returns `Result<std::string::String, iceberg::Error>`
    |
    = help: the trait `std::future::Future` is not implemented for `Result<std::string::String, iceberg::Error>`, which is required by `Result<std::string::String, iceberg::Error>: IntoFuture`
    = note: Result<std::string::String, iceberg::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `Result<std::string::String, iceberg::Error>` to implement `IntoFuture`
help: remove the `.await`
    |
522 -     let to_db_name = validate_namespace(to.namespace()).await?;
522 +     let to_db_name = validate_namespace(to.namespace())?;
    |
help: alternatively, consider making `fn validate_namespace` asynchronous
   --> crates/catalog/glue/src/utils.rs:183:11
    |
183 | pub(crate) async fn validate_namespace(namespace: &NamespaceIdent) -> Result<String> {
    |            +++++

error[E0599]: no function or associated item named `new` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:536:35
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- function or associated item `new` not found for this struct
...
536 |     let glue_client = GlueClient::new();
    |                                   ^^^ function or associated item not found in `GlueClient`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `vsimd::isa::InstructionSet`
            candidate #2: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #3: `ahash::HashMapExt`
            candidate #4: `ahash::HashSetExt`
            candidate #5: `ring::aead::BoundKey`
            candidate #6: `digest::core_api::VariableOutputCore`
            candidate #7: `digest::digest::Digest`
            candidate #8: `digest::mac::Mac`
            candidate #9: `digest::VariableOutput`
            candidate #10: `crypto_common::KeyInit`
            candidate #11: `crypto_common::KeyIvInit`
            candidate #12: `typenum::marker_traits::Bit`
            candidate #13: `rand::distributions::uniform::UniformSampler`
            candidate #14: `itertools::adaptors::coalesce::CountItem`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #16: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #17: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #18: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #19: `bitvec::store::BitStore`
            candidate #20: `radium::Radium`
            candidate #21: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #22: `itertools::adaptors::coalesce::CountItem`
            candidate #23: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #24: `brotli::enc::threading::AnyBoxConstructor`

error[E0425]: cannot find function `drop_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:559:11
    |
559 |     match drop_table(from, false).await { // Assuming drop_table() exists
    |           ^^^^^^^^^^
    |
help: you might have meant to call the method
    |
559 |     match self.drop_table(from, false).await { // Assuming drop_table() exists
    |           +++++
help: a local variable with a similar name exists
    |
559 |     match from_table(from, false).await { // Assuming drop_table() exists
    |           ~~~~~~~~~~

Some errors have detailed explanations: E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 3 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

