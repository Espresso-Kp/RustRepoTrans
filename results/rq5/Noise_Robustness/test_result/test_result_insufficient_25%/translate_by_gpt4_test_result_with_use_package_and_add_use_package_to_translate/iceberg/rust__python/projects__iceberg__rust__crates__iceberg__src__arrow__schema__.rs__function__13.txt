Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `HasIds` in this scope
   --> crates/iceberg/src/arrow/schema.rs:208:46
    |
208 |     let has_ids = visit_arrow_schema(schema, HasIds);
    |                                              ^^^^^^ not found in this scope

error[E0422]: cannot find struct, variant or union type `ConvertToIceberg` in this scope
   --> crates/iceberg/src/arrow/schema.rs:213:28
    |
213 |         visitor = Box::new(ConvertToIceberg {});
    |                            ^^^^^^^^^^^^^^^^ not found in this scope

error[E0191]: the value of the associated type `T` in `spec::schema::SchemaVisitor` must be specified
   --> crates/iceberg/src/arrow/schema.rs:210:26
    |
210 |     let visitor: Box<dyn SchemaVisitor>;
    |                          ^^^^^^^^^^^^^ help: specify the associated type: `SchemaVisitor<T = Type>`
    |
   ::: crates/iceberg/src/spec/schema.rs:367:5
    |
367 |     type T;
    |     ------ `T` defined here

error[E0425]: cannot find function `visit_arrow_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:208:19
    |
192 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- similarly named function `visit_schema` defined here
...
208 |     let has_ids = visit_arrow_schema(schema, HasIds);
    |                   ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `visit_schema`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:215:28
    |
215 |         visitor = Box::new(ConvertToIceberg::new(name_mapping));
    |                            ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:217:42
    |
217 | ...   return Err(Error::new(ErrorKind::InvalidInput, "Parquet file does not have field-ids and the Iceberg table does not have 'schema.na...
    |                                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0425]: cannot find function `visit_arrow_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:220:5
    |
192 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- similarly named function `visit_schema` defined here
...
220 |     visit_arrow_schema(schema, visitor)
    |     ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `visit_schema`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:637:9
    |
637 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<HashMap<std::string::String, i32>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
    |
637 |         arrow_schema_to_schema(schema, /* std::option::Option<HashMap<std::string::String, i32>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<HashMap<std::string::String, i32>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<HashMap<std::string::String, i32>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0191, E0422, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:637:9
    |
637 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, i32>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
    |
637 |         arrow_schema_to_schema(schema, /* std::option::Option<std::collections::HashMap<std::string::String, i32>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
    --> crates/iceberg/src/arrow/schema.rs:1023:32
     |
1023 |         let converted_schema = arrow_schema_to_schema(&arrow_schema).unwrap();
     |                                ^^^^^^^^^^^^^^^^^^^^^^--------------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, i32>>` is missing
     |
note: function defined here
    --> crates/iceberg/src/arrow/schema.rs:207:8
     |
207  | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
     |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
     |
1023 |         let converted_schema = arrow_schema_to_schema(&arrow_schema, /* std::option::Option<std::collections::HashMap<std::string::String, i32>> */).unwrap();
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, i32>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<std::collections::HashMap<std::string::String, i32>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: could not compile `iceberg` (lib test) due to 10 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find value `HasIds` in this scope
   --> crates/iceberg/src/arrow/schema.rs:208:46
    |
208 |     let has_ids = visit_arrow_schema(schema, HasIds);
    |                                              ^^^^^^ not found in this scope

error[E0422]: cannot find struct, variant or union type `ConvertToIceberg` in this scope
   --> crates/iceberg/src/arrow/schema.rs:213:28
    |
213 |         visitor = Box::new(ConvertToIceberg {});
    |                            ^^^^^^^^^^^^^^^^ not found in this scope

error[E0191]: the value of the associated type `T` in `spec::schema::SchemaVisitor` must be specified
   --> crates/iceberg/src/arrow/schema.rs:210:26
    |
210 |     let visitor: Box<dyn SchemaVisitor>;
    |                          ^^^^^^^^^^^^^ help: specify the associated type: `SchemaVisitor<T = Type>`
    |
   ::: crates/iceberg/src/spec/schema.rs:367:5
    |
367 |     type T;
    |     ------ `T` defined here

error[E0425]: cannot find function `visit_arrow_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:208:19
    |
192 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- similarly named function `visit_schema` defined here
...
208 |     let has_ids = visit_arrow_schema(schema, HasIds);
    |                   ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `visit_schema`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:215:28
    |
215 |         visitor = Box::new(ConvertToIceberg::new(name_mapping));
    |                            ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:217:42
    |
217 | ...   return Err(Error::new(ErrorKind::InvalidInput, "Parquet file does not have field-ids and the Iceberg table does not have 'schema.na...
    |                                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0425]: cannot find function `visit_arrow_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:220:5
    |
192 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- similarly named function `visit_schema` defined here
...
220 |     visit_arrow_schema(schema, visitor)
    |     ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `visit_schema`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:637:9
    |
637 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<HashMap<std::string::String, i32>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
    |
637 |         arrow_schema_to_schema(schema, /* std::option::Option<HashMap<std::string::String, i32>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<HashMap<std::string::String, i32>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, i32>>) -> Result<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<HashMap<std::string::String, i32>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0191, E0422, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 9 previous errors

