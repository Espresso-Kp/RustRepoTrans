Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0050]: method `map` has 3 parameters but the declaration in trait `spec::schema::SchemaVisitor::map` has 4
   --> crates/iceberg/src/avro/schema.rs:133:5
    |
133 | /     &mut self,
134 | |     key_value: AvroSchemaOrField,
135 | |     value: AvroSchemaOrField,
    | |____________________________^ expected 4 parameters, found 3
    |
   ::: crates/iceberg/src/spec/schema.rs:411:12
    |
411 |       fn map(&mut self, map: &MapType, key_value: Self::T, value: Self::T) -> Result<Self::T>;
    |              ------------------------------------------------------------ trait requires 4 parameters

error[E0599]: no associated item named `String` found for struct `spec::schema::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:138:17
    |
138 |         Schema::String => {
    |                 ^^^^^^ associated item not found in `Schema`
    |
   ::: crates/iceberg/src/spec/schema.rs:47:1
    |
47  | pub struct Schema {
    | ----------------- associated item `String` not found for this struct

error[E0599]: no variant or associated item named `Map` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:139:45
    |
139 |             let result = AvroSchemaOrField::Map(Box::new(AvroSchemaOrField::Record(
    |                                             ^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `Record` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:139:77
    |
139 |             let result = AvroSchemaOrField::Map(Box::new(AvroSchemaOrField::Record(
    |                                                                             ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:142:49
    |
142 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                 ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:142:77
    |
142 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:142:25
    |
142 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:141:27
    |
141 |                       name: Name::new(
    |  ___________________________^
142 | |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
143 | |                     ),
    | |_____________________^ expected `Name`, found `Result<Name, Error>`
    |
    = note: expected struct `apache_avro::schema::Name`
                 found enum `std::result::Result<apache_avro::schema::Name, apache_avro::Error>`
help: use the `?` operator to extract the `std::result::Result<apache_avro::schema::Name, apache_avro::Error>` value, propagating a `Result::Err` value to the caller
    |
143 |                     )?,
    |                      +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:147:37
    |
147 | ...                   schema: Box::new(key_value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:145:25
    |
145 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:154:37
    |
154 | ...                   schema: Box::new(value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:152:25
    |
152 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0063]: missing fields `aliases`, `attributes` and `lookup` in initializer of `RecordSchema`
   --> crates/iceberg/src/avro/schema.rs:140:17
    |
140 |                 RecordSchema {
    |                 ^^^^^^^^^^^^ missing `aliases`, `attributes` and `lookup`

error[E0599]: no variant or associated item named `Array` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:166:45
    |
166 |             let result = AvroSchemaOrField::Array(Box::new(AvroSchemaOrField::Record(
    |                                             ^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `Record` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:166:79
    |
166 |             let result = AvroSchemaOrField::Array(Box::new(AvroSchemaOrField::Record(
    |                                                                               ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:169:49
    |
169 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                 ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:169:77
    |
169 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:169:25
    |
169 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:168:27
    |
168 |                       name: Name::new(
    |  ___________________________^
169 | |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
170 | |                     ),
    | |_____________________^ expected `Name`, found `Result<Name, Error>`
    |
    = note: expected struct `apache_avro::schema::Name`
                 found enum `std::result::Result<apache_avro::schema::Name, apache_avro::Error>`
help: use the `?` operator to extract the `std::result::Result<apache_avro::schema::Name, apache_avro::Error>` value, propagating a `Result::Err` value to the caller
    |
170 |                     )?,
    |                      +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:174:37
    |
174 | ...                   schema: Box::new(key_value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:172:25
    |
172 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:181:37
    |
181 | ...                   schema: Box::new(value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:179:25
    |
179 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0063]: missing fields `aliases`, `attributes` and `lookup` in initializer of `RecordSchema`
   --> crates/iceberg/src/avro/schema.rs:167:17
    |
167 |                 RecordSchema {
    |                 ^^^^^^^^^^^^ missing `aliases`, `attributes` and `lookup`

Some errors have detailed explanations: E0050, E0063, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0050`.
error: could not compile `iceberg` (lib) due to 24 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 24 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0050]: method `map` has 3 parameters but the declaration in trait `spec::schema::SchemaVisitor::map` has 4
   --> crates/iceberg/src/avro/schema.rs:133:5
    |
133 | /     &mut self,
134 | |     key_value: AvroSchemaOrField,
135 | |     value: AvroSchemaOrField,
    | |____________________________^ expected 4 parameters, found 3
    |
   ::: crates/iceberg/src/spec/schema.rs:411:12
    |
411 |       fn map(&mut self, map: &MapType, key_value: Self::T, value: Self::T) -> Result<Self::T>;
    |              ------------------------------------------------------------ trait requires 4 parameters

error[E0599]: no associated item named `String` found for struct `spec::schema::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:138:17
    |
138 |         Schema::String => {
    |                 ^^^^^^ associated item not found in `Schema`
    |
   ::: crates/iceberg/src/spec/schema.rs:47:1
    |
47  | pub struct Schema {
    | ----------------- associated item `String` not found for this struct

error[E0599]: no variant or associated item named `Map` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:139:45
    |
139 |             let result = AvroSchemaOrField::Map(Box::new(AvroSchemaOrField::Record(
    |                                             ^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `Record` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:139:77
    |
139 |             let result = AvroSchemaOrField::Map(Box::new(AvroSchemaOrField::Record(
    |                                                                             ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:142:49
    |
142 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                 ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:142:77
    |
142 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:142:25
    |
142 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:141:27
    |
141 |                       name: Name::new(
    |  ___________________________^
142 | |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
143 | |                     ),
    | |_____________________^ expected `Name`, found `Result<Name, Error>`
    |
    = note: expected struct `apache_avro::schema::Name`
                 found enum `std::result::Result<apache_avro::schema::Name, apache_avro::Error>`
help: use the `?` operator to extract the `std::result::Result<apache_avro::schema::Name, apache_avro::Error>` value, propagating a `Result::Err` value to the caller
    |
143 |                     )?,
    |                      +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:147:37
    |
147 | ...                   schema: Box::new(key_value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:145:25
    |
145 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:154:37
    |
154 | ...                   schema: Box::new(value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:152:25
    |
152 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0063]: missing fields `aliases`, `attributes` and `lookup` in initializer of `RecordSchema`
   --> crates/iceberg/src/avro/schema.rs:140:17
    |
140 |                 RecordSchema {
    |                 ^^^^^^^^^^^^ missing `aliases`, `attributes` and `lookup`

error[E0599]: no variant or associated item named `Array` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:166:45
    |
166 |             let result = AvroSchemaOrField::Array(Box::new(AvroSchemaOrField::Record(
    |                                             ^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `Record` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:166:79
    |
166 |             let result = AvroSchemaOrField::Array(Box::new(AvroSchemaOrField::Record(
    |                                                                               ^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:169:49
    |
169 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                 ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:169:77
    |
169 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:169:25
    |
169 |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |
    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:168:27
    |
168 |                       name: Name::new(
    |  ___________________________^
169 | |                         format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id)
170 | |                     ),
    | |_____________________^ expected `Name`, found `Result<Name, Error>`
    |
    = note: expected struct `apache_avro::schema::Name`
                 found enum `std::result::Result<apache_avro::schema::Name, apache_avro::Error>`
help: use the `?` operator to extract the `std::result::Result<apache_avro::schema::Name, apache_avro::Error>` value, propagating a `Result::Err` value to the caller
    |
170 |                     )?,
    |                      +

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:174:37
    |
174 | ...                   schema: Box::new(key_value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:172:25
    |
172 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:181:37
    |
181 | ...                   schema: Box::new(value.clone()),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:179:25
    |
179 |                         AvroRecordField {
    |                         ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0063]: missing fields `aliases`, `attributes` and `lookup` in initializer of `RecordSchema`
   --> crates/iceberg/src/avro/schema.rs:167:17
    |
167 |                 RecordSchema {
    |                 ^^^^^^^^^^^^ missing `aliases`, `attributes` and `lookup`

Some errors have detailed explanations: E0050, E0063, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0050`.
error: could not compile `iceberg` (lib) due to 24 previous errors

