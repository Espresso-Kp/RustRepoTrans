Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/writer/base_writer/data_file_writer.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0308]: mismatched types
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:80:21
   |
80 |         None => Err("No writer available!"),
   |                 --- ^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `&str`
   |                 |
   |                 arguments to this enum variant are incorrect
   |
help: the type constructed contains `&'static str` due to the type of the argument passed
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:80:17
   |
80 |         None => Err("No writer available!"),
   |                 ^^^^----------------------^
   |                     |
   |                     this argument influences the type of `Err`
note: tuple variant defined here
  --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0061]: this method takes 1 argument but 2 arguments were supplied
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:81:32
   |
81 |         Some(writer) => writer.write(&batch, &self.partition_value),
   |                                ^^^^^       -----------------------
   |                                            | |
   |                                            | unexpected argument of type `&values::Struct`
   |                                            help: remove the extra argument
   |
note: method defined here
  --> crates/iceberg/src/writer/file_writer/mod.rs:44:8
   |
44 |     fn write(&mut self, batch: &RecordBatch) -> impl Future<Output = Result<()>> + Send;
   |        ^^^^^

error[E0308]: `match` arms have incompatible types
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:81:25
   |
79 | /     match self.inner_writer.as_mut() {
80 | |         None => Err("No writer available!"),
   | |                 --------------------------- this is found to be of type `std::result::Result<(), error::Error>`
81 | |         Some(writer) => writer.write(&batch, &self.partition_value),
   | |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Result<(), Error>`, found associated type
82 | |     }
   | |_____- `match` arms have incompatible types
   |
   = note:         expected enum `std::result::Result<(), error::Error>`
           found associated type `impl futures::Future<Output = std::result::Result<(), error::Error>> + std::marker::Send`
note: calling an async function returns a future
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:81:25
   |
81 |         Some(writer) => writer.write(&batch, &self.partition_value),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider `await`ing on the `Future`
   |
81 |         Some(writer) => writer.write(&batch, &self.partition_value).await,
   |                                                                    ++++++

Some errors have detailed explanations: E0061, E0308.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 3 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0308]: mismatched types
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:80:21
   |
80 |         None => Err("No writer available!"),
   |                 --- ^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `&str`
   |                 |
   |                 arguments to this enum variant are incorrect
   |
help: the type constructed contains `&'static str` due to the type of the argument passed
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:80:17
   |
80 |         None => Err("No writer available!"),
   |                 ^^^^----------------------^
   |                     |
   |                     this argument influences the type of `Err`
note: tuple variant defined here
  --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0061]: this method takes 1 argument but 2 arguments were supplied
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:81:32
   |
81 |         Some(writer) => writer.write(&batch, &self.partition_value),
   |                                ^^^^^       -----------------------
   |                                            | |
   |                                            | unexpected argument of type `&values::Struct`
   |                                            help: remove the extra argument
   |
note: method defined here
  --> crates/iceberg/src/writer/file_writer/mod.rs:44:8
   |
44 |     fn write(&mut self, batch: &RecordBatch) -> impl Future<Output = Result<()>> + Send;
   |        ^^^^^

error[E0308]: `match` arms have incompatible types
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:81:25
   |
79 | /     match self.inner_writer.as_mut() {
80 | |         None => Err("No writer available!"),
   | |                 --------------------------- this is found to be of type `std::result::Result<(), error::Error>`
81 | |         Some(writer) => writer.write(&batch, &self.partition_value),
   | |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Result<(), Error>`, found associated type
82 | |     }
   | |_____- `match` arms have incompatible types
   |
   = note:         expected enum `std::result::Result<(), error::Error>`
           found associated type `impl futures::Future<Output = std::result::Result<(), error::Error>> + std::marker::Send`
note: calling an async function returns a future
  --> crates/iceberg/src/writer/base_writer/data_file_writer.rs:81:25
   |
81 |         Some(writer) => writer.write(&batch, &self.partition_value),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider `await`ing on the `Future`
   |
81 |         Some(writer) => writer.write(&batch, &self.partition_value).await,
   |                                                                    ++++++

Some errors have detailed explanations: E0061, E0308.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 3 previous errors

