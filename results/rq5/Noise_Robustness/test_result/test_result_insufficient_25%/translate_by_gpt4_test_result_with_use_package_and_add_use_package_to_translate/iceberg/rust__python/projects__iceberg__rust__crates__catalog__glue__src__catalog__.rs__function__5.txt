Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: could not find `CreateDatabaseError` in `error`
   --> crates/catalog/glue/src/catalog.rs:158:45
    |
158 |                 if let aws_sdk_glue::error::CreateDatabaseError::AlreadyExists(_) = err {
    |                                             ^^^^^^^^^^^^^^^^^^^ could not find `CreateDatabaseError` in `error`
    |
help: consider importing this enum
    |
18  + use aws_sdk_glue::operation::create_database::CreateDatabaseError;
    |
help: if you import `CreateDatabaseError`, refer to it directly
    |
158 -                 if let aws_sdk_glue::error::CreateDatabaseError::AlreadyExists(_) = err {
158 +                 if let CreateDatabaseError::AlreadyExists(_) = err {
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:29
    |
152 |         let database_name = convert_to_database(namespace);
    |                             ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |         let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */);
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0425]: cannot find function `_construct_database_input` in this scope
   --> crates/catalog/glue/src/catalog.rs:154:21
    |
154 |         let input = _construct_database_input(database_name, properties);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `create_database` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:155:27
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_database` not found for this struct
...
155 |         match self.client.create_database(input).await {
    |                           ^^^^^^^^^^^^^^^ method not found in `GlueClient`
    |
help: one of the expressions' fields has a method of the same name
    |
155 |         match self.client.0.create_database(input).await {
    |                           ++

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:156:46
    |
156 |             Ok(_) => Ok(convert_to_namespace(database_name)),
    |                         -------------------- ^^^^^^^^^^^^^ expected `&Database`, found `Result<DatabaseInput, Error>`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected reference `&aws_sdk_glue::types::Database`
                    found enum `std::result::Result<DatabaseInput, iceberg::Error>`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0433]: failed to resolve: use of undeclared type `NamespaceAlreadyExistsError`
   --> crates/catalog/glue/src/catalog.rs:159:25
    |
159 |                     Err(NamespaceAlreadyExistsError::new(format!(
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `NamespaceAlreadyExistsError`

error[E0277]: `std::result::Result<DatabaseInput, iceberg::Error>` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:161:25
    |
161 |                         database_name
    |                         ^^^^^^^^^^^^^ `std::result::Result<DatabaseInput, iceberg::Error>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<DatabaseInput, iceberg::Error>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: could not find `CreateDatabaseError` in `error`
   --> crates/catalog/glue/src/catalog.rs:158:45
    |
158 |                 if let aws_sdk_glue::error::CreateDatabaseError::AlreadyExists(_) = err {
    |                                             ^^^^^^^^^^^^^^^^^^^ could not find `CreateDatabaseError` in `error`
    |
help: consider importing this enum
    |
18  + use aws_sdk_glue::operation::create_database::CreateDatabaseError;
    |
help: if you import `CreateDatabaseError`, refer to it directly
    |
158 -                 if let aws_sdk_glue::error::CreateDatabaseError::AlreadyExists(_) = err {
158 +                 if let CreateDatabaseError::AlreadyExists(_) = err {
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:29
    |
152 |         let database_name = convert_to_database(namespace);
    |                             ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |         let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */);
    |                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0425]: cannot find function `_construct_database_input` in this scope
   --> crates/catalog/glue/src/catalog.rs:154:21
    |
154 |         let input = _construct_database_input(database_name, properties);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `create_database` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:155:27
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_database` not found for this struct
...
155 |         match self.client.create_database(input).await {
    |                           ^^^^^^^^^^^^^^^ method not found in `GlueClient`
    |
help: one of the expressions' fields has a method of the same name
    |
155 |         match self.client.0.create_database(input).await {
    |                           ++

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:156:46
    |
156 |             Ok(_) => Ok(convert_to_namespace(database_name)),
    |                         -------------------- ^^^^^^^^^^^^^ expected `&Database`, found `Result<DatabaseInput, Error>`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected reference `&Database`
                    found enum `Result<DatabaseInput, iceberg::Error>`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0433]: failed to resolve: use of undeclared type `NamespaceAlreadyExistsError`
   --> crates/catalog/glue/src/catalog.rs:159:25
    |
159 |                     Err(NamespaceAlreadyExistsError::new(format!(
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `NamespaceAlreadyExistsError`

error[E0277]: `Result<DatabaseInput, iceberg::Error>` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:161:25
    |
161 |                         database_name
    |                         ^^^^^^^^^^^^^ `Result<DatabaseInput, iceberg::Error>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Result<DatabaseInput, iceberg::Error>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

