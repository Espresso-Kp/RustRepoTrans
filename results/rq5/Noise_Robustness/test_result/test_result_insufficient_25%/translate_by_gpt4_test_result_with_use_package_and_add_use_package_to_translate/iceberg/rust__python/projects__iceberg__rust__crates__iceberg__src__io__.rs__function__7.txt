Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Path`
   --> crates/iceberg/src/io.rs:213:30
    |
213 |             let local_path = Path::new(bucket_or_path);
    |                              ^^^^ use of undeclared type `Path`
    |
help: consider importing this struct
    |
51  + use std::path::Path;
    |

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:180:16
    |
180 |         Error::with_error_kind(
    |                ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:181:24
    |
181 |             ErrorKind::InvalidInput,
    |                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0609]: no field `s3fs` on type `Arc<Storage>`
   --> crates/iceberg/src/io.rs:193:30
    |
193 |             match self.inner.s3fs.delete(&bucket_or_path).await {
    |                              ^^^^ unknown field

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:197:36
    |
197 |                         ErrorKind::NotFound => {
    |                                    ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:198:40
    |
198 | ...                   Err(Error::with_error_kind(
    |                                  ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:199:44
    |
199 | ...                   ErrorKind::NotFound,
    |                                  ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:203:41
    |
203 |                         _ => Err(Error::with_error_kind(
    |                                         ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:204:40
    |
204 | ...                   ErrorKind::PermissionDenied,
    |                                  ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:219:36
    |
219 |                         Err(Error::with_error_kind(
    |                                    ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:220:40
    |
220 | ...                   ErrorKind::PermissionDenied,
    |                                  ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:226:28
    |
226 |                 Err(Error::with_error_kind(
    |                            ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:227:32
    |
227 |                     ErrorKind::NotFound,
    |                                ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:232:25
    |
232 |         _ => Err(Error::with_error_kind(
    |                         ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:233:24
    |
233 |             ErrorKind::InvalidInput,
    |                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

Some errors have detailed explanations: E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0433`.
error: could not compile `iceberg` (lib) due to 15 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 15 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Path`
   --> crates/iceberg/src/io.rs:213:30
    |
213 |             let local_path = Path::new(bucket_or_path);
    |                              ^^^^ use of undeclared type `Path`
    |
help: consider importing this struct
    |
51  + use std::path::Path;
    |

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:180:16
    |
180 |         Error::with_error_kind(
    |                ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:181:24
    |
181 |             ErrorKind::InvalidInput,
    |                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0609]: no field `s3fs` on type `Arc<Storage>`
   --> crates/iceberg/src/io.rs:193:30
    |
193 |             match self.inner.s3fs.delete(&bucket_or_path).await {
    |                              ^^^^ unknown field

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:197:36
    |
197 |                         ErrorKind::NotFound => {
    |                                    ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:198:40
    |
198 | ...                   Err(Error::with_error_kind(
    |                                  ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:199:44
    |
199 | ...                   ErrorKind::NotFound,
    |                                  ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:203:41
    |
203 |                         _ => Err(Error::with_error_kind(
    |                                         ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:204:40
    |
204 | ...                   ErrorKind::PermissionDenied,
    |                                  ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:219:36
    |
219 |                         Err(Error::with_error_kind(
    |                                    ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:220:40
    |
220 | ...                   ErrorKind::PermissionDenied,
    |                                  ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:226:28
    |
226 |                 Err(Error::with_error_kind(
    |                            ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:227:32
    |
227 |                     ErrorKind::NotFound,
    |                                ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no function or associated item named `with_error_kind` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:232:25
    |
232 |         _ => Err(Error::with_error_kind(
    |                         ^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `with_error_kind` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:233:24
    |
233 |             ErrorKind::InvalidInput,
    |                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

Some errors have detailed explanations: E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0433`.
error: could not compile `iceberg` (lib) due to 15 previous errors

