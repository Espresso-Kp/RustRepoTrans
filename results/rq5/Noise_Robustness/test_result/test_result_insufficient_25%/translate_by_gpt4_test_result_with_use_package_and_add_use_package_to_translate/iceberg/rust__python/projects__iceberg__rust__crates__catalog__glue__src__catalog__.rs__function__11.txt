Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0433]: failed to resolve: use of undeclared type `FileIOBuilder`
   --> crates/catalog/glue/src/catalog.rs:354:27
    |
354 |         let mut builder = FileIOBuilder::default();
    |                           ^^^^^^^^^^^^^ use of undeclared type `FileIOBuilder`
    |
help: consider importing this struct
    |
18  + use iceberg::io::FileIOBuilder;
    |

warning: unused import: `TableMetadataBuilder`
  --> crates/catalog/glue/src/catalog.rs:21:36
   |
21 | use iceberg::spec::{TableMetadata, TableMetadataBuilder};
   |                                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `create_metadata_location`, `get_default_table_location`
  --> crates/catalog/glue/src/catalog.rs:33:71
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:348:13
    |
348 |         let (database_name, table_name) = validate_namespace(namespace)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^   ------------------------------ this expression has type `std::string::String`
    |             |
    |             expected `String`, found `(_, _)`
    |
    = note: expected struct `std::string::String`
                found tuple `(_, _)`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:355:42
    |
355 |         builder.scheme_str(Some(creation.metadata_location.clone()));
    |                                          ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:357:42
    |
357 |         let metadata_location = creation.metadata_location.clone();
    |                                          ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0599]: no function or associated item named `from_input_file` found for struct `iceberg::spec::TableMetadata` in the current scope
   --> crates/catalog/glue/src/catalog.rs:359:39
    |
359 |         let metadata = TableMetadata::from_input_file(file)?;
    |                                       ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadata`

error[E0609]: no field `comment` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:364:35
    |
364 |             .description(creation.comment.clone())
    |                                   ^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `owner` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:365:29
    |
365 |             .owner(creation.owner.clone())
    |                             ^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0277]: the trait bound `std::string::String: From<std::collections::HashMap<_, _, _>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:367:25
    |
367 |             .parameters(properties)
    |              ---------- ^^^^^^^^^^ the trait `From<std::collections::HashMap<_, _, _>>` is not implemented for `std::string::String`, which is required by `std::collections::HashMap<_, _, _>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::collections::HashMap<_, _, _>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:367:14
    |
367 |             .parameters(properties)
    |              ^^^^^^^^^^------------ an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
367 |             .parameters(properties, /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:368:21
    |
368 |             .build()?;
    |                     ^ the trait `From<aws_sdk_glue::error::BuildError>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<iceberg::table::Table, iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_sdk_glue::error::BuildError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<iceberg::table::Table, iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_sdk_glue::error::BuildError>>`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:372:23
    |
372 |         let db_name = convert_to_database(&database_name)?;
    |                       ^^^^^^^^^^^^^^^^^^^---------------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
372 |         let db_name = convert_to_database(&database_name, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:373:48
    |
373 |         let glue_table = convert_to_glue_table(table_input, &metadata_location)?;
    |                          --------------------- ^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |                          |
    |                          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `utils::convert_to_glue_table`
   --> crates/catalog/glue/src/utils.rs:145:22
    |
144 | pub(crate) fn convert_to_glue_table(
    |               --------------------- required by a bound in this function
145 |     table_name: impl Into<String>,
    |                      ^^^^^^^^^^^^ required by this bound in `convert_to_glue_table`

error[E0061]: this function takes 5 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:373:26
    |
373 |         let glue_table = convert_to_glue_table(table_input, &metadata_location)?;
    |                          ^^^^^^^^^^^^^^^^^^^^^--------------------------------- three arguments of type `&iceberg::spec::TableMetadata`, `&std::collections::HashMap<std::string::String, std::string::String>`, and `std::option::Option<std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
    |     -----------------------------
146 |     metadata_location: String,
    |     -------------------------
147 |     metadata: &TableMetadata,
    |     ------------------------
148 |     properties: &HashMap<String, String>,
    |     ------------------------------------
149 |     prev_metadata_location: Option<String>,
    |     --------------------------------------
help: provide the arguments
    |
373 |         let glue_table = convert_to_glue_table(table_input, &metadata_location, /* &iceberg::spec::TableMetadata */, /* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<std::string::String> */)?;
    |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:377:28
    |
377 |             .database_name(db_name)
    |              ------------- ^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:378:25
    |
378 |             .catalog_id(catalog_id)
    |              ---------- ^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::catalog_id`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:112:45
    |
112 |     pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::catalog_id`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:383:25
    |
383 |         self.load_table(namespace).await
    |              ---------- ^^^^^^^^^ expected `&TableIdent`, found `&NamespaceIdent`
    |              |
    |              arguments to this method are incorrect
    |
    = note: expected reference `&TableIdent`
               found reference `&'life1 iceberg::NamespaceIdent`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:81:14
    |
81  |     async fn load_table(&self, table: &TableIdent) -> Result<Table>;
    |              ^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277, E0308, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 16 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared type `FileIOBuilder`
   --> crates/catalog/glue/src/catalog.rs:354:27
    |
354 |         let mut builder = FileIOBuilder::default();
    |                           ^^^^^^^^^^^^^ use of undeclared type `FileIOBuilder`
    |
help: consider importing this struct
    |
18  + use iceberg::io::FileIOBuilder;
    |

warning: unused import: `TableMetadataBuilder`
  --> crates/catalog/glue/src/catalog.rs:21:36
   |
21 | use iceberg::spec::{TableMetadata, TableMetadataBuilder};
   |                                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `create_metadata_location`, `get_default_table_location`
  --> crates/catalog/glue/src/catalog.rs:33:71
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
34 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:348:13
    |
348 |         let (database_name, table_name) = validate_namespace(namespace)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^   ------------------------------ this expression has type `std::string::String`
    |             |
    |             expected `String`, found `(_, _)`
    |
    = note: expected struct `std::string::String`
                found tuple `(_, _)`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:355:42
    |
355 |         builder.scheme_str(Some(creation.metadata_location.clone()));
    |                                          ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `metadata_location` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:357:42
    |
357 |         let metadata_location = creation.metadata_location.clone();
    |                                          ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0599]: no function or associated item named `from_input_file` found for struct `TableMetadata` in the current scope
   --> crates/catalog/glue/src/catalog.rs:359:39
    |
359 |         let metadata = TableMetadata::from_input_file(file)?;
    |                                       ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadata`

error[E0609]: no field `comment` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:364:35
    |
364 |             .description(creation.comment.clone())
    |                                   ^^^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0609]: no field `owner` on type `TableCreation`
   --> crates/catalog/glue/src/catalog.rs:365:29
    |
365 |             .owner(creation.owner.clone())
    |                             ^^^^^ unknown field
    |
    = note: available fields are: `name`, `location`, `schema`, `partition_spec`, `sort_order`, `properties`

error[E0277]: the trait bound `std::string::String: From<HashMap<_, _, _>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:367:25
    |
367 |             .parameters(properties)
    |              ---------- ^^^^^^^^^^ the trait `From<HashMap<_, _, _>>` is not implemented for `std::string::String`, which is required by `HashMap<_, _, _>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `HashMap<_, _, _>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:367:14
    |
367 |             .parameters(properties)
    |              ^^^^^^^^^^------------ an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
367 |             .parameters(properties, /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:368:21
    |
368 |             .build()?;
    |                     ^ the trait `From<aws_sdk_glue::error::BuildError>` is not implemented for `iceberg::Error`, which is required by `Result<iceberg::table::Table, iceberg::Error>: FromResidual<Result<Infallible, aws_sdk_glue::error::BuildError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<iceberg::table::Table, iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_sdk_glue::error::BuildError>>`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:372:23
    |
372 |         let db_name = convert_to_database(&database_name)?;
    |                       ^^^^^^^^^^^^^^^^^^^---------------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
372 |         let db_name = convert_to_database(&database_name, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `std::string::String: From<TableInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:373:48
    |
373 |         let glue_table = convert_to_glue_table(table_input, &metadata_location)?;
    |                          --------------------- ^^^^^^^^^^^ the trait `From<TableInput>` is not implemented for `std::string::String`, which is required by `TableInput: Into<std::string::String>`
    |                          |
    |                          required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `TableInput` to implement `Into<std::string::String>`
note: required by a bound in `convert_to_glue_table`
   --> crates/catalog/glue/src/utils.rs:145:22
    |
144 | pub(crate) fn convert_to_glue_table(
    |               --------------------- required by a bound in this function
145 |     table_name: impl Into<String>,
    |                      ^^^^^^^^^^^^ required by this bound in `convert_to_glue_table`

error[E0061]: this function takes 5 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:373:26
    |
373 |         let glue_table = convert_to_glue_table(table_input, &metadata_location)?;
    |                          ^^^^^^^^^^^^^^^^^^^^^--------------------------------- three arguments of type `&TableMetadata`, `&HashMap<std::string::String, std::string::String>`, and `std::option::Option<std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:144:15
    |
144 | pub(crate) fn convert_to_glue_table(
    |               ^^^^^^^^^^^^^^^^^^^^^
145 |     table_name: impl Into<String>,
    |     -----------------------------
146 |     metadata_location: String,
    |     -------------------------
147 |     metadata: &TableMetadata,
    |     ------------------------
148 |     properties: &HashMap<String, String>,
    |     ------------------------------------
149 |     prev_metadata_location: Option<String>,
    |     --------------------------------------
help: provide the arguments
    |
373 |         let glue_table = convert_to_glue_table(table_input, &metadata_location, /* &TableMetadata */, /* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<std::string::String> */)?;
    |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:377:28
    |
377 |             .database_name(db_name)
    |              ------------- ^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0277]: the trait bound `std::string::String: From<std::option::Option<&str>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:378:25
    |
378 |             .catalog_id(catalog_id)
    |              ---------- ^^^^^^^^^^ the trait `From<std::option::Option<&str>>` is not implemented for `std::string::String`, which is required by `std::option::Option<&str>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `std::option::Option<&str>` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::catalog_id`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:112:45
    |
112 |     pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::catalog_id`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:383:25
    |
383 |         self.load_table(namespace).await
    |              ---------- ^^^^^^^^^ expected `&TableIdent`, found `&NamespaceIdent`
    |              |
    |              arguments to this method are incorrect
    |
    = note: expected reference `&TableIdent`
               found reference `&'life1 NamespaceIdent`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:81:14
    |
81  |     async fn load_table(&self, table: &TableIdent) -> Result<Table>;
    |              ^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277, E0308, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 16 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

