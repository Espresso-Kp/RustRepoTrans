Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:558:8
    |
558 |     if lhs() == true || rhs() == true {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
558 |     if lhs(/* RecordBatch */) == true || rhs() == true {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:558:14
    |
558 |     if lhs() == true || rhs() == true {
    |        ----- ^^ ---- bool
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:558:25
    |
558 |     if lhs() == true || rhs() == true {
    |                         ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
558 |     if lhs() == true || rhs(/* RecordBatch */) == true {
    |                            ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:558:31
    |
558 |     if lhs() == true || rhs() == true {
    |                         ----- ^^ ---- bool
    |                         |
    |                         std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments
   --> crates/iceberg/src/arrow/reader.rs:559:28
    |
559 |         return Ok(Box::new(|| Ok(BooleanArray::from(vec![true]))));
    |                            ^^
    |                            |
    |                            expected closure that takes 1 argument
    |                            takes 0 arguments
    |
help: consider changing the closure to take and ignore the expected argument
    |
559 |         return Ok(Box::new(|_| Ok(BooleanArray::from(vec![true]))));
    |                            ~~~

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:561:8
    |
561 |     if lhs() == false {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
561 |     if lhs(/* RecordBatch */) == false {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:561:14
    |
561 |     if lhs() == false {
    |        ----- ^^ ----- bool
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:562:34
    |
562 |         let right_result = match rhs() {
    |                                  ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
562 |         let right_result = match rhs(/* RecordBatch */) {
    |                                     ~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:564:36
    |
564 |             Err(err) => return Err(ArrowError::from(err)),
    |                                --- ^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ArrowError`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
help: the type constructed contains `arrow_schema::ArrowError` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:564:32
    |
564 |             Err(err) => return Err(ArrowError::from(err)),
    |                                ^^^^---------------------^
    |                                    |
    |                                    this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:568:8
    |
568 |     if rhs() == false {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
568 |     if rhs(/* RecordBatch */) == false {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:568:14
    |
568 |     if rhs() == false {
    |        ----- ^^ ----- bool
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:569:33
    |
569 |         let left_result = match lhs() {
    |                                 ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
569 |         let left_result = match lhs(/* RecordBatch */) {
    |                                    ~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:571:36
    |
571 |             Err(err) => return Err(ArrowError::from(err)),
    |                                --- ^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ArrowError`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
help: the type constructed contains `arrow_schema::ArrowError` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:571:32
    |
571 |             Err(err) => return Err(ArrowError::from(err)),
    |                                ^^^^---------------------^
    |                                    |
    |                                    this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:576:12
    |
576 |     match (lhs(), rhs()) {
    |            ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
576 |     match (lhs(/* RecordBatch */), rhs()) {
    |               ~~~~~~~~~~~~~~~~~~~

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:576:19
    |
576 |     match (lhs(), rhs()) {
    |                   ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
576 |     match (lhs(), rhs(/* RecordBatch */)) {
    |                      ~~~~~~~~~~~~~~~~~~~

error[E0599]: the method `next` exists for struct `BooleanArray`, but its trait bounds were not satisfied
   --> crates/iceberg/src/arrow/reader.rs:579:42
    |
579 |                 let result = match (left.next(), right.next()) {
    |                                          ^^^^ method cannot be called on `BooleanArray` due to unsatisfied trait bounds
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:68:1
    |
68  | pub struct BooleanArray {
    | ----------------------- doesn't satisfy `BooleanArray: StreamExt` or `BooleanArray: Stream`
    |
    = note: the following trait bounds were not satisfied:
            `BooleanArray: Stream`
            which is required by `BooleanArray: StreamExt`

error[E0599]: the method `next` exists for struct `BooleanArray`, but its trait bounds were not satisfied
   --> crates/iceberg/src/arrow/reader.rs:579:56
    |
579 |                 let result = match (left.next(), right.next()) {
    |                                                        ^^^^ method cannot be called on `BooleanArray` due to unsatisfied trait bounds
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:68:1
    |
68  | pub struct BooleanArray {
    | ----------------------- doesn't satisfy `BooleanArray: StreamExt` or `BooleanArray: Stream`
    |
    = note: the following trait bounds were not satisfied:
            `BooleanArray: Stream`
            which is required by `BooleanArray: StreamExt`

error[E0425]: cannot find function `ok_or` in this scope
   --> crates/iceberg/src/arrow/reader.rs:580:62
    |
580 |                     (Some(left_batch), Some(right_batch)) => ok_or(left_batch?, right_batch?),
    |                                                              ^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:588:18
    |
588 |         _ => Err(ArrowError::ComputeError(String::from("Error computing 'or' function"))),
    |              --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ArrowError`
    |              |
    |              arguments to this enum variant are incorrect
    |
help: the type constructed contains `arrow_schema::ArrowError` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:588:14
    |
588 |         _ => Err(ArrowError::ComputeError(String::from("Error computing 'or' function"))),
    |              ^^^^-----------------------------------------------------------------------^
    |                  |
    |                  this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

Some errors have detailed explanations: E0057, E0308, E0369, E0425, E0593, E0599.
For more information about an error, try `rustc --explain E0057`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 19 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 19 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:558:8
    |
558 |     if lhs() == true || rhs() == true {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
558 |     if lhs(/* RecordBatch */) == true || rhs() == true {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:558:14
    |
558 |     if lhs() == true || rhs() == true {
    |        ----- ^^ ---- bool
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:558:25
    |
558 |     if lhs() == true || rhs() == true {
    |                         ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
558 |     if lhs() == true || rhs(/* RecordBatch */) == true {
    |                            ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:558:31
    |
558 |     if lhs() == true || rhs() == true {
    |                         ----- ^^ ---- bool
    |                         |
    |                         std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments
   --> crates/iceberg/src/arrow/reader.rs:559:28
    |
559 |         return Ok(Box::new(|| Ok(BooleanArray::from(vec![true]))));
    |                            ^^
    |                            |
    |                            expected closure that takes 1 argument
    |                            takes 0 arguments
    |
help: consider changing the closure to take and ignore the expected argument
    |
559 |         return Ok(Box::new(|_| Ok(BooleanArray::from(vec![true]))));
    |                            ~~~

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:561:8
    |
561 |     if lhs() == false {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
561 |     if lhs(/* RecordBatch */) == false {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:561:14
    |
561 |     if lhs() == false {
    |        ----- ^^ ----- bool
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:562:34
    |
562 |         let right_result = match rhs() {
    |                                  ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
562 |         let right_result = match rhs(/* RecordBatch */) {
    |                                     ~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:564:36
    |
564 |             Err(err) => return Err(ArrowError::from(err)),
    |                                --- ^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ArrowError`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
help: the type constructed contains `arrow_schema::ArrowError` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:564:32
    |
564 |             Err(err) => return Err(ArrowError::from(err)),
    |                                ^^^^---------------------^
    |                                    |
    |                                    this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:568:8
    |
568 |     if rhs() == false {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
568 |     if rhs(/* RecordBatch */) == false {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:568:14
    |
568 |     if rhs() == false {
    |        ----- ^^ ----- bool
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:569:33
    |
569 |         let left_result = match lhs() {
    |                                 ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
569 |         let left_result = match lhs(/* RecordBatch */) {
    |                                    ~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:571:36
    |
571 |             Err(err) => return Err(ArrowError::from(err)),
    |                                --- ^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ArrowError`
    |                                |
    |                                arguments to this enum variant are incorrect
    |
help: the type constructed contains `arrow_schema::ArrowError` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:571:32
    |
571 |             Err(err) => return Err(ArrowError::from(err)),
    |                                ^^^^---------------------^
    |                                    |
    |                                    this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:576:12
    |
576 |     match (lhs(), rhs()) {
    |            ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
576 |     match (lhs(/* RecordBatch */), rhs()) {
    |               ~~~~~~~~~~~~~~~~~~~

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:576:19
    |
576 |     match (lhs(), rhs()) {
    |                   ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
576 |     match (lhs(), rhs(/* RecordBatch */)) {
    |                      ~~~~~~~~~~~~~~~~~~~

error[E0599]: the method `next` exists for struct `BooleanArray`, but its trait bounds were not satisfied
   --> crates/iceberg/src/arrow/reader.rs:579:42
    |
579 |                 let result = match (left.next(), right.next()) {
    |                                          ^^^^ method cannot be called on `BooleanArray` due to unsatisfied trait bounds
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:68:1
    |
68  | pub struct BooleanArray {
    | ----------------------- doesn't satisfy `BooleanArray: StreamExt` or `BooleanArray: Stream`
    |
    = note: the following trait bounds were not satisfied:
            `BooleanArray: Stream`
            which is required by `BooleanArray: StreamExt`

error[E0599]: the method `next` exists for struct `BooleanArray`, but its trait bounds were not satisfied
   --> crates/iceberg/src/arrow/reader.rs:579:56
    |
579 |                 let result = match (left.next(), right.next()) {
    |                                                        ^^^^ method cannot be called on `BooleanArray` due to unsatisfied trait bounds
    |
   ::: /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-array-52.1.0/src/array/boolean_array.rs:68:1
    |
68  | pub struct BooleanArray {
    | ----------------------- doesn't satisfy `BooleanArray: StreamExt` or `BooleanArray: Stream`
    |
    = note: the following trait bounds were not satisfied:
            `BooleanArray: Stream`
            which is required by `BooleanArray: StreamExt`

error[E0425]: cannot find function `ok_or` in this scope
   --> crates/iceberg/src/arrow/reader.rs:580:62
    |
580 |                     (Some(left_batch), Some(right_batch)) => ok_or(left_batch?, right_batch?),
    |                                                              ^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:588:18
    |
588 |         _ => Err(ArrowError::ComputeError(String::from("Error computing 'or' function"))),
    |              --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ArrowError`
    |              |
    |              arguments to this enum variant are incorrect
    |
help: the type constructed contains `arrow_schema::ArrowError` due to the type of the argument passed
   --> crates/iceberg/src/arrow/reader.rs:588:14
    |
588 |         _ => Err(ArrowError::ComputeError(String::from("Error computing 'or' function"))),
    |              ^^^^-----------------------------------------------------------------------^
    |                  |
    |                  this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

Some errors have detailed explanations: E0057, E0308, E0369, E0425, E0593, E0599.
For more information about an error, try `rustc --explain E0057`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 19 previous errors; 1 warning emitted

