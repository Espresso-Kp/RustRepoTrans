Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error: expected one of `!`, `+`, `,`, `->`, `::`, or `>`, found `;`
   --> src/./ecdh.rs:431:35
    |
431 |     r.big::copy(&rom::CURVE_Order);
    |                                   ^ expected one of `!`, `+`, `,`, `->`, `::`, or `>`
    |
help: use a comma to separate type parameters
    |
431 |     r.big::copy(&rom::CURVE_Order), if wp.is_infinity() { 
    |                                   ~

error: invalid const generic expression
   --> src/./ecdh.rs:432:5
    |
432 | /     if wp.is_infinity() { 
433 | |         res = INVALID_PUBLIC_KEY; 
434 | |     }
    | |_____^
    |
help: expressions must be enclosed in braces to be used as const generic arguments
    |
432 ~     { if wp.is_infinity() { 
433 |         res = INVALID_PUBLIC_KEY; 
434 ~     } }
    |

error: expected one of `(`, `.`, `;`, `?`, `}`, or an operator, found `::`
   --> src/./ecdh.rs:431:10
    |
431 |     r.big::copy(&rom::CURVE_Order);
    |          ^^ expected one of `(`, `.`, `;`, `?`, `}`, or an operator

error[E0214]: parenthesized type parameters may only be used with a `Fn` trait
   --> src/./ecdh.rs:425:17
    |
425 |     let r: Big::new();
    |                 ^^^^^ only `Fn` traits may use parentheses

error[E0214]: parenthesized type parameters may only be used with a `Fn` trait
   --> src/./ecdh.rs:426:17
    |
426 |     let q: Big::new();
    |                 ^^^^^ only `Fn` traits may use parentheses

error[E0214]: parenthesized type parameters may only be used with a `Fn` trait
   --> src/./ecdh.rs:427:17
    |
427 |     let k: Big::new();
    |                 ^^^^^ only `Fn` traits may use parentheses

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `anssi::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <anssi::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `anssi::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <anssi::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `anssi::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <anssi::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `anssi::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `brainpool::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <brainpool::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `brainpool::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <brainpool::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `brainpool::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <brainpool::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `brainpool::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `goldilocks::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <goldilocks::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `goldilocks::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <goldilocks::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `goldilocks::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <goldilocks::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `goldilocks::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `hifive::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <hifive::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `hifive::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <hifive::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `hifive::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <hifive::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `hifive::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist256::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nist256::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist256::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nist256::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist256::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nist256::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nist256::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist384::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nist384::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist384::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nist384::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist384::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nist384::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nist384::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist521::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nist521::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist521::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nist521::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nist521::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nist521::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nist521::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums256e::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nums256e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums256e::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nums256e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums256e::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nums256e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nums256e::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums256w::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nums256w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums256w::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nums256w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums256w::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nums256w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nums256w::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums384e::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nums384e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums384e::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nums384e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums384e::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nums384e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nums384e::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums384w::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nums384w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums384w::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nums384w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums384w::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nums384w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nums384w::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums512w::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nums512w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums512w::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nums512w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums512w::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nums512w::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nums512w::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums512e::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <nums512e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums512e::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <nums512e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `nums512e::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <nums512e::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `nums512e::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `secp256k1::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <secp256k1::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `secp256k1::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <secp256k1::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `secp256k1::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <secp256k1::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `secp256k1::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `c25519::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <c25519::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `c25519::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <c25519::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `c25519::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <c25519::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `c25519::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `c41417::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <c41417::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `c41417::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <c41417::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `c41417::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <c41417::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `c41417::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `ed25519::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <ed25519::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `ed25519::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <ed25519::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `ed25519::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <ed25519::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `ed25519::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `bn254cx::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <bn254cx::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `bn254cx::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <bn254cx::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `bn254cx::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <bn254cx::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `bn254cx::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:425:12
    |
425 |     let r: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `bn254::big::Big`, you could use the fully-qualified path
    |
425 |     let r: <bn254::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:426:12
    |
426 |     let q: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `bn254::big::Big`, you could use the fully-qualified path
    |
426 |     let q: <bn254::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> src/./ecdh.rs:427:12
    |
427 |     let k: Big::new();
    |            ^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `new` implemented for `bn254::big::Big`, you could use the fully-qualified path
    |
427 |     let k: <bn254::big::Big as Example>::new;
    |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no function or associated item named `frombytes` found for struct `bn254::ecp::ECP` in the current scope
   --> src/./ecdh.rs:429:19
    |
429 |     let wp = ECP::frombytes(&w);
    |                   ^^^^^^^^^
    |                   |
    |                   function or associated item not found in `ECP`
    |                   help: there is an associated function with a similar name: `from_bytes`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `frombytes` not found for this struct

Some errors have detailed explanations: E0214, E0223, E0599.
For more information about an error, try `rustc --explain E0214`.
error: could not compile `amcl` (lib) due to 82 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 82 previous errors

