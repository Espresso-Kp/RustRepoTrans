Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0435]: attempt to use a non-constant value in a constant
   --> src/./ecdh.rs:687:29
    |
687 |     const TAG_SIZE: usize = t.len();
    |     --------------          ^ non-constant value
    |     |
    |     help: consider using `let` instead of `const`: `let TAG_SIZE`

error[E0425]: cannot find function `svdp_dh` in this scope
   --> src/./ecdh.rs:696:8
    |
696 |     if svdp_dh(&u, &v, &mut z){
    |        ^^^^^^^ not found in this scope

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:703:13
    |
703 |     let k = kdf2(sha, &vz, p1, 2 * ECP_ASKBYTE);
    |             ^^^^------------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./ecdh.rs:703:28
    |
703 |     let k = kdf2(sha, &vz, p1, 2 * ECP_ASKBYTE);
    |                            ^^
    = note:   expected enum `Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./ecdh.rs:153:8
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |        ^^^^ ----------  --------  ----------------  -----------  ------------
help: try wrapping the expression in `Some`
    |
703 |     let k = kdf2(sha, &vz, Some(p1), 2 * ECP_ASKBYTE);
    |                            +++++  +
help: provide the argument
    |
703 |     let k = kdf2(sha, &vz, /* Option<&[u8]> */, 2 * ECP_ASKBYTE, /* &mut [u8] */);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:705:25
    |
705 |     k1.copy_from_slice(&k[..ECP_ASKBYTE]);
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:706:25
    |
706 |     k2.copy_from_slice(&k[ECP_ASKBYTE..]);
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0425]: cannot find function `aes_cbc_iv0_decrypt` in this scope
   --> src/./ecdh.rs:708:13
    |
324 | pub fn cbc_iv0_decrypt(k: &[u8], c: &[u8]) -> Option<Vec<u8>> {
    | ------------------------------------------------------------- similarly named function `cbc_iv0_decrypt` defined here
...
708 |     let m = aes_cbc_iv0_decrypt(&k1, &mut c);
    |             ^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `cbc_iv0_decrypt`

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:703:13
    |
703 |     let k = kdf2(sha, &vz, p1, 2 * ECP_ASKBYTE);
    |             ^^^^------------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./ecdh.rs:703:28
    |
703 |     let k = kdf2(sha, &vz, p1, 2 * ECP_ASKBYTE);
    |                            ^^
    = note:   expected enum `std::option::Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./ecdh.rs:153:8
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |        ^^^^ ----------  --------  ----------------  -----------  ------------
help: try wrapping the expression in `Some`
    |
703 |     let k = kdf2(sha, &vz, Some(p1), 2 * ECP_ASKBYTE);
    |                            +++++  +
help: provide the argument
    |
703 |     let k = kdf2(sha, &vz, /* std::option::Option<&[u8]> */, 2 * ECP_ASKBYTE, /* &mut [u8] */);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0425, E0435, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 6 previous errors

