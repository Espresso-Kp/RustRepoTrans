Fail
file path is :
projects/deltachat-core/rust/src/aheader.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
warning: unused import: `std::collections::BTreeMap`
 --> src/aheader.rs:5:5
  |
5 | use std::collections::BTreeMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `Context as _`
 --> src/aheader.rs:9:20
  |
9 | use anyhow::{bail, Context as _, Error, Result};
  |                    ^^^^^^^^^^^^

error[E0599]: no function or associated item named `default` found for struct `SignedPublicKey` in the current scope
   --> src/aheader.rs:100:38
    |
100 |         public_key: SignedPublicKey::default(),
    |                                      ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0308]: mismatched types
   --> src/aheader.rs:114:81
    |
114 |         p = p.find(|c: char| !ws.contains(c) && c != '=' && c != ';').unwrap_or(p);
    |                                                                       --------- ^ expected `usize`, found `&str`
    |                                                                       |
    |                                                                       arguments to this method are incorrect
    |
help: the return type of this call is `&str` due to the type of the argument passed
   --> src/aheader.rs:114:13
    |
114 |         p = p.find(|c: char| !ws.contains(c) && c != '=' && c != ';').unwrap_or(p);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-^
    |                                                                                 |
    |                                                                                 this argument influences the return type of `unwrap_or`
note: method defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:951:12
    |
951 |     pub fn unwrap_or(self, default: T) -> T {
    |            ^^^^^^^^^

error[E0308]: mismatched types
   --> src/aheader.rs:114:13
    |
109 |     let mut p = header_str.as_str();
    |                 ------------------- expected due to this value
...
114 |         p = p.find(|c: char| !ws.contains(c) && c != '=' && c != ';').unwrap_or(p);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `usize`

error[E0308]: mismatched types
   --> src/aheader.rs:124:43
    |
124 |                 p = p.find(';').unwrap_or(p);
    |                                 --------- ^ expected `usize`, found `&str`
    |                                 |
    |                                 arguments to this method are incorrect
    |
help: the return type of this call is `&str` due to the type of the argument passed
   --> src/aheader.rs:124:21
    |
124 |                 p = p.find(';').unwrap_or(p);
    |                     ^^^^^^^^^^^^^^^^^^^^^^-^
    |                                           |
    |                                           this argument influences the return type of `unwrap_or`
note: method defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:951:12
    |
951 |     pub fn unwrap_or(self, default: T) -> T {
    |            ^^^^^^^^^

error[E0308]: mismatched types
   --> src/aheader.rs:124:21
    |
109 |     let mut p = header_str.as_str();
    |                 ------------------- expected due to this value
...
124 |                 p = p.find(';').unwrap_or(p);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `usize`

error[E0599]: no method named `pop` found for reference `&str` in the current scope
   --> src/aheader.rs:126:23
    |
126 |                     p.pop();
    |                       ^^^ method not found in `&str`

error[E0425]: cannot find function `dc_trim` in this scope
   --> src/aheader.rs:128:17
    |
128 |                 dc_trim(beg_attr_value);
    |                 ^^^^^^^ not found in this scope

error[E0425]: cannot find function `add_attribute` in this scope
   --> src/aheader.rs:132:21
    |
132 |                 if !add_attribute(&mut aheader, &attr_name, &attr_value) {
    |                     ^^^^^^^^^^^^^ not found in this scope

error[E0609]: no field `binary` on type `SignedPublicKey`
   --> src/aheader.rs:143:55
    |
143 |     if !aheader.addr.is_empty() && aheader.public_key.binary {
    |                                                       ^^^^^^ unknown field
    |
    = note: available fields are: `primary_key`, `details`, `public_subkeys`

Some errors have detailed explanations: E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `deltachat` (lib) generated 2 warnings
error: could not compile `deltachat` (lib) due to 9 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no function or associated item named `default` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/aheader.rs:100:38
    |
100 |         public_key: SignedPublicKey::default(),
    |                                      ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0609]: no field `binary` on type `pgp::SignedPublicKey`
   --> src/aheader.rs:143:55
    |
143 |     if !aheader.addr.is_empty() && aheader.public_key.binary {
    |                                                       ^^^^^^ unknown field
    |
    = note: available fields are: `primary_key`, `details`, `public_subkeys`

warning: `deltachat` (lib test) generated 2 warnings (2 duplicates)
error: could not compile `deltachat` (lib test) due to 9 previous errors; 2 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

