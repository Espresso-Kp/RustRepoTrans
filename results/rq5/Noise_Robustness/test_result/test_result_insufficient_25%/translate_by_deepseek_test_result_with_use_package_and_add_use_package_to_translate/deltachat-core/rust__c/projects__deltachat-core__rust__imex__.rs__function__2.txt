Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `Path` is defined multiple times
  --> src/imex.rs:15:17
   |
4  | use std::path::Path;
   |     --------------- previous import of the type `Path` here
...
15 | use std::path::{Path, PathBuf};
   |                 ^^^^--
   |                 |
   |                 `Path` reimported here
   |                 help: remove unnecessary import
   |
   = note: `Path` must be defined only once in the type namespace of this module

error[E0252]: the name `bail` is defined multiple times
  --> src/imex.rs:18:14
   |
7  | use anyhow::{bail, Result};
   |              ---- previous import of the macro `bail` here
...
18 | use anyhow::{bail, ensure, format_err, Context as _, Result};
   |              ^^^^--
   |              |
   |              `bail` reimported here
   |              help: remove unnecessary import
   |
   = note: `bail` must be defined only once in the macro namespace of this module

error[E0252]: the name `Result` is defined multiple times
  --> src/imex.rs:18:54
   |
7  | use anyhow::{bail, Result};
   |                    ------ previous import of the type `Result` here
...
18 | use anyhow::{bail, ensure, format_err, Context as _, Result};
   |                                                      ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0252]: the name `fs` is defined multiple times
  --> src/imex.rs:23:17
   |
9  | use std::fs::{self, DirEntry};
   |               ---- previous import of the module `fs` here
...
23 | use tokio::fs::{self, File};
   |                 ^^^^ `fs` reimported here
   |
   = note: `fs` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
23 | use tokio::fs::{self as other_fs, File};
   |                 ~~~~~~~~~~~~~~~~

error[E0252]: the name `File` is defined multiple times
  --> src/imex.rs:23:23
   |
11 | use std::fs::File;
   |     ------------- previous import of the type `File` here
...
23 | use tokio::fs::{self, File};
   |                       ^^^^ `File` reimported here
   |
   = note: `File` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
23 | use tokio::fs::{self, File as OtherFile};
   |                       ~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::Context`
 --> src/imex.rs:6:5
  |
6 | use crate::Context;
  |     ^^^^^^^^^^^^^^ no `Context` in the root
  |
help: a similar name exists in the module
  |
6 | use crate::context;
  |            ~~~~~~~
help: consider importing one of these items instead
  |
6 | use anyhow::Context;
  |     ~~~~~~~~~~~~~~~
6 | use core::task::Context;
  |     ~~~~~~~~~~~~~~~~~~~
6 | use crate::context::Context;
  |     ~~~~~~~~~~~~~~~~~~~~~~~
6 | use exif::Context;
  |     ~~~~~~~~~~~~~
    and 2 other candidates

error[E0425]: cannot find value `DC_BAK_PREFIX` in this scope
   --> src/imex.rs:137:26
    |
137 |         let prefix_len = DC_BAK_PREFIX.len();
    |                          ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BAK_SUFFIX` in this scope
   --> src/imex.rs:138:26
    |
138 |         let suffix_len = DC_BAK_SUFFIX.len();
    |                          ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BAK_PREFIX` in this scope
   --> src/imex.rs:140:56
    |
140 |         if name.len() > prefix_len && name.starts_with(DC_BAK_PREFIX)
    |                                                        ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_BAK_SUFFIX` in this scope
   --> src/imex.rs:141:58
    |
141 |             && name.len() > suffix_len && name.ends_with(DC_BAK_SUFFIX) {
    |                                                          ^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_OPEN_READONLY` in this scope
   --> src/imex.rs:146:63
    |
146 |             if dc_sqlite3_open(test_sql, &curr_pathNfilename, DC_OPEN_READONLY).await? {
    |                                                               ^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `std::sync::Arc`
 --> src/imex.rs:5:5
  |
5 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `SystemTime`, `UNIX_EPOCH`
 --> src/imex.rs:8:17
  |
8 | use std::time::{SystemTime, UNIX_EPOCH};
  |                 ^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `DirEntry`
 --> src/imex.rs:9:21
  |
9 | use std::fs::{self, DirEntry};
  |                     ^^^^^^^^

warning: unused import: `std::os::unix::fs::DirEntryExt`
  --> src/imex.rs:10:5
   |
10 | use std::os::unix::fs::DirEntryExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Path`
  --> src/imex.rs:15:17
   |
15 | use std::path::{Path, PathBuf};
   |                 ^^^^

warning: unused imports: `Result`, `bail`
  --> src/imex.rs:18:14
   |
18 | use anyhow::{bail, ensure, format_err, Context as _, Result};
   |              ^^^^                                    ^^^^^^

warning: unused imports: `File`, `self`
  --> src/imex.rs:23:17
   |
23 | use tokio::fs::{self, File};
   |                 ^^^^  ^^^^

error[E0277]: `std::result::Result<(), std::io::Error>` is not a future
   --> src/imex.rs:569:47
    |
569 |             fs::rename(temp_path, &dest_path).await?;
    |             ----------------------------------^^^^^
    |             |                                ||
    |             |                                |`std::result::Result<(), std::io::Error>` is not a future
    |             |                                help: remove the `.await`
    |             this call returns `std::result::Result<(), std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<(), std::io::Error>`, which is required by `std::result::Result<(), std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<(), std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<(), std::io::Error>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<std::fs::File, std::io::Error>` is not a future
   --> src/imex.rs:449:52
    |
449 |     let backup_file = File::open(backup_to_import).await?;
    |                       -----------------------------^^^^^
    |                       |                           ||
    |                       |                           |`std::result::Result<std::fs::File, std::io::Error>` is not a future
    |                       |                           help: remove the `.await`
    |                       this call returns `std::result::Result<std::fs::File, std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<std::fs::File, std::io::Error>`, which is required by `std::result::Result<std::fs::File, std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<std::fs::File, std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::fs::File, std::io::Error>` to implement `std::future::IntoFuture`

error[E0282]: type annotations needed for `&mut _`
   --> src/imex.rs:464:13
    |
464 |         let f = &mut file?;
    |             ^
465 |
466 |         let current_pos = f.raw_file_position();
    |                             ----------------- type must be known at this point
    |
help: consider giving `f` an explicit type, where the placeholders `_` are specified
    |
464 |         let f: &mut _ = &mut file?;
    |              ++++++++

error[E0277]: `std::result::Result<(), std::io::Error>` is not a future
   --> src/imex.rs:484:18
    |
483 |             fs::remove_file(unpacked_database)
    |             ---------------------------------- this call returns `std::result::Result<(), std::io::Error>`
484 |                 .await
    |                 -^^^^^
    |                 ||
    |                 |`std::result::Result<(), std::io::Error>` is not a future
    |                 help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<(), std::io::Error>`, which is required by `std::result::Result<(), std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<(), std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<(), std::io::Error>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<(), std::io::Error>` is not a future
   --> src/imex.rs:492:78
    |
492 |                     fs::rename(&from_path, context.get_blobdir().join(name)).await?;
    |                     ---------------------------------------------------------^^^^^
    |                     |                                                       ||
    |                     |                                                       |`std::result::Result<(), std::io::Error>` is not a future
    |                     |                                                       help: remove the `.await`
    |                     this call returns `std::result::Result<(), std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<(), std::io::Error>`, which is required by `std::result::Result<(), std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<(), std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<(), std::io::Error>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<std::fs::ReadDir, std::io::Error>` is not a future
   --> src/imex.rs:133:45
    |
133 |     let dir_handle = fs::read_dir(dir_name).await?;
    |                      -----------------------^^^^^
    |                      |                     ||
    |                      |                     |`std::result::Result<std::fs::ReadDir, std::io::Error>` is not a future
    |                      |                     help: remove the `.await`
    |                      this call returns `std::result::Result<std::fs::ReadDir, std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<std::fs::ReadDir, std::io::Error>`, which is required by `std::result::Result<std::fs::ReadDir, std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<std::fs::ReadDir, std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::fs::ReadDir, std::io::Error>` to implement `std::future::IntoFuture`

error[E0425]: cannot find function `dc_sqlite3_new` in this scope
   --> src/imex.rs:145:28
    |
145 |             let test_sql = dc_sqlite3_new(_context).await?;
    |                            ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dc_sqlite3_open` in this scope
   --> src/imex.rs:146:16
    |
146 |             if dc_sqlite3_open(test_sql, &curr_pathNfilename, DC_OPEN_READONLY).await? {
    |                ^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dc_sqlite3_get_config_int` in this scope
   --> src/imex.rs:147:40
    |
147 |                 let curr_backup_time = dc_sqlite3_get_config_int(test_sql, "backup_time", 0).await?;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0277]: `std::result::Result<std::fs::File, std::io::Error>` is not a future
   --> src/imex.rs:594:40
    |
594 |     let file = File::create(temp_path).await?;
    |                ------------------------^^^^^
    |                |                      ||
    |                |                      |`std::result::Result<std::fs::File, std::io::Error>` is not a future
    |                |                      help: remove the `.await`
    |                this call returns `std::result::Result<std::fs::File, std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<std::fs::File, std::io::Error>`, which is required by `std::result::Result<std::fs::File, std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<std::fs::File, std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::fs::File, std::io::Error>` to implement `std::future::IntoFuture`

error[E0277]: `std::result::Result<std::fs::File, std::io::Error>` is not a future
   --> src/imex.rs:606:55
    |
606 |         let mut file = File::open(blob.to_abs_path()).await?;
    |                        -------------------------------^^^^^
    |                        |                             ||
    |                        |                             |`std::result::Result<std::fs::File, std::io::Error>` is not a future
    |                        |                             help: remove the `.await`
    |                        this call returns `std::result::Result<std::fs::File, std::io::Error>`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<std::fs::File, std::io::Error>`, which is required by `std::result::Result<std::fs::File, std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<std::fs::File, std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<std::fs::File, std::io::Error>` to implement `std::future::IntoFuture`

warning: unused import: `futures::StreamExt`
  --> src/imex.rs:20:5
   |
20 | use futures::StreamExt;
   |     ^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0252, E0277, E0282, E0425, E0432.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 8 warnings
error: could not compile `deltachat` (lib) due to 22 previous errors; 8 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 8 warnings (8 duplicates)
error: could not compile `deltachat` (lib test) due to 22 previous errors; 8 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

