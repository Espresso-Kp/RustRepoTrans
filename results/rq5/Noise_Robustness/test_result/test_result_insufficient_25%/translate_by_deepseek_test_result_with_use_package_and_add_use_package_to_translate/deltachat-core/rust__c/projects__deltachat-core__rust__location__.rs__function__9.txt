Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `goto_cleanup` in this scope
   --> src/location.rs:352:9
    |
352 |         goto_cleanup!();
    |         ^^^^^^^^^^^^

error: cannot find macro `cleanup` in this scope
   --> src/location.rs:375:5
    |
375 |     cleanup!();
    |     ^^^^^^^

error[E0433]: failed to resolve: could not find `Step` in `rusqlite`
   --> src/location.rs:357:69
    |
357 |     while stmt_chats.as_mut().unwrap().step().unwrap() == rusqlite::Step::Row {
    |                                                                     ^^^^ could not find `Step` in `rusqlite`
    |
help: consider importing one of these items
    |
13  + use core::iter::Step;
    |
13  + use std::iter::Step;
    |
help: if you import `Step`, refer to it directly
    |
357 -     while stmt_chats.as_mut().unwrap().step().unwrap() == rusqlite::Step::Row {
357 +     while stmt_chats.as_mut().unwrap().step().unwrap() == Step::Row {
    |

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:362:73
    |
362 |             &[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF],
    |                                                                         ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:364:104
    |
364 |         stmt_insert.as_mut().unwrap().bind(&[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF]).unwrap();
    |                                                                                                        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_EVENT_LOCATION_CHANGED` in this scope
   --> src/location.rs:371:29
    |
371 |         context.cb(context, DC_EVENT_LOCATION_CHANGED, DC_CONTACT_ID_SELF, 0);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:371:56
    |
371 |         context.cb(context, DC_EVENT_LOCATION_CHANGED, DC_CONTACT_ID_SELF, 0);
    |                                                        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_null_or_invalid` found for reference `&context::Context` in the current scope
   --> src/location.rs:350:16
    |
350 |     if context.is_null_or_invalid() || latitude == 0.0 && longitude == 0.0 {
    |                ^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/location.rs:355:100
    |
355 | ... WHERE locations_send_until>?;", &[&time(None) as &dyn rusqlite::ToSql]).await?);
    |                                        ^^^^ ----
    |                                             |
    |                                             unexpected argument of type `std::option::Option<_>`
    |                                             help: remove the extra argument
    |
note: function defined here
   --> src/tools.rs:466:15
    |
466 | pub(crate) fn time() -> i64 {
    |               ^^^^

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/location.rs:355:97
    |
355 | ...(context.sql.execute("SELECT id FROM chats WHERE locations_send_until>?;", &[&time(None) as &dyn rusqlite::ToSql]).await?);
    |                 ------- required by a bound introduced by this call           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql; 1]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql; 1]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql; 1]`
    = note: required for `&[&dyn rusqlite::ToSql; 1]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0599]: no method named `bind` found for mutable reference `&mut usize` in the current scope
   --> src/location.rs:356:34
    |
356 |     stmt_chats.as_mut().unwrap().bind(&[&time(None) as &dyn rusqlite::ToSql]).unwrap();
    |                                  ^^^^ method not found in `&mut usize`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/location.rs:356:42
    |
356 |     stmt_chats.as_mut().unwrap().bind(&[&time(None) as &dyn rusqlite::ToSql]).unwrap();
    |                                          ^^^^ ----
    |                                               |
    |                                               unexpected argument of type `std::option::Option<_>`
    |                                               help: remove the extra argument
    |
note: function defined here
   --> src/tools.rs:466:15
    |
466 | pub(crate) fn time() -> i64 {
    |               ^^^^

error[E0599]: no method named `step` found for mutable reference `&mut usize` in the current scope
   --> src/location.rs:357:40
    |
357 |     while stmt_chats.as_mut().unwrap().step().unwrap() == rusqlite::Step::Row {
    |                                        ^^^^ method not found in `&mut usize`

error[E0599]: no method named `read_column` found for mutable reference `&mut usize` in the current scope
   --> src/location.rs:358:57
    |
358 |         let chat_id: u32 = stmt_chats.as_mut().unwrap().read_column::<i32>(0).unwrap() as u32;
    |                                                         ^^^^^^^^^^^ method not found in `&mut usize`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/location.rs:362:50
    |
362 |             &[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF],
    |                                                  ^^^^ ----
    |                                                       |
    |                                                       unexpected argument of type `std::option::Option<_>`
    |                                                       help: remove the extra argument
    |
note: function defined here
   --> src/tools.rs:466:15
    |
466 | pub(crate) fn time() -> i64 {
    |               ^^^^

error[E0308]: mismatched types
   --> src/location.rs:362:49
    |
362 |             &[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF],
    |                                                 ^^^^^^^^^^^ expected `&f64`, found `&i64`
    |
    = note: expected reference `&f64`
               found reference `&i64`

error[E0282]: type annotations needed for `std::option::Option<T>`
   --> src/location.rs:347:9
    |
347 |     let mut stmt_insert = None;
    |         ^^^^^^^^^^^^^^^
...
364 |         stmt_insert.as_mut().unwrap().bind(&[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF]).unwrap();
    |                                       ---- type must be known at this point
    |
help: consider giving `stmt_insert` an explicit type, where the type for type parameter `T` is specified
    |
347 |     let mut stmt_insert: std::option::Option<T> = None;
    |                        ++++++++++++++++++++++++

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/location.rs:364:81
    |
364 |         stmt_insert.as_mut().unwrap().bind(&[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF]).unwrap();
    |                                                                                 ^^^^ ----
    |                                                                                      |
    |                                                                                      unexpected argument of type `std::option::Option<_>`
    |                                                                                      help: remove the extra argument
    |
note: function defined here
   --> src/tools.rs:466:15
    |
466 | pub(crate) fn time() -> i64 {
    |               ^^^^

error[E0308]: mismatched types
   --> src/location.rs:364:80
    |
364 |         stmt_insert.as_mut().unwrap().bind(&[&latitude, &longitude, &accuracy, &time(None), &chat_id, &DC_CONTACT_ID_SELF]).unwrap();
    |                                                                                ^^^^^^^^^^^ expected `&f64`, found `&i64`
    |
    = note: expected reference `&f64`
               found reference `&i64`

error[E0599]: no method named `cb` found for reference `&context::Context` in the current scope
   --> src/location.rs:371:17
    |
371 |         context.cb(context, DC_EVENT_LOCATION_CHANGED, DC_CONTACT_ID_SELF, 0);
    |                 ^^ method not found in `&Context`

error[E0425]: cannot find function `schedule_MAYBE_SEND_LOCATIONS` in this scope
   --> src/location.rs:372:9
    |
372 |         schedule_MAYBE_SEND_LOCATIONS(context, 0).await;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/location.rs:355:97
    |
355 | ...(context.sql.execute("SELECT id FROM chats WHERE locations_send_until>?;", &[&time(None) as &dyn rusqlite::ToSql]).await?);
    |                 ------- required by a bound introduced by this call           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql; 1]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql; 1]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql; 1]`
    = note: required for `&[&dyn rusqlite::ToSql; 1]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

Some errors have detailed explanations: E0061, E0277, E0282, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 21 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 21 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

