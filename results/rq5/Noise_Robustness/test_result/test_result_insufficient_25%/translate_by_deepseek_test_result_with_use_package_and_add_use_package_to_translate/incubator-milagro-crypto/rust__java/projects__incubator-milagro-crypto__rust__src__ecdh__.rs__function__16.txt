Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `kdf2` is defined multiple times
   --> src/./ecdh.rs:747:1
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    | ------------------------------------------------------------------------------ previous definition of the value `kdf2` here
...
747 | fn kdf2(sha: usize, vz: &[u8], p1: &[u8], key_len: usize) -> Vec<u8> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `kdf2` redefined here
    |
    = note: `kdf2` must be defined only once in the value namespace of this module

error[E0428]: the name `hmac` is defined multiple times
   --> src/./ecdh.rs:755:1
    |
227 | pub fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | -------------------------------------------------------------------------------- previous definition of the value `hmac` here
...
755 | fn hmac(sha: usize, m: &[u8], k: &[u8], olen: usize, tag: &mut [u8]) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hmac` redefined here
    |
    = note: `hmac` must be defined only once in the value namespace of this module

error[E0428]: the name `hashit` is defined multiple times
   --> src/./ecdh.rs:795:1
    |
55  | fn hashit(sha: usize, a: &[u8], n: usize, b: Option<&[u8]>, pad: usize, w: &mut [u8]) {
    | ------------------------------------------------------------------------------------- previous definition of the value `hashit` here
...
795 | fn hashit(sha: usize, input: &[u8], input_offset: usize, input2: Option<&[u8]>, input2_offset: usize, output: &mut [u8]) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hashit` redefined here
    |
    = note: `hashit` must be defined only once in the value namespace of this module

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:705:13
    |
705 |     let k = kdf2(sha, &vz, p1, 2 * aes_key);
    |             ^^^^--------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./ecdh.rs:705:28
    |
705 |     let k = kdf2(sha, &vz, p1, 2 * aes_key);
    |                            ^^
    = note:   expected enum `Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./ecdh.rs:153:8
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |        ^^^^ ----------  --------  ----------------  -----------  ------------
help: try wrapping the expression in `Some`
    |
705 |     let k = kdf2(sha, &vz, Some(p1), 2 * aes_key);
    |                            +++++  +
help: provide the argument
    |
705 |     let k = kdf2(sha, &vz, /* Option<&[u8]> */, 2 * aes_key, /* &mut [u8] */);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:708:17
    |
708 |         k1[i] = k[i];
    |                 ^^-^
    |                   |
    |                   cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:709:17
    |
709 |         k2[i] = k[aes_key + i];
    |                 ^^^^^^^^^^^^^^
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0061]: this function takes 5 arguments but 4 arguments were supplied
   --> src/./ecdh.rs:705:13
    |
705 |     let k = kdf2(sha, &vz, p1, 2 * aes_key);
    |             ^^^^--------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./ecdh.rs:705:28
    |
705 |     let k = kdf2(sha, &vz, p1, 2 * aes_key);
    |                            ^^
    = note:   expected enum `std::option::Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./ecdh.rs:153:8
    |
153 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |        ^^^^ ----------  --------  ----------------  -----------  ------------
help: try wrapping the expression in `Some`
    |
705 |     let k = kdf2(sha, &vz, Some(p1), 2 * aes_key);
    |                            +++++  +
help: provide the argument
    |
705 |     let k = kdf2(sha, &vz, /* std::option::Option<&[u8]> */, 2 * aes_key, /* &mut [u8] */);
    |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0428, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 6 previous errors

