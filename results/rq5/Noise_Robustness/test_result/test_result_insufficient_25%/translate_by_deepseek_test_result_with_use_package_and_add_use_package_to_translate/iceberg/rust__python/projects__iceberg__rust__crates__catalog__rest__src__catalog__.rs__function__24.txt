Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0599]: no method named `identifier_to_tuple_without_catalog` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:33
    |
490 |     let identifier_tuple = self.identifier_to_tuple_without_catalog(table)?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `url` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:20
    |
491 |     let url = self.url(
    |               -----^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:492:9
    |
492 |         Endpoints::drop_table,
    |         ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0599]: no method named `_split_identifier_for_path` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:495:14
    |
495 |         self._split_identifier_for_path(identifier_tuple)?,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `0` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:497:25
    |
497 |     let response = self.0.execute(Request::delete(&url)).await?;
    |                         ^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
497 |     let response = self.client.0.execute(Request::delete(&url)).await?;
    |                         +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:44
    |
497 |     let response = self.0.execute(Request::delete(&url)).await?;
    |                                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:502:69
    |
502 |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:502:69
    |
502 |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:502:91
    |
502 |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
    |                                                                                           ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0599]: no method named `_handle_non_200_response` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:503:14
    |
503 |         self._handle_non_200_response(error_response, 404)?;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:501:12
    |
501 |       } else {
    |  ____________^
502 | |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
503 | |         self._handle_non_200_response(error_response, 404)?;
504 | |     }
    | |_____^ expected `Result<(), Error>`, found `()`
    |
    = note:   expected enum `Result<(), iceberg::Error>`
            found unit type `()`

Some errors have detailed explanations: E0277, E0308, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `identifier_to_tuple_without_catalog` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:490:33
    |
490 |     let identifier_tuple = self.identifier_to_tuple_without_catalog(table)?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `url` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:491:20
    |
491 |     let url = self.url(
    |               -----^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:492:9
    |
492 |         Endpoints::drop_table,
    |         ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0599]: no method named `_split_identifier_for_path` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:495:14
    |
495 |         self._split_identifier_for_path(identifier_tuple)?,
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `0` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:497:25
    |
497 |     let response = self.0.execute(Request::delete(&url)).await?;
    |                         ^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
497 |     let response = self.client.0.execute(Request::delete(&url)).await?;
    |                         +++++++

error[E0599]: no function or associated item named `delete` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:497:44
    |
497 |     let response = self.0.execute(Request::delete(&url)).await?;
    |                                            ^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:502:69
    |
502 |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:502:69
    |
502 |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:502:91
    |
502 |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
    |                                                                                           ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0599]: no method named `_handle_non_200_response` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:503:14
    |
503 |         self._handle_non_200_response(error_response, 404)?;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:501:12
    |
501 |       } else {
    |  ____________^
502 | |         let error_response: ErrorResponse = serde_json::from_slice(&response.bytes().await?)?;
503 | |         self._handle_non_200_response(error_response, 404)?;
504 | |     }
    | |_____^ expected `Result<(), Error>`, found `()`
    |
    = note:   expected enum `Result<(), iceberg::Error>`
            found unit type `()`

Some errors have detailed explanations: E0277, E0308, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...

