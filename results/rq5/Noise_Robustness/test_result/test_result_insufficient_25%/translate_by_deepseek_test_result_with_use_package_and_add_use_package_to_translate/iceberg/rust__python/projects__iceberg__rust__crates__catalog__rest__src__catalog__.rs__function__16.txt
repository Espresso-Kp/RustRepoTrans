Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:318:19
    |
318 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
20  + use serde_json::json;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace).await?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `url` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:325:21
    |
325 |         .post(&self.url(Endpoints::create_namespace))
    |                     ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:325:25
    |
325 |         .post(&self.url(Endpoints::create_namespace))
    |                         ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0277]: the trait bound `for<'de> iceberg::Namespace: Deserialize<'de>` is not satisfied
   --> crates/catalog/rest/src/catalog.rs:331:21
    |
331 |         Ok(response.json().await?)
    |                     ^^^^ the trait `for<'de> Deserialize<'de>` is not implemented for `iceberg::Namespace`, which is required by `iceberg::Namespace: DeserializeOwned`
    |
    = help: the following other types implement trait `Deserialize<'de>`:
              bool
              char
              isize
              i8
              i16
              i32
              i64
              i128
            and 217 others
    = note: required for `iceberg::Namespace` to implement `DeserializeOwned`
note: required by a bound in `Response::json`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/response.rs:267:26
    |
267 |     pub async fn json<T: DeserializeOwned>(self) -> crate::Result<T> {
    |                          ^^^^^^^^^^^^^^^^ required by this bound in `Response::json`

error[E0599]: no method named `_handle_non_200_response` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:334:14
    |
334 |         self._handle_non_200_response(error_response.error, response.status()).await?;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:334:54
    |
334 |         self._handle_non_200_response(error_response.error, response.status()).await?;
    |                                                      ^^^^^ private field

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:332:12
    |
332 |       } else {
    |  ____________^
333 | |         let error_response: ErrorResponse = response.json().await?;
334 | |         self._handle_non_200_response(error_response.error, response.status()).await?;
    | |                                                                                      - help: remove this semicolon to return this value
335 | |     }
    | |_____^ expected `Result<Namespace, Error>`, found `()`
    |
    = note:   expected enum `Result<iceberg::Namespace, iceberg::Error>`
            found unit type `()`

Some errors have detailed explanations: E0277, E0308, E0433, E0599, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error: cannot find macro `json` in this scope
   --> crates/catalog/rest/src/catalog.rs:318:19
    |
318 |     let payload = json!({
    |                   ^^^^
    |
help: consider importing this macro
    |
20  + use serde_json::json;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace).await?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no method named `url` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:325:21
    |
325 |         .post(&self.url(Endpoints::create_namespace))
    |                     ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:325:25
    |
325 |         .post(&self.url(Endpoints::create_namespace))
    |                         ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0277]: the trait bound `for<'de> Namespace: Deserialize<'de>` is not satisfied
   --> crates/catalog/rest/src/catalog.rs:331:21
    |
331 |         Ok(response.json().await?)
    |                     ^^^^ the trait `for<'de> Deserialize<'de>` is not implemented for `Namespace`, which is required by `Namespace: DeserializeOwned`
    |
    = help: the following other types implement trait `Deserialize<'de>`:
              bool
              char
              isize
              i8
              i16
              i32
              i64
              i128
            and 217 others
    = note: required for `Namespace` to implement `DeserializeOwned`
note: required by a bound in `Response::json`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/response.rs:267:26
    |
267 |     pub async fn json<T: DeserializeOwned>(self) -> crate::Result<T> {
    |                          ^^^^^^^^^^^^^^^^ required by this bound in `Response::json`

error[E0599]: no method named `_handle_non_200_response` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:334:14
    |
334 |         self._handle_non_200_response(error_response.error, response.status()).await?;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0616]: field `error` of struct `ErrorResponse` is private
   --> crates/catalog/rest/src/catalog.rs:334:54
    |
334 |         self._handle_non_200_response(error_response.error, response.status()).await?;
    |                                                      ^^^^^ private field

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:332:12
    |
332 |       } else {
    |  ____________^
333 | |         let error_response: ErrorResponse = response.json().await?;
334 | |         self._handle_non_200_response(error_response.error, response.status()).await?;
    | |                                                                                      - help: remove this semicolon to return this value
335 | |     }
    | |_____^ expected `Result<Namespace, Error>`, found `()`
    |
    = note:   expected enum `Result<Namespace, iceberg::Error>`
            found unit type `()`

Some errors have detailed explanations: E0277, E0308, E0433, E0599, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

