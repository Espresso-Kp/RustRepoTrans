Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Backtrace`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:374:24
    |
374 |             backtrace: Backtrace::new(),
    |                        ^^^^^^^^^ use of undeclared type `Backtrace`
    |
help: consider importing this struct
    |
18  + use std::backtrace::Backtrace;
    |

error[E0616]: field `field` of struct `term::BoundReference` is private
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:361:28
    |
361 |     let field = &reference.field;
    |                            ^^^^^ private field
    |
help: a method `field` also exists, call it with parentheses
    |
361 |     let field = &reference.field();
    |                                 ++

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:365:19
    |
365 |         return Ok(ROWS_MIGHT_MATCH);
    |                -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                |
    |                arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:365:16
    |
365 |         return Ok(ROWS_MIGHT_MATCH);
    |                ^^^----------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
365 |         return Ok(ROWS_MIGHT_MATCH?);
    |                                   +

error[E0599]: no variant or associated item named `ValueError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:370:30
    |
370 |             kind: ErrorKind::ValueError,
    |                              ^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `ValueError` not found for this enum

error[E0609]: no field `value` on type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:378:24
    |
378 |     let prefix = datum.value.to_string();
    |                        ^^^^^ unknown field

error[E0609]: no field `value` on type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:385:78
    |
385 |             let lower_bound = from_bytes(field.field_type, lower_bound_bytes.value.as_slice());
    |                                                                              ^^^^^ unknown field

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:385:31
    |
385 |             let lower_bound = from_bytes(field.field_type, lower_bound_bytes.value.as_slice());
    |                               ^^^^^^^^^^ not found in this scope

error[E0609]: no field `value` on type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:386:78
    |
386 |             let upper_bound = from_bytes(field.field_type, upper_bound_bytes.value.as_slice());
    |                                                                              ^^^^^ unknown field

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:386:31
    |
386 |             let upper_bound = from_bytes(field.field_type, upper_bound_bytes.value.as_slice());
    |                               ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:390:27
    |
390 |                 return Ok(ROWS_MIGHT_MATCH);
    |                        -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                        |
    |                        arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:390:24
    |
390 |                 return Ok(ROWS_MIGHT_MATCH);
    |                        ^^^----------------^
    |                           |
    |                           this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
390 |                 return Ok(ROWS_MIGHT_MATCH?);
    |                                           +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:396:31
    |
396 |                     return Ok(ROWS_MIGHT_MATCH);
    |                            -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                            |
    |                            arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:396:28
    |
396 |                     return Ok(ROWS_MIGHT_MATCH);
    |                            ^^^----------------^
    |                               |
    |                               this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
396 |                     return Ok(ROWS_MIGHT_MATCH?);
    |                                               +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:400:31
    |
400 |                     return Ok(ROWS_CANNOT_MATCH);
    |                            -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                            |
    |                            arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:400:28
    |
400 |                     return Ok(ROWS_CANNOT_MATCH);
    |                            ^^^-----------------^
    |                               |
    |                               this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
400 |                     return Ok(ROWS_CANNOT_MATCH?);
    |                                                +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:406:8
    |
406 |     Ok(ROWS_MIGHT_MATCH)
    |     -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |     |
    |     arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:406:5
    |
406 |     Ok(ROWS_MIGHT_MATCH)
    |     ^^^----------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
406 |     Ok(ROWS_MIGHT_MATCH?)
    |                        +

Some errors have detailed explanations: E0308, E0425, E0433, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 13 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Backtrace`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:374:24
    |
374 |             backtrace: Backtrace::new(),
    |                        ^^^^^^^^^ use of undeclared type `Backtrace`
    |
help: consider importing this struct
    |
18  + use std::backtrace::Backtrace;
    |

error[E0616]: field `field` of struct `term::BoundReference` is private
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:361:28
    |
361 |     let field = &reference.field;
    |                            ^^^^^ private field
    |
help: a method `field` also exists, call it with parentheses
    |
361 |     let field = &reference.field();
    |                                 ++

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:365:19
    |
365 |         return Ok(ROWS_MIGHT_MATCH);
    |                -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                |
    |                arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:365:16
    |
365 |         return Ok(ROWS_MIGHT_MATCH);
    |                ^^^----------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
365 |         return Ok(ROWS_MIGHT_MATCH?);
    |                                   +

error[E0599]: no variant or associated item named `ValueError` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:370:30
    |
370 |             kind: ErrorKind::ValueError,
    |                              ^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `ValueError` not found for this enum

error[E0609]: no field `value` on type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:378:24
    |
378 |     let prefix = datum.value.to_string();
    |                        ^^^^^ unknown field

error[E0609]: no field `value` on type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:385:78
    |
385 |             let lower_bound = from_bytes(field.field_type, lower_bound_bytes.value.as_slice());
    |                                                                              ^^^^^ unknown field

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:385:31
    |
385 |             let lower_bound = from_bytes(field.field_type, lower_bound_bytes.value.as_slice());
    |                               ^^^^^^^^^^ not found in this scope

error[E0609]: no field `value` on type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:386:78
    |
386 |             let upper_bound = from_bytes(field.field_type, upper_bound_bytes.value.as_slice());
    |                                                                              ^^^^^ unknown field

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:386:31
    |
386 |             let upper_bound = from_bytes(field.field_type, upper_bound_bytes.value.as_slice());
    |                               ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:390:27
    |
390 |                 return Ok(ROWS_MIGHT_MATCH);
    |                        -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                        |
    |                        arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:390:24
    |
390 |                 return Ok(ROWS_MIGHT_MATCH);
    |                        ^^^----------------^
    |                           |
    |                           this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
390 |                 return Ok(ROWS_MIGHT_MATCH?);
    |                                           +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:396:31
    |
396 |                     return Ok(ROWS_MIGHT_MATCH);
    |                            -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                            |
    |                            arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:396:28
    |
396 |                     return Ok(ROWS_MIGHT_MATCH);
    |                            ^^^----------------^
    |                               |
    |                               this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
396 |                     return Ok(ROWS_MIGHT_MATCH?);
    |                                               +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:400:31
    |
400 |                     return Ok(ROWS_CANNOT_MATCH);
    |                            -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                            |
    |                            arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:400:28
    |
400 |                     return Ok(ROWS_CANNOT_MATCH);
    |                            ^^^-----------------^
    |                               |
    |                               this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
400 |                     return Ok(ROWS_CANNOT_MATCH?);
    |                                                +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:406:8
    |
406 |     Ok(ROWS_MIGHT_MATCH)
    |     -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |     |
    |     arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:406:5
    |
406 |     Ok(ROWS_MIGHT_MATCH)
    |     ^^^----------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
406 |     Ok(ROWS_MIGHT_MATCH?)
    |                        +

Some errors have detailed explanations: E0308, E0425, E0433, E0599, E0609, E0616.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 13 previous errors

