Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:296:51
    |
296 |     let database_name = convert_to_database(&self.glue, namespace)?;
    |                                                   ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:296:57
    |
296 |     let database_name = convert_to_database(&self.glue, namespace)?;
    |                         -------------------             ^^^^^^^^^ expected `&HashMap<String, String>`, found `&NamespaceIdent`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected reference `&std::collections::HashMap<std::string::String, std::string::String>`
               found reference `&'life1 iceberg::NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:302:26
    |
302 |             None => self.glue.get_tables().database_name(database_name.clone()).send().await?,
    |                          ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:303:33
    |
303 |             Some(token) => self.glue.get_tables().database_name(database_name.clone()).next_token(token).send().await?,
    |                                 ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
   --> crates/catalog/glue/src/catalog.rs:315:60
    |
315 |         .map(|table| Ok((database_name.clone(), table.name.unwrap_or_default())))
    |                                                            ^^^^^^^^^^^^^^^^^ method not found in `String`

Some errors have detailed explanations: E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:296:51
    |
296 |     let database_name = convert_to_database(&self.glue, namespace)?;
    |                                                   ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:296:57
    |
296 |     let database_name = convert_to_database(&self.glue, namespace)?;
    |                         -------------------             ^^^^^^^^^ expected `&HashMap<String, String>`, found `&NamespaceIdent`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected reference `&HashMap<std::string::String, std::string::String>`
               found reference `&'life1 NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:302:26
    |
302 |             None => self.glue.get_tables().database_name(database_name.clone()).send().await?,
    |                          ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:303:33
    |
303 |             Some(token) => self.glue.get_tables().database_name(database_name.clone()).next_token(token).send().await?,
    |                                 ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no method named `unwrap_or_default` found for struct `std::string::String` in the current scope
   --> crates/catalog/glue/src/catalog.rs:315:60
    |
315 |         .map(|table| Ok((database_name.clone(), table.name.unwrap_or_default())))
    |                                                            ^^^^^^^^^^^^^^^^^ method not found in `String`

Some errors have detailed explanations: E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg-catalog-glue` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

