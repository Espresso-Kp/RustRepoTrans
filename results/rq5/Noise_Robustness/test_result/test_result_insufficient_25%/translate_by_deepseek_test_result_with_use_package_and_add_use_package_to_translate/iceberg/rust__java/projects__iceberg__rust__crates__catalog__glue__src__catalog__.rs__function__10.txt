Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `aws_config` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:301:46
    |
301 |         let config = create_sdk_config(&self.aws_config)?;
    |                                              ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:301:22
    |
301 |         let config = create_sdk_config(&self.aws_config)?;
    |                      ^^^^^^^^^^^^^^^^^------------------ an argument of type `std::option::Option<&std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the argument
    |
301 |         let config = create_sdk_config(&self.aws_config, /* std::option::Option<&std::string::String> */)?;
    |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:301:22
    |
301 |         let config = create_sdk_config(&self.aws_config)?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl std::future::Future<Output = SdkConfig>`
    |
    = help: the trait `Try` is not implemented for `impl std::future::Future<Output = SdkConfig>`

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:302:28
    |
302 |         let builder = self.glue_client.get_tables();
    |                            ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `catalog_id` on type `&_`
   --> crates/catalog/glue/src/utils.rs:279:44
    |
279 |         if let Some(catalog_id) = &$config.catalog_id {
    |                                            ^^^^^^^^^^ unknown field
    |
   ::: crates/catalog/glue/src/catalog.rs:303:23
    |
303 |         let builder = with_catalog_id!(builder, &config);
    |                       ---------------------------------- in this macro invocation
    |
    = note: this error originates in the macro `with_catalog_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:314:25
    |
314 |                 if self.is_glue_iceberg_table(table) {
    |                         ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0433]: failed to resolve: use of undeclared type `GlueToIcebergConverter`
   --> crates/catalog/glue/src/catalog.rs:315:39
    |
315 |                     let table_ident = GlueToIcebergConverter::to_table_id(table);
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `GlueToIcebergConverter`

Some errors have detailed explanations: E0061, E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `aws_config` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:301:46
    |
301 |         let config = create_sdk_config(&self.aws_config)?;
    |                                              ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:301:22
    |
301 |         let config = create_sdk_config(&self.aws_config)?;
    |                      ^^^^^^^^^^^^^^^^^------------------ an argument of type `std::option::Option<&std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the argument
    |
301 |         let config = create_sdk_config(&self.aws_config, /* std::option::Option<&std::string::String> */)?;
    |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:301:22
    |
301 |         let config = create_sdk_config(&self.aws_config)?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl std::future::Future<Output = SdkConfig>`
    |
    = help: the trait `Try` is not implemented for `impl std::future::Future<Output = SdkConfig>`

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:302:28
    |
302 |         let builder = self.glue_client.get_tables();
    |                            ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `catalog_id` on type `&_`
   --> crates/catalog/glue/src/utils.rs:279:44
    |
279 |         if let Some(catalog_id) = &$config.catalog_id {
    |                                            ^^^^^^^^^^ unknown field
    |
   ::: crates/catalog/glue/src/catalog.rs:303:23
    |
303 |         let builder = with_catalog_id!(builder, &config);
    |                       ---------------------------------- in this macro invocation
    |
    = note: this error originates in the macro `with_catalog_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:314:25
    |
314 |                 if self.is_glue_iceberg_table(table) {
    |                         ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0433]: failed to resolve: use of undeclared type `GlueToIcebergConverter`
   --> crates/catalog/glue/src/catalog.rs:315:39
    |
315 |                     let table_ident = GlueToIcebergConverter::to_table_id(table);
    |                                       ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `GlueToIcebergConverter`

Some errors have detailed explanations: E0061, E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

