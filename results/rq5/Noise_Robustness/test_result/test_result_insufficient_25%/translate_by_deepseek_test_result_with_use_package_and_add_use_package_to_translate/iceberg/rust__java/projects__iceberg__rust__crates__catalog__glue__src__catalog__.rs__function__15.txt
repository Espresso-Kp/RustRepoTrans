Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:525:27
    |
525 |         let src_db_name = convert_to_database(&src.namespace)?;
    |                           ^^^^^^^^^^^^^^^^^^^---------------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
525 |         let src_db_name = convert_to_database(&src.namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `table_name` on type `&'life1 TableIdent`
   --> crates/catalog/glue/src/catalog.rs:526:35
    |
526 |         let src_table_name = &src.table_name;
    |                                   ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `namespace`, `name`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:527:28
    |
527 |         let dest_db_name = convert_to_database(&dest.namespace)?;
    |                            ^^^^^^^^^^^^^^^^^^^----------------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
527 |         let dest_db_name = convert_to_database(&dest.namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `table_name` on type `&'life2 TableIdent`
   --> crates/catalog/glue/src/catalog.rs:528:37
    |
528 |         let dest_table_name = &dest.table_name;
    |                                     ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `namespace`, `name`

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:531:53
    |
531 |         let glue_client = aws_sdk_glue::Client::new(create_sdk_config());
    |                                                     ^^^^^^^^^^^^^^^^^-- two arguments of type `&std::collections::HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
531 |         let glue_client = aws_sdk_glue::Client::new(create_sdk_config(/* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */));
    |                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:531:53
    |
531 |         let glue_client = aws_sdk_glue::Client::new(create_sdk_config());
    |                           ------------------------- ^^^^^^^^^^^^^^^^^^^ expected `&SdkConfig`, found future
    |                           |
    |                           arguments to this function are incorrect
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/client.rs:134:12
    |
134 |     pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
    |            ^^^

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:534:25
    |
534 |             .catalog_id(with_catalog_id(&src.namespace))
    |                         ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
534 |             .catalog_id(with_catalog_id!(&src.namespace))
    |                                        +

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:535:28
    |
535 |             .database_name(src_db_name)
    |              ------------- ^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_table/builders.rs:117:48
    |
117 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTableFluentBuilder::database_name`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:549:60
    |
549 |                 format!("Table {} does not exist in Glue", src),
    |                                                            ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&std::collections::HashMap<std::string::String, std::string::String>: Default` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:557:49
    |
557 |             .parameters(from_table.parameters().unwrap_or_default())
    |                                                 ^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `&std::collections::HashMap<std::string::String, std::string::String>`
    |
    = help: the trait `Default` is implemented for `std::collections::HashMap<K, V, S>`
note: required by a bound in `std::option::Option::<T>::unwrap_or_default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/option.rs:1001:5

error[E0277]: the trait bound `std::string::String: From<&std::collections::HashMap<std::string::String, std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:557:25
    |
557 |             .parameters(from_table.parameters().unwrap_or_default())
    |              ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<&std::collections::HashMap<std::string::String, std::string::String>>` is not implemented for `std::string::String`, which is required by `&std::collections::HashMap<std::string::String, std::string::String>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&std::collections::HashMap<std::string::String, std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:557:14
    |
557 |             .parameters(from_table.parameters().unwrap_or_default())
    |              ^^^^^^^^^^--------------------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
557 |             .parameters(from_table.parameters().unwrap_or_default(), /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `&aws_sdk_glue::types::StorageDescriptor: Default` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:558:65
    |
558 |             .storage_descriptor(from_table.storage_descriptor().unwrap_or_default());
    |                                                                 ^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `&aws_sdk_glue::types::StorageDescriptor`
    |
note: required by a bound in `std::option::Option::<T>::unwrap_or_default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/option.rs:1001:5

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:558:33
    |
558 |             .storage_descriptor(from_table.storage_descriptor().unwrap_or_default());
    |              ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `&StorageDescriptor`
    |              |
    |              arguments to this method are incorrect
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
help: consider using clone here
    |
558 |             .storage_descriptor(from_table.storage_descriptor().unwrap_or_default().clone());
    |                                                                                    ++++++++

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:568:25
    |
568 |             .catalog_id(with_catalog_id(&dest.namespace))
    |                         ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
568 |             .catalog_id(with_catalog_id!(&dest.namespace))
    |                                        +

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:569:28
    |
569 |             .database_name(dest_db_name)
    |              ------------- ^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:570:26
    |
570 |             .table_input(table_input)
    |              ----------- ^^^^^^^^^^^ expected `TableInput`, found `Result<TableInput, BuildError>`
    |              |
    |              arguments to this method are incorrect
    |
    = note: expected struct `TableInput`
                 found enum `std::result::Result<TableInput, aws_sdk_glue::error::BuildError>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:140:12
    |
140 |     pub fn table_input(mut self, input: crate::types::TableInput) -> Self {
    |            ^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `std::result::Result<TableInput, aws_sdk_glue::error::BuildError>` value, panicking if the value is a `Result::Err`
    |
570 |             .table_input(table_input.expect("REASON"))
    |                                     +++++++++++++++++

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:583:25
    |
583 |             .catalog_id(with_catalog_id(&src.namespace))
    |                         ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
583 |             .catalog_id(with_catalog_id!(&src.namespace))
    |                                        +

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:584:28
    |
584 |             .database_name(dest_db_name)
    |              ------------- ^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:129:48
    |
129 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::database_name`

Some errors have detailed explanations: E0061, E0277, E0308, E0423, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 19 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:525:27
    |
525 |         let src_db_name = convert_to_database(&src.namespace)?;
    |                           ^^^^^^^^^^^^^^^^^^^---------------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
525 |         let src_db_name = convert_to_database(&src.namespace, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `table_name` on type `&'life1 TableIdent`
   --> crates/catalog/glue/src/catalog.rs:526:35
    |
526 |         let src_table_name = &src.table_name;
    |                                   ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `namespace`, `name`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:527:28
    |
527 |         let dest_db_name = convert_to_database(&dest.namespace)?;
    |                            ^^^^^^^^^^^^^^^^^^^----------------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
527 |         let dest_db_name = convert_to_database(&dest.namespace, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `table_name` on type `&'life2 TableIdent`
   --> crates/catalog/glue/src/catalog.rs:528:37
    |
528 |         let dest_table_name = &dest.table_name;
    |                                     ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `namespace`, `name`

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:531:53
    |
531 |         let glue_client = aws_sdk_glue::Client::new(create_sdk_config());
    |                                                     ^^^^^^^^^^^^^^^^^-- two arguments of type `&HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
531 |         let glue_client = aws_sdk_glue::Client::new(create_sdk_config(/* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */));
    |                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:531:53
    |
531 |         let glue_client = aws_sdk_glue::Client::new(create_sdk_config());
    |                           ------------------------- ^^^^^^^^^^^^^^^^^^^ expected `&SdkConfig`, found future
    |                           |
    |                           arguments to this function are incorrect
    |
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/client.rs:134:12
    |
134 |     pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
    |            ^^^

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:534:25
    |
534 |             .catalog_id(with_catalog_id(&src.namespace))
    |                         ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
534 |             .catalog_id(with_catalog_id!(&src.namespace))
    |                                        +

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:535:28
    |
535 |             .database_name(src_db_name)
    |              ------------- ^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_table/builders.rs:117:48
    |
117 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTableFluentBuilder::database_name`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:549:60
    |
549 |                 format!("Table {} does not exist in Glue", src),
    |                                                            ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&HashMap<std::string::String, std::string::String>: Default` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:557:49
    |
557 |             .parameters(from_table.parameters().unwrap_or_default())
    |                                                 ^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `&HashMap<std::string::String, std::string::String>`
    |
    = help: the trait `Default` is implemented for `HashMap<K, V, S>`
note: required by a bound in `std::option::Option::<T>::unwrap_or_default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/option.rs:1001:5

error[E0277]: the trait bound `std::string::String: From<&HashMap<std::string::String, std::string::String>>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:557:25
    |
557 |             .parameters(from_table.parameters().unwrap_or_default())
    |              ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<&HashMap<std::string::String, std::string::String>>` is not implemented for `std::string::String`, which is required by `&HashMap<std::string::String, std::string::String>: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&HashMap<std::string::String, std::string::String>` to implement `Into<std::string::String>`
note: required by a bound in `TableInputBuilder::parameters`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:41
    |
375 | ...t self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `TableInputBuilder::parameters`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:557:14
    |
557 |             .parameters(from_table.parameters().unwrap_or_default())
    |              ^^^^^^^^^^--------------------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
557 |             .parameters(from_table.parameters().unwrap_or_default(), /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `&StorageDescriptor: Default` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:558:65
    |
558 |             .storage_descriptor(from_table.storage_descriptor().unwrap_or_default());
    |                                                                 ^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `&StorageDescriptor`
    |
note: required by a bound in `std::option::Option::<T>::unwrap_or_default`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/option.rs:1001:5

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:558:33
    |
558 |             .storage_descriptor(from_table.storage_descriptor().unwrap_or_default());
    |              ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `StorageDescriptor`, found `&StorageDescriptor`
    |              |
    |              arguments to this method are incorrect
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:244:12
    |
244 |     pub fn storage_descriptor(mut self, input: crate::types::StorageDescriptor) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
help: consider using clone here
    |
558 |             .storage_descriptor(from_table.storage_descriptor().unwrap_or_default().clone());
    |                                                                                    ++++++++

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:568:25
    |
568 |             .catalog_id(with_catalog_id(&dest.namespace))
    |                         ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
568 |             .catalog_id(with_catalog_id!(&dest.namespace))
    |                                        +

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:569:28
    |
569 |             .database_name(dest_db_name)
    |              ------------- ^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `CreateTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CreateTableFluentBuilder::database_name`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:570:26
    |
570 |             .table_input(table_input)
    |              ----------- ^^^^^^^^^^^ expected `TableInput`, found `Result<TableInput, BuildError>`
    |              |
    |              arguments to this method are incorrect
    |
    = note: expected struct `TableInput`
                 found enum `Result<TableInput, aws_sdk_glue::error::BuildError>`
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/create_table/builders.rs:140:12
    |
140 |     pub fn table_input(mut self, input: crate::types::TableInput) -> Self {
    |            ^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `Result<TableInput, aws_sdk_glue::error::BuildError>` value, panicking if the value is a `Result::Err`
    |
570 |             .table_input(table_input.expect("REASON"))
    |                                     +++++++++++++++++

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:583:25
    |
583 |             .catalog_id(with_catalog_id(&src.namespace))
    |                         ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
583 |             .catalog_id(with_catalog_id!(&src.namespace))
    |                                        +

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:584:28
    |
584 |             .database_name(dest_db_name)
    |              ------------- ^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `DeleteTableFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_table/builders.rs:129:48
    |
129 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteTableFluentBuilder::database_name`

Some errors have detailed explanations: E0061, E0277, E0308, E0423, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 19 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

