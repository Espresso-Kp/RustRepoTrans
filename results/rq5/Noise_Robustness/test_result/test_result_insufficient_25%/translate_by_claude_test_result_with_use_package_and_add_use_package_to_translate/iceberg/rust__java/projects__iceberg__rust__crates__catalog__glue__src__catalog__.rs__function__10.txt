Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:302:61
    |
302 |         let mut request = aws_sdk_glue::client::Client::new(&self.config)
    |                           --------------------------------- ^^^^^^^^^^^^ expected `&SdkConfig`, found `&GlueCatalogConfig`
    |                           |
    |                           arguments to this function are incorrect
    |
    = note: expected reference `&SdkConfig`
               found reference `&GlueCatalogConfig`
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/client.rs:134:12
    |
134 |     pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
    |            ^^^

error[E0609]: no field `skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:306:29
    |
306 |                 self.config.skip_name_validation,
    |                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:304:28
    |
304 |               .database_name(convert_to_database(
    |  ______________-------------_^
    | |              |
    | |              required by a bound introduced by this call
305 | |                 namespace,
306 | |                 self.config.skip_name_validation,
307 | |             )?);
    | |______________^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesFluentBuilder::database_name`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:317:16
    |
317 |         if let Some(table_list) = response.table_list() {
    |                ^^^^^^^^^^^^^^^^   --------------------- this expression has type `&[aws_sdk_glue::types::Table]`
    |                |
    |                expected `[Table]`, found `Option<_>`
    |
    = note: expected slice `[aws_sdk_glue::types::Table]`
                found enum `std::option::Option<_>`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:320:22
    |
320 |                     .iter()
    |                      ^^^^ cannot infer type for type parameter `T` declared on the enum `Option`

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:321:42
    |
321 |                     .filter(|table| self.is_glue_iceberg_table(table))
    |                                          ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `to_table_id` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:322:39
    |
322 |                     .map(|table| self.to_table_id(table))
    |                                       ^^^^^^^^^^^ method not found in `&GlueCatalog`

Some errors have detailed explanations: E0277, E0282, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:302:61
    |
302 |         let mut request = aws_sdk_glue::client::Client::new(&self.config)
    |                           --------------------------------- ^^^^^^^^^^^^ expected `&SdkConfig`, found `&GlueCatalogConfig`
    |                           |
    |                           arguments to this function are incorrect
    |
    = note: expected reference `&SdkConfig`
               found reference `&GlueCatalogConfig`
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/client.rs:134:12
    |
134 |     pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
    |            ^^^

error[E0609]: no field `skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:306:29
    |
306 |                 self.config.skip_name_validation,
    |                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:304:28
    |
304 |               .database_name(convert_to_database(
    |  ______________-------------_^
    | |              |
    | |              required by a bound introduced by this call
305 | |                 namespace,
306 | |                 self.config.skip_name_validation,
307 | |             )?);
    | |______________^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesFluentBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/builders.rs:126:48
    |
126 |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesFluentBuilder::database_name`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:317:16
    |
317 |         if let Some(table_list) = response.table_list() {
    |                ^^^^^^^^^^^^^^^^   --------------------- this expression has type `&[aws_sdk_glue::types::Table]`
    |                |
    |                expected `[Table]`, found `Option<_>`
    |
    = note: expected slice `[aws_sdk_glue::types::Table]`
                found enum `std::option::Option<_>`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:320:22
    |
320 |                     .iter()
    |                      ^^^^ cannot infer type for type parameter `T` declared on the enum `Option`

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:321:42
    |
321 |                     .filter(|table| self.is_glue_iceberg_table(table))
    |                                          ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `to_table_id` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:322:39
    |
322 |                     .map(|table| self.to_table_id(table))
    |                                       ^^^^^^^^^^^ method not found in `&GlueCatalog`

Some errors have detailed explanations: E0277, E0282, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

