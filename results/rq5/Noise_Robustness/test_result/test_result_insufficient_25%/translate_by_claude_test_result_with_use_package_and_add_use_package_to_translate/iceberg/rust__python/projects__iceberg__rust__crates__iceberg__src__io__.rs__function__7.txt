Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:176:70
    |
176 |     let url = Url::parse(str_path).map_err(|e| Error::new(ErrorKind::InvalidInput, e))?;
    |                                                                      ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0277]: the trait bound `std::string::String: From<url::ParseError>` is not satisfied
   --> crates/iceberg/src/io.rs:176:84
    |
176 |     let url = Url::parse(str_path).map_err(|e| Error::new(ErrorKind::InvalidInput, e))?;
    |                                                ----------                          ^ the trait `From<url::ParseError>` is not implemented for `std::string::String`, which is required by `url::ParseError: Into<std::string::String>`
    |                                                |
    |                                                required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<Scheme>>
              <std::string::String as From<opendal::raw::Operation>>
            and 3 others
    = note: required for `url::ParseError` to implement `Into<std::string::String>`
note: required by a bound in `error::Error::new`
   --> crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0599]: no method named `get_operator` found for struct `Arc<Storage>` in the current scope
   --> crates/iceberg/src/io.rs:182:31
    |
182 |     let operator = self.inner.get_operator(scheme, netloc)?;
    |                               ^^^^^^^^^^^^ help: there is a method with a similar name: `create_operator`

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:186:67
    |
186 |             opendal::ErrorKind::NotFound => Error::new(ErrorKind::NotFound, e),
    |                                                                   ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:187:75
    |
187 |             opendal::ErrorKind::PermissionDenied => Error::new(ErrorKind::PermissionDenied, e),
    |                                                                           ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 5 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:176:70
    |
176 |     let url = Url::parse(str_path).map_err(|e| Error::new(ErrorKind::InvalidInput, e))?;
    |                                                                      ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0277]: the trait bound `std::string::String: From<url::ParseError>` is not satisfied
   --> crates/iceberg/src/io.rs:176:84
    |
176 |     let url = Url::parse(str_path).map_err(|e| Error::new(ErrorKind::InvalidInput, e))?;
    |                                                ----------                          ^ the trait `From<url::ParseError>` is not implemented for `std::string::String`, which is required by `url::ParseError: Into<std::string::String>`
    |                                                |
    |                                                required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<Scheme>>
              <std::string::String as From<opendal::raw::Operation>>
            and 3 others
    = note: required for `url::ParseError` to implement `Into<std::string::String>`
note: required by a bound in `error::Error::new`
   --> crates/iceberg/src/error.rs:197:47
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |                                               ^^^^^^^^^^^^ required by this bound in `Error::new`

error[E0599]: no method named `get_operator` found for struct `Arc<Storage>` in the current scope
   --> crates/iceberg/src/io.rs:182:31
    |
182 |     let operator = self.inner.get_operator(scheme, netloc)?;
    |                               ^^^^^^^^^^^^ help: there is a method with a similar name: `create_operator`

error[E0599]: no variant or associated item named `NotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:186:67
    |
186 |             opendal::ErrorKind::NotFound => Error::new(ErrorKind::NotFound, e),
    |                                                                   ^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `NotFound` not found for this enum

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:187:75
    |
187 |             opendal::ErrorKind::PermissionDenied => Error::new(ErrorKind::PermissionDenied, e),
    |                                                                           ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 5 previous errors

