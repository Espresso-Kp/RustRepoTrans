Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared type `DatabaseInput`
   --> crates/catalog/glue/src/catalog.rs:154:26
    |
154 |     let database_input = DatabaseInput::builder()
    |                          ^^^^^^^^^^^^^ use of undeclared type `DatabaseInput`
    |
help: consider importing this struct
    |
18  + use aws_sdk_glue::types::DatabaseInput;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:25
    |
152 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |     let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `catalog_id` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/utils.rs:280:22
    |
280 |             $builder.catalog_id(catalog_id)
    |                      ^^^^^^^^^^------------ help: remove the arguments
    |                      |
    |                      field, not a method
    |
   ::: crates/catalog/glue/src/catalog.rs:40:1
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `catalog_id` not found for this struct
...
161 |     with_catalog_id!(self.config, database_input);
    |     --------------------------------------------- in this macro invocation
    |
    = note: this error originates in the macro `with_catalog_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `create_database` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:163:23
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_database` not found for this struct
...
163 |     match self.client.create_database().database_input(database_input).send().await {
    |                       ^^^^^^^^^^^^^^^ method not found in `GlueClient`
    |
help: one of the expressions' fields has a method of the same name
    |
163 |     match self.client.0.create_database().database_input(database_input).send().await {
    |                       ++

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:164:21
    |
164 |         Ok(_) => Ok(convert_to_namespace(database_name, properties)?),
    |                     ^^^^^^^^^^^^^^^^^^^^ -------------  ---------- unexpected argument of type `std::collections::HashMap<std::string::String, std::string::String>`
    |                                          |
    |                                          expected `&Database`, found `DatabaseInput`
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------
help: remove the extra argument
    |
164 -         Ok(_) => Ok(convert_to_namespace(database_name, properties)?),
164 +         Ok(_) => Ok(convert_to_namespace(/* &aws_sdk_glue::types::Database */)?),
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:164:21
    |
164 |         Ok(_) => Ok(convert_to_namespace(database_name, properties)?),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:168:32
    |
168 |                     ErrorKind::AlreadyExists,
    |                                ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:169:59
    |
169 |                     format!("Database {} already exists", database_name),
    |                                                           ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared type `DatabaseInput`
   --> crates/catalog/glue/src/catalog.rs:154:26
    |
154 |     let database_input = DatabaseInput::builder()
    |                          ^^^^^^^^^^^^^ use of undeclared type `DatabaseInput`
    |
help: consider importing this struct
    |
18  + use aws_sdk_glue::types::DatabaseInput;
    |

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:25
    |
152 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |     let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `catalog_id` found for struct `GlueCatalogConfig` in the current scope
   --> crates/catalog/glue/src/utils.rs:280:22
    |
280 |             $builder.catalog_id(catalog_id)
    |                      ^^^^^^^^^^------------ help: remove the arguments
    |                      |
    |                      field, not a method
    |
   ::: crates/catalog/glue/src/catalog.rs:40:1
    |
40  | pub struct GlueCatalogConfig {
    | ---------------------------- method `catalog_id` not found for this struct
...
161 |     with_catalog_id!(self.config, database_input);
    |     --------------------------------------------- in this macro invocation
    |
    = note: this error originates in the macro `with_catalog_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `create_database` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:163:23
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_database` not found for this struct
...
163 |     match self.client.create_database().database_input(database_input).send().await {
    |                       ^^^^^^^^^^^^^^^ method not found in `GlueClient`
    |
help: one of the expressions' fields has a method of the same name
    |
163 |     match self.client.0.create_database().database_input(database_input).send().await {
    |                       ++

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:164:21
    |
164 |         Ok(_) => Ok(convert_to_namespace(database_name, properties)?),
    |                     ^^^^^^^^^^^^^^^^^^^^ -------------  ---------- unexpected argument of type `HashMap<std::string::String, std::string::String>`
    |                                          |
    |                                          expected `&Database`, found `DatabaseInput`
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------
help: remove the extra argument
    |
164 -         Ok(_) => Ok(convert_to_namespace(database_name, properties)?),
164 +         Ok(_) => Ok(convert_to_namespace(/* &Database */)?),
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:164:21
    |
164 |         Ok(_) => Ok(convert_to_namespace(database_name, properties)?),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:168:32
    |
168 |                     ErrorKind::AlreadyExists,
    |                                ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:169:59
    |
169 |                     format!("Database {} already exists", database_name),
    |                                                           ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

