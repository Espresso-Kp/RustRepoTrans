Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `visit_struct` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:248:1
    |
178 | fn visit_struct<V: ArrowSchemaVisitor>(fields: &Fields, visitor: &mut V) -> Result<V::T> {
    | ---------------------------------------------------------------------------------------- previous definition of the value `visit_struct` here
...
248 | fn visit_struct(&mut self, field: &Field, fields: &Fields) -> Self::T {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_struct` redefined here
    |
    = note: `visit_struct` must be defined only once in the value namespace of this module

error[E0428]: the name `visit_list` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:265:1
    |
165 | / fn visit_list<V: ArrowSchemaVisitor>(
166 | |     data_type: &DataType,
167 | |     element_field: &Field,
168 | |     visitor: &mut V,
...   |
173 | |     visitor.list(data_type, value)
174 | | }
    | |_- previous definition of the value `visit_list` here
...
265 |   fn visit_list(&mut self, field: &Field, item_field: &Field) -> Self::T {
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_list` redefined here
    |
    = note: `visit_list` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:214:20
    |
214 | fn visit_primitive(&mut self, field: &Field) -> Self::T {
    |                    ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:248:17
    |
248 | fn visit_struct(&mut self, field: &Field, fields: &Fields) -> Self::T {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:265:15
    |
265 | fn visit_list(&mut self, field: &Field, item_field: &Field) -> Self::T {
    |               ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:211:13
    |
211 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0422]: cannot find struct, variant or union type `ConvertToIceberg` in this scope
   --> crates/iceberg/src/arrow/schema.rs:212:9
    |
212 |         ConvertToIceberg { field_id: 1000 }
    |         ^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:208:19
    |
208 |     let visitor = ConvertToIceberg::new();
    |                   ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0425]: cannot find function `visit_arrow_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:209:5
    |
192 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- similarly named function `visit_schema` defined here
...
209 |     visit_arrow_schema(schema, &visitor)
    |     ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `visit_schema`

error[E0599]: no variant or associated item named `DataTypeNotSupported` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:238:51
    |
238 |             _ => return Err(Error::new(ErrorKind::DataTypeNotSupported, format!("Unsupported data type: {:?}", field.data_type()))),
    |                                                   ^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `DataTypeNotSupported` not found for this enum

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:241:34
    |
241 |         Ok(Arc::new(NestedField::new(
    |                                  ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:258:34
    |
258 |         Ok(Arc::new(NestedField::new(
    |                                  ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:270:34
    |
270 |         Ok(Arc::new(NestedField::new(
    |                                  ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no function or associated item named `new` found for struct `datatypes::ListType` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:274:34
    |
274 |             Type::List(ListType::new(field_id + 1, element_field)),
    |                                  ^^^ function or associated item not found in `ListType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:665:1
    |
665 | pub struct ListType {
    | ------------------- function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:265:64
    |
265 | fn visit_list(&mut self, field: &Field, item_field: &Field) -> Self::T {
    |                                                                ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:214:49
    |
214 | fn visit_primitive(&mut self, field: &Field) -> Self::T {
    |                                                 ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:248:63
    |
248 | fn visit_struct(&mut self, field: &Field, fields: &Fields) -> Self::T {
    |                                                               ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0411, E0422, E0425, E0428, E0433, E0599.
For more information about an error, try `rustc --explain E0411`.
error: could not compile `iceberg` (lib) due to 17 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 17 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0428]: the name `visit_struct` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:248:1
    |
178 | fn visit_struct<V: ArrowSchemaVisitor>(fields: &Fields, visitor: &mut V) -> Result<V::T> {
    | ---------------------------------------------------------------------------------------- previous definition of the value `visit_struct` here
...
248 | fn visit_struct(&mut self, field: &Field, fields: &Fields) -> Self::T {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_struct` redefined here
    |
    = note: `visit_struct` must be defined only once in the value namespace of this module

error[E0428]: the name `visit_list` is defined multiple times
   --> crates/iceberg/src/arrow/schema.rs:265:1
    |
165 | / fn visit_list<V: ArrowSchemaVisitor>(
166 | |     data_type: &DataType,
167 | |     element_field: &Field,
168 | |     visitor: &mut V,
...   |
173 | |     visitor.list(data_type, value)
174 | | }
    | |_- previous definition of the value `visit_list` here
...
265 |   fn visit_list(&mut self, field: &Field, item_field: &Field) -> Self::T {
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `visit_list` redefined here
    |
    = note: `visit_list` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:214:20
    |
214 | fn visit_primitive(&mut self, field: &Field) -> Self::T {
    |                    ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:248:17
    |
248 | fn visit_struct(&mut self, field: &Field, fields: &Fields) -> Self::T {
    |                 ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:265:15
    |
265 | fn visit_list(&mut self, field: &Field, item_field: &Field) -> Self::T {
    |               ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0411]: cannot find type `Self` in this scope
   --> crates/iceberg/src/arrow/schema.rs:211:13
    |
211 | fn new() -> Self {
    |    ---      ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0422]: cannot find struct, variant or union type `ConvertToIceberg` in this scope
   --> crates/iceberg/src/arrow/schema.rs:212:9
    |
212 |         ConvertToIceberg { field_id: 1000 }
    |         ^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:208:19
    |
208 |     let visitor = ConvertToIceberg::new();
    |                   ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0425]: cannot find function `visit_arrow_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:209:5
    |
192 | fn visit_schema<V: ArrowSchemaVisitor>(schema: &ArrowSchema, visitor: &mut V) -> Result<V::U> {
    | --------------------------------------------------------------------------------------------- similarly named function `visit_schema` defined here
...
209 |     visit_arrow_schema(schema, &visitor)
    |     ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `visit_schema`

error[E0599]: no variant or associated item named `DataTypeNotSupported` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:238:51
    |
238 |             _ => return Err(Error::new(ErrorKind::DataTypeNotSupported, format!("Unsupported data type: {:?}", field.data_type()))),
    |                                                   ^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `DataTypeNotSupported` not found for this enum

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:241:34
    |
241 |         Ok(Arc::new(NestedField::new(
    |                                  ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:258:34
    |
258 |         Ok(Arc::new(NestedField::new(
    |                                  ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:270:34
    |
270 |         Ok(Arc::new(NestedField::new(
    |                                  ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0599]: no function or associated item named `new` found for struct `datatypes::ListType` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:274:34
    |
274 |             Type::List(ListType::new(field_id + 1, element_field)),
    |                                  ^^^ function or associated item not found in `ListType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:665:1
    |
665 | pub struct ListType {
    | ------------------- function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:265:64
    |
265 | fn visit_list(&mut self, field: &Field, item_field: &Field) -> Self::T {
    |                                                                ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:214:49
    |
214 | fn visit_primitive(&mut self, field: &Field) -> Self::T {
    |                                                 ^^^^ `Self` is only available in impls, traits, and type definitions

error[E0433]: failed to resolve: `Self` is only available in impls, traits, and type definitions
   --> crates/iceberg/src/arrow/schema.rs:248:63
    |
248 | fn visit_struct(&mut self, field: &Field, fields: &Fields) -> Self::T {
    |                                                               ^^^^ `Self` is only available in impls, traits, and type definitions

Some errors have detailed explanations: E0411, E0422, E0425, E0428, E0433, E0599.
For more information about an error, try `rustc --explain E0411`.
error: could not compile `iceberg` (lib) due to 17 previous errors

