Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:269:25
    |
269 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
269 |     let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `std::string::String: From<&DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:274:28
    |
274 |             .database_name(&database_name),
    |              ------------- ^^^^^^^^^^^^^^ the trait `From<&DatabaseInput>` is not implemented for `std::string::String`, which is required by `&DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesInputBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/_get_tables_input.rs:87:48
    |
87  |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesInputBuilder::database_name`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:280:33
    |
280 |     let table_list = match self.glue.get_tables().send(list_tables_input).await {
    |                                 ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:284:40
    |
284 |                 if service_error.err().is_entity_not_found_exception() {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `E`

error[E0599]: no variant or associated item named `NoSuchNamespace` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:286:36
    |
286 |                         ErrorKind::NoSuchNamespace,
    |                                    ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:287:64
    |
287 |                         format!("Database does not exist: {}", database_name),
    |                                                                ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `NamespaceNotEmpty` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:297:24
    |
297 |             ErrorKind::NamespaceNotEmpty,
    |                        ^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:298:49
    |
298 |             format!("Database {} is not empty", database_name),
    |                                                 ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:304:19
    |
304 |             .name(database_name),
    |              ---- ^^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `DeleteDatabaseInputBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_database/_delete_database_input.rs:52:39
    |
52  |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteDatabaseInputBuilder::name`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:310:10
    |
310 |     self.glue
    |          ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0282, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:269:25
    |
269 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
269 |     let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `std::string::String: From<&DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:274:28
    |
274 |             .database_name(&database_name),
    |              ------------- ^^^^^^^^^^^^^^ the trait `From<&DatabaseInput>` is not implemented for `std::string::String`, which is required by `&DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `&DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesInputBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/_get_tables_input.rs:87:48
    |
87  |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesInputBuilder::database_name`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:280:33
    |
280 |     let table_list = match self.glue.get_tables().send(list_tables_input).await {
    |                                 ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0282]: type annotations needed
   --> crates/catalog/glue/src/catalog.rs:284:40
    |
284 |                 if service_error.err().is_entity_not_found_exception() {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `E`

error[E0599]: no variant or associated item named `NoSuchNamespace` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:286:36
    |
286 |                         ErrorKind::NoSuchNamespace,
    |                                    ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:287:64
    |
287 |                         format!("Database does not exist: {}", database_name),
    |                                                                ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `NamespaceNotEmpty` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:297:24
    |
297 |             ErrorKind::NamespaceNotEmpty,
    |                        ^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:298:49
    |
298 |             format!("Database {} is not empty", database_name),
    |                                                 ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:304:19
    |
304 |             .name(database_name),
    |              ---- ^^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `DeleteDatabaseInputBuilder::name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/delete_database/_delete_database_input.rs:52:39
    |
52  |     pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteDatabaseInputBuilder::name`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:310:10
    |
310 |     self.glue
    |          ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0282, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

