Fail
file path is :
projects/deltachat-core/rust/src/chatlist.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find function `get` in module `stock_str`
   --> src/chatlist.rs:402:37
    |
402 |         ret.text2 = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
    |                                     ^^^ not found in `stock_str`
    |
help: consider importing one of these items
    |
3   + use num_cpus::get;
    |
3   + use reqwest::blocking::get;
    |
3   + use reqwest::get;
    |
help: if you import `get`, refer to it directly
    |
402 -         ret.text2 = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
402 +         ret.text2 = Some(get(context, StockMessage::NoMessages).to_string());
    |

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/chatlist.rs:402:50
    |
402 |         ret.text2 = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
    |                                                  ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

error[E0308]: mismatched types
    --> src/chatlist.rs:383:37
     |
383  |         Chat::load_from_db(context, chat_id).await?
     |         ------------------          ^^^^^^^ expected `ChatId`, found `Result<ChatId, Error>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `ChatId`
                  found enum `std::result::Result<ChatId, anyhow::Error>`
note: associated function defined here
    --> src/chat.rs:1515:18
     |
1515 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |                  ^^^^^^^^^^^^                    ---------------
help: use the `?` operator to extract the `std::result::Result<ChatId, anyhow::Error>` value, propagating a `Result::Err` value to the caller
     |
383  |         Chat::load_from_db(context, chat_id?).await?
     |                                            +

error[E0308]: `if` and `else` have incompatible types
   --> src/chatlist.rs:383:9
    |
379 |       let chat = if let Some(chat) = chat {
    |  ________________-
380 | |         chat
    | |         ---- expected because of this
381 | |     } else {
382 | |         let chat_id = self.get_chat_id(index);
383 | |         Chat::load_from_db(context, chat_id).await?
    | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&Chat`, found `Chat`
384 | |     };
    | |_____- `if` and `else` have incompatible types
    |
help: consider borrowing here
    |
383 |         &Chat::load_from_db(context, chat_id).await?
    |         +

error[E0308]: mismatched types
   --> src/chatlist.rs:386:12
    |
386 |     if let Some(lastmsg_id) = lastmsg_id {
    |            ^^^^^^^^^^^^^^^^   ---------- this expression has type `std::result::Result<std::option::Option<MsgId>, anyhow::Error>`
    |            |
    |            expected `Result<Option<MsgId>, Error>`, found `Option<_>`
    |
    = note: expected enum `std::result::Result<std::option::Option<MsgId>, anyhow::Error>`
               found enum `std::option::Option<_>`
help: try wrapping the pattern in `Ok`
    |
386 |     if let Ok(Some(lastmsg_id)) = lastmsg_id {
    |            +++                +

error[E0599]: no function or associated item named `load_from_db` found for struct `Contact` in the current scope
   --> src/chatlist.rs:390:27
    |
390 |             Some(Contact::load_from_db(context, lastmsg.get_from_id()).await?)
    |                           ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0609]: no field `text2` on type `Summary`
   --> src/chatlist.rs:396:17
    |
396 |             ret.text2 = None;
    |                 ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
396 |             ret.text = None;
    |                 ~~~~

error[E0599]: no method named `fill` found for struct `Summary` in the current scope
   --> src/chatlist.rs:398:17
    |
398 |             ret.fill(context, &lastmsg, chat, lastcontact.as_ref()).await?;
    |                 ^^^^ method not found in `Summary`
    |
   ::: src/summary.rs:43:1
    |
43  | pub struct Summary {
    | ------------------ method `fill` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `fill`, perhaps you need to implement one of them:
            candidate #1: `Rng`
            candidate #2: `ring::rand::SecureRandom`
            candidate #3: `ring::rand::SecureRandom`
            candidate #4: `nanorand::rand::Rng`
            candidate #5: `rand::Rng`
            candidate #6: `rustls::crypto::SecureRandom`

error[E0609]: no field `text2` on type `Summary`
   --> src/chatlist.rs:402:13
    |
402 |         ret.text2 = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
    |             ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
402 |         ret.text = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
    |             ~~~~

error[E0308]: mismatched types
    --> src/chatlist.rs:383:37
     |
383  |         Chat::load_from_db(context, chat_id).await?
     |         ------------------          ^^^^^^^ expected `ChatId`, found `Result<ChatId, Error>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::result::Result<chat::ChatId, anyhow::Error>`
note: associated function defined here
    --> src/chat.rs:1515:18
     |
1515 |     pub async fn load_from_db(context: &Context, chat_id: ChatId) -> Result<Self> {
     |                  ^^^^^^^^^^^^                    ---------------
help: use the `?` operator to extract the `std::result::Result<chat::ChatId, anyhow::Error>` value, propagating a `Result::Err` value to the caller
     |
383  |         Chat::load_from_db(context, chat_id?).await?
     |                                            +

error[E0308]: mismatched types
   --> src/chatlist.rs:386:12
    |
386 |     if let Some(lastmsg_id) = lastmsg_id {
    |            ^^^^^^^^^^^^^^^^   ---------- this expression has type `std::result::Result<std::option::Option<message::MsgId>, anyhow::Error>`
    |            |
    |            expected `Result<Option<MsgId>, Error>`, found `Option<_>`
    |
    = note: expected enum `std::result::Result<std::option::Option<message::MsgId>, anyhow::Error>`
               found enum `std::option::Option<_>`
help: try wrapping the pattern in `Ok`
    |
386 |     if let Ok(Some(lastmsg_id)) = lastmsg_id {
    |            +++                +

error[E0599]: no function or associated item named `load_from_db` found for struct `contact::Contact` in the current scope
   --> src/chatlist.rs:390:27
    |
390 |             Some(Contact::load_from_db(context, lastmsg.get_from_id()).await?)
    |                           ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0609]: no field `text2` on type `summary::Summary`
   --> src/chatlist.rs:396:17
    |
396 |             ret.text2 = None;
    |                 ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
396 |             ret.text = None;
    |                 ~~~~

error[E0599]: no method named `fill` found for struct `summary::Summary` in the current scope
   --> src/chatlist.rs:398:17
    |
398 |             ret.fill(context, &lastmsg, chat, lastcontact.as_ref()).await?;
    |                 ^^^^ method not found in `Summary`
    |
   ::: src/summary.rs:43:1
    |
43  | pub struct Summary {
    | ------------------ method `fill` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `fill`, perhaps you need to implement one of them:
            candidate #1: `Rng`
            candidate #2: `ring::rand::SecureRandom`
            candidate #3: `ring::rand::SecureRandom`
            candidate #4: `nanorand::rand::Rng`
            candidate #5: `rand::Rng`
            candidate #6: `rustls::crypto::SecureRandom`

error[E0609]: no field `text2` on type `summary::Summary`
   --> src/chatlist.rs:402:13
    |
402 |         ret.text2 = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
    |             ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
402 |         ret.text = Some(stock_str::get(context, StockMessage::NoMessages).to_string());
    |             ~~~~

Some errors have detailed explanations: E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 9 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

