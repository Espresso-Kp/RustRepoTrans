Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find function `get` in module `stock_str`
   --> src/imex.rs:218:42
    |
218 |     let setup_message_title = stock_str::get(context, StockMessage::AcSetupMsgSubject).await?;
    |                                          ^^^ not found in `stock_str`
    |
help: consider importing one of these items
    |
3   + use num_cpus::get;
    |
3   + use reqwest::blocking::get;
    |
3   + use reqwest::get;
    |
help: if you import `get`, refer to it directly
    |
218 -     let setup_message_title = stock_str::get(context, StockMessage::AcSetupMsgSubject).await?;
218 +     let setup_message_title = get(context, StockMessage::AcSetupMsgSubject).await?;
    |

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/imex.rs:218:55
    |
218 |     let setup_message_title = stock_str::get(context, StockMessage::AcSetupMsgSubject).await?;
    |                                                       ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

error[E0425]: cannot find function `get` in module `stock_str`
   --> src/imex.rs:219:45
    |
219 |     let mut setup_message_body = stock_str::get(context, StockMessage::AcSetupMsgBody).await?;
    |                                             ^^^ not found in `stock_str`
    |
help: consider importing one of these items
    |
3   + use num_cpus::get;
    |
3   + use reqwest::blocking::get;
    |
3   + use reqwest::get;
    |
help: if you import `get`, refer to it directly
    |
219 -     let mut setup_message_body = stock_str::get(context, StockMessage::AcSetupMsgBody).await?;
219 +     let mut setup_message_body = get(context, StockMessage::AcSetupMsgBody).await?;
    |

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/imex.rs:219:58
    |
219 |     let mut setup_message_body = stock_str::get(context, StockMessage::AcSetupMsgBody).await?;
    |                                                          ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

warning: unused import: `load_self_secret_key`
  --> src/imex.rs:24:11
   |
24 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |           ^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0599]: no method named `ensure_secret_key_exists` found for reference `&context::Context` in the current scope
   --> src/imex.rs:194:17
    |
194 |     if !context.ensure_secret_key_exists().await? {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0599]: no method named `load_self_private_key` found for struct `Sql` in the current scope
   --> src/imex.rs:199:40
    |
199 |     let curr_private_key = context.sql.load_self_private_key(&self_addr).await?;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `load_self_private_key` not found for this struct

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> src/imex.rs:208:23
    |
208 |     let encr_string = pgp::symm_encrypt(context, passphrase, payload_key_asc.as_bytes())?;
    |                       ^^^^^^^^^^^^^^^^^ ------- unexpected argument of type `&context::Context`
    |
note: function defined here
   --> src/pgp.rs:361:14
    |
361 | pub async fn symm_encrypt(passphrase: &str, plain: &[u8]) -> Result<String> {
    |              ^^^^^^^^^^^^ ----------------  ------------
help: try removing the method call
    |
208 -     let encr_string = pgp::symm_encrypt(context, passphrase, payload_key_asc.as_bytes())?;
208 +     let encr_string = pgp::symm_encrypt(context, passphrase, payload_key_asc)?;
    |
help: remove the extra argument
    |
208 -     let encr_string = pgp::symm_encrypt(context, passphrase, payload_key_asc.as_bytes())?;
208 +     let encr_string = pgp::symm_encrypt(, passphrase, /* &[u8] */)?;
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/imex.rs:208:23
    |
208 |     let encr_string = pgp::symm_encrypt(context, passphrase, payload_key_asc.as_bytes())?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl futures::Future<Output = std::result::Result<std::string::String, anyhow::Error>>`
    |
    = help: the trait `Try` is not implemented for `impl futures::Future<Output = std::result::Result<std::string::String, anyhow::Error>>`
help: consider `await`ing on the `Future`
    |
208 |     let encr_string = pgp::symm_encrypt(context, passphrase, payload_key_asc.as_bytes()).await?;
    |                                                                                         ++++++

error[E0599]: no method named `load_self_private_key` found for struct `sql::Sql` in the current scope
   --> src/imex.rs:199:40
    |
199 |     let curr_private_key = context.sql.load_self_private_key(&self_addr).await?;
    |                                        ^^^^^^^^^^^^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `load_self_private_key` not found for this struct

Some errors have detailed explanations: E0061, E0277, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 8 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 8 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

