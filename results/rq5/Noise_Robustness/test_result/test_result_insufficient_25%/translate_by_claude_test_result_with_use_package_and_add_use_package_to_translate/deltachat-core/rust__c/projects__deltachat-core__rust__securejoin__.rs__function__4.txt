Fail
file path is :
projects/deltachat-core/rust/src/securejoin.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find function `create_by_contact_id` in module `chat`
   --> src/securejoin.rs:156:33
    |
156 |     let contact_chat_id = chat::create_by_contact_id(context, qr_scan.id).await?;
    |                                 ^^^^^^^^^^^^^^^^^^^^ not found in `chat`

error[E0433]: failed to resolve: use of undeclared type `Duration`
   --> src/securejoin.rs:203:28
    |
203 |         tokio::time::sleep(Duration::from_millis(300)).await;
    |                            ^^^^^^^^ use of undeclared type `Duration`
    |
help: consider importing one of these items
    |
3   + use chrono::Duration;
    |
3   + use core::time::Duration;
    |
3   + use std::time::Duration;
    |
3   + use tokio::time::Duration;
    |

error[E0609]: no field `state` on type `Qr`
   --> src/securejoin.rs:152:16
    |
152 |     if qr_scan.state != QrState::AskVerifyContact && qr_scan.state != QrState::AskVerifyGroup {
    |                ^^^^^ unknown field

error[E0433]: failed to resolve: use of undeclared type `QrState`
   --> src/securejoin.rs:152:25
    |
152 |     if qr_scan.state != QrState::AskVerifyContact && qr_scan.state != QrState::AskVerifyGroup {
    |                         ^^^^^^^ use of undeclared type `QrState`

error[E0609]: no field `state` on type `Qr`
   --> src/securejoin.rs:152:62
    |
152 |     if qr_scan.state != QrState::AskVerifyContact && qr_scan.state != QrState::AskVerifyGroup {
    |                                                              ^^^^^ unknown field

error[E0433]: failed to resolve: use of undeclared type `QrState`
   --> src/securejoin.rs:152:71
    |
152 |     if qr_scan.state != QrState::AskVerifyContact && qr_scan.state != QrState::AskVerifyGroup {
    |                                                                       ^^^^^^^ use of undeclared type `QrState`

error[E0609]: no field `id` on type `Qr`
   --> src/securejoin.rs:156:71
    |
156 |     let contact_chat_id = chat::create_by_contact_id(context, qr_scan.id).await?;
    |                                                                       ^^ unknown field

error[E0609]: no field `state` on type `Qr`
   --> src/securejoin.rs:158:27
    |
158 |     let join_vg = qr_scan.state == QrState::AskVerifyGroup;
    |                           ^^^^^ unknown field

error[E0433]: failed to resolve: use of undeclared type `QrState`
   --> src/securejoin.rs:158:36
    |
158 |     let join_vg = qr_scan.state == QrState::AskVerifyGroup;
    |                                    ^^^^^^^ use of undeclared type `QrState`

error[E0599]: no function or associated item named `new` found for struct `BobState` in the current scope
   --> src/securejoin.rs:160:34
    |
160 |     let mut bobstate = BobState::new();
    |                                  ^^^ function or associated item not found in `BobState`
    |
   ::: src/securejoin/bobstate.rs:64:1
    |
64  | pub struct BobState {
    | ------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `BobState`, consider using `BobState::from_db_id` which returns `std::result::Result<BobState, rusqlite::Error>`
   --> src/securejoin/bobstate.rs:189:5
    |
189 |     fn from_db_id(connection: &Connection, id: i64) -> rusqlite::Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `iroh_metrics::core::Metric`
            candidate #20: `bitvec::store::BitStore`
            candidate #21: `radium::Radium`
            candidate #22: `netlink_sys::async_socket::AsyncSocket`
            candidate #23: `nonzero_ext::NonZero`
            candidate #24: `Allocable`
            candidate #25: `AnyBoxConstructor`
            candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0609]: no field `fingerprint` on type `Qr`
   --> src/securejoin.rs:163:52
    |
163 |     if fingerprint_equals_sender(context, &qr_scan.fingerprint, contact_chat_id).await? {
    |                                                    ^^^^^^^^^^^ unknown field

error[E0425]: cannot find function `fingerprint_equals_sender` in this scope
   --> src/securejoin.rs:163:8
    |
163 |     if fingerprint_equals_sender(context, &qr_scan.fingerprint, contact_chat_id).await? {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0533]: expected value, found struct variant `EventType::SecurejoinJoinerProgress`
   --> src/securejoin.rs:164:28
    |
164 |         context.emit_event(EventType::SecurejoinJoinerProgress(
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a value

error[E0599]: no variant or associated item named `ProtocolEncountered` found for enum `JoinerProgress` in the current scope
   --> src/securejoin.rs:165:29
    |
165 |             JoinerProgress::ProtocolEncountered,
    |                             ^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `JoinerProgress`
    |
   ::: src/securejoin/bob.rs:226:1
    |
226 | pub(crate) enum JoinerProgress {
    | ------------------------------ variant or associated item `ProtocolEncountered` not found for this enum

error[E0425]: cannot find function `chat_id_to_contact_id` in this scope
   --> src/securejoin.rs:166:13
    |
166 |             chat_id_to_contact_id(context, contact_chat_id).await?,
    |             ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `BobExpects`
   --> src/securejoin.rs:168:28
    |
168 |         bobstate.expects = BobExpects::ContactConfirm;
    |                            ^^^^^^^^^^ use of undeclared type `BobExpects`

error[E0277]: the `?` operator can only be used on `Result`s, not `Option`s, in an async function that returns `Result`
   --> src/securejoin.rs:169:66
    |
148 |   pub async fn join_securejoin(context: &Context, qr: &str) -> Result<ChatId> {
    |  _____________________________________________________________________________-
149 | |     ensure_secret_key_exists(context).await?;
150 | |
151 | |     let qr_scan = check_qr(context, qr).await?;
...   |
169 | |         let own_fingerprint = get_self_fingerprint(context).await?;
    | |                                                                  ^ use `.ok_or(...)?` to provide an error compatible with `std::result::Result<ChatId, anyhow::Error>`
...   |
215 | |     Ok(ret_chat_id)
216 | | }
    | |_- this function returns a `Result`
    |
    = help: the trait `FromResidual<std::option::Option<Infallible>>` is not implemented for `std::result::Result<ChatId, anyhow::Error>`
    = help: the following other types implement trait `FromResidual<R>`:
              <std::result::Result<T, F> as FromResidual<Yeet<E>>>
              <std::result::Result<T, F> as FromResidual<std::result::Result<Infallible, E>>>

error[E0609]: no field `auth` on type `Qr`
   --> src/securejoin.rs:178:22
    |
178 |             &qr_scan.auth,
    |                      ^^^^ unknown field

error[E0609]: no field `text2` on type `Qr`
   --> src/securejoin.rs:180:40
    |
180 |             if join_vg { Some(&qr_scan.text2) } else { None },
    |                                        ^^^^^ unknown field

error[E0425]: cannot find function `send_handshake_msg` in this scope
   --> src/securejoin.rs:170:9
    |
170 |           send_handshake_msg(
    |           ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `send_alice_handshake_msg`
...
236 | / async fn send_alice_handshake_msg(
237 | |     context: &Context,
238 | |     contact_id: ContactId,
239 | |     step: &str,
...   |
258 | |     Ok(())
259 | | }
    | |_- similarly named function `send_alice_handshake_msg` defined here

error[E0433]: failed to resolve: use of undeclared type `BobExpects`
   --> src/securejoin.rs:184:28
    |
184 |         bobstate.expects = BobExpects::AuthRequired;
    |                            ^^^^^^^^^^ use of undeclared type `BobExpects`

error[E0609]: no field `invitenumber` on type `Qr`
   --> src/securejoin.rs:189:22
    |
189 |             &qr_scan.invitenumber,
    |                      ^^^^^^^^^^^^ unknown field

error[E0425]: cannot find function `send_handshake_msg` in this scope
   --> src/securejoin.rs:185:9
    |
185 |           send_handshake_msg(
    |           ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `send_alice_handshake_msg`
...
236 | / async fn send_alice_handshake_msg(
237 | |     context: &Context,
238 | |     contact_id: ContactId,
239 | |     step: &str,
...   |
258 | |     Ok(())
259 | | }
    | |_- similarly named function `send_alice_handshake_msg` defined here

error[E0308]: mismatched types
   --> src/securejoin.rs:199:12
    |
199 |         if context.shall_stop_ongoing() {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found future
    |
note: calling an async function returns a future
   --> src/securejoin.rs:199:12
    |
199 |         if context.shall_stop_ongoing() {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider `await`ing on the `Future`
    |
199 |         if context.shall_stop_ongoing().await {
    |                                        ++++++

error[E0433]: failed to resolve: use of undeclared type `BobStatus`
   --> src/securejoin.rs:205:31
    |
205 |         if bobstate.status == BobStatus::Success {
    |                               ^^^^^^^^^
    |                               |
    |                               use of undeclared type `BobStatus`
    |                               help: a struct with a similar name exists: `BobState`

error[E0609]: no field `text2` on type `Qr`
   --> src/securejoin.rs:207:73
    |
207 |                 ret_chat_id = dc_get_chat_id_by_grpid(context, &qr_scan.text2, None, None).await?;
    |                                                                         ^^^^^ unknown field

error[E0425]: cannot find function `dc_get_chat_id_by_grpid` in this scope
   --> src/securejoin.rs:207:31
    |
207 |                 ret_chat_id = dc_get_chat_id_by_grpid(context, &qr_scan.text2, None, None).await?;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0533, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 27 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0609]: no field `state` on type `qr::Qr`
   --> src/securejoin.rs:152:16
    |
152 |     if qr_scan.state != QrState::AskVerifyContact && qr_scan.state != QrState::AskVerifyGroup {
    |                ^^^^^ unknown field

error[E0609]: no field `state` on type `qr::Qr`
   --> src/securejoin.rs:152:62
    |
152 |     if qr_scan.state != QrState::AskVerifyContact && qr_scan.state != QrState::AskVerifyGroup {
    |                                                              ^^^^^ unknown field

error[E0609]: no field `id` on type `qr::Qr`
   --> src/securejoin.rs:156:71
    |
156 |     let contact_chat_id = chat::create_by_contact_id(context, qr_scan.id).await?;
    |                                                                       ^^ unknown field

error[E0609]: no field `state` on type `qr::Qr`
   --> src/securejoin.rs:158:27
    |
158 |     let join_vg = qr_scan.state == QrState::AskVerifyGroup;
    |                           ^^^^^ unknown field

error[E0599]: no function or associated item named `new` found for struct `BobState` in the current scope
   --> src/securejoin.rs:160:34
    |
160 |     let mut bobstate = BobState::new();
    |                                  ^^^ function or associated item not found in `BobState`
    |
   ::: src/securejoin/bobstate.rs:64:1
    |
64  | pub struct BobState {
    | ------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `BobState`, consider using `BobState::from_db_id` which returns `std::result::Result<BobState, rusqlite::Error>`
   --> src/securejoin/bobstate.rs:189:5
    |
189 |     fn from_db_id(connection: &Connection, id: i64) -> rusqlite::Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #2: `sha1::digest::typenum::Bit`
            candidate #3: `VariableOutputCore`
            candidate #4: `sha1::Digest`
            candidate #5: `sha1::digest::Mac`
            candidate #6: `VariableOutput`
            candidate #7: `KeyInit`
            candidate #8: `KeyIvInit`
            candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #10: `UniformSampler`
            candidate #11: `ring::aead::BoundKey`
            candidate #12: `ring::aead::BoundKey`
            candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
            candidate #14: `digest::digest::Digest`
            candidate #15: `digest::variable::VariableOutput`
            candidate #16: `digest::variable::VariableOutputDirty`
            candidate #17: `rand::distributions::uniform::UniformSampler`
            candidate #18: `Executor`
            candidate #19: `sysinfo::traits::SystemExt`
            candidate #20: `gimli::read::lookup::PubStuffEntry`
            candidate #21: `iroh_metrics::core::Metric`
            candidate #22: `bitvec::store::BitStore`
            candidate #23: `radium::Radium`
            candidate #24: `netlink_sys::async_socket::AsyncSocket`
            candidate #25: `nonzero_ext::NonZero`
            candidate #26: `Allocable`
            candidate #27: `AnyBoxConstructor`
            candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
            candidate #29: `plotters::style::font::FontData`

error[E0609]: no field `fingerprint` on type `qr::Qr`
   --> src/securejoin.rs:163:52
    |
163 |     if fingerprint_equals_sender(context, &qr_scan.fingerprint, contact_chat_id).await? {
    |                                                    ^^^^^^^^^^^ unknown field

error[E0277]: the `?` operator can only be used on `Result`s, not `Option`s, in an async function that returns `Result`
   --> src/securejoin.rs:169:66
    |
148 |   pub async fn join_securejoin(context: &Context, qr: &str) -> Result<ChatId> {
    |  _____________________________________________________________________________-
149 | |     ensure_secret_key_exists(context).await?;
150 | |
151 | |     let qr_scan = check_qr(context, qr).await?;
...   |
169 | |         let own_fingerprint = get_self_fingerprint(context).await?;
    | |                                                                  ^ use `.ok_or(...)?` to provide an error compatible with `std::result::Result<chat::ChatId, anyhow::Error>`
...   |
215 | |     Ok(ret_chat_id)
216 | | }
    | |_- this function returns a `Result`
    |
    = help: the trait `FromResidual<std::option::Option<Infallible>>` is not implemented for `std::result::Result<chat::ChatId, anyhow::Error>`
    = help: the following other types implement trait `FromResidual<R>`:
              <std::result::Result<T, F> as FromResidual<Yeet<E>>>
              <std::result::Result<T, F> as FromResidual<std::result::Result<Infallible, E>>>

error[E0609]: no field `auth` on type `qr::Qr`
   --> src/securejoin.rs:178:22
    |
178 |             &qr_scan.auth,
    |                      ^^^^ unknown field

error[E0609]: no field `text2` on type `qr::Qr`
   --> src/securejoin.rs:180:40
    |
180 |             if join_vg { Some(&qr_scan.text2) } else { None },
    |                                        ^^^^^ unknown field

error[E0609]: no field `invitenumber` on type `qr::Qr`
   --> src/securejoin.rs:189:22
    |
189 |             &qr_scan.invitenumber,
    |                      ^^^^^^^^^^^^ unknown field

error[E0609]: no field `text2` on type `qr::Qr`
   --> src/securejoin.rs:207:73
    |
207 |                 ret_chat_id = dc_get_chat_id_by_grpid(context, &qr_scan.text2, None, None).await?;
    |                                                                         ^^^^^ unknown field

error: could not compile `deltachat` (lib test) due to 27 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

