Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `Logical` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:452:21
    |
452 |         AvroSchema::Logical(logical_type, inner_schema) => {
    |                     ^^^^^^^ variant or associated item not found in `Schema`

error[E0614]: type `usize` cannot be dereferenced
   --> crates/iceberg/src/avro/schema.rs:457:40
    |
457 | ...                   precision: *precision,
    |                                  ^^^^^^^^^^

error[E0614]: type `usize` cannot be dereferenced
   --> crates/iceberg/src/avro/schema.rs:458:36
    |
458 | ...                   scale: *scale,
    |                              ^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:461:51
    |
461 |                         Err(Error::new(ErrorKind::InvalidInput, "Invalid decimal schema"))
    |                                                   ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0599]: no variant or associated item named `UUID` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:467:66
    |
467 |                 "uuid" => Ok(Some(Type::Primitive(PrimitiveType::UUID))),
    |                                                                  ^^^^
    |                                                                  |
    |                                                                  variant or associated item not found in `PrimitiveType`
    |                                                                  help: there is a variant with a similar name: `Uuid`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `UUID` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:477:101
    |
477 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(Some(Type::Primitive(PrimitiveType::Fixed(*size)))),
    |                                                                                -------------------- ^^^^^ expected `u64`, found `usize`
    |                                                                                |
    |                                                                                arguments to this enum variant are incorrect
    |
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:231:5
    |
231 |     Fixed(u64),
    |     ^^^^^
help: you can convert a `usize` to a `u64` and panic if the converted value doesn't fit
    |
477 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(Some(Type::Primitive(PrimitiveType::Fixed((*size).try_into().unwrap())))),
    |                                                                                                     +     +++++++++++++++++++++

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:480:40
    |
480 |         _ => Err(Error::new(ErrorKind::InvalidInput, format!("Unsupported primitive type: {:?}", schema))),
    |                                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

Some errors have detailed explanations: E0308, E0599, E0614.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 7 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no variant or associated item named `Logical` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:452:21
    |
452 |         AvroSchema::Logical(logical_type, inner_schema) => {
    |                     ^^^^^^^ variant or associated item not found in `Schema`

error[E0614]: type `usize` cannot be dereferenced
   --> crates/iceberg/src/avro/schema.rs:457:40
    |
457 | ...                   precision: *precision,
    |                                  ^^^^^^^^^^

error[E0614]: type `usize` cannot be dereferenced
   --> crates/iceberg/src/avro/schema.rs:458:36
    |
458 | ...                   scale: *scale,
    |                              ^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:461:51
    |
461 |                         Err(Error::new(ErrorKind::InvalidInput, "Invalid decimal schema"))
    |                                                   ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0599]: no variant or associated item named `UUID` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:467:66
    |
467 |                 "uuid" => Ok(Some(Type::Primitive(PrimitiveType::UUID))),
    |                                                                  ^^^^
    |                                                                  |
    |                                                                  variant or associated item not found in `PrimitiveType`
    |                                                                  help: there is a variant with a similar name: `Uuid`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `UUID` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:477:101
    |
477 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(Some(Type::Primitive(PrimitiveType::Fixed(*size)))),
    |                                                                                -------------------- ^^^^^ expected `u64`, found `usize`
    |                                                                                |
    |                                                                                arguments to this enum variant are incorrect
    |
note: tuple variant defined here
   --> crates/iceberg/src/spec/datatypes.rs:231:5
    |
231 |     Fixed(u64),
    |     ^^^^^
help: you can convert a `usize` to a `u64` and panic if the converted value doesn't fit
    |
477 |         AvroSchema::Fixed(FixedSchema { size, .. }) => Ok(Some(Type::Primitive(PrimitiveType::Fixed((*size).try_into().unwrap())))),
    |                                                                                                     +     +++++++++++++++++++++

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:480:40
    |
480 |         _ => Err(Error::new(ErrorKind::InvalidInput, format!("Unsupported primitive type: {:?}", schema))),
    |                                        ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

Some errors have detailed explanations: E0308, E0599, E0614.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 7 previous errors

