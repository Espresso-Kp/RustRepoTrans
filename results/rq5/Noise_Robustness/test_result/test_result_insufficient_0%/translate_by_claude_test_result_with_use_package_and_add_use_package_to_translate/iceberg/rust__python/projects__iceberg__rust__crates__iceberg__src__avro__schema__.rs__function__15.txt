Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0769]: tuple variant `AvroSchema::Decimal` written as struct variant
   --> crates/iceberg/src/avro/schema.rs:457:9
    |
457 |         AvroSchema::Decimal { precision, scale } => {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use the tuple variant pattern syntax instead
    |
457 |         AvroSchema::Decimal(_) => {
    |                            ~~~

error[E0026]: variant `apache_avro::Schema::Fixed` does not have a field named `size`
   --> crates/iceberg/src/avro/schema.rs:468:29
    |
468 |         AvroSchema::Fixed { size, .. } => Ok(Some(Type::Primitive(PrimitiveType::Fixed(*size)))),
    |                             ^^^^
    |                             |
    |                             variant `apache_avro::Schema::Fixed` does not have this field
    |                             help: `apache_avro::Schema::Fixed` has a field named `0`

error[E0599]: no variant or associated item named `Integer` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:67
    |
453 |         AvroSchema::Int => Ok(Some(Type::Primitive(PrimitiveType::Integer))),
    |                                                                   ^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `Integer` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0026, E0599, E0769.
For more information about an error, try `rustc --explain E0026`.
error: could not compile `iceberg` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 3 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0769]: tuple variant `AvroSchema::Decimal` written as struct variant
   --> crates/iceberg/src/avro/schema.rs:457:9
    |
457 |         AvroSchema::Decimal { precision, scale } => {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: use the tuple variant pattern syntax instead
    |
457 |         AvroSchema::Decimal(_) => {
    |                            ~~~

error[E0026]: variant `apache_avro::Schema::Fixed` does not have a field named `size`
   --> crates/iceberg/src/avro/schema.rs:468:29
    |
468 |         AvroSchema::Fixed { size, .. } => Ok(Some(Type::Primitive(PrimitiveType::Fixed(*size)))),
    |                             ^^^^
    |                             |
    |                             variant `apache_avro::Schema::Fixed` does not have this field
    |                             help: `apache_avro::Schema::Fixed` has a field named `0`

error[E0599]: no variant or associated item named `Integer` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:67
    |
453 |         AvroSchema::Int => Ok(Some(Type::Primitive(PrimitiveType::Integer))),
    |                                                                   ^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `Integer` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0026, E0599, E0769.
For more information about an error, try `rustc --explain E0026`.
error: could not compile `iceberg` (lib) due to 3 previous errors

