Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Type`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:310:30
    |
310 |     if !matches!(field_type, Type::Primitive(_)) {
    |                              ^^^^ use of undeclared type `Type`
    |
help: consider importing one of these items
    |
18  + use crate::spec::Type;
    |
18  + use parquet::basic::Type;
    |
18  + use parquet::format::Type;
    |
18  + use parquet::schema::types::Type;
    |

error[E0599]: no method named `id` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:303:38
    |
303 |     let field_id = reference.field().id();
    |                                      ^^-- help: remove the arguments
    |                                      |
    |                                      field, not a method

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:309:40
    |
309 |     let field_type = reference.field().field_type();
    |                                        ^^^^^^^^^^-- help: remove the arguments
    |                                        |
    |                                        field, not a method

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:312:24
    |
312 |             ErrorKind::InvalidArgument,
    |                        ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidArgument` not found for this enum

error[E0599]: no associated item named `Primitive` found for struct `values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:16
    |
318 |         Datum::Primitive(PrimitiveLiteral::String(s)) => s,
    |                ^^^^^^^^^ associated item not found in `Datum`
    |
   ::: crates/iceberg/src/spec/values.rs:103:1
    |
103 | pub struct Datum {
    | ---------------- associated item `Primitive` not found for this struct

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:319:47
    |
319 |         _ => return Err(Error::new(ErrorKind::InvalidArgument, "Expected string literal")),
    |                                               ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidArgument` not found for this enum

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:323:43
    |
323 |     if let Some(lower_bound_bytes) = self.lower_bounds.get(&field_id) {
    |                                           ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
323 |     if let Some(lower_bound_bytes) = self.data_file.lower_bounds.get(&field_id) {
    |                                           ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:324:27
    |
324 |         let lower_bound = from_bytes(field_type, lower_bound_bytes)?;
    |                           ^^^^^^^^^^ not found in this scope

error[E0599]: no associated item named `Primitive` found for struct `values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:23
    |
325 |         if let Datum::Primitive(PrimitiveLiteral::String(lower_bound_str)) = lower_bound {
    |                       ^^^^^^^^^ associated item not found in `Datum`
    |
   ::: crates/iceberg/src/spec/values.rs:103:1
    |
103 | pub struct Datum {
    | ---------------- associated item `Primitive` not found for this struct

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:332:43
    |
332 |     if let Some(upper_bound_bytes) = self.upper_bounds.get(&field_id) {
    |                                           ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
332 |     if let Some(upper_bound_bytes) = self.data_file.upper_bounds.get(&field_id) {
    |                                           ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:333:27
    |
333 |         let upper_bound = from_bytes(field_type, upper_bound_bytes)?;
    |                           ^^^^^^^^^^ not found in this scope

error[E0599]: no associated item named `Primitive` found for struct `values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:334:23
    |
334 |         if let Datum::Primitive(PrimitiveLiteral::String(upper_bound_str)) = upper_bound {
    |                       ^^^^^^^^^ associated item not found in `Datum`
    |
   ::: crates/iceberg/src/spec/values.rs:103:1
    |
103 | pub struct Datum {
    | ---------------- associated item `Primitive` not found for this struct

Some errors have detailed explanations: E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 12 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Type`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:310:30
    |
310 |     if !matches!(field_type, Type::Primitive(_)) {
    |                              ^^^^ use of undeclared type `Type`
    |
help: consider importing one of these items
    |
18  + use crate::spec::Type;
    |
18  + use parquet::basic::Type;
    |
18  + use parquet::format::Type;
    |
18  + use parquet::schema::types::Type;
    |

error[E0599]: no method named `id` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:303:38
    |
303 |     let field_id = reference.field().id();
    |                                      ^^-- help: remove the arguments
    |                                      |
    |                                      field, not a method

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:309:40
    |
309 |     let field_type = reference.field().field_type();
    |                                        ^^^^^^^^^^-- help: remove the arguments
    |                                        |
    |                                        field, not a method

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:312:24
    |
312 |             ErrorKind::InvalidArgument,
    |                        ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidArgument` not found for this enum

error[E0599]: no associated item named `Primitive` found for struct `values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:16
    |
318 |         Datum::Primitive(PrimitiveLiteral::String(s)) => s,
    |                ^^^^^^^^^ associated item not found in `Datum`
    |
   ::: crates/iceberg/src/spec/values.rs:103:1
    |
103 | pub struct Datum {
    | ---------------- associated item `Primitive` not found for this struct

error[E0599]: no variant or associated item named `InvalidArgument` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:319:47
    |
319 |         _ => return Err(Error::new(ErrorKind::InvalidArgument, "Expected string literal")),
    |                                               ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidArgument` not found for this enum

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:323:43
    |
323 |     if let Some(lower_bound_bytes) = self.lower_bounds.get(&field_id) {
    |                                           ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
323 |     if let Some(lower_bound_bytes) = self.data_file.lower_bounds.get(&field_id) {
    |                                           ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:324:27
    |
324 |         let lower_bound = from_bytes(field_type, lower_bound_bytes)?;
    |                           ^^^^^^^^^^ not found in this scope

error[E0599]: no associated item named `Primitive` found for struct `values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:23
    |
325 |         if let Datum::Primitive(PrimitiveLiteral::String(lower_bound_str)) = lower_bound {
    |                       ^^^^^^^^^ associated item not found in `Datum`
    |
   ::: crates/iceberg/src/spec/values.rs:103:1
    |
103 | pub struct Datum {
    | ---------------- associated item `Primitive` not found for this struct

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:332:43
    |
332 |     if let Some(upper_bound_bytes) = self.upper_bounds.get(&field_id) {
    |                                           ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
332 |     if let Some(upper_bound_bytes) = self.data_file.upper_bounds.get(&field_id) {
    |                                           ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:333:27
    |
333 |         let upper_bound = from_bytes(field_type, upper_bound_bytes)?;
    |                           ^^^^^^^^^^ not found in this scope

error[E0599]: no associated item named `Primitive` found for struct `values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:334:23
    |
334 |         if let Datum::Primitive(PrimitiveLiteral::String(upper_bound_str)) = upper_bound {
    |                       ^^^^^^^^^ associated item not found in `Datum`
    |
   ::: crates/iceberg/src/spec/values.rs:103:1
    |
103 | pub struct Datum {
    | ---------------- associated item `Primitive` not found for this struct

Some errors have detailed explanations: E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 12 previous errors

