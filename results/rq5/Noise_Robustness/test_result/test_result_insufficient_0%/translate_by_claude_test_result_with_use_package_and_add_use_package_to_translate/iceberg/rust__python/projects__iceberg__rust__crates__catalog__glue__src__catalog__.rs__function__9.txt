Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:269:25
    |
269 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
269 |     let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `NamespaceNotEmpty` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:276:32
    |
276 |                     ErrorKind::NamespaceNotEmpty,
    |                                ^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:277:57
    |
277 |                     format!("Database {} is not empty", database_name),
    |                                                         ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `NoSuchNamespace` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:282:31
    |
282 |             if let ErrorKind::NoSuchNamespace = e.kind() {
    |                               ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `NoSuchNamespace` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:284:32
    |
284 |                     ErrorKind::NoSuchNamespace,
    |                                ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:285:60
    |
285 |                     format!("Database does not exist: {}", database_name),
    |                                                            ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:293:16
    |
293 |     match self.glue.delete_database().name(database_name).send().await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:269:25
    |
269 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
269 |     let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `NamespaceNotEmpty` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:276:32
    |
276 |                     ErrorKind::NamespaceNotEmpty,
    |                                ^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:277:57
    |
277 |                     format!("Database {} is not empty", database_name),
    |                                                         ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `NoSuchNamespace` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:282:31
    |
282 |             if let ErrorKind::NoSuchNamespace = e.kind() {
    |                               ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `NoSuchNamespace` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:284:32
    |
284 |                     ErrorKind::NoSuchNamespace,
    |                                ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:285:60
    |
285 |                     format!("Database does not exist: {}", database_name),
    |                                                            ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:293:16
    |
293 |     match self.glue.delete_database().name(database_name).send().await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

