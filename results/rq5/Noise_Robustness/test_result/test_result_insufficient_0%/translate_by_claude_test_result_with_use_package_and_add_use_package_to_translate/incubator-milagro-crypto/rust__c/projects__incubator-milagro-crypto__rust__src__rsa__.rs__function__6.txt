Fail
file path is :
projects/incubator-milagro-crypto/rust/src/rsa.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./rsa.rs:238:15
    |
238 |         32 => HASH256::hash(m, h_slice),
    |               ^^^^^^^^^^^^^ -  ------- unexpected argument of type `&mut [u8]`
    |                             |
    |                             types differ in mutability
    |
    = note: expected mutable reference `&mut HASH256`
                       found reference `&[u8]`
note: method defined here
   --> src/hash256.rs:189:12
    |
189 |     pub fn hash(&mut self) -> [u8; HASH_BYTES] {
    |            ^^^^ ---------
help: remove the extra argument
    |
238 -         32 => HASH256::hash(m, h_slice),
238 +         32 => HASH256::hash(/* &mut HASH256 */),
    |

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./rsa.rs:239:15
    |
239 |         48 => HASH384::hash(m, h_slice),
    |               ^^^^^^^^^^^^^ -  ------- unexpected argument of type `&mut [u8]`
    |                             |
    |                             types differ in mutability
    |
    = note: expected mutable reference `&mut HASH384`
                       found reference `&[u8]`
note: method defined here
   --> src/hash384.rs:262:12
    |
262 |     pub fn hash(&mut self) -> [u8; HASH_BYTES] {
    |            ^^^^ ---------
help: remove the extra argument
    |
239 -         48 => HASH384::hash(m, h_slice),
239 +         48 => HASH384::hash(/* &mut HASH384 */),
    |

error[E0308]: `match` arms have incompatible types
   --> src/./rsa.rs:239:15
    |
237 | /     match sha {
238 | |         32 => HASH256::hash(m, h_slice),
    | |               ------------------------- this is found to be of type `[u8; 32]`
239 | |         48 => HASH384::hash(m, h_slice),
    | |               ^^^^^^^^^^^^^^^^^^^^^^^^^ expected an array with a fixed size of 32 elements, found one with 48 elements
240 | |         64 => HASH512::hash(m, h_slice),
241 | |         _ => return true,
242 | |     }
    | |_____- `match` arms have incompatible types

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./rsa.rs:240:15
    |
240 |         64 => HASH512::hash(m, h_slice),
    |               ^^^^^^^^^^^^^ -  ------- unexpected argument of type `&mut [u8]`
    |                             |
    |                             types differ in mutability
    |
    = note: expected mutable reference `&mut HASH512`
                       found reference `&[u8]`
note: method defined here
   --> src/hash512.rs:263:12
    |
263 |     pub fn hash(&mut self) -> [u8; 64] {
    |            ^^^^ ---------
help: remove the extra argument
    |
240 -         64 => HASH512::hash(m, h_slice),
240 +         64 => HASH512::hash(/* &mut HASH512 */),
    |

Some errors have detailed explanations: E0061, E0308.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./rsa.rs:238:15
    |
238 |         32 => HASH256::hash(m, h_slice),
    |               ^^^^^^^^^^^^^ -  ------- unexpected argument of type `&mut [u8]`
    |                             |
    |                             types differ in mutability
    |
    = note: expected mutable reference `&mut hash256::HASH256`
                       found reference `&[u8]`
note: method defined here
   --> src/hash256.rs:189:12
    |
189 |     pub fn hash(&mut self) -> [u8; HASH_BYTES] {
    |            ^^^^ ---------
help: remove the extra argument
    |
238 -         32 => HASH256::hash(m, h_slice),
238 +         32 => HASH256::hash(/* &mut hash256::HASH256 */),
    |

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./rsa.rs:239:15
    |
239 |         48 => HASH384::hash(m, h_slice),
    |               ^^^^^^^^^^^^^ -  ------- unexpected argument of type `&mut [u8]`
    |                             |
    |                             types differ in mutability
    |
    = note: expected mutable reference `&mut hash384::HASH384`
                       found reference `&[u8]`
note: method defined here
   --> src/hash384.rs:262:12
    |
262 |     pub fn hash(&mut self) -> [u8; HASH_BYTES] {
    |            ^^^^ ---------
help: remove the extra argument
    |
239 -         48 => HASH384::hash(m, h_slice),
239 +         48 => HASH384::hash(/* &mut hash384::HASH384 */),
    |

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./rsa.rs:240:15
    |
240 |         64 => HASH512::hash(m, h_slice),
    |               ^^^^^^^^^^^^^ -  ------- unexpected argument of type `&mut [u8]`
    |                             |
    |                             types differ in mutability
    |
    = note: expected mutable reference `&mut hash512::HASH512`
                       found reference `&[u8]`
note: method defined here
   --> src/hash512.rs:263:12
    |
263 |     pub fn hash(&mut self) -> [u8; 64] {
    |            ^^^^ ---------
help: remove the extra argument
    |
240 -         64 => HASH512::hash(m, h_slice),
240 +         64 => HASH512::hash(/* &mut hash512::HASH512 */),
    |

error: could not compile `amcl` (lib test) due to 4 previous errors

