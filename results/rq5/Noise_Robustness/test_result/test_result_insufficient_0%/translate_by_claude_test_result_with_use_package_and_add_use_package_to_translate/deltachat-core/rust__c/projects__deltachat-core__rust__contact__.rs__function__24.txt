Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0308]: mismatched types
   --> src/contact.rs:702:35
    |
702 |     if addr_cmp(&addr_normalized, &addr_self) == std::cmp::Ordering::Equal {
    |        --------                   ^^^^^^^^^^ expected `&str`, found `&Option<String>`
    |        |
    |        arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&std::option::Option<std::string::String>`
note: function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust/deltachat-contact-tools/src/lib.rs:344:8
    |
344 | pub fn addr_cmp(addr1: &str, addr2: &str) -> bool {
    |        ^^^^^^^^

error[E0277]: can't compare `bool` with `std::cmp::Ordering`
   --> src/contact.rs:702:47
    |
702 |     if addr_cmp(&addr_normalized, &addr_self) == std::cmp::Ordering::Equal {
    |                                               ^^ no implementation for `bool == std::cmp::Ordering`
    |
    = help: the trait `PartialEq<std::cmp::Ordering>` is not implemented for `bool`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <bool as PartialEq>
              <bool as PartialEq<bitvec::ptr::proxy::BitRef<'_, M, T, O>>>
              <bool as PartialEq<serde_json::Value>>
              <&bool as PartialEq<bitvec::ptr::proxy::BitRef<'_, M, T, O>>>

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/contact.rs:712:13
    |
708 |           .query_row(
    |            --------- required by a bound introduced by this call
...
712 | /             params![
713 | |                 addr_normalized,
714 | |                 ContactId::LAST_SPECIAL,
715 | |                 min_origin as i32
716 | |             ],
    | |_____________^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::query_row`
   --> src/sql.rs:462:41
    |
459 |     pub async fn query_row<T, F>(
    |                  --------- required by a bound in this associated function
...
462 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_row`

error[E0599]: no method named `optional` found for opaque type `impl futures::Future<Output = std::result::Result<_, anyhow::Error>>` in the current scope
   --> src/contact.rs:719:10
    |
706 |       let contact_id: Option<ContactId> = context
    |  _________________________________________-
707 | |         .sql
708 | |         .query_row(
709 | |             "SELECT id FROM contacts
...   |
718 | |         )
719 | |         .optional()?;
    | |         -^^^^^^^^ method not found in `impl Future<Output = Result<_, Error>>`
    | |_________|
    | 

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/contact.rs:712:13
    |
708 |           .query_row(
    |            --------- required by a bound introduced by this call
...
712 | /             params![
713 | |                 addr_normalized,
714 | |                 ContactId::LAST_SPECIAL,
715 | |                 min_origin as i32
716 | |             ],
    | |_____________^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::query_row`
   --> src/sql.rs:462:41
    |
459 |     pub async fn query_row<T, F>(
    |                  --------- required by a bound in this associated function
...
462 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::query_row`

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 4 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

