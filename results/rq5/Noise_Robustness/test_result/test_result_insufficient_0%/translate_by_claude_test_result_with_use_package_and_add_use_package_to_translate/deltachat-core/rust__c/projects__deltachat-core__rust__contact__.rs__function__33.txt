Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0599]: no method named `clone` found for struct `Sql` in the current scope
    --> src/contact.rs:1260:26
     |
1260 |     let db = context.sql.clone();
     |                          ^^^^^ method not found in `Sql`
     |
    ::: src/sql.rs:57:1
     |
57   | pub struct Sql {
     | -------------- method `clone` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `clone`, perhaps you need to implement it:
             candidate #1: `Clone`

error[E0308]: mismatched types
    --> src/contact.rs:1295:24
     |
1295 |     context.emit_event(EventType::ContactsChanged);
     |             ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `EventType`, found enum constructor
     |             |
     |             arguments to this method are incorrect
     |
    ::: src/events/payload.rs:188:5
     |
188  |     ContactsChanged(Option<ContactId>),
     |     --------------- `ContactsChanged` defines an enum variant constructor here, which should be called
     |
     = note:          expected enum `payload::EventType`
             found enum constructor `fn(std::option::Option<ContactId>) -> payload::EventType {payload::EventType::ContactsChanged}`
note: method defined here
    --> src/context.rs:595:12
     |
595  |     pub fn emit_event(&self, event: EventType) {
     |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
     |
1295 |     context.emit_event(EventType::ContactsChanged(/* std::option::Option<ContactId> */));
     |                                                  ++++++++++++++++++++++++++++++++++++++

Some errors have detailed explanations: E0308, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 2 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `clone` found for struct `sql::Sql` in the current scope
    --> src/contact.rs:1260:26
     |
1260 |     let db = context.sql.clone();
     |                          ^^^^^ method not found in `sql::Sql`
     |
    ::: src/sql.rs:57:1
     |
57   | pub struct Sql {
     | -------------- method `clone` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `clone`, perhaps you need to implement it:
             candidate #1: `Clone`

error[E0308]: mismatched types
    --> src/contact.rs:1295:24
     |
1295 |     context.emit_event(EventType::ContactsChanged);
     |             ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `EventType`, found enum constructor
     |             |
     |             arguments to this method are incorrect
     |
    ::: src/events/payload.rs:188:5
     |
188  |     ContactsChanged(Option<ContactId>),
     |     --------------- `ContactsChanged` defines an enum variant constructor here, which should be called
     |
     = note:          expected enum `payload::EventType`
             found enum constructor `fn(std::option::Option<contact::ContactId>) -> payload::EventType {payload::EventType::ContactsChanged}`
note: method defined here
    --> src/context.rs:595:12
     |
595  |     pub fn emit_event(&self, event: EventType) {
     |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
     |
1295 |     context.emit_event(EventType::ContactsChanged(/* std::option::Option<contact::ContactId> */));
     |                                                  +++++++++++++++++++++++++++++++++++++++++++++++

error: could not compile `deltachat` (lib test) due to 2 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

