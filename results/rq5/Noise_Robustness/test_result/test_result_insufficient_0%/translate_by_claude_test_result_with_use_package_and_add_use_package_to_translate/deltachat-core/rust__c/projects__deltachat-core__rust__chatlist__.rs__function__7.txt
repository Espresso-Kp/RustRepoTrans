Fail
file path is :
projects/deltachat-core/rust/src/chatlist.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `anyhow` in this scope
   --> src/chatlist.rs:370:35
    |
370 |     ensure!(index < self.count(), anyhow!("ErrBadChatlistIndex"));
    |                                   ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
3   + use anyhow::anyhow;
    |

error[E0425]: cannot find function `get_string` in module `stock_str`
   --> src/chatlist.rs:386:41
    |
386 |         summary.text2 = Some(stock_str::get_string(context, StockMessage::NoMessages).await?);
    |                                         ^^^^^^^^^^ not found in `stock_str`

error[E0433]: failed to resolve: use of undeclared type `StockMessage`
   --> src/chatlist.rs:386:61
    |
386 |         summary.text2 = Some(stock_str::get_string(context, StockMessage::NoMessages).await?);
    |                                                             ^^^^^^^^^^^^ use of undeclared type `StockMessage`
    |
help: consider importing this enum
    |
3   + use crate::stock_str::StockMessage;
    |

error[E0599]: `&Chatlist` is not an iterator
   --> src/chatlist.rs:370:26
    |
45  | pub struct Chatlist {
    | ------------------- doesn't satisfy `Chatlist: Iterator`
...
370 |     ensure!(index < self.count(), anyhow!("ErrBadChatlistIndex"));
    |                          ^^^^^ `&Chatlist` is not an iterator
    |
    = note: the following trait bounds were not satisfied:
            `&Chatlist: Iterator`
            which is required by `&mut &Chatlist: Iterator`
            `Chatlist: Iterator`
            which is required by `&mut Chatlist: Iterator`
note: the trait `Iterator` must be implemented
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:75:1
    |
75  | pub trait Iterator {
    | ^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `count`, perhaps you need to implement it:
            candidate #1: `Iterator`

error[E0308]: `if` and `else` have incompatible types
   --> src/chatlist.rs:378:9
    |
375 |       let chat = if let Some(chat) = chat {
    |  ________________-
376 | |         chat
    | |         ---- expected because of this
377 | |     } else {
378 | |         Chat::load_from_db(context, chat_id).await?
    | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&Chat`, found `Chat`
379 | |     };
    | |_____- `if` and `else` have incompatible types
    |
help: consider borrowing here
    |
378 |         &Chat::load_from_db(context, chat_id).await?
    |         +

error[E0609]: no field `text2` on type `Summary`
   --> src/chatlist.rs:384:17
    |
384 |         summary.text2 = None;
    |                 ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
384 |         summary.text = None;
    |                 ~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:385:29
    |
385 |     } else if lastmsg_id == 0 {
    |               ----------    ^ expected `Option<MsgId>`, found integer
    |               |
    |               expected because this is `std::option::Option<MsgId>`
    |
    = note: expected enum `std::option::Option<MsgId>`
               found type `{integer}`

error[E0609]: no field `text2` on type `Summary`
   --> src/chatlist.rs:386:17
    |
386 |         summary.text2 = Some(stock_str::get_string(context, StockMessage::NoMessages).await?);
    |                 ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
386 |         summary.text = Some(stock_str::get_string(context, StockMessage::NoMessages).await?);
    |                 ~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:388:54
    |
388 |         let lastmsg = Message::load_from_db(context, lastmsg_id).await?;
    |                       ---------------------          ^^^^^^^^^^ expected `MsgId`, found `Option<MsgId>`
    |                       |
    |                       arguments to this function are incorrect
    |
    = note: expected struct `MsgId`
                 found enum `std::option::Option<MsgId>`
note: associated function defined here
   --> src/message.rs:479:18
    |
479 |     pub async fn load_from_db(context: &Context, id: MsgId) -> Result<Message> {
    |                  ^^^^^^^^^^^^                    ---------
help: consider using `Option::expect` to unwrap the `std::option::Option<MsgId>` value, panicking if the value is an `Option::None`
    |
388 |         let lastmsg = Message::load_from_db(context, lastmsg_id.expect("REASON")).await?;
    |                                                                +++++++++++++++++

error[E0599]: no function or associated item named `load_from_db` found for struct `Contact` in the current scope
   --> src/chatlist.rs:391:27
    |
391 |             Some(Contact::load_from_db(context, lastmsg.get_from_id()).await?)
    |                           ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0599]: no method named `fill` found for struct `Summary` in the current scope
   --> src/chatlist.rs:396:17
    |
396 |         summary.fill(context, &lastmsg, chat, lastcontact.as_ref()).await?;
    |                 ^^^^ method not found in `Summary`
    |
   ::: src/summary.rs:43:1
    |
43  | pub struct Summary {
    | ------------------ method `fill` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `fill`, perhaps you need to implement one of them:
            candidate #1: `Rng`
            candidate #2: `ring::rand::SecureRandom`
            candidate #3: `ring::rand::SecureRandom`
            candidate #4: `nanorand::rand::Rng`
            candidate #5: `rand::Rng`
            candidate #6: `rustls::crypto::SecureRandom`

error[E0599]: `&chatlist::Chatlist` is not an iterator
   --> src/chatlist.rs:370:26
    |
45  | pub struct Chatlist {
    | ------------------- doesn't satisfy `chatlist::Chatlist: Iterator`
...
370 |     ensure!(index < self.count(), anyhow!("ErrBadChatlistIndex"));
    |                          ^^^^^ `&chatlist::Chatlist` is not an iterator
    |
    = note: the following trait bounds were not satisfied:
            `&chatlist::Chatlist: Iterator`
            which is required by `&mut &chatlist::Chatlist: Iterator`
            `chatlist::Chatlist: Iterator`
            which is required by `&mut chatlist::Chatlist: Iterator`
note: the trait `Iterator` must be implemented
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:75:1
    |
75  | pub trait Iterator {
    | ^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `count`, perhaps you need to implement it:
            candidate #1: `Iterator`

error[E0609]: no field `text2` on type `summary::Summary`
   --> src/chatlist.rs:384:17
    |
384 |         summary.text2 = None;
    |                 ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
384 |         summary.text = None;
    |                 ~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:385:29
    |
385 |     } else if lastmsg_id == 0 {
    |               ----------    ^ expected `Option<MsgId>`, found integer
    |               |
    |               expected because this is `std::option::Option<message::MsgId>`
    |
    = note: expected enum `std::option::Option<message::MsgId>`
               found type `{integer}`

error[E0609]: no field `text2` on type `summary::Summary`
   --> src/chatlist.rs:386:17
    |
386 |         summary.text2 = Some(stock_str::get_string(context, StockMessage::NoMessages).await?);
    |                 ^^^^^ unknown field
    |
help: a field with a similar name exists
    |
386 |         summary.text = Some(stock_str::get_string(context, StockMessage::NoMessages).await?);
    |                 ~~~~

error[E0308]: mismatched types
   --> src/chatlist.rs:388:54
    |
388 |         let lastmsg = Message::load_from_db(context, lastmsg_id).await?;
    |                       ---------------------          ^^^^^^^^^^ expected `MsgId`, found `Option<MsgId>`
    |                       |
    |                       arguments to this function are incorrect
    |
    = note: expected struct `message::MsgId`
                 found enum `std::option::Option<message::MsgId>`
note: associated function defined here
   --> src/message.rs:479:18
    |
479 |     pub async fn load_from_db(context: &Context, id: MsgId) -> Result<Message> {
    |                  ^^^^^^^^^^^^                    ---------
help: consider using `Option::expect` to unwrap the `std::option::Option<message::MsgId>` value, panicking if the value is an `Option::None`
    |
388 |         let lastmsg = Message::load_from_db(context, lastmsg_id.expect("REASON")).await?;
    |                                                                +++++++++++++++++

error[E0599]: no function or associated item named `load_from_db` found for struct `contact::Contact` in the current scope
   --> src/chatlist.rs:391:27
    |
391 |             Some(Contact::load_from_db(context, lastmsg.get_from_id()).await?)
    |                           ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0599]: no method named `fill` found for struct `summary::Summary` in the current scope
   --> src/chatlist.rs:396:17
    |
396 |         summary.fill(context, &lastmsg, chat, lastcontact.as_ref()).await?;
    |                 ^^^^ method not found in `Summary`
    |
   ::: src/summary.rs:43:1
    |
43  | pub struct Summary {
    | ------------------ method `fill` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `fill`, perhaps you need to implement one of them:
            candidate #1: `Rng`
            candidate #2: `ring::rand::SecureRandom`
            candidate #3: `ring::rand::SecureRandom`
            candidate #4: `nanorand::rand::Rng`
            candidate #5: `rand::Rng`
            candidate #6: `rustls::crypto::SecureRandom`

Some errors have detailed explanations: E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 11 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

