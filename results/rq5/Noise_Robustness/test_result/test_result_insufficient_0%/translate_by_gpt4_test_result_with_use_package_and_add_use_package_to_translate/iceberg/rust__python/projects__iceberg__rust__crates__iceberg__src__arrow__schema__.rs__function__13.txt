Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/schema.rs:207:103
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |                                                                                                       ^^^^^^         ------------ help: remove this generic argument
    |                                                                                                       |
    |                                                                                                       expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:210:26
    |
210 |     let visitor: Box<dyn SchemaVisitor<Result<Schema>>> = if has_ids {
    |                          ^^^^^^^^^^^^^ expected 0 generic arguments
    |
note: trait defined here, with 0 generic parameters
   --> crates/iceberg/src/spec/schema.rs:365:11
    |
365 | pub trait SchemaVisitor {
    |           ^^^^^^^^^^^^^
help: replace the generic bound with the associated type
    |
210 |     let visitor: Box<dyn SchemaVisitor<T = Result<Schema>>> = if has_ids {
    |                                        +++

error[E0191]: the value of the associated type `T` in `spec::schema::SchemaVisitor` must be specified
   --> crates/iceberg/src/arrow/schema.rs:210:26
    |
210 |     let visitor: Box<dyn SchemaVisitor<Result<Schema>>> = if has_ids {
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated type `T` must be specified
    |
   ::: crates/iceberg/src/spec/schema.rs:367:5
    |
367 |     type T;
    |     ------ `T` defined here

error[E0433]: failed to resolve: use of undeclared type `HasIds`
   --> crates/iceberg/src/arrow/schema.rs:208:39
    |
208 |     let has_ids = visit_arrow(schema, HasIds::new());
    |                                       ^^^^^^ use of undeclared type `HasIds`

error[E0425]: cannot find function `visit_arrow` in this scope
   --> crates/iceberg/src/arrow/schema.rs:208:19
    |
208 |     let has_ids = visit_arrow(schema, HasIds::new());
    |                   ^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:211:18
    |
211 |         Box::new(ConvertToIceberg::new())
    |                  ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:213:18
    |
213 |         Box::new(ConvertToIceberg::with_name_mapping(mapping))
    |                  ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/schema.rs:215:20
    |
215 |         return Err("Parquet file does not have field-ids and the Iceberg table does not have 'schema.name-mapping.default' defined");
    |                --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `&str`
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `&'static str` due to the type of the argument passed
   --> crates/iceberg/src/arrow/schema.rs:215:16
    |
215 |         return Err("Parquet file does not have field-ids and the Iceberg table does not have 'schema.name-mapping.default' defined");
    |                ^^^^----------------------------------------------------------------------------------------------------------------^
    |                    |
    |                    this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0425]: cannot find function `visit_arrow` in this scope
   --> crates/iceberg/src/arrow/schema.rs:218:5
    |
218 |     visit_arrow(schema, &mut *visitor)
    |     ^^^^^^^^^^^ not found in this scope

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:635:9
    |
635 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
635 |         arrow_schema_to_schema(schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0107, E0191, E0308, E0425, E0433.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:635:9
    |
635 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
635 |         arrow_schema_to_schema(schema, /* std::option::Option<std::collections::HashMap<std::string::String, std::string::String>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
    --> crates/iceberg/src/arrow/schema.rs:1021:32
     |
1021 |         let converted_schema = arrow_schema_to_schema(&arrow_schema).unwrap();
     |                                ^^^^^^^^^^^^^^^^^^^^^^--------------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` is missing
     |
note: function defined here
    --> crates/iceberg/src/arrow/schema.rs:207:8
     |
207  | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
     |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
     |
1021 |         let converted_schema = arrow_schema_to_schema(&arrow_schema, /* std::option::Option<std::collections::HashMap<std::string::String, std::string::String>> */).unwrap();
     |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<std::collections::HashMap<std::string::String, std::string::String>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: could not compile `iceberg` (lib test) due to 12 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/schema.rs:207:103
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |                                                                                                       ^^^^^^         ------------ help: remove this generic argument
    |                                                                                                       |
    |                                                                                                       expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:210:26
    |
210 |     let visitor: Box<dyn SchemaVisitor<Result<Schema>>> = if has_ids {
    |                          ^^^^^^^^^^^^^ expected 0 generic arguments
    |
note: trait defined here, with 0 generic parameters
   --> crates/iceberg/src/spec/schema.rs:365:11
    |
365 | pub trait SchemaVisitor {
    |           ^^^^^^^^^^^^^
help: replace the generic bound with the associated type
    |
210 |     let visitor: Box<dyn SchemaVisitor<T = Result<Schema>>> = if has_ids {
    |                                        +++

error[E0191]: the value of the associated type `T` in `spec::schema::SchemaVisitor` must be specified
   --> crates/iceberg/src/arrow/schema.rs:210:26
    |
210 |     let visitor: Box<dyn SchemaVisitor<Result<Schema>>> = if has_ids {
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated type `T` must be specified
    |
   ::: crates/iceberg/src/spec/schema.rs:367:5
    |
367 |     type T;
    |     ------ `T` defined here

error[E0433]: failed to resolve: use of undeclared type `HasIds`
   --> crates/iceberg/src/arrow/schema.rs:208:39
    |
208 |     let has_ids = visit_arrow(schema, HasIds::new());
    |                                       ^^^^^^ use of undeclared type `HasIds`

error[E0425]: cannot find function `visit_arrow` in this scope
   --> crates/iceberg/src/arrow/schema.rs:208:19
    |
208 |     let has_ids = visit_arrow(schema, HasIds::new());
    |                   ^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:211:18
    |
211 |         Box::new(ConvertToIceberg::new())
    |                  ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0433]: failed to resolve: use of undeclared type `ConvertToIceberg`
   --> crates/iceberg/src/arrow/schema.rs:213:18
    |
213 |         Box::new(ConvertToIceberg::with_name_mapping(mapping))
    |                  ^^^^^^^^^^^^^^^^ use of undeclared type `ConvertToIceberg`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/schema.rs:215:20
    |
215 |         return Err("Parquet file does not have field-ids and the Iceberg table does not have 'schema.name-mapping.default' defined");
    |                --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `&str`
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `&'static str` due to the type of the argument passed
   --> crates/iceberg/src/arrow/schema.rs:215:16
    |
215 |         return Err("Parquet file does not have field-ids and the Iceberg table does not have 'schema.name-mapping.default' defined");
    |                ^^^^----------------------------------------------------------------------------------------------------------------^
    |                    |
    |                    this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0425]: cannot find function `visit_arrow` in this scope
   --> crates/iceberg/src/arrow/schema.rs:218:5
    |
218 |     visit_arrow(schema, &mut *visitor)
    |     ^^^^^^^^^^^ not found in this scope

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/schema.rs:635:9
    |
635 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^-------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
635 |         arrow_schema_to_schema(schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/iceberg/src/arrow/reader.rs:173:34
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema)?;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^-------------- an argument of type `std::option::Option<HashMap<std::string::String, std::string::String>>` is missing
    |
note: function defined here
   --> crates/iceberg/src/arrow/schema.rs:207:8
    |
207 | pub fn arrow_schema_to_schema(schema: &ArrowSchema, name_mapping: Option<HashMap<String, String>>) -> Result<Schema, &'static str> {
    |        ^^^^^^^^^^^^^^^^^^^^^^ --------------------  ---------------------------------------------
help: provide the argument
    |
173 |             let iceberg_schema = arrow_schema_to_schema(arrow_schema, /* std::option::Option<HashMap<std::string::String, std::string::String>> */)?;
    |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0107, E0191, E0308, E0425, E0433.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 11 previous errors

