Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/predicate.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected identifier, found keyword `ref`
   --> crates/iceberg/src/expr/predicate.rs:241:69
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                     ^^^ expected identifier, found keyword
    |
help: escape `ref` to use it as an identifier
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.r#ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                     ++

error[E0412]: cannot find type `Arc` in this scope
   --> crates/iceberg/src/expr/predicate.rs:239:67
    |
239 | fn bind(&self, schema: SchemaRef, case_sensitive: bool) -> Result<Arc<BoundSetPredicate>> {
    |                                                                   ^^^ not found in this scope
    |
help: consider importing this struct
    |
22  + use std::sync::Arc;
    |

error[E0412]: cannot find type `BoundSetPredicate` in this scope
   --> crates/iceberg/src/expr/predicate.rs:239:71
    |
239 | fn bind(&self, schema: SchemaRef, case_sensitive: bool) -> Result<Arc<BoundSetPredicate>> {
    |                                                                       ^^^^^^^^^^^^^^^^^
...
628 | pub enum BoundPredicate {
    | ----------------------- similarly named enum `BoundPredicate` defined here
    |
help: an enum with a similar name exists
    |
239 | fn bind(&self, schema: SchemaRef, case_sensitive: bool) -> Result<Arc<BoundPredicate>> {
    |                                                                       ~~~~~~~~~~~~~~
help: you might be missing a type parameter
    |
234 | impl<T: Bind, BoundSetPredicate> Bind for SetExpression<T> {
    |             +++++++++++++++++++

error[E0599]: no method named `r#ref` found for associated type `<T as Bind>::Bound` in the current scope
   --> crates/iceberg/src/expr/predicate.rs:241:69
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                     ^^^ method not found in `<T as Bind>::Bound`

error[E0277]: the trait bound `error::Error: std::cmp::Eq` is not satisfied
   --> crates/iceberg/src/expr/predicate.rs:241:104
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                                              -------   ^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `error::Error`, which is required by `HashSet<_, BuildHasherDefault<FnvHasher>>: FromIterator<std::result::Result<values::Datum, error::Error>>`
    |                                                                                              |
    |                                                                                              required by a bound introduced by this call
    |
    = help: the trait `FromIterator<T>` is implemented for `HashSet<T, S>`
    = note: required for `std::result::Result<values::Datum, error::Error>` to implement `std::cmp::Eq`
    = note: required for `HashSet<std::result::Result<values::Datum, error::Error>, BuildHasherDefault<FnvHasher>>` to implement `FromIterator<std::result::Result<values::Datum, error::Error>>`
note: required by a bound in `std::iter::Iterator::collect`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/iter/traits/iterator.rs:2050:5

error[E0277]: the trait bound `error::Error: Hash` is not satisfied
   --> crates/iceberg/src/expr/predicate.rs:241:104
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                                              -------   ^^^^^^^^^^^^^ the trait `Hash` is not implemented for `error::Error`, which is required by `HashSet<_, BuildHasherDefault<FnvHasher>>: FromIterator<std::result::Result<values::Datum, error::Error>>`
    |                                                                                              |
    |                                                                                              required by a bound introduced by this call
    |
    = help: the trait `FromIterator<T>` is implemented for `HashSet<T, S>`
    = note: required for `std::result::Result<values::Datum, error::Error>` to implement `Hash`
    = note: required for `HashSet<std::result::Result<values::Datum, error::Error>, BuildHasherDefault<FnvHasher>>` to implement `FromIterator<std::result::Result<values::Datum, error::Error>>`
note: required by a bound in `std::iter::Iterator::collect`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/iter/traits/iterator.rs:2050:5

error[E0599]: no method named `as_bound` found for reference `&predicate::SetExpression<T>` in the current scope
   --> crates/iceberg/src/expr/predicate.rs:243:13
    |
243 |     Ok(self.as_bound(bound_term, literals))
    |             ^^^^^^^^ method not found in `&SetExpression<T>`

Some errors have detailed explanations: E0277, E0412, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 7 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected identifier, found keyword `ref`
   --> crates/iceberg/src/expr/predicate.rs:241:69
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                     ^^^ expected identifier, found keyword
    |
help: escape `ref` to use it as an identifier
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.r#ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                     ++

error[E0412]: cannot find type `Arc` in this scope
   --> crates/iceberg/src/expr/predicate.rs:239:67
    |
239 | fn bind(&self, schema: SchemaRef, case_sensitive: bool) -> Result<Arc<BoundSetPredicate>> {
    |                                                                   ^^^ not found in this scope
    |
help: consider importing this struct
    |
22  + use std::sync::Arc;
    |

error[E0412]: cannot find type `BoundSetPredicate` in this scope
   --> crates/iceberg/src/expr/predicate.rs:239:71
    |
239 | fn bind(&self, schema: SchemaRef, case_sensitive: bool) -> Result<Arc<BoundSetPredicate>> {
    |                                                                       ^^^^^^^^^^^^^^^^^
...
628 | pub enum BoundPredicate {
    | ----------------------- similarly named enum `BoundPredicate` defined here
    |
help: an enum with a similar name exists
    |
239 | fn bind(&self, schema: SchemaRef, case_sensitive: bool) -> Result<Arc<BoundPredicate>> {
    |                                                                       ~~~~~~~~~~~~~~
help: you might be missing a type parameter
    |
234 | impl<T: Bind, BoundSetPredicate> Bind for SetExpression<T> {
    |             +++++++++++++++++++

error[E0599]: no method named `r#ref` found for associated type `<T as Bind>::Bound` in the current scope
   --> crates/iceberg/src/expr/predicate.rs:241:69
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                     ^^^ method not found in `<T as Bind>::Bound`

error[E0277]: the trait bound `error::Error: std::cmp::Eq` is not satisfied
   --> crates/iceberg/src/expr/predicate.rs:241:104
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                                              -------   ^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `error::Error`, which is required by `HashSet<_, BuildHasherDefault<FnvHasher>>: FromIterator<std::result::Result<values::Datum, error::Error>>`
    |                                                                                              |
    |                                                                                              required by a bound introduced by this call
    |
    = help: the trait `FromIterator<T>` is implemented for `HashSet<T, S>`
    = note: required for `std::result::Result<values::Datum, error::Error>` to implement `std::cmp::Eq`
    = note: required for `HashSet<std::result::Result<values::Datum, error::Error>, BuildHasherDefault<FnvHasher>>` to implement `FromIterator<std::result::Result<values::Datum, error::Error>>`
note: required by a bound in `std::iter::Iterator::collect`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/iter/traits/iterator.rs:2050:5

error[E0277]: the trait bound `error::Error: Hash` is not satisfied
   --> crates/iceberg/src/expr/predicate.rs:241:104
    |
241 |     let literals = self.literals.iter().map(|lit| lit.to(bound_term.ref().field.field_type)).collect::<FnvHashSet<_>>();
    |                                                                                              -------   ^^^^^^^^^^^^^ the trait `Hash` is not implemented for `error::Error`, which is required by `HashSet<_, BuildHasherDefault<FnvHasher>>: FromIterator<std::result::Result<values::Datum, error::Error>>`
    |                                                                                              |
    |                                                                                              required by a bound introduced by this call
    |
    = help: the trait `FromIterator<T>` is implemented for `HashSet<T, S>`
    = note: required for `std::result::Result<values::Datum, error::Error>` to implement `Hash`
    = note: required for `HashSet<std::result::Result<values::Datum, error::Error>, BuildHasherDefault<FnvHasher>>` to implement `FromIterator<std::result::Result<values::Datum, error::Error>>`
note: required by a bound in `std::iter::Iterator::collect`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/iter/traits/iterator.rs:2050:5

error[E0599]: no method named `as_bound` found for reference `&predicate::SetExpression<T>` in the current scope
   --> crates/iceberg/src/expr/predicate.rs:243:13
    |
243 |     Ok(self.as_bound(bound_term, literals))
    |             ^^^^^^^^ method not found in `&SetExpression<T>`

Some errors have detailed explanations: E0277, E0412, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 7 previous errors

