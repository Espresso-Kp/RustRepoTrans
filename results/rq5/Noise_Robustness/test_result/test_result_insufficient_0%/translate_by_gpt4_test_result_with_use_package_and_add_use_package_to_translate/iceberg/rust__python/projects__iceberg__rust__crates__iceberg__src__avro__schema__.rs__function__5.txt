Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0422]: cannot find struct, variant or union type `MapSchema` in this scope
   --> crates/iceberg/src/avro/schema.rs:145:25
    |
145 |                         MapSchema {
    |                         ^^^^^^^^^ help: a struct with a similar name exists: `Schema`
    |
   ::: crates/iceberg/src/spec/schema.rs:47:1
    |
47  | pub struct Schema {
    | ----------------- similarly named struct `Schema` defined here

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> crates/iceberg/src/avro/schema.rs:177:25
    |
177 |                 lookup: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing this struct
    |
19  + use std::collections::HashMap;
    |

error[E0422]: cannot find struct, variant or union type `ArraySchema` in this scope
   --> crates/iceberg/src/avro/schema.rs:183:21
    |
183 |                     ArraySchema {
    |                     ^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `LogicalType`
   --> crates/iceberg/src/avro/schema.rs:185:44
    |
185 |                         logical_type: Some(LogicalType::Map)
    |                                            ^^^^^^^^^^^ use of undeclared type `LogicalType`
    |
help: consider importing one of these items
    |
19  + use parquet::basic::LogicalType;
    |
19  + use parquet::format::LogicalType;
    |

error[E0599]: no variant or associated item named `AvroSchema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:140:28
    |
140 |         AvroSchemaOrField::AvroSchema(schema) => {
    |                            ^^^^^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `StringSchema` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:141:32
    |
141 |             if let AvroSchema::StringSchema = schema {
    |                                ^^^^^^^^^^^^ variant or associated item not found in `Schema`

error[E0599]: no variant or associated item named `AvroSchema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:143:46
    |
143 |                 return Ok(AvroSchemaOrField::AvroSchema(
    |                                              ^^^^^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `MapSchema` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:144:33
     |
144  |                     AvroSchema::MapSchema(
     |                                 ^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:147:42
    |
147 | ...                   key_id: self.last_map_key_field_id, 
    |                                    ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:148:44
    |
148 | ...                   value_id: self.last_map_value_field_id
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:157:51
    |
157 |                     name: format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id),
    |                                                   ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:157:79
    |
157 |                     name: format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id),
    |                                                                               ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `apache_avro::schema::Name` has no field named `aliases`
   --> crates/iceberg/src/avro/schema.rs:159:21
    |
159 |                     aliases: None
    |                     ^^^^^^^ `apache_avro::schema::Name` does not have this field
    |
    = note: all struct fields are already assigned

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:165:33
    |
165 |                         schema: Box::new(key_value),
    |                                 ^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:167:40
    |
167 |                         position: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:162:21
    |
162 |                     AvroRecordField {
    |                     ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:172:33
    |
172 |                         schema: Box::new(value),
    |                                 ^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:174:40
    |
174 |                         position: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:169:21
    |
169 |                     AvroRecordField {
    |                     ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0063]: missing fields `aliases` and `attributes` in initializer of `RecordSchema`
   --> crates/iceberg/src/avro/schema.rs:155:33
    |
155 |             let record_schema = RecordSchema {
    |                                 ^^^^^^^^^^^^ missing `aliases` and `attributes`

error[E0599]: no variant or associated item named `AvroSchema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:181:34
    |
181 |            Ok(AvroSchemaOrField::AvroSchema(
    |                                  ^^^^^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `ArraySchema` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:182:29
     |
182  |                 AvroSchema::ArraySchema(
     |                             ^^^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `RecordSchema` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:184:53
     |
184  |                         items: Box::new(AvroSchema::RecordSchema(record_schema)),
     |                                                     ^^^^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidData` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:190:40
    |
190 |         _ => Err(Error::new(ErrorKind::InvalidData, "Invalid schema or field"))
    |                                        ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidData` not found for this enum

Some errors have detailed explanations: E0063, E0308, E0422, E0433, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0063`.
error: could not compile `iceberg` (lib) due to 24 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 24 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0422]: cannot find struct, variant or union type `MapSchema` in this scope
   --> crates/iceberg/src/avro/schema.rs:145:25
    |
145 |                         MapSchema {
    |                         ^^^^^^^^^ help: a struct with a similar name exists: `Schema`
    |
   ::: crates/iceberg/src/spec/schema.rs:47:1
    |
47  | pub struct Schema {
    | ----------------- similarly named struct `Schema` defined here

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> crates/iceberg/src/avro/schema.rs:177:25
    |
177 |                 lookup: HashMap::new(),
    |                         ^^^^^^^ use of undeclared type `HashMap`
    |
help: consider importing this struct
    |
19  + use std::collections::HashMap;
    |

error[E0422]: cannot find struct, variant or union type `ArraySchema` in this scope
   --> crates/iceberg/src/avro/schema.rs:183:21
    |
183 |                     ArraySchema {
    |                     ^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `LogicalType`
   --> crates/iceberg/src/avro/schema.rs:185:44
    |
185 |                         logical_type: Some(LogicalType::Map)
    |                                            ^^^^^^^^^^^ use of undeclared type `LogicalType`
    |
help: consider importing one of these items
    |
19  + use parquet::basic::LogicalType;
    |
19  + use parquet::format::LogicalType;
    |

error[E0599]: no variant or associated item named `AvroSchema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:140:28
    |
140 |         AvroSchemaOrField::AvroSchema(schema) => {
    |                            ^^^^^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `StringSchema` found for enum `apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:141:32
    |
141 |             if let AvroSchema::StringSchema = schema {
    |                                ^^^^^^^^^^^^ variant or associated item not found in `Schema`

error[E0599]: no variant or associated item named `AvroSchema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:143:46
    |
143 |                 return Ok(AvroSchemaOrField::AvroSchema(
    |                                              ^^^^^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `MapSchema` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:144:33
     |
144  |                     AvroSchema::MapSchema(
     |                                 ^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:147:42
    |
147 | ...                   key_id: self.last_map_key_field_id, 
    |                                    ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:148:44
    |
148 | ...                   value_id: self.last_map_value_field_id
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:157:51
    |
157 |                     name: format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id),
    |                                                   ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:157:79
    |
157 |                     name: format!("k{}_v{}", self.last_map_key_field_id, self.last_map_value_field_id),
    |                                                                               ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0560]: struct `apache_avro::schema::Name` has no field named `aliases`
   --> crates/iceberg/src/avro/schema.rs:159:21
    |
159 |                     aliases: None
    |                     ^^^^^^^ `apache_avro::schema::Name` does not have this field
    |
    = note: all struct fields are already assigned

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:165:33
    |
165 |                         schema: Box::new(key_value),
    |                                 ^^^^^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0609]: no field `last_map_key_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:167:40
    |
167 |                         position: self.last_map_key_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:162:21
    |
162 |                     AvroRecordField {
    |                     ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0308]: mismatched types
   --> crates/iceberg/src/avro/schema.rs:172:33
    |
172 |                         schema: Box::new(value),
    |                                 ^^^^^^^^^^^^^^^ expected `Schema`, found `Box<Either<Schema, RecordField>>`
    |
    = note: expected enum `apache_avro::Schema`
             found struct `Box<itertools::Either<apache_avro::Schema, RecordField>>`

error[E0609]: no field `last_map_value_field_id` on type `&mut SchemaToAvroSchema`
   --> crates/iceberg/src/avro/schema.rs:174:40
    |
174 |                         position: self.last_map_value_field_id,
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `schema`

error[E0063]: missing fields `aliases`, `custom_attributes` and `doc` in initializer of `RecordField`
   --> crates/iceberg/src/avro/schema.rs:169:21
    |
169 |                     AvroRecordField {
    |                     ^^^^^^^^^^^^^^^ missing `aliases`, `custom_attributes` and `doc`

error[E0063]: missing fields `aliases` and `attributes` in initializer of `RecordSchema`
   --> crates/iceberg/src/avro/schema.rs:155:33
    |
155 |             let record_schema = RecordSchema {
    |                                 ^^^^^^^^^^^^ missing `aliases` and `attributes`

error[E0599]: no variant or associated item named `AvroSchema` found for enum `itertools::Either` in the current scope
   --> crates/iceberg/src/avro/schema.rs:181:34
    |
181 |            Ok(AvroSchemaOrField::AvroSchema(
    |                                  ^^^^^^^^^^ variant or associated item not found in `Either<Schema, RecordField>`

error[E0599]: no variant or associated item named `ArraySchema` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:182:29
     |
182  |                 AvroSchema::ArraySchema(
     |                             ^^^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `RecordSchema` found for enum `apache_avro::Schema` in the current scope
    --> crates/iceberg/src/avro/schema.rs:184:53
     |
184  |                         items: Box::new(AvroSchema::RecordSchema(record_schema)),
     |                                                     ^^^^^^^^^^^^ variant or associated item not found in `Schema`
     |
note: if you're trying to build a new `apache_avro::Schema` consider using one of the following associated functions:
      apache_avro::Schema::parse_str
      apache_avro::Schema::parse_reader
      apache_avro::Schema::parse
      apache_avro::Schema::parse_with_names
    --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/apache-avro-0.16.0/src/schema.rs:997:5
     |
997  |     pub fn parse_str(input: &str) -> Result<Schema, Error> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1035 |     pub fn parse_reader(reader: &mut (impl Read + ?Sized)) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1044 |     pub fn parse(value: &Value) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1051 |     pub(crate) fn parse_with_names(value: &Value, names: Names) -> AvroResult<Schema> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidData` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:190:40
    |
190 |         _ => Err(Error::new(ErrorKind::InvalidData, "Invalid schema or field"))
    |                                        ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidData` not found for this enum

Some errors have detailed explanations: E0063, E0308, E0422, E0433, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0063`.
error: could not compile `iceberg` (lib) due to 24 previous errors

