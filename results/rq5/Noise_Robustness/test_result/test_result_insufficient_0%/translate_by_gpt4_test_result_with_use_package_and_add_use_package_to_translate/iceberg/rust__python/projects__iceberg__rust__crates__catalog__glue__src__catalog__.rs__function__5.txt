Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:151:10
    |
151 |     ) -> Result<Namespace, Error> {
    |          ^^^^^^            ----- help: remove this generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0308]: arguments to this function are incorrect
   --> crates/catalog/glue/src/catalog.rs:154:38
    |
154 |                 let database_input = convert_to_database(&valid_namespace, properties);
    |                                      ^^^^^^^^^^^^^^^^^^^ ---------------- expected `&NamespaceIdent`, found `&String`
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&std::string::String`
note: expected `&HashMap<String, String>`, found `HashMap<String, String>`
   --> crates/catalog/glue/src/catalog.rs:154:76
    |
154 |                 let database_input = convert_to_database(&valid_namespace, properties);
    |                                                                            ^^^^^^^^^^
    = note: expected reference `&std::collections::HashMap<_, _>`
                  found struct `std::collections::HashMap<_, _>`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: consider borrowing here
    |
154 |                 let database_input = convert_to_database(&valid_namespace, &properties);
    |                                                                            +

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:156:28
    |
156 |                 match self.glue.create_database_with_catalog_id(database_input).await {
    |                            ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:157:54
    |
157 |                     Ok(_) => Ok(convert_to_namespace(namespace)),
    |                                 -------------------- ^^^^^^^^^ expected `&Database`, found `&NamespaceIdent`
    |                                 |
    |                                 arguments to this function are incorrect
    |
    = note: expected reference `&aws_sdk_glue::types::Database`
               found reference `&'life1 iceberg::NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:159:36
    |
159 |                         ErrorKind::AlreadyExists => Err(Error::from(ErrorKind::NamespaceAlreadyExists)),
    |                                    ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `NamespaceAlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:159:80
    |
159 |                         ErrorKind::AlreadyExists => Err(Error::from(ErrorKind::NamespaceAlreadyExists)),
    |                                                                                ^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

Some errors have detailed explanations: E0107, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0107`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:151:10
    |
151 |     ) -> Result<Namespace, Error> {
    |          ^^^^^^            ----- help: remove this generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0308]: arguments to this function are incorrect
   --> crates/catalog/glue/src/catalog.rs:154:38
    |
154 |                 let database_input = convert_to_database(&valid_namespace, properties);
    |                                      ^^^^^^^^^^^^^^^^^^^ ---------------- expected `&NamespaceIdent`, found `&String`
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&std::string::String`
note: expected `&HashMap<String, String>`, found `HashMap<String, String>`
   --> crates/catalog/glue/src/catalog.rs:154:76
    |
154 |                 let database_input = convert_to_database(&valid_namespace, properties);
    |                                                                            ^^^^^^^^^^
    = note: expected reference `&HashMap<_, _>`
                  found struct `HashMap<_, _>`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: consider borrowing here
    |
154 |                 let database_input = convert_to_database(&valid_namespace, &properties);
    |                                                                            +

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:156:28
    |
156 |                 match self.glue.create_database_with_catalog_id(database_input).await {
    |                            ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:157:54
    |
157 |                     Ok(_) => Ok(convert_to_namespace(namespace)),
    |                                 -------------------- ^^^^^^^^^ expected `&Database`, found `&NamespaceIdent`
    |                                 |
    |                                 arguments to this function are incorrect
    |
    = note: expected reference `&Database`
               found reference `&'life1 NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:159:36
    |
159 |                         ErrorKind::AlreadyExists => Err(Error::from(ErrorKind::NamespaceAlreadyExists)),
    |                                    ^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `NamespaceAlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:159:80
    |
159 |                         ErrorKind::AlreadyExists => Err(Error::from(ErrorKind::NamespaceAlreadyExists)),
    |                                                                                ^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

Some errors have detailed explanations: E0107, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0107`.
error: could not compile `iceberg-catalog-glue` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

