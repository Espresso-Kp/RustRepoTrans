Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `crate::expr::PredicateOperator::StartsWith`
  --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:19:5
   |
19 | use crate::expr::PredicateOperator::StartsWith;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `get_field` found for reference `&term::BoundReference` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:307:27
    |
307 |     let field = reference.get_field();
    |                           ^^^^^^^^^ help: there is a method with a similar name: `field`

error[E0599]: no method named `_contains_nulls_only` found for mutable reference `&mut InclusiveMetricsEvaluator<'_>` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:310:13
    |
310 |     if self._contains_nulls_only(field_id)? {
    |             ^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `contains_nulls_only`

error[E0599]: no variant or associated item named `Primitive` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:314:27
    |
314 |     if let PrimitiveType::Primitive(type_val) = field.field_type {
    |                           ^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `Primitive` not found for this enum

error[E0599]: no variant or associated item named `InvalidData` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:315:35
    |
315 |         Err(Error::new(ErrorKind::InvalidData, 
    |                                   ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidData` not found for this enum

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:315:9
    |
314 | /      if let PrimitiveType::Primitive(type_val) = field.field_type {
315 | |/         Err(Error::new(ErrorKind::InvalidData, 
316 | ||             format!("Expected PrimitiveType: {}", type_val)))
    | ||_____________________________________________________________^ expected `()`, found `Result<_, Error>`
317 | |      }
    | |______- expected this to be `()`
    |
    = note: expected unit type `()`
                    found enum `std::result::Result<_, error::Error>`
help: consider using a semicolon here
    |
316 |             format!("Expected PrimitiveType: {}", type_val)));
    |                                                              +
help: consider using a semicolon here
    |
317 |     };
    |      +
help: you might have meant to return this value
    |
315 ~         return Err(Error::new(ErrorKind::InvalidData, 
316 ~             format!("Expected PrimitiveType: {}", type_val)));
    |

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:322:34
    |
322 |     let lower_bound_bytes = self.lower_bounds.get(&field_id);
    |                                  ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
322 |     let lower_bound_bytes = self.data_file.lower_bounds.get(&field_id);
    |                                  ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:31
    |
325 |             let lower_bound = from_bytes(&field.field_type, lower_bound_bytes).to_string();
    |                               ^^^^^^^^^^ not found in this scope

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:334:34
    |
334 |     let upper_bound_bytes = self.upper_bounds.get(&field_id);
    |                                  ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
334 |     let upper_bound_bytes = self.data_file.upper_bounds.get(&field_id);
    |                                  ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:337:31
    |
337 |             let upper_bound = from_bytes(&field.field_type, upper_bound_bytes).to_string();
    |                               ^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 9 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 9 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `crate::expr::PredicateOperator::StartsWith`
  --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:19:5
   |
19 | use crate::expr::PredicateOperator::StartsWith;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `get_field` found for reference `&term::BoundReference` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:307:27
    |
307 |     let field = reference.get_field();
    |                           ^^^^^^^^^ help: there is a method with a similar name: `field`

error[E0599]: no method named `_contains_nulls_only` found for mutable reference `&mut InclusiveMetricsEvaluator<'_>` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:310:13
    |
310 |     if self._contains_nulls_only(field_id)? {
    |             ^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `contains_nulls_only`

error[E0599]: no variant or associated item named `Primitive` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:314:27
    |
314 |     if let PrimitiveType::Primitive(type_val) = field.field_type {
    |                           ^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `Primitive` not found for this enum

error[E0599]: no variant or associated item named `InvalidData` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:315:35
    |
315 |         Err(Error::new(ErrorKind::InvalidData, 
    |                                   ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidData` not found for this enum

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:315:9
    |
314 | /      if let PrimitiveType::Primitive(type_val) = field.field_type {
315 | |/         Err(Error::new(ErrorKind::InvalidData, 
316 | ||             format!("Expected PrimitiveType: {}", type_val)))
    | ||_____________________________________________________________^ expected `()`, found `Result<_, Error>`
317 | |      }
    | |______- expected this to be `()`
    |
    = note: expected unit type `()`
                    found enum `std::result::Result<_, error::Error>`
help: consider using a semicolon here
    |
316 |             format!("Expected PrimitiveType: {}", type_val)));
    |                                                              +
help: consider using a semicolon here
    |
317 |     };
    |      +
help: you might have meant to return this value
    |
315 ~         return Err(Error::new(ErrorKind::InvalidData, 
316 ~             format!("Expected PrimitiveType: {}", type_val)));
    |

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:322:34
    |
322 |     let lower_bound_bytes = self.lower_bounds.get(&field_id);
    |                                  ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
322 |     let lower_bound_bytes = self.data_file.lower_bounds.get(&field_id);
    |                                  ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:31
    |
325 |             let lower_bound = from_bytes(&field.field_type, lower_bound_bytes).to_string();
    |                               ^^^^^^^^^^ not found in this scope

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:334:34
    |
334 |     let upper_bound_bytes = self.upper_bounds.get(&field_id);
    |                                  ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
334 |     let upper_bound_bytes = self.data_file.upper_bounds.get(&field_id);
    |                                  ++++++++++

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:337:31
    |
337 |             let upper_bound = from_bytes(&field.field_type, upper_bound_bytes).to_string();
    |                               ^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 9 previous errors; 1 warning emitted

