Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0412]: cannot find type `DatabaseTypeDef` in this scope
   --> crates/catalog/glue/src/catalog.rs:107:36
    |
107 |         let mut database_list: Vec<DatabaseTypeDef> = Vec::new();
    |                                    ^^^^^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
91  | impl<DatabaseTypeDef> Catalog for GlueCatalog {
    |     +++++++++++++++++

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:101:10
    |
101 |     ) -> Result<Vec<NamespaceIdent>, Error> {
    |          ^^^^^^                      ----- help: remove this generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:125:29
    |
125 |         let namespace_list: Result<Vec<NamespaceIdent>, Error> = database_list.into_iter()
    |                             ^^^^^^                      ----- help: remove this generic argument
    |                             |
    |                             expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:112:22
    |
112 |                 self.glue.get_databases().next_token(token).send().await?
    |                      ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:114:22
    |
114 |                 self.glue.get_databases().send().await?
    |                      ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no method named `identifier_to_tuple` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:126:34
    |
126 |             .map(|database| self.identifier_to_tuple(database.name.clone()))
    |                                  ^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

Some errors have detailed explanations: E0107, E0412, E0599, E0609.
For more information about an error, try `rustc --explain E0107`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0412]: cannot find type `DatabaseTypeDef` in this scope
   --> crates/catalog/glue/src/catalog.rs:107:36
    |
107 |         let mut database_list: Vec<DatabaseTypeDef> = Vec::new();
    |                                    ^^^^^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
91  | impl<DatabaseTypeDef> Catalog for GlueCatalog {
    |     +++++++++++++++++

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:101:10
    |
101 |     ) -> Result<Vec<NamespaceIdent>, Error> {
    |          ^^^^^^                      ----- help: remove this generic argument
    |          |
    |          expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:125:29
    |
125 |         let namespace_list: Result<Vec<NamespaceIdent>, Error> = database_list.into_iter()
    |                             ^^^^^^                      ----- help: remove this generic argument
    |                             |
    |                             expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:112:22
    |
112 |                 self.glue.get_databases().next_token(token).send().await?
    |                      ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:114:22
    |
114 |                 self.glue.get_databases().send().await?
    |                      ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no method named `identifier_to_tuple` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:126:34
    |
126 |             .map(|database| self.identifier_to_tuple(database.name.clone()))
    |                                  ^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

Some errors have detailed explanations: E0107, E0412, E0599, E0609.
For more information about an error, try `rustc --explain E0107`.
error: could not compile `iceberg-catalog-glue` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

