Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Path`
   --> crates/iceberg/src/io.rs:175:16
    |
175 |     let path = Path::new(path.as_ref());
    |                ^^^^ use of undeclared type `Path`
    |
help: consider importing this struct
    |
51  + use std::path::Path;
    |

error[E0433]: failed to resolve: use of undeclared type `File`
   --> crates/iceberg/src/io.rs:182:5
    |
182 |     File::open(&path)
    |     ^^^^ use of undeclared type `File`
    |
help: consider importing one of these items
    |
51  + use std::fs::File;
    |
51  + use tokio::fs::File;
    |

error[E0425]: cannot find value `DATA` in this scope
   --> crates/iceberg/src/io.rs:183:45
    |
183 |         .and_then(|mut file| file.write_all(DATA))
    |                                             ^^^^ not found in this scope

error[E0599]: no function or associated item named `new_v` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:177:27
    |
177 |         return Err(Error::new_v(ErrorKind::PathNotFound, format!("Path not found: {}", path.display())));
    |                           ^^^^^
    |                           |
    |                           function or associated item not found in `Error`
    |                           help: there is an associated function with a similar name: `new`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `new_v` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PathNotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:177:44
    |
177 |         return Err(Error::new_v(ErrorKind::PathNotFound, format!("Path not found: {}", path.display())));
    |                                            ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PathNotFound` not found for this enum

error[E0599]: no function or associated item named `new_v` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:180:27
    |
180 |         return Err(Error::new_v(ErrorKind::InvalidInput, format!("'{}' is not a file", path.display())));
    |                           ^^^^^
    |                           |
    |                           function or associated item not found in `Error`
    |                           help: there is an associated function with a similar name: `new`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `new_v` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:180:44
    |
180 |         return Err(Error::new_v(ErrorKind::InvalidInput, format!("'{}' is not a file", path.display())));
    |                                            ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0599]: no function or associated item named `new_v` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:184:29
    |
184 |         .map_err(|e| Error::new_v(ErrorKind::PermissionDenied, format!("{}", e)))?;
    |                             ^^^^^
    |                             |
    |                             function or associated item not found in `Error`
    |                             help: there is an associated function with a similar name: `new`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `new_v` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:184:46
    |
184 |         .map_err(|e| Error::new_v(ErrorKind::PermissionDenied, format!("{}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

Some errors have detailed explanations: E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 9 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Path`
   --> crates/iceberg/src/io.rs:175:16
    |
175 |     let path = Path::new(path.as_ref());
    |                ^^^^ use of undeclared type `Path`
    |
help: consider importing this struct
    |
51  + use std::path::Path;
    |

error[E0433]: failed to resolve: use of undeclared type `File`
   --> crates/iceberg/src/io.rs:182:5
    |
182 |     File::open(&path)
    |     ^^^^ use of undeclared type `File`
    |
help: consider importing one of these items
    |
51  + use std::fs::File;
    |
51  + use tokio::fs::File;
    |

error[E0425]: cannot find value `DATA` in this scope
   --> crates/iceberg/src/io.rs:183:45
    |
183 |         .and_then(|mut file| file.write_all(DATA))
    |                                             ^^^^ not found in this scope

error[E0599]: no function or associated item named `new_v` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:177:27
    |
177 |         return Err(Error::new_v(ErrorKind::PathNotFound, format!("Path not found: {}", path.display())));
    |                           ^^^^^
    |                           |
    |                           function or associated item not found in `Error`
    |                           help: there is an associated function with a similar name: `new`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `new_v` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PathNotFound` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:177:44
    |
177 |         return Err(Error::new_v(ErrorKind::PathNotFound, format!("Path not found: {}", path.display())));
    |                                            ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PathNotFound` not found for this enum

error[E0599]: no function or associated item named `new_v` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:180:27
    |
180 |         return Err(Error::new_v(ErrorKind::InvalidInput, format!("'{}' is not a file", path.display())));
    |                           ^^^^^
    |                           |
    |                           function or associated item not found in `Error`
    |                           help: there is an associated function with a similar name: `new`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `new_v` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidInput` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:180:44
    |
180 |         return Err(Error::new_v(ErrorKind::InvalidInput, format!("'{}' is not a file", path.display())));
    |                                            ^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidInput` not found for this enum

error[E0599]: no function or associated item named `new_v` found for struct `error::Error` in the current scope
   --> crates/iceberg/src/io.rs:184:29
    |
184 |         .map_err(|e| Error::new_v(ErrorKind::PermissionDenied, format!("{}", e)))?;
    |                             ^^^^^
    |                             |
    |                             function or associated item not found in `Error`
    |                             help: there is an associated function with a similar name: `new`
    |
   ::: crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- function or associated item `new_v` not found for this struct
    |
note: if you're trying to build a new `error::Error`, consider using `error::Error::new` which returns `error::Error`
   --> crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `PermissionDenied` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/io.rs:184:46
    |
184 |         .map_err(|e| Error::new_v(ErrorKind::PermissionDenied, format!("{}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `PermissionDenied` not found for this enum

Some errors have detailed explanations: E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 9 previous errors

