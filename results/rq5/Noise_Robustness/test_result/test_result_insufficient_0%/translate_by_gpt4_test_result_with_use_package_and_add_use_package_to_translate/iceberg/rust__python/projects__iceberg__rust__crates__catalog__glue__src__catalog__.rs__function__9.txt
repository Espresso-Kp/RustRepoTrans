Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `convert_to_database` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:269:40
    |
269 |         let database_name = match self.convert_to_database(namespace) {
    |                                        ^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no associated item named `NoSuchNamespaceError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:271:43
    |
271 |             Err(err) => return Err(Error::NoSuchNamespaceError(format!("Invalid identifier: {}", namespace))),
    |                                           ^^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:271:98
    |
271 |             Err(err) => return Err(Error::NoSuchNamespaceError(format!("Invalid identifier: {}", namespace))),
    |                                                                                                  ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:273:37
    |
273 |         let table_list = match self.list_tables(&database_name, None).await {
    |                                     ^^^^^^^^^^^               ------
    |                                                               | |
    |                                                               | unexpected argument of type `std::option::Option<_>`
    |                                                               help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:71:14
    |
71  |     async fn list_tables(&self, namespace: &NamespaceIdent) -> Result<Vec<TableIdent>>;
    |              ^^^^^^^^^^^

error[E0599]: no associated item named `NoSuchNamespaceError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:276:35
    |
276 |                 return Err(Error::NoSuchNamespaceError(format!("Database does not exist: {}", database_name))),
    |                                   ^^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:276:95
    |
276 |                 return Err(Error::NoSuchNamespaceError(format!("Database does not exist: {}", database_name))),
    |                                                                                               ^^^^^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no associated item named `NamespaceNotEmptyError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:279:31
    |
279 |             return Err(Error::NamespaceNotEmptyError(format!("Database {} is not empty", database_name)));
    |                               ^^^^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:279:90
    |
279 |             return Err(Error::NamespaceNotEmptyError(format!("Database {} is not empty", database_name)));
    |                                                                                          ^^^^^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:281:20
    |
281 |         match self.glue.delete_database().name(database_name).send().await {
    |                    ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no associated item named `Other` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:283:36
    |
283 |             Err(err) => Err(Error::Other(err.to_string())),
    |                                    ^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0599]: no method named `convert_to_database` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:269:40
    |
269 |         let database_name = match self.convert_to_database(namespace) {
    |                                        ^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no associated item named `NoSuchNamespaceError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:271:43
    |
271 |             Err(err) => return Err(Error::NoSuchNamespaceError(format!("Invalid identifier: {}", namespace))),
    |                                           ^^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:271:98
    |
271 |             Err(err) => return Err(Error::NoSuchNamespaceError(format!("Invalid identifier: {}", namespace))),
    |                                                                                                  ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:273:37
    |
273 |         let table_list = match self.list_tables(&database_name, None).await {
    |                                     ^^^^^^^^^^^               ------
    |                                                               | |
    |                                                               | unexpected argument of type `std::option::Option<_>`
    |                                                               help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:71:14
    |
71  |     async fn list_tables(&self, namespace: &NamespaceIdent) -> Result<Vec<TableIdent>>;
    |              ^^^^^^^^^^^

error[E0599]: no associated item named `NoSuchNamespaceError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:276:35
    |
276 |                 return Err(Error::NoSuchNamespaceError(format!("Database does not exist: {}", database_name))),
    |                                   ^^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:276:95
    |
276 |                 return Err(Error::NoSuchNamespaceError(format!("Database does not exist: {}", database_name))),
    |                                                                                               ^^^^^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no associated item named `NamespaceNotEmptyError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:279:31
    |
279 |             return Err(Error::NamespaceNotEmptyError(format!("Database {} is not empty", database_name)));
    |                               ^^^^^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:279:90
    |
279 |             return Err(Error::NamespaceNotEmptyError(format!("Database {} is not empty", database_name)));
    |                                                                                          ^^^^^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:281:20
    |
281 |         match self.glue.delete_database().name(database_name).send().await {
    |                    ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no associated item named `Other` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:283:36
    |
283 |             Err(err) => Err(Error::Other(err.to_string())),
    |                                    ^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

