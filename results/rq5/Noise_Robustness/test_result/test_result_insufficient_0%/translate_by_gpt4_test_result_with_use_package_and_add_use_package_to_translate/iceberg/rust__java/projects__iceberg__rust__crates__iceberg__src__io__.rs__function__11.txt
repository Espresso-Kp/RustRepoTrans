Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/io.rs:234:44
    |
234 | async fn read(&self, range: Range<u64>) -> Result<Bytes, Box<dyn std::error::Error>> {
    |                                            ^^^^^^        -------------------------- help: remove this generic argument
    |                                            |
    |                                            expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:236:20
    |
236 |           return Err(Box::new(std::io::Error::new(
    |  ________________---_^
    | |                |
    | |                arguments to this enum variant are incorrect
237 | |             std::io::ErrorKind::InvalidInput,
238 | |             "start index cannot exceed end index",
239 | |         )));
    | |__________^ expected `Error`, found `Box<Error>`
    |
    = note: expected struct `error::Error`
               found struct `Box<std::io::Error>`
help: the type constructed contains `Box<std::io::Error>` due to the type of the argument passed
   --> crates/iceberg/src/io.rs:236:16
    |
236 |            return Err(Box::new(std::io::Error::new(
    |  _________________^___-
    | | ________________|
    | ||
237 | ||             std::io::ErrorKind::InvalidInput,
238 | ||             "start index cannot exceed end index",
239 | ||         )));
    | ||__________-^
    | |___________|
    |             this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0599]: no function or associated item named `read_range` found for struct `FileIOBuilder` in the current scope
   --> crates/iceberg/src/io.rs:244:33
    |
96  | pub struct FileIOBuilder {
    | ------------------------ function or associated item `read_range` not found for this struct
...
244 |     let result = FileIOBuilder::read_range(range).await.read_to_end(&mut buffer).await?;
    |                                 ^^^^^^^^^^ function or associated item not found in `FileIOBuilder`
    |
note: if you're trying to build a new `FileIOBuilder` consider using one of the following associated functions:
      FileIOBuilder::new
      FileIOBuilder::new_fs_io
   --> crates/iceberg/src/io.rs:107:5
    |
107 |     pub fn new(scheme_str: impl ToString) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
115 |     pub fn new_fs_io() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0107, E0308, E0599.
For more information about an error, try `rustc --explain E0107`.
error: could not compile `iceberg` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 3 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/io.rs:234:44
    |
234 | async fn read(&self, range: Range<u64>) -> Result<Bytes, Box<dyn std::error::Error>> {
    |                                            ^^^^^^        -------------------------- help: remove this generic argument
    |                                            |
    |                                            expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:236:20
    |
236 |           return Err(Box::new(std::io::Error::new(
    |  ________________---_^
    | |                |
    | |                arguments to this enum variant are incorrect
237 | |             std::io::ErrorKind::InvalidInput,
238 | |             "start index cannot exceed end index",
239 | |         )));
    | |__________^ expected `Error`, found `Box<Error>`
    |
    = note: expected struct `error::Error`
               found struct `Box<std::io::Error>`
help: the type constructed contains `Box<std::io::Error>` due to the type of the argument passed
   --> crates/iceberg/src/io.rs:236:16
    |
236 |            return Err(Box::new(std::io::Error::new(
    |  _________________^___-
    | | ________________|
    | ||
237 | ||             std::io::ErrorKind::InvalidInput,
238 | ||             "start index cannot exceed end index",
239 | ||         )));
    | ||__________-^
    | |___________|
    |             this argument influences the type of `Err`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:511:5

error[E0599]: no function or associated item named `read_range` found for struct `FileIOBuilder` in the current scope
   --> crates/iceberg/src/io.rs:244:33
    |
96  | pub struct FileIOBuilder {
    | ------------------------ function or associated item `read_range` not found for this struct
...
244 |     let result = FileIOBuilder::read_range(range).await.read_to_end(&mut buffer).await?;
    |                                 ^^^^^^^^^^ function or associated item not found in `FileIOBuilder`
    |
note: if you're trying to build a new `FileIOBuilder` consider using one of the following associated functions:
      FileIOBuilder::new
      FileIOBuilder::new_fs_io
   --> crates/iceberg/src/io.rs:107:5
    |
107 |     pub fn new(scheme_str: impl ToString) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
115 |     pub fn new_fs_io() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0107, E0308, E0599.
For more information about an error, try `rustc --explain E0107`.
error: could not compile `iceberg` (lib) due to 3 previous errors

