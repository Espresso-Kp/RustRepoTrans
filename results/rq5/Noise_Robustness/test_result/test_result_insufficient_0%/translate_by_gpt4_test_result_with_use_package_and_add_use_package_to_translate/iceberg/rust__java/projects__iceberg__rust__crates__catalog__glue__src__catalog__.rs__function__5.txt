Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0425]: cannot find value `database` in this scope
   --> crates/catalog/glue/src/catalog.rs:167:41
    |
167 |                 Ok(convert_to_namespace(database))
    |                                         ^^^^^^^^ not found in this scope

error[E0412]: cannot find type `GlueException` in this scope
   --> crates/catalog/glue/src/catalog.rs:170:64
    |
170 |                 if let Some(glue_exception) = e.downcast_ref::<GlueException>() {
    |                                                                ^^^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
91  | impl<GlueException> Catalog for GlueCatalog {
    |     +++++++++++++++

error[E0425]: cannot find value `AlreadyExistsException` in this scope
   --> crates/catalog/glue/src/catalog.rs:171:55
    |
171 |                     if glue_exception.code() == Some(&AlreadyExistsException.to_string()) {
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
18  + use aws_sdk_glue::Error::AlreadyExistsException;
    |
18  + use aws_sdk_glue::operation::batch_create_partition::BatchCreatePartitionError::AlreadyExistsException;
    |
18  + use aws_sdk_glue::operation::create_blueprint::CreateBlueprintError::AlreadyExistsException;
    |
18  + use aws_sdk_glue::operation::create_classifier::CreateClassifierError::AlreadyExistsException;
    |
      and 25 other candidates

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:153:30
    |
153 |         let database_input = IcebergToGlueConverter::to_database_input(
    |                              ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:156:18
    |
156 |             self.aws_properties.glue_catalog_skip_name_validation(),
    |                  ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CreateDatabaseRequest`
   --> crates/catalog/glue/src/catalog.rs:159:39
    |
159 |         let create_database_request = CreateDatabaseRequest::builder()
    |                                       ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateDatabaseRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:160:30
    |
160 |             .catalog_id(self.aws_properties.glue_catalog_id())
    |                              ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:164:20
    |
164 |         match self.glue_client.create_database(create_database_request).await {
    |                    ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:166:53
    |
166 |                 log::info!("Created namespace: {}", namespace);
    |                                                     ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:172:139
    |
172 | ... already exists in Glue", namespace)));
    |                              ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:172:67
    |
172 | ...r::new(format!("Cannot create namespace {} because it already exists in Glue", namespace)));
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorKind`, found `String`
    |
note: return type inferred to be `iceberg::ErrorKind` here
   --> crates/catalog/glue/src/catalog.rs:90:1
    |
90  | #[async_trait]
    | ^^^^^^^^^^^^^^
    = note: this error originates in the macro `format` which comes from the expansion of the attribute macro `async_trait` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:172:56
    |
172 | ...r = Err(Error::new(format!("Cannot create namespace {} because it already exists in Glue", namespace)));
    |            ^^^^^^^^^^------------------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^
help: provide the argument
    |
172 |                         let already_exists_error = Err(Error::new(format!("Cannot create namespace {} because it already exists in Glue", namespace), /* message */));
    |                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277, E0308, E0412, E0425, E0433, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `database` in this scope
   --> crates/catalog/glue/src/catalog.rs:167:41
    |
167 |                 Ok(convert_to_namespace(database))
    |                                         ^^^^^^^^ not found in this scope

error[E0412]: cannot find type `GlueException` in this scope
   --> crates/catalog/glue/src/catalog.rs:170:64
    |
170 |                 if let Some(glue_exception) = e.downcast_ref::<GlueException>() {
    |                                                                ^^^^^^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
91  | impl<GlueException> Catalog for GlueCatalog {
    |     +++++++++++++++

error[E0425]: cannot find value `AlreadyExistsException` in this scope
   --> crates/catalog/glue/src/catalog.rs:171:55
    |
171 |                     if glue_exception.code() == Some(&AlreadyExistsException.to_string()) {
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
18  + use aws_sdk_glue::Error::AlreadyExistsException;
    |
18  + use aws_sdk_glue::operation::batch_create_partition::BatchCreatePartitionError::AlreadyExistsException;
    |
18  + use aws_sdk_glue::operation::create_blueprint::CreateBlueprintError::AlreadyExistsException;
    |
18  + use aws_sdk_glue::operation::create_classifier::CreateClassifierError::AlreadyExistsException;
    |
      and 25 other candidates

error[E0433]: failed to resolve: use of undeclared type `IcebergToGlueConverter`
   --> crates/catalog/glue/src/catalog.rs:153:30
    |
153 |         let database_input = IcebergToGlueConverter::to_database_input(
    |                              ^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `IcebergToGlueConverter`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:156:18
    |
156 |             self.aws_properties.glue_catalog_skip_name_validation(),
    |                  ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CreateDatabaseRequest`
   --> crates/catalog/glue/src/catalog.rs:159:39
    |
159 |         let create_database_request = CreateDatabaseRequest::builder()
    |                                       ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateDatabaseRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:160:30
    |
160 |             .catalog_id(self.aws_properties.glue_catalog_id())
    |                              ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:164:20
    |
164 |         match self.glue_client.create_database(create_database_request).await {
    |                    ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:166:53
    |
166 |                 log::info!("Created namespace: {}", namespace);
    |                                                     ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:172:139
    |
172 | ...e it already exists in Glue", namespace)));
    |                                  ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:172:67
    |
172 | ...r::new(format!("Cannot create namespace {} because it already exists in Glue", namespace)));
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ErrorKind`, found `String`
    |
note: return type inferred to be `iceberg::ErrorKind` here
   --> crates/catalog/glue/src/catalog.rs:90:1
    |
90  | #[async_trait]
    | ^^^^^^^^^^^^^^
    = note: this error originates in the macro `format` which comes from the expansion of the attribute macro `async_trait` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:172:56
    |
172 | ...r = Err(Error::new(format!("Cannot create namespace {} because it already exists in Glue", namespace)));
    |            ^^^^^^^^^^------------------------------------------------------------------------------------ an argument is missing
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:12
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |            ^^^
help: provide the argument
    |
172 |                         let already_exists_error = Err(Error::new(format!("Cannot create namespace {} because it already exists in Glue", namespace), /* message */));
    |                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277, E0308, E0412, E0425, E0433, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...

