Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0425]: cannot find value `dest_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:548:28
    |
548 |             .database_name(dest_table.database_name().clone())
    |                            ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `dest_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:564:36
    |
564 |                     .database_name(dest_table.database_name().clone())
    |                                    ^^^^^^^^^^ not found in this scope

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:520:71
    |
520 | async fn rename_table(&self, from: &TableIdent, dest: &TableIdent) -> Result<(), Self::Error> {
    |                                                                       ^^^^^^     ----------- help: remove this generic argument
    |                                                                       |
    |                                                                       expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0599]: no method named `is_none` found for struct `iceberg::table::Table` in the current scope
   --> crates/catalog/glue/src/catalog.rs:524:30
    |
524 |         if dest_rust_catalog.is_none() {
    |                              ^^^^^^^ method not found in `Table`

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:525:24
    |
525 |             return Err(CatalogError::NamespaceNotFound(dest.namespace().clone()));
    |                        ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0599]: no method named `as_ref` found for struct `iceberg::table::Table` in the current scope
   --> crates/catalog/glue/src/catalog.rs:529:14
    |
528 |           let src_table = src_rust_catalog
    |  _________________________-
529 | |             .as_ref()
    | |             -^^^^^^ method not found in `Table`
    | |_____________|
    | 

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:533:26
    |
533 |             .map_err(|_| CatalogError::TableNotFound(from.clone()))?;
    |                          ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:535:69
    |
535 |         let dest_table_name = get_default_table_location(dest, self.aws_properties.glue_catalog_skip_name_validation());
    |                                                                     ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this function takes 4 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:535:31
    |
535 |         let dest_table_name = get_default_table_location(dest, self.aws_properties.glue_catalog_skip_name_validation());
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^---------------------------------------------------------------
    |                                                         ||
    |                                                         |an argument of type `&Namespace` is missing
    |                                                         an argument is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:209:15
    |
209 | pub(crate) fn get_default_table_location(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |     namespace: &Namespace,
    |     ---------------------
211 |     db_name: impl AsRef<str>,
    |     ------------------------
212 |     table_name: impl AsRef<str>,
    |     ---------------------------
213 |     warehouse: impl AsRef<str>,
    |     --------------------------
help: provide the arguments
    |
535 |         let dest_table_name = get_default_table_location(/* &Namespace */, self.aws_properties.glue_catalog_skip_name_validation(), dest, /* warehouse */);
    |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:540:14
    |
540 |             .parameters(src_table.parameters().clone())
    |              ^^^^^^^^^^-------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
540 |             .parameters(src_table.parameters().clone(), /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:544:49
    |
544 |             .map_err(|error| from_aws_sdk_error(error))?;
    |                              ------------------ ^^^^^ expected `SdkError<_, Response>`, found `BuildError`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected enum `aws_smithy_runtime_api::client::result::SdkError<_, aws_smithy_runtime_api::http::response::Response>`
             found struct `aws_sdk_glue::error::BuildError`
note: function defined here
   --> crates/catalog/glue/src/error.rs:24:15
    |
24  | pub(crate) fn from_aws_sdk_error<T>(error: aws_sdk_glue::error::SdkError<T>) -> Error
    |               ^^^^^^^^^^^^^^^^^^    ---------------------------------------

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:546:14
    |
546 |         self.glue.create_table(CreateTableRequest::builder()
    |              ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CreateTableRequest`
   --> crates/catalog/glue/src/catalog.rs:546:32
    |
546 |         self.glue.create_table(CreateTableRequest::builder()
    |                                ^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:547:30
    |
547 |             .catalog_id(self.aws_properties.glue_catalog_id())
    |                              ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:552:26
    |
552 |             .map_err(|_| CatalogError::CannotCreateTable(dest.clone()))?;
    |                          ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:554:30
    |
554 |         if let Err(e) = self.drop_table(from, false).await {
    |                              ^^^^^^^^^^     -------
    |                                             | |
    |                                             | unexpected argument of type `bool`
    |                                             help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:558:17
    |
558 |                 from,
    |                 ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::error` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:559:17
    |
559 |                 dest,
    |                 ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::error` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:561:18
    |
561 |             self.glue.delete_table(
    |                  ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `DeleteTableRequest`
   --> crates/catalog/glue/src/catalog.rs:562:17
    |
562 |                 DeleteTableRequest::builder()
    |                 ^^^^^^^^^^^^^^^^^^ use of undeclared type `DeleteTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:563:38
    |
563 |                     .catalog_id(self.aws_properties.glue_catalog_id())
    |                                      ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:568:30
    |
568 |                 .map_err(|_| CatalogError::CannotDeleteTable(dest.clone()))?;
    |                              ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:573:64
    |
573 |         log::info!("Successfully renamed table from {} to {}", from, dest);
    |                                                                ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:573:70
    |
573 |         log::info!("Successfully renamed table from {} to {}", from, dest);
    |                                                                      ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0107, E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 24 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `dest_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:548:28
    |
548 |             .database_name(dest_table.database_name().clone())
    |                            ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `dest_table` in this scope
   --> crates/catalog/glue/src/catalog.rs:564:36
    |
564 |                     .database_name(dest_table.database_name().clone())
    |                                    ^^^^^^^^^^ not found in this scope

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:520:71
    |
520 | async fn rename_table(&self, from: &TableIdent, dest: &TableIdent) -> Result<(), Self::Error> {
    |                                                                       ^^^^^^     ----------- help: remove this generic argument
    |                                                                       |
    |                                                                       expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0599]: no method named `is_none` found for struct `iceberg::table::Table` in the current scope
   --> crates/catalog/glue/src/catalog.rs:524:30
    |
524 |         if dest_rust_catalog.is_none() {
    |                              ^^^^^^^ method not found in `Table`

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:525:24
    |
525 |             return Err(CatalogError::NamespaceNotFound(dest.namespace().clone()));
    |                        ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0599]: no method named `as_ref` found for struct `iceberg::table::Table` in the current scope
   --> crates/catalog/glue/src/catalog.rs:529:14
    |
528 |           let src_table = src_rust_catalog
    |  _________________________-
529 | |             .as_ref()
    | |             -^^^^^^ method not found in `Table`
    | |_____________|
    | 

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:533:26
    |
533 |             .map_err(|_| CatalogError::TableNotFound(from.clone()))?;
    |                          ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:535:69
    |
535 |         let dest_table_name = get_default_table_location(dest, self.aws_properties.glue_catalog_skip_name_validation());
    |                                                                     ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this function takes 4 arguments but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:535:31
    |
535 |         let dest_table_name = get_default_table_location(dest, self.aws_properties.glue_catalog_skip_name_validation());
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^---------------------------------------------------------------
    |                                                         ||
    |                                                         |an argument of type `&Namespace` is missing
    |                                                         an argument is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:209:15
    |
209 | pub(crate) fn get_default_table_location(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |     namespace: &Namespace,
    |     ---------------------
211 |     db_name: impl AsRef<str>,
    |     ------------------------
212 |     table_name: impl AsRef<str>,
    |     ---------------------------
213 |     warehouse: impl AsRef<str>,
    |     --------------------------
help: provide the arguments
    |
535 |         let dest_table_name = get_default_table_location(/* &Namespace */, self.aws_properties.glue_catalog_skip_name_validation(), dest, /* warehouse */);
    |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:540:14
    |
540 |             .parameters(src_table.parameters().clone())
    |              ^^^^^^^^^^-------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
540 |             .parameters(src_table.parameters().clone(), /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:544:49
    |
544 |             .map_err(|error| from_aws_sdk_error(error))?;
    |                              ------------------ ^^^^^ expected `SdkError<_, Response>`, found `BuildError`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected enum `aws_smithy_runtime_api::client::result::SdkError<_, aws_smithy_runtime_api::http::response::Response>`
             found struct `aws_sdk_glue::error::BuildError`
note: function defined here
   --> crates/catalog/glue/src/error.rs:24:15
    |
24  | pub(crate) fn from_aws_sdk_error<T>(error: aws_sdk_glue::error::SdkError<T>) -> Error
    |               ^^^^^^^^^^^^^^^^^^    ---------------------------------------

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:546:14
    |
546 |         self.glue.create_table(CreateTableRequest::builder()
    |              ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CreateTableRequest`
   --> crates/catalog/glue/src/catalog.rs:546:32
    |
546 |         self.glue.create_table(CreateTableRequest::builder()
    |                                ^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:547:30
    |
547 |             .catalog_id(self.aws_properties.glue_catalog_id())
    |                              ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:552:26
    |
552 |             .map_err(|_| CatalogError::CannotCreateTable(dest.clone()))?;
    |                          ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:554:30
    |
554 |         if let Err(e) = self.drop_table(from, false).await {
    |                              ^^^^^^^^^^     -------
    |                                             | |
    |                                             | unexpected argument of type `bool`
    |                                             help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:558:17
    |
558 |                 from,
    |                 ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::error` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:559:17
    |
559 |                 dest,
    |                 ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::error` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:561:18
    |
561 |             self.glue.delete_table(
    |                  ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `DeleteTableRequest`
   --> crates/catalog/glue/src/catalog.rs:562:17
    |
562 |                 DeleteTableRequest::builder()
    |                 ^^^^^^^^^^^^^^^^^^ use of undeclared type `DeleteTableRequest`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:563:38
    |
563 |                     .catalog_id(self.aws_properties.glue_catalog_id())
    |                                      ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `CatalogError`
   --> crates/catalog/glue/src/catalog.rs:568:30
    |
568 |                 .map_err(|_| CatalogError::CannotDeleteTable(dest.clone()))?;
    |                              ^^^^^^^^^^^^ use of undeclared type `CatalogError`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:573:64
    |
573 |         log::info!("Successfully renamed table from {} to {}", from, dest);
    |                                                                ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:573:70
    |
573 |         log::info!("Successfully renamed table from {} to {}", from, dest);
    |                                                                      ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__private_api::format_args` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0107, E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 24 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

