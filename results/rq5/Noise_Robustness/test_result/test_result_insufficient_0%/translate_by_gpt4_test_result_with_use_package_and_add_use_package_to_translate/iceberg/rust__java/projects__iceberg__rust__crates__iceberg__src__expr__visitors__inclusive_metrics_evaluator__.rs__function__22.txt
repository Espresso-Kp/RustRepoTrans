Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no method named `field_id` found for reference `&term::BoundReference` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:361:24
    |
361 |     let id = reference.field_id().clone();
    |                        ^^^^^^^^ help: there is a method with a similar name: `field`

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:363:8
    |
363 |     if self.may_contain_null(&id)? {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `bool`
    |
    = help: the trait `Try` is not implemented for `bool`

error[E0599]: no method named `to_byte_buffer` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:367:33
    |
367 |     let prefix_as_bytes = datum.to_byte_buffer();
    |                                 ^^^^^^^^^^^^^^ method not found in `&Datum`

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:371:13
    |
371 |     if self.lower_bounds.is_some()
    |             ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
371 |     if self.data_file.lower_bounds.is_some()
    |             ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:372:17
    |
372 |         && self.upper_bounds.is_some()
    |                 ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
372 |         && self.data_file.upper_bounds.is_some()
    |                 ++++++++++

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:373:17
    |
373 |         && self.lower_bounds.as_ref().unwrap().contains_key(&id)
    |                 ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
373 |         && self.data_file.lower_bounds.as_ref().unwrap().contains_key(&id)
    |                 ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:374:17
    |
374 |         && self.upper_bounds.as_ref().unwrap().contains_key(&id)
    |                 ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
374 |         && self.data_file.upper_bounds.as_ref().unwrap().contains_key(&id)
    |                 ++++++++++

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:376:26
    |
376 |         let lower = self.lower_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                          ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
376 |         let lower = self.data_file.lower_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                          ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:392:30
    |
392 |             let upper = self.upper_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                              ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
392 |             let upper = self.data_file.upper_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                              ++++++++++

Some errors have detailed explanations: E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 9 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no method named `field_id` found for reference `&term::BoundReference` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:361:24
    |
361 |     let id = reference.field_id().clone();
    |                        ^^^^^^^^ help: there is a method with a similar name: `field`

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:363:8
    |
363 |     if self.may_contain_null(&id)? {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `bool`
    |
    = help: the trait `Try` is not implemented for `bool`

error[E0599]: no method named `to_byte_buffer` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:367:33
    |
367 |     let prefix_as_bytes = datum.to_byte_buffer();
    |                                 ^^^^^^^^^^^^^^ method not found in `&Datum`

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:371:13
    |
371 |     if self.lower_bounds.is_some()
    |             ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
371 |     if self.data_file.lower_bounds.is_some()
    |             ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:372:17
    |
372 |         && self.upper_bounds.is_some()
    |                 ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
372 |         && self.data_file.upper_bounds.is_some()
    |                 ++++++++++

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:373:17
    |
373 |         && self.lower_bounds.as_ref().unwrap().contains_key(&id)
    |                 ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
373 |         && self.data_file.lower_bounds.as_ref().unwrap().contains_key(&id)
    |                 ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:374:17
    |
374 |         && self.upper_bounds.as_ref().unwrap().contains_key(&id)
    |                 ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
374 |         && self.data_file.upper_bounds.as_ref().unwrap().contains_key(&id)
    |                 ++++++++++

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:376:26
    |
376 |         let lower = self.lower_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                          ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
376 |         let lower = self.data_file.lower_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                          ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:392:30
    |
392 |             let upper = self.upper_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                              ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
392 |             let upper = self.data_file.upper_bounds.as_ref().unwrap().get(&id).unwrap().clone();
    |                              ++++++++++

Some errors have detailed explanations: E0277, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 9 previous errors

