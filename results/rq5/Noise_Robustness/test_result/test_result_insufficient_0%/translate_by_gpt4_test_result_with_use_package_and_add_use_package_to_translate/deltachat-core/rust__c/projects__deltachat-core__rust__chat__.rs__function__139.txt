Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
    --> src/chat.rs:4125:24
     |
4125 |         .query_map(q3, paramsv![idsstr], |row| row.get::<_, MsgId>(0), |ids| {
     |                        ^^^^^^^ help: a macro with a similar name exists: `params`
     |
    ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
     |
176  | macro_rules! params {
     | ------------------- similarly named macro `params` defined here

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
    --> src/chat.rs:4136:52
     |
4136 |                     if msg.get_from_id().await? != DC_CONTACT_ID_SELF {
     |                                                    ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0531]: cannot find unit struct, unit variant or constant `DC_STATE_OUT_PREPARING` in module `constants`
    --> src/chat.rs:4145:36
     |
4145 |                         constants::DC_STATE_OUT_PREPARING => {
     |                                    ^^^^^^^^^^^^^^^^^^^^^^ not found in `constants`

error[E0425]: cannot find function `prepare_msg_common_raw` in module `super`
    --> src/chat.rs:4146:53
     |
4146 | ...                   let new_msg_id = super::prepare_msg_common_raw(context, &chat, &mut msg, &forward_timestamps[index]).await?;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ not found in `super`

error[E0425]: cannot find function `prepare_msg_common_raw` in module `super`
    --> src/chat.rs:4153:53
     |
4153 | ...                   let new_msg_id = super::prepare_msg_common_raw(context, &chat, &mut msg, forward_timestamps[index].into()).await?;
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ not found in `super`

error[E0308]: mismatched types
    --> src/chat.rs:4106:38
     |
4106 |             && chat_id > ChatId::new(DC_CHAT_ID_LAST_SPECIAL)
     |                          ----------- ^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ChatId`
     |                          |
     |                          arguments to this function are incorrect
     |
note: associated function defined here
    --> src/chat.rs:170:18
     |
170  |     pub const fn new(id: u32) -> ChatId {
     |                  ^^^ -------

error[E0308]: mismatched types
    --> src/chat.rs:4107:16
     |
4105 | /         !msg_ids.is_empty()
4106 | |             && chat_id > ChatId::new(DC_CHAT_ID_LAST_SPECIAL)
     | |_____________________________________________________________- expected because this is `bool`
4107 |               && context.sql.is_open()
     |                  ^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found future
     |
note: calling an async function returns a future
    --> src/chat.rs:4107:16
     |
4107 |             && context.sql.is_open()
     |                ^^^^^^^^^^^^^^^^^^^^^
help: consider `await`ing on the `Future`
     |
4107 |             && context.sql.is_open().await
     |                                     ++++++

error[E0599]: no method named `set_smtp_log_connect_errors` found for reference `&context::Context` in the current scope
    --> src/chat.rs:4113:13
     |
4113 |     context.set_smtp_log_connect_errors(true);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `set_last_error`

error[E0277]: `i64` is not a future
    --> src/chat.rs:4115:80
     |
4115 |     let forward_timestamps = create_smeared_timestamps(context, msg_ids.len()).await;
     |                              ------------------------------------------------- ^^^^^ `i64` is not a future
     |                              |
     |                              this call returns `i64`
     |
     = help: the trait `futures::Future` is not implemented for `i64`, which is required by `i64: std::future::IntoFuture`
     = note: i64 must be a future or must implement `IntoFuture` to be awaited
     = note: required for `i64` to implement `std::future::IntoFuture`
help: remove the `.await`
     |
4115 -     let forward_timestamps = create_smeared_timestamps(context, msg_ids.len()).await;
4115 +     let forward_timestamps = create_smeared_timestamps(context, msg_ids.len());
     |
help: alternatively, consider making `fn create_smeared_timestamps` asynchronous
    -->  src/tools.rs:172:11
     |
172  | pub(crate) async fn create_smeared_timestamps(context: &Context, count: usize) -> i64 {
     |            +++++

error[E0061]: this method takes 1 argument but 0 arguments were supplied
    --> src/chat.rs:4121:17
     |
4121 |     context.sql.transaction().await?;
     |                 ^^^^^^^^^^^-- an argument is missing
     |
note: method defined here
    --> src/sql.rs:480:18
     |
480  |     pub async fn transaction<G, H>(&self, callback: G) -> Result<H>
     |                  ^^^^^^^^^^^              -----------
help: provide the argument
     |
4121 |     context.sql.transaction(/* callback */).await?;
     |                            ~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
    --> src/chat.rs:4126:13
     |
4126 |             ids.collect::<Result<Vec<_>, _>>()
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Result<_, Error>`, found `Result<Vec<MsgId>, Error>`
     |
     = note: `rusqlite::Error` and `anyhow::Error` have similar names, but are actually distinct types
note: `rusqlite::Error` is defined in crate `rusqlite`
    --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/error.rs:14:1
     |
14   | pub enum Error {
     | ^^^^^^^^^^^^^^
note: `anyhow::Error` is defined in crate `anyhow`
    --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:387:1
     |
387  | pub struct Error {
     | ^^^^^^^^^^^^^^^^
help: try wrapping the expression in `Ok`
     |
4126 |             Ok(ids.collect::<Result<Vec<_>, _>>())
     |             +++                                  +

error[E0308]: mismatched types
    --> src/chat.rs:4125:20
     |
4125 |         .query_map(q3, paramsv![idsstr], |row| row.get::<_, MsgId>(0), |ids| {
     |          --------- ^^ expected `&str`, found `String`
     |          |
     |          arguments to this method are incorrect
     |
note: method defined here
    --> src/sql.rs:425:18
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  ^^^^^^^^^
426  |         &self,
427  |         sql: &str,
     |         ---------
help: consider borrowing here
     |
4125 |         .query_map(&q3, paramsv![idsstr], |row| row.get::<_, MsgId>(0), |ids| {
     |                    +

error[E0282]: type annotations needed
    --> src/chat.rs:4130:45
     |
4130 |         Ok(ref src_msg_ids) if !src_msg_ids.is_empty() => {
     |                                             ^^^^^^^^ cannot infer type for type parameter `T` declared on the enum `Result`

error[E0277]: `ContactId` is not a future
    --> src/chat.rs:4136:42
     |
4136 |                     if msg.get_from_id().await? != DC_CONTACT_ID_SELF {
     |                                         -^^^^^
     |                                         ||
     |                                         |`ContactId` is not a future
     |                                         help: remove the `.await`
     |
     = help: the trait `futures::Future` is not implemented for `ContactId`, which is required by `ContactId: std::future::IntoFuture`
     = note: ContactId must be a future or must implement `IntoFuture` to be awaited
     = note: required for `ContactId` to implement `std::future::IntoFuture`

error[E0425]: cannot find function `append_forwarded_info` in this scope
    --> src/chat.rs:4147:29
     |
4147 | ...                   append_forwarded_info(&mut msg, msg.id, &new_msg_id).await;
     |                       ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared crate or module `job`
    --> src/chat.rs:4154:29
     |
4154 | ...                   job::send_msg(context, new_msg_id).await;
     |                       ^^^ use of undeclared crate or module `job`

error[E0599]: no method named `commit` found for struct `Sql` in the current scope
    --> src/chat.rs:4164:17
     |
4164 |     context.sql.commit().await?;
     |                 ^^^^^^ method not found in `Sql`
     |
    ::: src/sql.rs:57:1
     |
57   | pub struct Sql {
     | -------------- method `commit` not found for this struct

error[E0308]: mismatched types
    --> src/chat.rs:4168:34
     |
4168 |             chat_id: ChatId::new(*chat_id),
     |                      ----------- ^^^^^^^^ expected `u32`, found `ChatId`
     |                      |
     |                      arguments to this function are incorrect
     |
note: associated function defined here
    --> src/chat.rs:170:18
     |
170  |     pub const fn new(id: u32) -> ChatId {
     |                  ^^^ -------

error[E0277]: `contact::ContactId` is not a future
    --> src/chat.rs:4136:42
     |
4136 |                     if msg.get_from_id().await? != DC_CONTACT_ID_SELF {
     |                                         -^^^^^
     |                                         ||
     |                                         |`contact::ContactId` is not a future
     |                                         help: remove the `.await`
     |
     = help: the trait `futures::Future` is not implemented for `contact::ContactId`, which is required by `contact::ContactId: std::future::IntoFuture`
     = note: contact::ContactId must be a future or must implement `IntoFuture` to be awaited
     = note: required for `contact::ContactId` to implement `std::future::IntoFuture`

error[E0599]: no method named `commit` found for struct `sql::Sql` in the current scope
    --> src/chat.rs:4164:17
     |
4164 |     context.sql.commit().await?;
     |                 ^^^^^^ method not found in `sql::Sql`
     |
    ::: src/sql.rs:57:1
     |
57   | pub struct Sql {
     | -------------- method `commit` not found for this struct

Some errors have detailed explanations: E0061, E0277, E0282, E0308, E0425, E0433, E0531, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 18 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 18 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

