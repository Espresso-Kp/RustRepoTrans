Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find function `normalize_name` in this scope
   --> src/contact.rs:980:25
    |
980 |         let norm_name = normalize_name(name);
    |                         ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
3   + use crate::contact::contact_tools::normalize_name;
    |
3   + use deltachat_contact_tools::normalize_name;
    |

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
   --> src/contact.rs:966:16
    |
966 |     if context.is_null() {
    |                ^^^^^^^ method not found in `&Context`

error[E0425]: cannot find function `split_into_lines` in this scope
   --> src/contact.rs:970:17
    |
970 |     let lines = split_into_lines(addr_book);
    |                 ^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `begin_transaction` found for struct `Sql` in the current scope
   --> src/contact.rs:975:35
    |
975 |     let transaction = context.sql.begin_transaction().await?;
    |                                   ^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `transaction`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `begin_transaction` not found for this struct

error[E0560]: struct `VcardContact` has no field named `display_name`
   --> src/contact.rs:983:13
    |
983 |             display_name: norm_name.into(),
    |             ^^^^^^^^^^^^ `VcardContact` does not have this field
    |
    = note: available fields are: `addr`, `authname`, `key`, `profile_image`, `timestamp`

error[E0560]: struct `VcardContact` has no field named `email`
   --> src/contact.rs:984:13
    |
984 |             email: norm_addr.into(),
    |             ^^^^^ `VcardContact` does not have this field
    |
    = note: available fields are: `addr`, `authname`, `key`, `profile_image`, `timestamp`

error[E0599]: no function or associated item named `default` found for struct `VcardContact` in the current scope
   --> src/contact.rs:985:29
    |
985 |             ..VcardContact::default()
    |                             ^^^^^^^ function or associated item not found in `VcardContact`

error[E0599]: no variant or associated item named `AdressBook` found for enum `contact::Origin` in the current scope
   --> src/contact.rs:988:71
    |
410 | pub enum Origin {
    | --------------- variant or associated item `AdressBook` not found for this enum
...
988 |         modified = add_or_lookup_contact(context, &addr_book, Origin::AdressBook, modify_cnt).await?;
    |                                                                       ^^^^^^^^^^
    |                                                                       |
    |                                                                       variant or associated item not found in `Origin`
    |                                                                       help: there is a variant with a similar name: `AddressBook`

error[E0425]: cannot find function `add_or_lookup_contact` in this scope
   --> src/contact.rs:988:20
    |
988 |         modified = add_or_lookup_contact(context, &addr_book, Origin::AdressBook, modify_cnt).await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider using the associated function on `Self`
    |
988 |         modified = Self::add_or_lookup_contact(context, &addr_book, Origin::AdressBook, modify_cnt).await?;
    |                    ++++++

error[E0599]: no method named `call_cb` found for reference `&context::Context` in the current scope
    --> src/contact.rs:1000:17
     |
1000 |         context.call_cb(EventType::ContactsChanged, 0_i32, 0 as usize);
     |                 ^^^^^^^ method not found in `&Context`

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
    --> src/contact.rs:1006:30
     |
1006 |     let (id, sth_modified) = Contact::add_or_lookup(context, vcard_contact, origin).await?;
     |                              ^^^^^^^^^^^^^^^^^^^^^^          -------------  ------ an argument of type `&ContactAddress` is missing
     |                                                              |
     |                                                              expected `&str`, found `&VcardContact`
     |
     = note: expected reference `&str`
                found reference `&VcardContact`
note: associated function defined here
    --> src/contact.rs:757:25
     |
757  |     pub(crate) async fn add_or_lookup(
     |                         ^^^^^^^^^^^^^
758  |         context: &Context,
     |         -----------------
759  |         name: &str,
     |         ----------
760  |         addr: &ContactAddress,
     |         ---------------------
761  |         mut origin: Origin,
     |         ------------------
help: provide the argument
     |
1006 |     let (id, sth_modified) = Contact::add_or_lookup(context, /* &str */, /* &ContactAddress */, origin).await?;
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
    --> src/contact.rs:1007:8
     |
1007 |     Ok(sth_modified)
     |     -- ^^^^^^^^^^^^ expected `bool`, found `Modifier`
     |     |
     |     arguments to this enum variant are incorrect
     |
help: the type constructed contains `Modifier` due to the type of the argument passed
    --> src/contact.rs:1007:5
     |
1007 |     Ok(sth_modified)
     |     ^^^------------^
     |        |
     |        this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

error[E0599]: no method named `begin_transaction` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:975:35
    |
975 |     let transaction = context.sql.begin_transaction().await?;
    |                                   ^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `transaction`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `begin_transaction` not found for this struct

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
    --> src/contact.rs:1006:30
     |
1006 |     let (id, sth_modified) = Contact::add_or_lookup(context, vcard_contact, origin).await?;
     |                              ^^^^^^^^^^^^^^^^^^^^^^          -------------  ------ an argument of type `&deltachat_contact_tools::ContactAddress` is missing
     |                                                              |
     |                                                              expected `&str`, found `&VcardContact`
     |
     = note: expected reference `&str`
                found reference `&VcardContact`
note: associated function defined here
    --> src/contact.rs:757:25
     |
757  |     pub(crate) async fn add_or_lookup(
     |                         ^^^^^^^^^^^^^
758  |         context: &Context,
     |         -----------------
759  |         name: &str,
     |         ----------
760  |         addr: &ContactAddress,
     |         ---------------------
761  |         mut origin: Origin,
     |         ------------------
help: provide the argument
     |
1006 |     let (id, sth_modified) = Contact::add_or_lookup(context, /* &str */, /* &deltachat_contact_tools::ContactAddress */, origin).await?;
     |                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
    --> src/contact.rs:1007:8
     |
1007 |     Ok(sth_modified)
     |     -- ^^^^^^^^^^^^ expected `bool`, found `Modifier`
     |     |
     |     arguments to this enum variant are incorrect
     |
help: the type constructed contains `contact::Modifier` due to the type of the argument passed
    --> src/contact.rs:1007:5
     |
1007 |     Ok(sth_modified)
     |     ^^^------------^
     |        |
     |        this argument influences the type of `Ok`
note: tuple variant defined here
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
     |
506  |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
     |     ^^

Some errors have detailed explanations: E0061, E0308, E0425, E0560, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 12 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

