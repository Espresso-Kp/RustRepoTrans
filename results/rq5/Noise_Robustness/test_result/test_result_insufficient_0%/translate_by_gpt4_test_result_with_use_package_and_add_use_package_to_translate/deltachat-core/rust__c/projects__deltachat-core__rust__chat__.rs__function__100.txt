Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
    --> src/chat.rs:2608:46
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                              ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
    --> src/chat.rs:2626:40
     |
2626 |             contact_id: ContactId::new(DC_CONTACT_ID_SELF as u32),
     |                                        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
    --> src/chat.rs:2608:16
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
    --> src/chat.rs:2608:37
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                     ^^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `is_none` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2608:70
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                                                      ^^^^^^^ method not found in `&mut Message`
     |
help: some of the expressions' fields have a method of the same name
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.error.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                                                      ++++++
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.in_reply_to.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                                                      ++++++++++++

error[E0277]: can't compare `u32` with `ChatId`
    --> src/chat.rs:2608:100
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                                                                                    ^^ no implementation for `u32 < ChatId` and `u32 > ChatId`
     |
     = help: the trait `PartialOrd<ChatId>` is not implemented for `u32`
     = help: the following other types implement trait `PartialOrd<Rhs>`:
               <u32 as PartialOrd>
               <u32 as PartialOrd<precis_core::Codepoints>>

error[E0599]: no method named `set` found for enum `MessageState` in the current scope
    --> src/chat.rs:2611:15
     |
2611 |     msg.state.set(MessageState::OutPreparing);
     |               ^^^ method not found in `MessageState`
     |
    ::: src/message.rs:1269:1
     |
1269 | pub enum MessageState {
     | --------------------- method `set` not found for this enum
     |
help: consider pinning the expression
     |
2611 ~     let mut pinned = std::pin::pin!(msg.state);
2612 ~     pinned.as_mut().set(MessageState::OutPreparing);
     |

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
    --> src/chat.rs:2612:24
     |
2612 |     let msg_id = match prepare_msg_common(context, &chat_id, msg).await {
     |                        ^^^^^^^^^^^^^^^^^^------------------------
     |                                          |         |
     |                                          |         expected `ChatId`, found `&ChatId`
     |                                          an argument of type `MessageState` is missing
     |
note: function defined here
    --> src/chat.rs:2713:10
     |
2713 | async fn prepare_msg_common(
     |          ^^^^^^^^^^^^^^^^^^
2714 |     context: &Context,
     |     -----------------
2715 |     chat_id: ChatId,
     |     ---------------
2716 |     msg: &mut Message,
     |     -----------------
2717 |     change_state_to: MessageState,
     |     -----------------------------
help: consider removing the borrow
     |
2612 -     let msg_id = match prepare_msg_common(context, &chat_id, msg).await {
2612 +     let msg_id = match prepare_msg_common(context, chat_id, msg).await {
     |
help: provide the argument
     |
2612 |     let msg_id = match prepare_msg_common(context, /* ChatId */, msg, /* MessageState */).await {
     |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
    --> src/chat.rs:2621:28
     |
2621 |         msg_id: MsgId::new(msg.id.clone()),
     |                 ---------- ^^^^^^^^^^^^^^ expected `u32`, found `MsgId`
     |                 |
     |                 arguments to this function are incorrect
     |
note: associated function defined here
    --> src/message.rs:50:12
     |
50   |     pub fn new(id: u32) -> MsgId {
     |            ^^^ -------

error[E0559]: variant `payload::EventType::LocationChanged` has no field named `contact_id`
    --> src/chat.rs:2626:13
     |
2626 |             contact_id: ContactId::new(DC_CONTACT_ID_SELF as u32),
     |             ^^^^^^^^^^ field does not exist
     |
    ::: src/events/payload.rs:195:5
     |
195  |     LocationChanged(Option<ContactId>),
     |     --------------- `payload::EventType::LocationChanged` defined here
     |
help: `payload::EventType::LocationChanged` is a tuple variant, use the appropriate syntax
     |
2625 |         context.emit_event(payload::EventType::LocationChanged(/* fields */));
     |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0559]: variant `payload::EventType::LocationChanged` has no field named `location`
    --> src/chat.rs:2627:13
     |
2627 |             location: None,
     |             ^^^^^^^^ field does not exist
     |
    ::: src/events/payload.rs:195:5
     |
195  |     LocationChanged(Option<ContactId>),
     |     --------------- `payload::EventType::LocationChanged` defined here
     |
help: `payload::EventType::LocationChanged` is a tuple variant, use the appropriate syntax
     |
2625 |         context.emit_event(payload::EventType::LocationChanged(/* fields */));
     |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: can't compare `u32` with `chat::ChatId`
    --> src/chat.rs:2608:100
     |
2608 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || msg.is_none() || chat_id.to_u32() <= DC_CHAT_ID_LAST_SPECIAL {
     |                                                                                                    ^^ no implementation for `u32 < chat::ChatId` and `u32 > chat::ChatId`
     |
     = help: the trait `PartialOrd<chat::ChatId>` is not implemented for `u32`
     = help: the following other types implement trait `PartialOrd<Rhs>`:
               <u32 as PartialOrd>
               <u32 as PartialOrd<precis_core::Codepoints>>

error[E0599]: no method named `set` found for enum `message::MessageState` in the current scope
    --> src/chat.rs:2611:15
     |
2611 |     msg.state.set(MessageState::OutPreparing);
     |               ^^^ method not found in `MessageState`
     |
    ::: src/message.rs:1269:1
     |
1269 | pub enum MessageState {
     | --------------------- method `set` not found for this enum
     |
help: consider pinning the expression
     |
2611 ~     let mut pinned = std::pin::pin!(msg.state);
2612 ~     pinned.as_mut().set(MessageState::OutPreparing);
     |

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
    --> src/chat.rs:2612:24
     |
2612 |     let msg_id = match prepare_msg_common(context, &chat_id, msg).await {
     |                        ^^^^^^^^^^^^^^^^^^------------------------
     |                                          |         |
     |                                          |         expected `ChatId`, found `&ChatId`
     |                                          an argument of type `message::MessageState` is missing
     |
note: function defined here
    --> src/chat.rs:2713:10
     |
2713 | async fn prepare_msg_common(
     |          ^^^^^^^^^^^^^^^^^^
2714 |     context: &Context,
     |     -----------------
2715 |     chat_id: ChatId,
     |     ---------------
2716 |     msg: &mut Message,
     |     -----------------
2717 |     change_state_to: MessageState,
     |     -----------------------------
help: consider removing the borrow
     |
2612 -     let msg_id = match prepare_msg_common(context, &chat_id, msg).await {
2612 +     let msg_id = match prepare_msg_common(context, chat_id, msg).await {
     |
help: provide the argument
     |
2612 |     let msg_id = match prepare_msg_common(context, /* chat::ChatId */, msg, /* message::MessageState */).await {
     |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0559, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 11 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

