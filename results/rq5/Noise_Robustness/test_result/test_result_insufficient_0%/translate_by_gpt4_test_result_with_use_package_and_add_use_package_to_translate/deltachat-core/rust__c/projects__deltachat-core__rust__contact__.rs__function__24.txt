Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
   --> src/contact.rs:713:13
    |
713 |             paramsv![
    |             ^^^^^^^ help: a macro with a similar name exists: `params`
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
    |
176 | macro_rules! params {
    | ------------------- similarly named macro `params` defined here

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/contact.rs:705:28
    |
705 |             return Ok(Some(DC_CONTACT_ID_SELF.into()));
    |                            ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> src/contact.rs:696:16
    |
696 |     let addr = sanitize_name_and_addr(addr);
    |                ^^^^^^^^^^^^^^^^^^^^^^------ an argument of type `&str` is missing
    |
note: function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust/deltachat-contact-tools/src/lib.rs:267:8
    |
267 | pub fn sanitize_name_and_addr(name: &str, addr: &str) -> (String, String) {
    |        ^^^^^^^^^^^^^^^^^^^^^^
help: provide the argument
    |
696 |     let addr = sanitize_name_and_addr(addr, /* &str */);
    |                                      ~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `is_none` found for tuple `(std::string::String, std::string::String)` in the current scope
   --> src/contact.rs:697:13
    |
697 |     if addr.is_none() {
    |             ^^^^^^^ method not found in `(String, String)`

error[E0599]: no method named `unwrap` found for tuple `(std::string::String, std::string::String)` in the current scope
   --> src/contact.rs:701:21
    |
701 |     let addr = addr.unwrap().1;
    |                     ^^^^^^ method not found in `(String, String)`

error[E0308]: mismatched types
   --> src/contact.rs:703:12
    |
703 |     if let Some(self_addr) = context.get_config(Config::ConfiguredAddr).await {
    |            ^^^^^^^^^^^^^^^   ------------------------------------------------ this expression has type `std::result::Result<std::option::Option<std::string::String>, anyhow::Error>`
    |            |
    |            expected `Result<Option<String>, Error>`, found `Option<_>`
    |
    = note: expected enum `std::result::Result<std::option::Option<std::string::String>, anyhow::Error>`
               found enum `std::option::Option<_>`
help: try wrapping the pattern in `Ok`
    |
703 |     if let Ok(Some(self_addr)) = context.get_config(Config::ConfiguredAddr).await {
    |            +++               +

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/contact.rs:703:17
    |
703 |     if let Some(self_addr) = context.get_config(Config::ConfiguredAddr).await {
    |                 ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/contact.rs:703:12
    |
703 |     if let Some(self_addr) = context.get_config(Config::ConfiguredAddr).await {
    |            ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::prelude::v1::Some`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:17
    |
570 | pub enum Option<T> {
    |                 ^ required by this bound in `std::prelude::v1::Some`
...
578 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ---- required by a bound in this tuple variant

error[E0277]: the trait bound `ContactId: From<u32>` is not satisfied
   --> src/contact.rs:722:36
    |
722 |         return Ok(Some((id as u32).into()));
    |                                    ^^^^ the trait `From<u32>` is not implemented for `ContactId`, which is required by `u32: Into<_>`
    |
    = note: required for `u32` to implement `Into<ContactId>`

error[E0277]: the trait bound `contact::ContactId: From<u32>` is not satisfied
   --> src/contact.rs:722:36
    |
722 |         return Ok(Some((id as u32).into()));
    |                                    ^^^^ the trait `From<u32>` is not implemented for `contact::ContactId`, which is required by `u32: Into<_>`
    |
    = note: required for `u32` to implement `Into<contact::ContactId>`

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 9 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

