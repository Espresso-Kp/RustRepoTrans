Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
   --> src/chat.rs:862:34
    |
862 |         _ => if context.magic != DC_CONTEXT_MAGIC 
    |                                  ^^^^^^^^^^^^^^^^ not found in this scope

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/chat.rs:930:43
    |
930 |             if let Some(old_draft) = self.get_draft(context).await? {
    |                                           ^^^^^^^^^--------- an argument of type `usize` is missing
    |
note: method defined here
   --> src/chat.rs:856:14
    |
856 | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
    |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
    |
930 |             if let Some(old_draft) = self.get_draft(context, /* usize */).await? {
    |                                                    ~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/chat.rs:861:9
    |
860 |     match context {
    |           ------- this expression has type `&context::Context`
861 |         None => return Ok(None),
    |         ^^^^ expected `Context`, found `Option<_>`
    |
    = note: expected struct `context::Context`
                 found enum `std::option::Option<_>`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/chat.rs:862:25
    |
862 |         _ => if context.magic != DC_CONTEXT_MAGIC 
    |                         ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0425]: cannot find function `get_draft_msg_id` in this scope
   --> src/chat.rs:868:20
    |
868 |     draft_msg_id = get_draft_msg_id(context, chat_id as u32);
    |                    ^^^^^^^^^^^^^^^^
    |
help: consider using the method on `Self`
    |
868 |     draft_msg_id = self.get_draft_msg_id(context, chat_id as u32);
    |                    +++++
help: a local variable with a similar name exists
    |
868 |     draft_msg_id = draft_msg_id(context, chat_id as u32);
    |                    ~~~~~~~~~~~~

error[E0599]: no function or associated item named `new_untyped` found for struct `message::Message` in the current scope
   --> src/chat.rs:873:31
    |
873 |     draft_msg = Some(Message::new_untyped(context).await?);
    |                               ^^^^^^^^^^^ function or associated item not found in `Message`
    |
   ::: src/message.rs:420:1
    |
420 | pub struct Message {
    | ------------------ function or associated item `new_untyped` not found for this struct
    |
note: if you're trying to build a new `message::Message`, consider using `message::Message::new` which returns `message::Message`
   --> src/message.rs:469:5
    |
469 |     pub fn new(viewtype: Viewtype) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> src/chat.rs:874:11
    |
874 |     match Message::load_from_db(&draft_msg, context, &draft_msg_id).await {
    |           ^^^^^^^^^^^^^^^^^^^^^ ----------           ------------- expected `MsgId`, found `&u32`
    |                                 |
    |                                 unexpected argument of type `&std::option::Option<message::Message>`
    |
note: associated function defined here
   --> src/message.rs:479:18
    |
479 |     pub async fn load_from_db(context: &Context, id: MsgId) -> Result<Message> {
    |                  ^^^^^^^^^^^^ -----------------  ---------
help: remove the extra argument
    |
874 -     match Message::load_from_db(&draft_msg, context, &draft_msg_id).await {
874 +     match Message::load_from_db(, context, /* MsgId */).await {
    |

error[E0599]: no function or associated item named `unref` found for struct `message::Message` in the current scope
   --> src/chat.rs:876:22
    |
876 |             Message::unref(draft_msg);
    |                      ^^^^^ function or associated item not found in `Message`
    |
   ::: src/message.rs:420:1
    |
420 | pub struct Message {
    | ------------------ function or associated item `unref` not found for this struct
    |
note: if you're trying to build a new `message::Message`, consider using `message::Message::new` which returns `message::Message`
   --> src/message.rs:469:5
    |
469 |     pub fn new(viewtype: Viewtype) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0605]: non-primitive cast: `ChatId` as `usize`
   --> src/chat.rs:863:31
    |
863 |                 || chat_id <= DC_CHAT_ID_LAST_SPECIAL as usize {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:1805:35
     |
1805 |         let draft = match self.id.get_draft(context).await? {
     |                                   ^^^^^^^^^--------- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
1805 |         let draft = match self.id.get_draft(context, /* usize */).await? {
     |                                            ~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> src/chat.rs:874:11
    |
874 |     match Message::load_from_db(&draft_msg, context, &draft_msg_id).await {
    |           ^^^^^^^^^^^^^^^^^^^^^ ----------           ------------- expected `MsgId`, found `&u32`
    |                                 |
    |                                 unexpected argument of type `&std::option::Option<message::Message>`
    |
note: associated function defined here
   --> src/message.rs:479:18
    |
479 |     pub async fn load_from_db(context: &Context, id: MsgId) -> Result<Message> {
    |                  ^^^^^^^^^^^^ -----------------  ---------
help: remove the extra argument
    |
874 -     match Message::load_from_db(&draft_msg, context, &draft_msg_id).await {
874 +     match Message::load_from_db(, context, /* message::MsgId */).await {
    |

error[E0605]: non-primitive cast: `chat::ChatId` as `usize`
   --> src/chat.rs:863:31
    |
863 |                 || chat_id <= DC_CHAT_ID_LAST_SPECIAL as usize {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

Some errors have detailed explanations: E0061, E0308, E0425, E0599, E0605, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/sql.rs:1133:36
     |
1133 |         let loaded_draft = chat.id.get_draft(&t).await.unwrap();
     |                                    ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
1133 |         let loaded_draft = chat.id.get_draft(&t, /* usize */).await.unwrap();
     |                                             ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4702:29
     |
4702 |         let draft = chat.id.get_draft(&t).await.unwrap();
     |                             ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4702 |         let draft = chat.id.get_draft(&t, /* usize */).await.unwrap();
     |                                      ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4709:45
     |
4709 |         let draft = DC_CHAT_ID_LAST_SPECIAL.get_draft(&t).await.unwrap();
     |                                             ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4709 |         let draft = DC_CHAT_ID_LAST_SPECIAL.get_draft(&t, /* usize */).await.unwrap();
     |                                                      ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4718:37
     |
4718 |         let draft = ChatId::new(42).get_draft(&t).await.unwrap();
     |                                     ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4718 |         let draft = ChatId::new(42).get_draft(&t, /* usize */).await.unwrap();
     |                                              ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4730:29
     |
4730 |         let draft = chat_id.get_draft(&t).await.unwrap().unwrap();
     |                             ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4730 |         let draft = chat_id.get_draft(&t, /* usize */).await.unwrap().unwrap();
     |                                      ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4744:25
     |
4744 |         assert!(chat_id.get_draft(&t).await?.is_some());
     |                         ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4744 |         assert!(chat_id.get_draft(&t, /* usize */).await?.is_some());
     |                                  ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4749:25
     |
4749 |         assert!(chat_id.get_draft(&t).await?.is_some());
     |                         ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4749 |         assert!(chat_id.get_draft(&t, /* usize */).await?.is_some());
     |                                  ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4752:25
     |
4752 |         assert!(chat_id.get_draft(&t).await?.is_none());
     |                         ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4752 |         assert!(chat_id.get_draft(&t, /* usize */).await?.is_none());
     |                                  ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4764:36
     |
4764 |         assert_eq!(msg.id, chat_id.get_draft(&t).await?.unwrap().id);
     |                                    ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4764 |         assert_eq!(msg.id, chat_id.get_draft(&t, /* usize */).await?.unwrap().id);
     |                                             ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4787:46
     |
4787 |         assert_eq!(id_after_1st_set, chat_id.get_draft(&t).await?.unwrap().id);
     |                                              ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4787 |         assert_eq!(id_after_1st_set, chat_id.get_draft(&t, /* usize */).await?.unwrap().id);
     |                                                       ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:4798:28
     |
4798 |         let test = chat_id.get_draft(&t).await?.unwrap();
     |                            ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
4798 |         let test = chat_id.get_draft(&t, /* usize */).await?.unwrap();
     |                                     ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/chat.rs:6532:37
     |
6532 |         let mut msg = alice_chat.id.get_draft(&alice).await.unwrap().unwrap();
     |                                     ^^^^^^^^^-------- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
6532 |         let mut msg = alice_chat.id.get_draft(&alice, /* usize */).await.unwrap().unwrap();
     |                                              ~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/context.rs:1978:33
     |
1978 |         let mut draft = chat_id.get_draft(&alice).await?.unwrap();
     |                                 ^^^^^^^^^-------- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
1978 |         let mut draft = chat_id.get_draft(&alice, /* usize */).await?.unwrap();
     |                                          ~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/message.rs:2451:43
     |
2451 |         let mut alice_msg = alice_chat.id.get_draft(&alice).await?.unwrap();
     |                                           ^^^^^^^^^-------- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
2451 |         let mut alice_msg = alice_chat.id.get_draft(&alice, /* usize */).await?.unwrap();
     |                                                    ~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/webxdc.rs:1325:32
     |
1325 |         let instance = chat_id.get_draft(&t).await?.unwrap();
     |                                ^^^^^^^^^---- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
1325 |         let instance = chat_id.get_draft(&t, /* usize */).await?.unwrap();
     |                                         ~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/webxdc.rs:1834:48
     |
1834 |         let mut alice_instance = alice_chat_id.get_draft(&alice).await?.unwrap();
     |                                                ^^^^^^^^^-------- an argument of type `usize` is missing
     |
note: method defined here
    --> src/chat.rs:856:14
     |
856  | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
     |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
     |
1834 |         let mut alice_instance = alice_chat_id.get_draft(&alice, /* usize */).await?.unwrap();
     |                                                         ~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/tests/verified_chats.rs:702:31
    |
702 |             alice_bob_chat.id.get_draft(&alice).await?.unwrap().text,
    |                               ^^^^^^^^^-------- an argument of type `usize` is missing
    |
note: method defined here
   --> src/chat.rs:856:14
    |
856 | pub async fn get_draft(self, context: &Context, chat_id: usize) -> Result<Option<Message>> {
    |              ^^^^^^^^^       -----------------  --------------
help: provide the argument
    |
702 |             alice_bob_chat.id.get_draft(&alice, /* usize */).await?.unwrap().text,
    |                                        ~~~~~~~~~~~~~~~~~~~~~

error: could not compile `deltachat` (lib test) due to 27 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

