Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `Result` is defined multiple times
  --> src/contact.rs:23:42
   |
4  | use std::result::Result;
   |     ------------------- previous import of the type `Result` here
...
23 | use anyhow::{bail, ensure, Context as _, Result};
   |                                          ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module
help: you can use `as` to change the binding name of the import
   |
23 | use anyhow::{bail, ensure, Context as _, Result as OtherResult};
   |                                          ~~~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `rusqlite::NO_PARAMS`
  --> src/contact.rs:15:36
   |
15 | use rusqlite::{params, Connection, NO_PARAMS};
   |                                    ^^^^^^^^^ no `NO_PARAMS` in the root

error[E0432]: unresolved import `crate::ContactId`
 --> src/contact.rs:5:5
  |
5 | use crate::ContactId;
  |     ^^^^^^^---------
  |     |      |
  |     |      help: a similar name exists in the module: `contact`
  |     no `ContactId` in the root

error[E0432]: unresolved import `crate::DC_EVENT_CONTACTS_CHANGED`
 --> src/contact.rs:6:5
  |
6 | use crate::DC_EVENT_CONTACTS_CHANGED;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `DC_EVENT_CONTACTS_CHANGED` in the root

error[E0432]: unresolved import `crate::DC_CONTEXT_MAGIC`
 --> src/contact.rs:7:5
  |
7 | use crate::DC_CONTEXT_MAGIC;
  |     ^^^^^^^^^^^^^^^^^^^^^^^ no `DC_CONTEXT_MAGIC` in the root

error[E0432]: unresolved import `crate::DC_CONTACT_ID_LAST_SPECIAL`
 --> src/contact.rs:8:5
  |
8 | use crate::DC_CONTACT_ID_LAST_SPECIAL;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `DC_CONTACT_ID_LAST_SPECIAL` in the root

error[E0432]: unresolved import `crate::dc_contact_new`
 --> src/contact.rs:9:5
  |
9 | use crate::dc_contact_new;
  |     ^^^^^^^^^^^^^^^^^^^^^ no `dc_contact_new` in the root

error[E0432]: unresolved import `crate::dc_contact_load_from_db`
  --> src/contact.rs:10:5
   |
10 | use crate::dc_contact_load_from_db;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `dc_contact_load_from_db` in the root

error[E0432]: unresolved import `crate::dc_sqlite3_prepare`
  --> src/contact.rs:11:5
   |
11 | use crate::dc_sqlite3_prepare;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ no `dc_sqlite3_prepare` in the root

error[E0432]: unresolved import `crate::dc_contact_unref`
  --> src/contact.rs:12:5
   |
12 | use crate::dc_contact_unref;
   |     ^^^^^^^^^^^^^^^^^^^^^^^ no `dc_contact_unref` in the root

error[E0432]: unresolved import `crate::Chattype`
  --> src/contact.rs:13:5
   |
13 | use crate::Chattype;
   |     ^^^^^^^^^^^^^^^ no `Chattype` in the root
   |
help: consider importing this enum instead
   |
13 | use crate::constants::Chattype;
   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0425]: cannot find value `new_blocking` in this scope
   --> src/contact.rs:625:82
    |
625 |     if dc_contact_load_from_db(&contact, &context.sql, id) && contact.blocked != new_blocking {
    |                                                                                  ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `new_blocking` in this scope
   --> src/contact.rs:627:30
    |
627 |         stmt.execute(params![new_blocking, id]).await?;
    |                              ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `new_blocking` in this scope
   --> src/contact.rs:631:30
    |
631 |         stmt.execute(params![new_blocking, Chattype::Single, id]).await?;
    |                              ^^^^^^^^^^^^ not found in this scope

warning: unused import: `Connection`
  --> src/contact.rs:15:24
   |
15 | use rusqlite::{params, Connection, NO_PARAMS};
   |                        ^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `Result`
  --> src/contact.rs:23:42
   |
23 | use anyhow::{bail, ensure, Context as _, Result};
   |                                          ^^^^^^

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:117:77
    |
117 |     pub(crate) async fn mark_bot(&self, context: &Context, is_bot: bool) -> Result<()> {
    |                                                                             ^^^^^^ -- supplied 1 generic argument
    |                                                                             |
    |                                                                             expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
117 |     pub(crate) async fn mark_bot(&self, context: &Context, is_bot: bool) -> Result<(), E> {
    |                                                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:126:68
    |
126 |     pub(crate) async fn regossip_keys(&self, context: &Context) -> Result<()> {
    |                                                                    ^^^^^^ -- supplied 1 generic argument
    |                                                                    |
    |                                                                    expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
126 |     pub(crate) async fn regossip_keys(&self, context: &Context) -> Result<(), E> {
    |                                                                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:146:10
    |
146 |     ) -> Result<()> {
    |          ^^^^^^ -- supplied 1 generic argument
    |          |
    |          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
146 |     ) -> Result<(), E> {
    |                   +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:204:71
    |
204 | pub async fn make_vcard(context: &Context, contacts: &[ContactId]) -> Result<String> {
    |                                                                       ^^^^^^ ------ supplied 1 generic argument
    |                                                                       |
    |                                                                       expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
204 | pub async fn make_vcard(context: &Context, contacts: &[ContactId]) -> Result<String, E> {
    |                                                                                    +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:240:62
    |
240 | pub async fn import_vcard(context: &Context, vcard: &str) -> Result<Vec<ContactId>> {
    |                                                              ^^^^^^ -------------- supplied 1 generic argument
    |                                                              |
    |                                                              expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
240 | pub async fn import_vcard(context: &Context, vcard: &str) -> Result<Vec<ContactId>, E> {
    |                                                                                   +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:256:77
    |
256 | async fn import_vcard_contact(context: &Context, contact: &VcardContact) -> Result<ContactId> {
    |                                                                             ^^^^^^ --------- supplied 1 generic argument
    |                                                                             |
    |                                                                             expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
256 | async fn import_vcard_contact(context: &Context, contact: &VcardContact) -> Result<ContactId, E> {
    |                                                                                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:513:73
    |
513 |     pub async fn get_by_id(context: &Context, contact_id: ContactId) -> Result<Self> {
    |                                                                         ^^^^^^ ---- supplied 1 generic argument
    |                                                                         |
    |                                                                         expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
513 |     pub async fn get_by_id(context: &Context, contact_id: ContactId) -> Result<Self, E> {
    |                                                                                    +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:526:10
    |
526 |     ) -> Result<Option<Self>> {
    |          ^^^^^^ ------------ supplied 1 generic argument
    |          |
    |          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
526 |     ) -> Result<Option<Self>, E> {
    |                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:603:71
    |
603 |     pub async fn is_blocked_load(context: &Context, id: ContactId) -> Result<bool> {
    |                                                                       ^^^^^^ ---- supplied 1 generic argument
    |                                                                       |
    |                                                                       expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
603 |     pub async fn is_blocked_load(context: &Context, id: ContactId) -> Result<bool, E> {
    |                                                                                  +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:617:57
    |
617 | pub async fn block(context: &Context, id: ContactId) -> Result<()> {
    |                                                         ^^^^^^ -- supplied 1 generic argument
    |                                                         |
    |                                                         expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
617 | pub async fn block(context: &Context, id: ContactId) -> Result<(), E> {
    |                                                                  +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:651:63
    |
651 |     pub async fn unblock(context: &Context, id: ContactId) -> Result<()> {
    |                                                               ^^^^^^ -- supplied 1 generic argument
    |                                                               |
    |                                                               expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
651 |     pub async fn unblock(context: &Context, id: ContactId) -> Result<(), E> {
    |                                                                        +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:664:71
    |
664 |     pub async fn create(context: &Context, name: &str, addr: &str) -> Result<ContactId> {
    |                                                                       ^^^^^^ --------- supplied 1 generic argument
    |                                                                       |
    |                                                                       expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
664 |     pub async fn create(context: &Context, name: &str, addr: &str) -> Result<ContactId, E> {
    |                                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:673:10
    |
673 |     ) -> Result<ContactId> {
    |          ^^^^^^ --------- supplied 1 generic argument
    |          |
    |          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
673 |     ) -> Result<ContactId, E> {
    |                          +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:708:68
    |
708 |     pub async fn mark_noticed(context: &Context, id: ContactId) -> Result<()> {
    |                                                                    ^^^^^^ -- supplied 1 generic argument
    |                                                                    |
    |                                                                    expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
708 |     pub async fn mark_noticed(context: &Context, id: ContactId) -> Result<(), E> {
    |                                                                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:737:10
    |
737 |     ) -> Result<Option<ContactId>> {
    |          ^^^^^^ ----------------- supplied 1 generic argument
    |          |
    |          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
737 |     ) -> Result<Option<ContactId>, E> {
    |                                  +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:748:10
    |
748 |     ) -> Result<Option<ContactId>> {
    |          ^^^^^^ ----------------- supplied 1 generic argument
    |          |
    |          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
748 |     ) -> Result<Option<ContactId>, E> {
    |                                  +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
   --> src/contact.rs:807:10
    |
807 |     ) -> Result<(ContactId, Modifier)> {
    |          ^^^^^^ --------------------- supplied 1 generic argument
    |          |
    |          expected 2 generic arguments
    |
note: enum defined here, with 2 generic parameters: `T`, `E`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
    |
502 | pub enum Result<T, E> {
    |          ^^^^^^ -  -
help: add missing generic argument
    |
807 |     ) -> Result<(ContactId, Modifier), E> {
    |                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1008:74
     |
1008 |     pub async fn add_address_book(context: &Context, addr_book: &str) -> Result<usize> {
     |                                                                          ^^^^^^ ----- supplied 1 generic argument
     |                                                                          |
     |                                                                          expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1008 |     pub async fn add_address_book(context: &Context, addr_book: &str) -> Result<usize, E> {
     |                                                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1054:10
     |
1054 |     ) -> Result<Vec<ContactId>> {
     |          ^^^^^^ -------------- supplied 1 generic argument
     |          |
     |          expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1054 |     ) -> Result<Vec<ContactId>, E> {
     |                               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1161:72
     |
1161 |     async fn update_blocked_mailinglist_contacts(context: &Context) -> Result<()> {
     |                                                                        ^^^^^^ -- supplied 1 generic argument
     |                                                                        |
     |                                                                        expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1161 |     async fn update_blocked_mailinglist_contacts(context: &Context) -> Result<(), E> {
     |                                                                                 +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1199:56
     |
1199 |     pub async fn get_blocked_cnt(context: &Context) -> Result<usize> {
     |                                                        ^^^^^^ ----- supplied 1 generic argument
     |                                                        |
     |                                                        expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1199 |     pub async fn get_blocked_cnt(context: &Context) -> Result<usize, E> {
     |                                                                    +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1211:56
     |
1211 |     pub async fn get_all_blocked(context: &Context) -> Result<Vec<ContactId>> {
     |                                                        ^^^^^^ -------------- supplied 1 generic argument
     |                                                        |
     |                                                        expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1211 |     pub async fn get_all_blocked(context: &Context) -> Result<Vec<ContactId>, E> {
     |                                                                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1236:76
     |
1236 |     pub async fn get_encrinfo(context: &Context, contact_id: ContactId) -> Result<String> {
     |                                                                            ^^^^^^ ------ supplied 1 generic argument
     |                                                                            |
     |                                                                            expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1236 |     pub async fn get_encrinfo(context: &Context, contact_id: ContactId) -> Result<String, E> {
     |                                                                                         +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1298:70
     |
1298 |     pub async fn delete(context: &Context, contact_id: ContactId) -> Result<()> {
     |                                                                      ^^^^^^ -- supplied 1 generic argument
     |                                                                      |
     |                                                                      expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1298 |     pub async fn delete(context: &Context, contact_id: ContactId) -> Result<(), E> {
     |                                                                               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1326:60
     |
1326 |     pub async fn update_param(&self, context: &Context) -> Result<()> {
     |                                                            ^^^^^^ -- supplied 1 generic argument
     |                                                            |
     |                                                            expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1326 |     pub async fn update_param(&self, context: &Context) -> Result<(), E> {
     |                                                                     +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1338:61
     |
1338 |     pub async fn update_status(&self, context: &Context) -> Result<()> {
     |                                                             ^^^^^^ -- supplied 1 generic argument
     |                                                             |
     |                                                             expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1338 |     pub async fn update_status(&self, context: &Context) -> Result<(), E> {
     |                                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1426:65
     |
1426 |     pub async fn get_profile_image(&self, context: &Context) -> Result<Option<PathBuf>> {
     |                                                                 ^^^^^^ --------------- supplied 1 generic argument
     |                                                                 |
     |                                                                 expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1426 |     pub async fn get_profile_image(&self, context: &Context) -> Result<Option<PathBuf>, E> {
     |                                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1468:59
     |
1468 |     pub async fn is_verified(&self, context: &Context) -> Result<bool> {
     |                                                           ^^^^^^ ---- supplied 1 generic argument
     |                                                           |
     |                                                           expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1468 |     pub async fn is_verified(&self, context: &Context) -> Result<bool, E> {
     |                                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1489:67
     |
1489 |     pub async fn is_forward_verified(&self, context: &Context) -> Result<bool> {
     |                                                                   ^^^^^^ ---- supplied 1 generic argument
     |                                                                   |
     |                                                                   expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1489 |     pub async fn is_forward_verified(&self, context: &Context) -> Result<bool, E> {
     |                                                                              +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1513:63
     |
1513 |     pub async fn get_verifier_id(&self, context: &Context) -> Result<Option<ContactId>> {
     |                                                               ^^^^^^ ----------------- supplied 1 generic argument
     |                                                               |
     |                                                               expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1513 |     pub async fn get_verifier_id(&self, context: &Context) -> Result<Option<ContactId>, E> {
     |                                                                                       +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1546:67
     |
1546 |     pub async fn is_profile_verified(&self, context: &Context) -> Result<bool> {
     |                                                                   ^^^^^^ ---- supplied 1 generic argument
     |                                                                   |
     |                                                                   expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1546 |     pub async fn is_profile_verified(&self, context: &Context) -> Result<bool, E> {
     |                                                                              +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1560:53
     |
1560 |     pub async fn get_real_cnt(context: &Context) -> Result<usize> {
     |                                                     ^^^^^^ ----- supplied 1 generic argument
     |                                                     |
     |                                                     expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1560 |     pub async fn get_real_cnt(context: &Context) -> Result<usize, E> {
     |                                                                 +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1576:81
     |
1576 |     pub async fn real_exists_by_id(context: &Context, contact_id: ContactId) -> Result<bool> {
     |                                                                                 ^^^^^^ ---- supplied 1 generic argument
     |                                                                                 |
     |                                                                                 expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1576 |     pub async fn real_exists_by_id(context: &Context, contact_id: ContactId) -> Result<bool, E> {
     |                                                                                            +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1594:6
     |
1594 | ) -> Result<()> {
     |      ^^^^^^ -- supplied 1 generic argument
     |      |
     |      expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1594 | ) -> Result<(), E> {
     |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1677:6
     |
1677 | ) -> Result<()> {
     |      ^^^^^^ -- supplied 1 generic argument
     |      |
     |      expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1677 | ) -> Result<(), E> {
     |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1728:6
     |
1728 | ) -> Result<()> {
     |      ^^^^^^ -- supplied 1 generic argument
     |      |
     |      expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1728 | ) -> Result<(), E> {
     |               +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:1752:6
     |
1752 | ) -> Result<()> {
     |      ^^^^^^ -- supplied 1 generic argument
     |      |
     |      expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
1752 | ) -> Result<(), E> {
     |               +++

warning: unused import: `rusqlite::types::ToSql`
  --> src/contact.rs:14:5
   |
14 | use rusqlite::types::ToSql;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `Connection`
  --> src/contact.rs:15:24
   |
15 | use rusqlite::{params, Connection, NO_PARAMS};
   |                        ^^^^^^^^^^

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2038:37
     |
2038 |     async fn test_get_contacts() -> Result<()> {
     |                                     ^^^^^^ -- supplied 1 generic argument
     |                                     |
     |                                     expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2038 |     async fn test_get_contacts() -> Result<(), E> {
     |                                              +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2102:37
     |
2102 |     async fn test_is_self_addr() -> Result<()> {
     |                                     ^^^^^^ -- supplied 1 generic argument
     |                                     |
     |                                     expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2102 |     async fn test_is_self_addr() -> Result<(), E> {
     |                                              +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2235:45
     |
2235 |     async fn test_contact_name_changes() -> Result<()> {
     |                                             ^^^^^^ -- supplied 1 generic argument
     |                                             |
     |                                             expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2235 |     async fn test_contact_name_changes() -> Result<(), E> {
     |                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2347:31
     |
2347 |     async fn test_delete() -> Result<()> {
     |                               ^^^^^^ -- supplied 1 generic argument
     |                               |
     |                               expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2347 |     async fn test_delete() -> Result<(), E> {
     |                                        +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2398:52
     |
2398 |     async fn test_delete_and_recreate_contact() -> Result<()> {
     |                                                    ^^^^^^ -- supplied 1 generic argument
     |                                                    |
     |                                                    expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2398 |     async fn test_delete_and_recreate_contact() -> Result<(), E> {
     |                                                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2540:51
     |
2540 |     async fn test_remote_authnames_update_to() -> Result<()> {
     |                                                   ^^^^^^ -- supplied 1 generic argument
     |                                                   |
     |                                                   expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2540 |     async fn test_remote_authnames_update_to() -> Result<(), E> {
     |                                                            +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2691:42
     |
2691 |     async fn test_contact_get_color() -> Result<()> {
     |                                          ^^^^^^ -- supplied 1 generic argument
     |                                          |
     |                                          expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2691 |     async fn test_contact_get_color() -> Result<(), E> {
     |                                                   +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2710:45
     |
2710 |     async fn test_contact_get_encrinfo() -> Result<()> {
     |                                             ^^^^^^ -- supplied 1 generic argument
     |                                             |
     |                                             expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2710 |     async fn test_contact_get_encrinfo() -> Result<(), E> {
     |                                                      +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2758:43
     |
2758 |     async fn test_synchronize_status() -> Result<()> {
     |                                           ^^^^^^ -- supplied 1 generic argument
     |                                           |
     |                                           expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2758 |     async fn test_synchronize_status() -> Result<(), E> {
     |                                                    +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2823:49
     |
2823 |     async fn test_selfavatar_changed_event() -> Result<()> {
     |                                                 ^^^^^^ -- supplied 1 generic argument
     |                                                 |
     |                                                 expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2823 |     async fn test_selfavatar_changed_event() -> Result<(), E> {
     |                                                          +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2879:34
     |
2879 |     async fn test_last_seen() -> Result<()> {
     |                                  ^^^^^^ -- supplied 1 generic argument
     |                                  |
     |                                  expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2879 |     async fn test_last_seen() -> Result<(), E> {
     |                                           +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2913:42
     |
2913 |     async fn test_was_seen_recently() -> Result<()> {
     |                                          ^^^^^^ -- supplied 1 generic argument
     |                                          |
     |                                          expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2913 |     async fn test_was_seen_recently() -> Result<(), E> {
     |                                                   +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2949:48
     |
2949 |     async fn test_was_seen_recently_event() -> Result<()> {
     |                                                ^^^^^^ -- supplied 1 generic argument
     |                                                |
     |                                                expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2949 |     async fn test_was_seen_recently_event() -> Result<(), E> {
     |                                                         +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:2987:41
     |
2987 |     async fn test_verified_by_none() -> Result<()> {
     |                                         ^^^^^^ -- supplied 1 generic argument
     |                                         |
     |                                         expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
2987 |     async fn test_verified_by_none() -> Result<(), E> {
     |                                                  +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:3008:36
     |
3008 |     async fn test_sync_create() -> Result<()> {
     |                                    ^^^^^^ -- supplied 1 generic argument
     |                                    |
     |                                    expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
3008 |     async fn test_sync_create() -> Result<(), E> {
     |                                             +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:3037:44
     |
3037 |     async fn test_make_n_import_vcard() -> Result<()> {
     |                                            ^^^^^^ -- supplied 1 generic argument
     |                                            |
     |                                            expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
3037 |     async fn test_make_n_import_vcard() -> Result<(), E> {
     |                                                     +++

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
    --> src/contact.rs:3138:54
     |
3138 |     async fn test_import_vcard_updates_only_key() -> Result<()> {
     |                                                      ^^^^^^ -- supplied 1 generic argument
     |                                                      |
     |                                                      expected 2 generic arguments
     |
note: enum defined here, with 2 generic parameters: `T`, `E`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:502:10
     |
502  | pub enum Result<T, E> {
     |          ^^^^^^ -  -
help: add missing generic argument
     |
3138 |     async fn test_import_vcard_updates_only_key() -> Result<(), E> {
     |                                                               +++

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
   --> src/contact.rs:621:16
    |
621 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || id <= DC_CONTACT_ID_LAST_SPECIAL {
    |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/contact.rs:621:37
    |
621 |     if context.is_null() || context.magic != DC_CONTEXT_MAGIC || id <= DC_CONTACT_ID_LAST_SPECIAL {
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0425]: cannot find function `dc_marknoticed_contact` in this scope
   --> src/contact.rs:636:9
    |
636 |         dc_marknoticed_contact(&context, id).await;
    |         ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `call_cb` found for reference `&context::Context` in the current scope
   --> src/contact.rs:642:17
    |
642 |         context.call_cb(EventType::ContactsChanged, 0, 0).await;
    |                 ^^^^^^^ method not found in `&Context`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/qr_code_generator.rs:81:14
     |
81   |         Some(path) => {
     |              ^^^^ doesn't have a size known at compile-time
     |
     = help: within `Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `Path: Sized`
note: required because it appears within the type `Path`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:1992:12
     |
1992 | pub struct Path {
     |            ^^^^
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/qr_code_generator.rs:85:9
     |
85   |         None => None,
     |         ^^^^ doesn't have a size known at compile-time
     |
     = help: within `Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `Path: Sized`
note: required because it appears within the type `Path`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:1992:12
     |
1992 | pub struct Path {
     |            ^^^^
note: required by a bound in `std::prelude::v1::None`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:17
     |
570  | pub enum Option<T> {
     |                 ^ required by this bound in `std::prelude::v1::None`
...
574  |     None,
     |     ---- required by a bound in this unit variant

warning: unused import: `rusqlite::types::ToSql`
  --> src/contact.rs:14:5
   |
14 | use rusqlite::types::ToSql;
   |     ^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0107, E0252, E0277, E0425, E0432, E0599, E0609.
For more information about an error, try `rustc --explain E0107`.
warning: `deltachat` (lib) generated 3 warnings
error: could not compile `deltachat` (lib) due to 57 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/qr_code_generator.rs:81:14
     |
81   |         Some(path) => {
     |              ^^^^ doesn't have a size known at compile-time
     |
     = help: within `std::path::Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `std::path::Path: Sized`
note: required because it appears within the type `std::path::Path`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:1992:12
     |
1992 | pub struct Path {
     |            ^^^^
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/qr_code_generator.rs:85:9
     |
85   |         None => None,
     |         ^^^^ doesn't have a size known at compile-time
     |
     = help: within `std::path::Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `std::path::Path: Sized`
note: required because it appears within the type `std::path::Path`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:1992:12
     |
1992 | pub struct Path {
     |            ^^^^
note: required by a bound in `std::prelude::v1::None`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:17
     |
570  | pub enum Option<T> {
     |                 ^ required by this bound in `std::prelude::v1::None`
...
574  |     None,
     |     ---- required by a bound in this unit variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3063:13
     |
3063 |         let vcard = make_vcard(alice, &[bob_id, fiona_id]).await?;
     |             ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3063:21
     |
3063 |         let vcard = make_vcard(alice, &[bob_id, fiona_id]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3063:21
     |
3063 |         let vcard = make_vcard(alice, &[bob_id, fiona_id]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3063:65
     |
3063 |         let vcard = make_vcard(alice, &[bob_id, fiona_id]).await?;
     |                                                                 ^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `Break`
...
93   |     Break(B),
     |     ----- required by a bound in this variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3093:13
     |
3093 |         let vcard = make_vcard(alice, &[contact_ids[0], contact_ids[1]]).await?;
     |             ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3093:21
     |
3093 |         let vcard = make_vcard(alice, &[contact_ids[0], contact_ids[1]]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3093:21
     |
3093 |         let vcard = make_vcard(alice, &[contact_ids[0], contact_ids[1]]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3093:79
     |
3093 |         let vcard = make_vcard(alice, &[contact_ids[0], contact_ids[1]]).await?;
     |                                                                               ^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `Break`
...
93   |     Break(B),
     |     ----- required by a bound in this variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3125:13
     |
3125 |         let vcard = make_vcard(bob, &[contact_ids[1]]).await?;
     |             ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3125:21
     |
3125 |         let vcard = make_vcard(bob, &[contact_ids[1]]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3125:21
     |
3125 |         let vcard = make_vcard(bob, &[contact_ids[1]]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3125:61
     |
3125 |         let vcard = make_vcard(bob, &[contact_ids[1]]).await?;
     |                                                             ^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `Break`
...
93   |     Break(B),
     |     ----- required by a bound in this variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3143:13
     |
3143 |         let vcard = make_vcard(bob, &[ContactId::SELF]).await?;
     |             ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3143:21
     |
3143 |         let vcard = make_vcard(bob, &[ContactId::SELF]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3143:21
     |
3143 |         let vcard = make_vcard(bob, &[ContactId::SELF]).await?;
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3143:62
     |
3143 |         let vcard = make_vcard(bob, &[ContactId::SELF]).await?;
     |                                                              ^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `Break`
...
93   |     Break(B),
     |     ----- required by a bound in this variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3165:13
     |
3165 |         let vcard1 = make_vcard(bob, &[ContactId::SELF]).await?;
     |             ^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3165:22
     |
3165 |         let vcard1 = make_vcard(bob, &[ContactId::SELF]).await?;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
     = note: all local variables must have a statically known size
     = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3165:22
     |
3165 |         let vcard1 = make_vcard(bob, &[ContactId::SELF]).await?;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `ControlFlow`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `ControlFlow`

error[E0277]: the size for values of type `str` cannot be known at compilation time
    --> src/contact.rs:3165:63
     |
3165 |         let vcard1 = make_vcard(bob, &[ContactId::SELF]).await?;
     |                                                               ^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Break`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs:85:25
     |
85   | pub enum ControlFlow<B, C = ()> {
     |                         ^^^^^^ required by this bound in `Break`
...
93   |     Break(B),
     |     ----- required by a bound in this variant

warning: `deltachat` (lib test) generated 3 warnings (1 duplicate)
error: could not compile `deltachat` (lib test) due to 94 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

