Fail
file path is :
projects/deltachat-core/rust/src/chatlist.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `paramsv` in this scope
   --> src/chatlist.rs:406:17
    |
406 |                 paramsv![msg_id],
    |                 ^^^^^^^ help: a macro with a similar name exists: `params`
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
    |
176 | macro_rules! params {
    | ------------------- similarly named macro `params` defined here

error: cannot find macro `bail` in this scope
   --> src/chatlist.rs:383:13
    |
383 |             bail!("ErrCannotReadChat");
    |             ^^^^
    |
help: consider importing one of these items
    |
3   + use anyhow::bail;
    |
3   + use pgp::bail;
    |

error: cannot find macro `bail` in this scope
   --> src/chatlist.rs:390:9
    |
390 |         bail!("Archived link, can't load summary.");
    |         ^^^^
    |
help: consider importing one of these items
    |
3   + use anyhow::bail;
    |
3   + use pgp::bail;
    |

error: cannot find macro `bail` in this scope
   --> src/chatlist.rs:431:9
    |
431 |         bail!("Archived link, can't load summary.");
    |         ^^^^
    |
help: consider importing one of these items
    |
3   + use anyhow::bail;
    |
3   + use pgp::bail;
    |

error: cannot find macro `bail` in this scope
   --> src/chatlist.rs:433:9
    |
433 |         bail!("No messages or sender unknown.");
    |         ^^^^
    |
help: consider importing one of these items
    |
3   + use anyhow::bail;
    |
3   + use pgp::bail;
    |

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/chatlist.rs:421:26
    |
421 |         if lastmsg_id != DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(curr_chat.id) {
    |                          ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_null` found for reference `&Chatlist` in the current scope
   --> src/chatlist.rs:373:20
    |
373 |     ensure!(!(self.is_null() || index >= self.len() || (chat.is_some() && chat_arg.is_none())), "ErrBadChatlistIndex");
    |                    ^^^^^^^ method not found in `&Chatlist`

error[E0308]: mismatched types
   --> src/chatlist.rs:378:31
    |
378 |         let chat_id: ChatId = self.get_chat_id(index);
    |                      ------   ^^^^^^^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Result<ChatId, Error>`
    |                      |
    |                      expected due to this
    |
    = note: expected struct `ChatId`
                 found enum `std::result::Result<ChatId, anyhow::Error>`
help: use the `?` operator to extract the `std::result::Result<ChatId, anyhow::Error>` value, propagating a `Result::Err` value to the caller
    |
378 |         let chat_id: ChatId = self.get_chat_id(index)?;
    |                                                      +

error[E0369]: binary operation `!=` cannot be applied to type `std::result::Result<ChatId, anyhow::Error>`
   --> src/chatlist.rs:382:58
    |
382 |         if chat_arg.is_none() || self.get_chat_id(index) != chat_id {
    |                                  ----------------------- ^^ ------- ChatId
    |                                  |
    |                                  std::result::Result<ChatId, anyhow::Error>

error[E0308]: mismatched types
   --> src/chatlist.rs:389:53
    |
389 |     let lastmsg_id = if curr_chat.id == ChatId::new(DC_CHAT_ID_ARCHIVED_LINK) {
    |                                         ----------- ^^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ChatId`
    |                                         |
    |                                         arguments to this function are incorrect
    |
note: associated function defined here
   --> src/chat.rs:170:18
    |
170 |     pub const fn new(id: u32) -> ChatId {
    |                  ^^^ -------

error[E0308]: `if` and `else` have incompatible types
   --> src/chatlist.rs:392:9
    |
389 |       let lastmsg_id = if curr_chat.id == ChatId::new(DC_CHAT_ID_ARCHIVED_LINK) {
    |  ______________________-
390 | |         bail!("Archived link, can't load summary.");
    | |         ------------------------------------------- expected because of this
391 | |     } else {
392 | |         self.get_msg_id(index)
    | |         ^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<Option<MsgId>, Error>`
393 | |     };
    | |_____- `if` and `else` have incompatible types
    |
    = note: expected unit type `()`
                    found enum `std::result::Result<std::option::Option<MsgId>, anyhow::Error>`

error[E0599]: no method named `to_u32` found for enum `std::result::Result` in the current scope
   --> src/chatlist.rs:419:25
    |
419 |     self.get_msg_id(index).to_u32()
    |                            ^^^^^^ method not found in `Result<Option<MsgId>, Error>`

error[E0425]: cannot find function, tuple struct or tuple variant `DC_CHAT_TYPE_IS_MULTI` in this scope
   --> src/chatlist.rs:421:48
    |
421 |         if lastmsg_id != DC_CONTACT_ID_SELF && DC_CHAT_TYPE_IS_MULTI(curr_chat.id) {
    |                                                ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `load_from_db` found for struct `Contact` in the current scope
   --> src/chatlist.rs:422:27
    |
422 |             Some(Contact::load_from_db(context, ContactId::new(from_id)).await?)
    |                           ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0308]: mismatched types
   --> src/chatlist.rs:430:36
    |
430 |     if curr_chat.id == ChatId::new(DC_CHAT_ID_ARCHIVED_LINK) {
    |                        ----------- ^^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ChatId`
    |                        |
    |                        arguments to this function are incorrect
    |
note: associated function defined here
   --> src/chat.rs:170:18
    |
170 |     pub const fn new(id: u32) -> ChatId {
    |                  ^^^ -------

error[E0599]: no method named `fill` found for struct `Summary` in the current scope
   --> src/chatlist.rs:435:13
    |
435 |         ret.fill(lastmsg, curr_chat, lastcontact);
    |             ^^^^ method not found in `Summary`
    |
   ::: src/summary.rs:43:1
    |
43  | pub struct Summary {
    | ------------------ method `fill` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `fill`, perhaps you need to implement one of them:
            candidate #1: `Rng`
            candidate #2: `ring::rand::SecureRandom`
            candidate #3: `ring::rand::SecureRandom`
            candidate #4: `nanorand::rand::Rng`
            candidate #5: `rand::Rng`
            candidate #6: `rustls::crypto::SecureRandom`

error[E0599]: no method named `is_null` found for reference `&chatlist::Chatlist` in the current scope
   --> src/chatlist.rs:373:20
    |
373 |     ensure!(!(self.is_null() || index >= self.len() || (chat.is_some() && chat_arg.is_none())), "ErrBadChatlistIndex");
    |                    ^^^^^^^ method not found in `&Chatlist`

error[E0308]: mismatched types
   --> src/chatlist.rs:378:31
    |
378 |         let chat_id: ChatId = self.get_chat_id(index);
    |                      ------   ^^^^^^^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Result<ChatId, Error>`
    |                      |
    |                      expected due to this
    |
    = note: expected struct `chat::ChatId`
                 found enum `std::result::Result<chat::ChatId, anyhow::Error>`
help: use the `?` operator to extract the `std::result::Result<chat::ChatId, anyhow::Error>` value, propagating a `Result::Err` value to the caller
    |
378 |         let chat_id: ChatId = self.get_chat_id(index)?;
    |                                                      +

error[E0369]: binary operation `!=` cannot be applied to type `std::result::Result<chat::ChatId, anyhow::Error>`
   --> src/chatlist.rs:382:58
    |
382 |         if chat_arg.is_none() || self.get_chat_id(index) != chat_id {
    |                                  ----------------------- ^^ ------- chat::ChatId
    |                                  |
    |                                  std::result::Result<chat::ChatId, anyhow::Error>

error[E0308]: `if` and `else` have incompatible types
   --> src/chatlist.rs:392:9
    |
389 |       let lastmsg_id = if curr_chat.id == ChatId::new(DC_CHAT_ID_ARCHIVED_LINK) {
    |  ______________________-
390 | |         bail!("Archived link, can't load summary.");
    | |         ------------------------------------------- expected because of this
391 | |     } else {
392 | |         self.get_msg_id(index)
    | |         ^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<Option<MsgId>, Error>`
393 | |     };
    | |_____- `if` and `else` have incompatible types
    |
    = note: expected unit type `()`
                    found enum `std::result::Result<std::option::Option<message::MsgId>, anyhow::Error>`

error[E0599]: no function or associated item named `load_from_db` found for struct `contact::Contact` in the current scope
   --> src/chatlist.rs:422:27
    |
422 |             Some(Contact::load_from_db(context, ContactId::new(from_id)).await?)
    |                           ^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct

error[E0599]: no method named `fill` found for struct `summary::Summary` in the current scope
   --> src/chatlist.rs:435:13
    |
435 |         ret.fill(lastmsg, curr_chat, lastcontact);
    |             ^^^^ method not found in `Summary`
    |
   ::: src/summary.rs:43:1
    |
43  | pub struct Summary {
    | ------------------ method `fill` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `fill`, perhaps you need to implement one of them:
            candidate #1: `Rng`
            candidate #2: `ring::rand::SecureRandom`
            candidate #3: `ring::rand::SecureRandom`
            candidate #4: `nanorand::rand::Rng`
            candidate #5: `rand::Rng`
            candidate #6: `rustls::crypto::SecureRandom`

Some errors have detailed explanations: E0308, E0369, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 16 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 16 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

