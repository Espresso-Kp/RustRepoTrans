Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CHAT_MAGIC` in this scope
    --> src/chat.rs:1718:59
     |
1718 |     if self.chat.is_none() || self.chat.unwrap().magic != DC_CHAT_MAGIC {
     |                                                           ^^^^^^^^^^^^^ not found in this scope

error[E0609]: no field `chat` on type `&Chat`
    --> src/chat.rs:1718:13
     |
1718 |     if self.chat.is_none() || self.chat.unwrap().magic != DC_CHAT_MAGIC {
     |             ^^^^ unknown field
     |
     = note: available fields are: `id`, `typ`, `name`, `visibility`, `grpid` ... and 5 others

error[E0609]: no field `chat` on type `&Chat`
    --> src/chat.rs:1718:36
     |
1718 |     if self.chat.is_none() || self.chat.unwrap().magic != DC_CHAT_MAGIC {
     |                                    ^^^^ unknown field
     |
     = note: available fields are: `id`, `typ`, `name`, `visibility`, `grpid` ... and 5 others

error[E0609]: no field `chat` on type `&Chat`
    --> src/chat.rs:1722:15
     |
1722 |     Some(self.chat.unwrap().id)
     |               ^^^^ unknown field
     |
     = note: available fields are: `id`, `typ`, `name`, `visibility`, `grpid` ... and 5 others

Some errors have detailed explanations: E0425, E0609.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `deltachat` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0308]: mismatched types
    --> src/securejoin.rs:975:44
     |
975  |             let msg = get_chat_msg(&alice, chat.get_id(), 0, 1).await;
     |                       ------------         ^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |                       |
     |                       arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/test_utils.rs:1052:21
     |
1052 | pub(crate) async fn get_chat_msg(
     |                     ^^^^^^^^^^^^
1053 |     t: &TestContext,
1054 |     chat_id: ChatId,
     |     ---------------

error[E0308]: mismatched types
    --> src/securejoin.rs:1025:38
     |
1025 |         let msg = get_chat_msg(&bob, bob_chat.get_id(), i.next().unwrap(), msg_cnt).await;
     |                   ------------       ^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |                   |
     |                   arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/test_utils.rs:1052:21
     |
1052 | pub(crate) async fn get_chat_msg(
     |                     ^^^^^^^^^^^^
1053 |     t: &TestContext,
1054 |     chat_id: ChatId,
     |     ---------------

error[E0308]: mismatched types
    --> src/securejoin.rs:1029:42
     |
1029 |             let msg = get_chat_msg(&bob, bob_chat.get_id(), i.next().unwrap(), msg_cnt).await;
     |                       ------------       ^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |                       |
     |                       arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/test_utils.rs:1052:21
     |
1052 | pub(crate) async fn get_chat_msg(
     |                     ^^^^^^^^^^^^
1053 |     t: &TestContext,
1054 |     chat_id: ChatId,
     |     ---------------

error[E0308]: mismatched types
    --> src/securejoin.rs:1036:38
     |
1036 |         let msg = get_chat_msg(&bob, bob_chat.get_id(), i.next().unwrap(), msg_cnt).await;
     |                   ------------       ^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |                   |
     |                   arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/test_utils.rs:1052:21
     |
1052 | pub(crate) async fn get_chat_msg(
     |                     ^^^^^^^^^^^^
1053 |     t: &TestContext,
1054 |     chat_id: ChatId,
     |     ---------------

error[E0277]: `std::option::Option<u32>` doesn't implement `std::fmt::Display`
   --> src/test_utils.rs:721:13
    |
721 |             sel_chat.get_id(),
    |             ^^^^^^^^^^^^^^^^^ `std::option::Option<u32>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<u32>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `writeln` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `chat` on type `&chat::Chat`
    --> src/chat.rs:1718:13
     |
1718 |     if self.chat.is_none() || self.chat.unwrap().magic != DC_CHAT_MAGIC {
     |             ^^^^ unknown field
     |
     = note: available fields are: `id`, `typ`, `name`, `visibility`, `grpid` ... and 5 others

error[E0609]: no field `chat` on type `&chat::Chat`
    --> src/chat.rs:1718:36
     |
1718 |     if self.chat.is_none() || self.chat.unwrap().magic != DC_CHAT_MAGIC {
     |                                    ^^^^ unknown field
     |
     = note: available fields are: `id`, `typ`, `name`, `visibility`, `grpid` ... and 5 others

error[E0609]: no field `chat` on type `&chat::Chat`
    --> src/chat.rs:1722:15
     |
1722 |     Some(self.chat.unwrap().id)
     |               ^^^^ unknown field
     |
     = note: available fields are: `id`, `typ`, `name`, `visibility`, `grpid` ... and 5 others

error[E0308]: mismatched types
    --> src/chat.rs:6555:39
     |
6555 |         let sent_msg = alice.send_msg(alice_chat.get_id(), &mut msg).await;
     |                              -------- ^^^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |                              |
     |                              arguments to this method are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: method defined here
    --> src/test_utils.rs:646:18
     |
646  |     pub async fn send_msg(&self, chat_id: ChatId, msg: &mut Message) -> SentMessage<'_> {
     |                  ^^^^^^^^        ---------------

error[E0308]: mismatched types
    --> src/chat.rs:6559:39
     |
6559 |         forward_msgs(&bob, &[msg.id], bob_chat.get_id()).await?;
     |         ------------                  ^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/chat.rs:4109:14
     |
4109 | pub async fn forward_msgs(context: &Context, msg_ids: &[MsgId], chat_id: ChatId) -> Result<()> {
     |              ^^^^^^^^^^^^                                       ---------------

error[E0308]: mismatched types
    --> src/chat.rs:6578:39
     |
6578 |         let sent_msg = alice.send_msg(alice_chat.get_id(), &mut msg).await;
     |                              -------- ^^^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |                              |
     |                              arguments to this method are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: method defined here
    --> src/test_utils.rs:646:18
     |
646  |     pub async fn send_msg(&self, chat_id: ChatId, msg: &mut Message) -> SentMessage<'_> {
     |                  ^^^^^^^^        ---------------

error[E0308]: mismatched types
    --> src/chat.rs:6581:39
     |
6581 |         forward_msgs(&bob, &[msg.id], bob_chat.get_id()).await?;
     |         ------------                  ^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/chat.rs:4109:14
     |
4109 | pub async fn forward_msgs(context: &Context, msg_ids: &[MsgId], chat_id: ChatId) -> Result<()> {
     |              ^^^^^^^^^^^^                                       ---------------

error[E0308]: mismatched types
    --> src/chat.rs:6635:52
     |
6635 |         forward_msgs(&alice, &[received_reply.id], alice_chat.get_id()).await?;
     |         ------------                               ^^^^^^^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/chat.rs:4109:14
     |
4109 | pub async fn forward_msgs(context: &Context, msg_ids: &[MsgId], chat_id: ChatId) -> Result<()> {
     |              ^^^^^^^^^^^^                                       ---------------

error[E0599]: no method named `delete` found for enum `std::option::Option` in the current scope
    --> src/contact.rs:2337:23
     |
2337 |         chat.get_id().delete(&alice).await?;
     |                       ^^^^^^ method not found in `Option<u32>`

error[E0308]: mismatched types
   --> src/html.rs:441:41
    |
441 |         let msg = alice.get_last_msg_in(chat.get_id()).await;
    |                         --------------- ^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
    |                         |
    |                         arguments to this method are incorrect
    |
    = note: expected struct `chat::ChatId`
                 found enum `std::option::Option<u32>`
note: method defined here
   --> src/test_utils.rs:531:18
    |
531 |     pub async fn get_last_msg_in(&self, chat_id: ChatId) -> Message {
    |                  ^^^^^^^^^^^^^^^        ---------------

error[E0308]: mismatched types
    --> src/html.rs:452:47
     |
452  |         forward_msgs(&alice, &[msg.get_id()], chat.get_id())
     |         ------------                          ^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/chat.rs:4109:14
     |
4109 | pub async fn forward_msgs(context: &Context, msg_ids: &[MsgId], chat_id: ChatId) -> Result<()> {
     |              ^^^^^^^^^^^^                                       ---------------

error[E0308]: mismatched types
   --> src/html.rs:455:41
    |
455 |         let msg = alice.get_last_msg_in(chat.get_id()).await;
    |                         --------------- ^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
    |                         |
    |                         arguments to this method are incorrect
    |
    = note: expected struct `chat::ChatId`
                 found enum `std::option::Option<u32>`
note: method defined here
   --> src/test_utils.rs:531:18
    |
531 |     pub async fn get_last_msg_in(&self, chat_id: ChatId) -> Message {
    |                  ^^^^^^^^^^^^^^^        ---------------

error[E0308]: mismatched types
   --> src/html.rs:493:41
    |
493 |         let msg = alice.get_last_msg_in(chat.get_id()).await;
    |                         --------------- ^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
    |                         |
    |                         arguments to this method are incorrect
    |
    = note: expected struct `chat::ChatId`
                 found enum `std::option::Option<u32>`
note: method defined here
   --> src/test_utils.rs:531:18
    |
531 |     pub async fn get_last_msg_in(&self, chat_id: ChatId) -> Message {
    |                  ^^^^^^^^^^^^^^^        ---------------

error[E0308]: mismatched types
    --> src/html.rs:498:47
     |
498  |         forward_msgs(&alice, &[msg.get_id()], chat.get_id())
     |         ------------                          ^^^^^^^^^^^^^ expected `ChatId`, found `Option<u32>`
     |         |
     |         arguments to this function are incorrect
     |
     = note: expected struct `chat::ChatId`
                  found enum `std::option::Option<u32>`
note: function defined here
    --> src/chat.rs:4109:14
     |
4109 | pub async fn forward_msgs(context: &Context, msg_ids: &[MsgId], chat_id: ChatId) -> Result<()> {
     |              ^^^^^^^^^^^^                                       ---------------

Some errors have detailed explanations: E0277, E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib test) due to 20 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

