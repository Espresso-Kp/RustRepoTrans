Fail
file path is :
projects/deltachat-core/rust/src/message.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: expected identifier, found keyword `type`
   --> src/message.rs:863:51
    |
863 |     if self.from_id != DC_CONTACT_ID_SELF && chat.type.is_multi() {
    |                                                   ^^^^ expected identifier, found keyword

error[E0425]: cannot find value `DC_MSG_MAGIC` in this scope
   --> src/message.rs:845:40
    |
845 |     if self.is_none() || self.magic != DC_MSG_MAGIC {
    |                                        ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/message.rs:863:24
    |
863 |     if self.from_id != DC_CONTACT_ID_SELF && chat.type.is_multi() {
    |                        ^^^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `Chattype`
  --> src/message.rs:17:14
   |
17 |     Blocked, Chattype, VideochatType, DC_CHAT_ID_TRASH, DC_DESIRED_TEXT_LEN, DC_MSG_ID_LAST_SPECIAL,
   |              ^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0728]: `await` is only allowed inside `async` functions and blocks
   --> src/message.rs:874:39
    |
874 |     contact.map(|c| Contact::unref(c).await);
    |                 ---                   ^^^^^ only allowed inside `async` functions and blocks
    |                 |
    |                 this is not `async`

error[E0728]: `await` is only allowed inside `async` functions and blocks
   --> src/message.rs:875:35
    |
875 |     chat.map(|ch| Chat::unref(ch).await);
    |              ----                 ^^^^^ only allowed inside `async` functions and blocks
    |              |
    |              this is not `async`

error[E0061]: this function takes 4 arguments but 0 arguments were supplied
   --> src/message.rs:841:19
    |
841 |     let mut ret = Summary::new();
    |                   ^^^^^^^^^^^^-- multiple arguments are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
841 |     let mut ret = Summary::new(/* &context::Context */, /* &message::Message */, /* &Chat */, /* std::option::Option<&Contact> */);
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `is_none` found for reference `&message::Message` in the current scope
   --> src/message.rs:845:13
    |
845 |     if self.is_none() || self.magic != DC_MSG_MAGIC {
    |             ^^^^^^^ method not found in `&Message`
    |
help: some of the expressions' fields have a method of the same name
    |
845 |     if self.error.is_none() || self.magic != DC_MSG_MAGIC {
    |             ++++++
845 |     if self.in_reply_to.is_none() || self.magic != DC_MSG_MAGIC {
    |             ++++++++++++

error[E0609]: no field `magic` on type `&message::Message`
   --> src/message.rs:845:31
    |
845 |     if self.is_none() || self.magic != DC_MSG_MAGIC {
    |                               ^^^^^ unknown field
    |
    = note: available fields are: `id`, `from_id`, `to_id`, `chat_id`, `viewtype` ... and 18 others

error[E0425]: cannot find function `cleanup` in this scope
   --> src/message.rs:846:9
    |
846 |         cleanup(contact, chat_to_delete);
    |         ^^^^^^^ not found in this scope
    |
help: consider using the associated function on `Self`
    |
846 |         Self::cleanup(contact, chat_to_delete);
    |         ++++++

error[E0308]: mismatched types
   --> src/message.rs:847:19
    |
847 |         return Ok(ret);
    |                -- ^^^ expected `Summary`, found future
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/message.rs:847:16
    |
847 |         return Ok(ret);
    |                ^^^---^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0599]: no function or associated item named `fetch_chat` found for struct `Chat` in the current scope
    --> src/message.rs:851:21
     |
851  |         match Chat::fetch_chat(context, self.chat_id) {
     |                     ^^^^^^^^^^ function or associated item not found in `Chat`
     |
    ::: src/chat.rs:1480:1
     |
1480 | pub struct Chat {
     | --------------- function or associated item `fetch_chat` not found for this struct

error[E0425]: cannot find function `cleanup` in this scope
   --> src/message.rs:857:17
    |
857 |                 cleanup(contact, chat_to_delete);
    |                 ^^^^^^^ not found in this scope
    |
help: consider using the associated function on `Self`
    |
857 |                 Self::cleanup(contact, chat_to_delete);
    |                 ++++++

error[E0308]: mismatched types
   --> src/message.rs:858:24
    |
858 |                 return Ok(ret);
    |                        ^^^^^^^ expected `&Chat`, found `Result<impl Future<Output = ...>, ...>`
    |
    = note: expected reference `&Chat`
                    found enum `std::result::Result<impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>, _>`
note: return type inferred to be `&Chat` here
   --> src/message.rs:858:24
    |
858 |                 return Ok(ret);
    |                        ^^^^^^^

error[E0609]: no field `r#type` on type `&Chat`
   --> src/message.rs:863:51
    |
863 |     if self.from_id != DC_CONTACT_ID_SELF && chat.type.is_multi() {
    |                                                   ^^^^ unknown field
    |
help: a field with a similar name exists
    |
863 |     if self.from_id != DC_CONTACT_ID_SELF && chat.typ.is_multi() {
    |                                                   ~~~

error[E0599]: no function or associated item named `fetch_contact` found for struct `Contact` in the current scope
   --> src/message.rs:864:28
    |
864 |         contact = Contact::fetch_contact(context, self.from_id);
    |                            ^^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `fetch_contact` not found for this struct

error[E0599]: no method named `fill` found for opaque type `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` in the current scope
   --> src/message.rs:867:9
    |
867 |     ret.fill(self, &chat, &contact, context);
    |         ^^^^ method not found in `impl Future<Output = Result<Summary, Error>>`

error[E0425]: cannot find function `cleanup` in this scope
   --> src/message.rs:869:5
    |
869 |     cleanup(contact, chat_to_delete);
    |     ^^^^^^^ not found in this scope
    |
help: consider using the associated function on `Self`
    |
869 |     Self::cleanup(contact, chat_to_delete);
    |     ++++++

error[E0308]: mismatched types
   --> src/message.rs:871:8
    |
871 |     Ok(ret)
    |     -- ^^^ expected `Summary`, found future
    |     |
    |     arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/message.rs:871:5
    |
871 |     Ok(ret)
    |     ^^^---^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0061]: this function takes 4 arguments but 0 arguments were supplied
   --> src/message.rs:841:19
    |
841 |     let mut ret = Summary::new();
    |                   ^^^^^^^^^^^^-- multiple arguments are missing
    |
note: associated function defined here
   --> src/summary.rs:90:18
    |
90  |     pub async fn new(
    |                  ^^^
91  |         context: &Context,
    |         -----------------
92  |         msg: &Message,
    |         -------------
93  |         chat: &Chat,
    |         -----------
94  |         contact: Option<&Contact>,
    |         -------------------------
help: provide the arguments
    |
841 |     let mut ret = Summary::new(/* &context::Context */, /* &message::Message */, /* &chat::Chat */, /* std::option::Option<&contact::Contact> */);
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/message.rs:847:19
    |
847 |         return Ok(ret);
    |                -- ^^^ expected `Summary`, found future
    |                |
    |                arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/message.rs:847:16
    |
847 |         return Ok(ret);
    |                ^^^---^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

error[E0599]: no function or associated item named `fetch_chat` found for struct `chat::Chat` in the current scope
    --> src/message.rs:851:21
     |
851  |         match Chat::fetch_chat(context, self.chat_id) {
     |                     ^^^^^^^^^^ function or associated item not found in `chat::Chat`
     |
    ::: src/chat.rs:1480:1
     |
1480 | pub struct Chat {
     | --------------- function or associated item `fetch_chat` not found for this struct

error[E0308]: mismatched types
   --> src/message.rs:858:24
    |
858 |                 return Ok(ret);
    |                        ^^^^^^^ expected `&Chat`, found `Result<impl Future<Output = ...>, ...>`
    |
    = note: expected reference `&chat::Chat`
                    found enum `std::result::Result<impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>, _>`
note: return type inferred to be `&chat::Chat` here
   --> src/message.rs:858:24
    |
858 |                 return Ok(ret);
    |                        ^^^^^^^

error[E0609]: no field `r#type` on type `&chat::Chat`
   --> src/message.rs:863:51
    |
863 |     if self.from_id != DC_CONTACT_ID_SELF && chat.type.is_multi() {
    |                                                   ^^^^ unknown field
    |
help: a field with a similar name exists
    |
863 |     if self.from_id != DC_CONTACT_ID_SELF && chat.typ.is_multi() {
    |                                                   ~~~

error[E0599]: no function or associated item named `fetch_contact` found for struct `contact::Contact` in the current scope
   --> src/message.rs:864:28
    |
864 |         contact = Contact::fetch_contact(context, self.from_id);
    |                            ^^^^^^^^^^^^^ function or associated item not found in `Contact`
    |
   ::: src/contact.rs:358:1
    |
358 | pub struct Contact {
    | ------------------ function or associated item `fetch_contact` not found for this struct

error[E0599]: no method named `fill` found for opaque type `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` in the current scope
   --> src/message.rs:867:9
    |
867 |     ret.fill(self, &chat, &contact, context);
    |         ^^^^ method not found in `impl Future<Output = Result<Summary, Error>>`

error[E0308]: mismatched types
   --> src/message.rs:871:8
    |
871 |     Ok(ret)
    |     -- ^^^ expected `Summary`, found future
    |     |
    |     arguments to this enum variant are incorrect
    |
help: the type constructed contains `impl futures::Future<Output = std::result::Result<summary::Summary, anyhow::Error>>` due to the type of the argument passed
   --> src/message.rs:871:5
    |
871 |     Ok(ret)
    |     ^^^---^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

Some errors have detailed explanations: E0061, E0308, E0425, E0599, E0609, E0728.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 18 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 18 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

