Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair192`
   --> src/./mpin192.rs:562:26
    |
562 |             p = pair192::G1mul(&p, &x);
    |                          ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair192`
   --> src/./mpin192.rs:564:30
    |
564 |             let w = pair192::G1mul(&w, &x);
    |                              ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair192`
   --> src/./mpin192.rs:568:26
    |
568 |             p = pair192::G1mul(&p, &x);
    |                          ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair192`
   --> src/./mpin192.rs:575:26
    |
575 |             p = pair192::G1mul(&p, &x);
    |                          ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0599]: no function or associated item named `from_curve_order` found for struct `bls24::big::Big` in the current scope
   --> src/./mpin192.rs:534:18
    |
534 |     let r = Big::from_curve_order();
    |                  ^^^^^^^^^^^^^^^^ function or associated item not found in `Big`
    |
   ::: src/./big.rs:39:1
    |
39  | pub struct Big {
    | -------------- function or associated item `from_curve_order` not found for this struct

error[E0599]: no function or associated item named `random_num` found for struct `bls24::big::Big` in the current scope
   --> src/./mpin192.rs:536:22
    |
536 |         let x = Big::random_num(r, rng);
    |                      ^^^^^^^^^^
    |                      |
    |                      function or associated item not found in `Big`
    |                      help: there is an associated function with a similar name: `randomnum`
    |
   ::: src/./big.rs:39:1
    |
39  | pub struct Big {
    | -------------- function or associated item `random_num` not found for this struct

error[E0599]: no method named `unwrap` found for struct `bls24::big::Big` in the current scope
   --> src/./mpin192.rs:540:28
    |
540 |         Big::from_bytes(x).unwrap()
    |                            ^^^^^^ method not found in `Big`
    |
   ::: src/./big.rs:39:1
    |
39  | pub struct Big {
    | -------------- method `unwrap` not found for this struct

error[E0308]: mismatched types
   --> src/./mpin192.rs:543:55
    |
543 |     let mut p = ECP::mapit(&hashit(sha, 0, client_id, EFS));
    |                             ------                    ^^^ expected `&mut [u8]`, found `usize`
    |                             |
    |                             arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin192.rs:543:28
     |
543  |     let mut p = ECP::mapit(&hashit(sha, 0, client_id, EFS));
     |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:549:21
    |
549 |     let pin = pin % MAXPIN;
    |                     ^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot calculate the remainder of `usize` divided by `i32`
   --> src/./mpin192.rs:549:19
    |
549 |     let pin = pin % MAXPIN;
    |                   ^ no implementation for `usize % i32`
    |
    = help: the trait `Rem<i32>` is not implemented for `usize`
    = help: the following other types implement trait `Rem<Rhs>`:
              <&'a usize as Rem<usize>>
              <&usize as Rem<&usize>>
              <usize as Rem<&usize>>
              <usize as Rem<NonZeroUsize>>
              <usize as Rem>

error[E0308]: mismatched types
    --> src/./mpin192.rs:550:22
     |
550  |     let w = p.pinmul(pin, PBLEN);
     |               ------ ^^^ expected `i32`, found `usize`
     |               |
     |               arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
550  |     let w = p.pinmul(pin.try_into().unwrap(), PBLEN);
     |                         ++++++++++++++++++++

error[E0599]: no function or associated item named `infinity` found for struct `bls24::ecp::ECP` in the current scope
   --> src/./mpin192.rs:554:77
    |
554 |         let w = permit.map(|permit| ECP::from_bytes(permit)).unwrap_or(ECP::infinity());
    |                                                                             ^^^^^^^^
    |                                                                             |
    |                                                                             function or associated item not found in `ECP`
    |                                                                             help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0308]: mismatched types
   --> src/./mpin192.rs:559:62
    |
559 |         let h = hashit(sha, date, &hashit(sha, 0, client_id, EFS), EFS);
    |                                    ------                    ^^^ expected `&mut [u8]`, found `usize`
    |                                    |
    |                                    arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: arguments to this function are incorrect
   --> src/./mpin192.rs:559:17
    |
559 |         let h = hashit(sha, date, &hashit(sha, 0, client_id, EFS), EFS);
    |                 ^^^^^^            -------------------------------  --- expected `&mut [u8]`, found `usize`
    |                                   |
    |                                   expected `&[u8]`, found `&bool`
    |
    = note: expected reference `&[u8]`
               found reference `&bool`
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^ ----------  --------  ---------  ------------

error[E0308]: mismatched types
    --> src/./mpin192.rs:560:28
     |
560  |         let w = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0599]: no function or associated item named `infinity` found for struct `bls24::ecp::ECP` in the current scope
   --> src/./mpin192.rs:554:77
    |
554 |         let w = permit.map(|permit| ECP::from_bytes(permit)).unwrap_or(ECP::infinity());
    |                                                                             ^^^^^^^^
    |                                                                             |
    |                                                                             function or associated item not found in `ECP`
    |                                                                             help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

Some errors have detailed explanations: E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 16 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 16 previous errors

