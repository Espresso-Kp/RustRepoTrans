Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0428]: the name `hashit` is defined multiple times
   --> src/./mpin192.rs:608:1
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    | ---------------------------------------------------------------- previous definition of the value `hashit` here
...
608 | fn hashit(sha: usize, date: usize, data: &[u8], efs: &EFS) -> Vec<u8> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `hashit` redefined here
    |
    = note: `hashit` must be defined only once in the value namespace of this module

error: `self` parameter is only allowed in associated functions
   --> src/./mpin192.rs:616:13
    |
616 | fn to_bytes(&self, bytes: &mut [u8], compress: bool) {
    |             ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> src/./mpin192.rs:619:8
    |
619 | fn add(&self, other: &ECP) {
    |        ^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0573]: expected type, found constant `EFS`
   --> src/./mpin192.rs:608:55
    |
608 | fn hashit(sha: usize, date: usize, data: &[u8], efs: &EFS) -> Vec<u8> {
    |                                                       ^^^ not a type

error[E0411]: cannot find type `Self` in this scope
   --> src/./mpin192.rs:612:23
    |
612 | fn mapit(h: &[u8]) -> Self {
    |    -----              ^^^^ `Self` is only available in impls, traits, and type definitions
    |    |
    |    `Self` not allowed in a function

error[E0423]: expected value, found struct `ECP`
   --> src/./mpin192.rs:614:9
    |
614 |           ECP
    |           ^^^ help: use struct literal syntax instead: `ECP { x: val, y: val, z: val }`
    |
   ::: src/./ecp.rs:32:1
    |
32  | / pub struct ECP {
33  | |     x: FP,
34  | |     y: FP,
35  | |     z: FP,
36  | | }
    | |_- `ECP` defined here

error[E0308]: mismatched types
   --> src/./mpin192.rs:595:33
    |
595 |     let h = hashit(sha, 0, cid, &EFS);
    |             ------              ^^^^ types differ in mutability
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected mutable reference `&mut [u8]`
                       found reference `&usize`
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin192.rs:596:24
     |
596  |     let p = ECP::mapit(&h);
     |             ---------- ^^ expected `&[u8]`, found `&bool`
     |             |
     |             arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: arguments to this function are incorrect
   --> src/./mpin192.rs:600:17
    |
600 |         let h = hashit(sha, date, &h, &EFS);
    |                 ^^^^^^            --  ---- types differ in mutability
    |                                   |
    |                                   expected `&[u8]`, found `&bool`
    |
    = note: expected reference `&[u8]`
               found reference `&bool`
    = note: expected mutable reference `&mut [u8]`
                       found reference `&usize`
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^ ----------  --------  ---------  ------------

error[E0308]: mismatched types
    --> src/./mpin192.rs:601:28
     |
601  |         let r = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

Some errors have detailed explanations: E0308, E0411, E0423, E0428, E0573.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `amcl` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 10 previous errors

