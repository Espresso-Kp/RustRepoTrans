Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bls461_64.rs:74:1
    |
74  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
75  | |     0x1,
76  | |     0x7FEFFFEFFFFC0,
77  | |     0xC017FFC80001100,
...   |
82  | |     0x0,
83  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `h` in this scope
   --> src/./mpin.rs:544:36
    |
544 |         let h = hashit(sha, date, &h, EFS);
    |                                    ^ help: a local variable with a similar name exists: `p`

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:547:27
    |
547 |             let p = pair::G1mul(&p, &x);
    |                           ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:549:27
    |
549 |             let w = pair::G1mul(&w, &x);
    |                           ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair`
   --> src/./mpin.rs:559:27
    |
559 |             let p = pair::G1mul(&p, &x);
    |                           ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair.rs:625:1
    |
625 | pub fn g1mul(P: &ECP, e: &Big) -> ECP {
    | ------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bls383_64.rs:78:1
    |
78  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
79  | |     0x32099EBFEBC0001,
80  | |     0x17C25684834E5CE,
81  | |     0x1C81698B381DE0,
...   |
85  | |     0x0,
86  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bls381_64.rs:70:1
    |
70  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
71  | |     0x3FFFFFF00000001,
72  | |     0x36900BFFF96FFBF,
73  | |     0x180809A1D80553B,
...   |
77  | |     0x0,
78  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_fp512bn_64.rs:53:1
    |
53  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
54  | |     0x6A64A5F519A09ED,
55  | |     0x10313E04F9A2B40,
56  | |     0xC65DEAB2679A34A,
...   |
62  | |     0xFFFFFFFF,
63  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_fp256bn_64.rs:46:1
    |
46  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
47  | |     0x2D536CD10B500D,
48  | |     0x65FB1299921AF6,
49  | |     0x5EEE71A49E0CDC,
50  | |     0xFFFCF0CD46E5F2,
51  | |     0xFFFFFFFF,
52  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bn254cx_64.rs:61:1
    |
61  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
62  | |     0x11C0A636EB1F6D,
63  | |     0xD6EE0CC906CEBE,
64  | |     0x647A6366D2C43F,
65  | |     0x8702A0DB0BDDF,
66  | |     0x24000000,
67  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin.rs:519:49
    |
519 |       let curve_order = big::Big::from_bytes(rom::CURVE_Order);
    |                                                   ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bn254_64.rs:54:1
    |
54  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
55  | |     0xD,
56  | |     0x800000000010A1,
57  | |     0x8000000007FF9F,
58  | |     0x40000001BA344D,
59  | |     0x25236482,
60  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0308]: mismatched types
   --> src/./mpin.rs:522:20
    |
522 |         x.to_bytes(x);
    |           -------- ^ expected `&mut [u8]`, found `Big`
    |           |
    |           arguments to this method are incorrect
    |
note: method defined here
   --> src/./big.rs:510:12
    |
510 |     pub fn to_bytes(&self, b: &mut [u8]) {
    |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin.rs:528:60
    |
528 |     let mut p = ecp::ECP::mapit(&hashit(sha, 0, client_id, EFS));
    |                                  ------                    ^^^ expected `&mut [u8]`, found `usize`
    |                                  |
    |                                  arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin.rs:118:4
    |
118 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin.rs:528:33
     |
528  |     let mut p = ecp::ECP::mapit(&hashit(sha, 0, client_id, EFS));
     |                 --------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin.rs:534:21
    |
534 |     let pin = pin % MAXPIN;
    |                     ^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot calculate the remainder of `usize` divided by `i32`
   --> src/./mpin.rs:534:19
    |
534 |     let pin = pin % MAXPIN;
    |                   ^ no implementation for `usize % i32`
    |
    = help: the trait `Rem<i32>` is not implemented for `usize`
    = help: the following other types implement trait `Rem<Rhs>`:
              <&'a usize as Rem<usize>>
              <&usize as Rem<&usize>>
              <usize as Rem<&usize>>
              <usize as Rem<NonZeroUsize>>
              <usize as Rem>

error[E0308]: mismatched types
    --> src/./mpin.rs:535:22
     |
535  |     let w = p.pinmul(pin, PBLEN);
     |               ------ ^^^ expected `i32`, found `usize`
     |               |
     |               arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
535  |     let w = p.pinmul(pin.try_into().unwrap(), PBLEN);
     |                         ++++++++++++++++++++

error[E0599]: no function or associated item named `infinity` found for struct `bls461::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

error[E0308]: mismatched types
   --> src/./mpin.rs:544:39
    |
544 |         let h = hashit(sha, date, &h, EFS);
    |                 ------                ^^^ expected `&mut [u8]`, found `usize`
    |                 |
    |                 arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin.rs:118:4
    |
118 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin.rs:545:33
     |
545  |         let w = ecp::ECP::mapit(&h);
     |                 --------------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0599]: no function or associated item named `infinity` found for struct `bls461::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `bls383::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

error[E0599]: no function or associated item named `infinity` found for struct `bls383::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `bls381::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

error[E0599]: no function or associated item named `infinity` found for struct `bls381::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `fp512bn::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

error[E0599]: no function or associated item named `infinity` found for struct `fp512bn::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `fp256bn::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

error[E0599]: no function or associated item named `infinity` found for struct `fp256bn::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `bn254cx::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `bn254cx::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

error[E0599]: no function or associated item named `infinity` found for struct `bn254::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct

error[E0599]: no function or associated item named `infinity` found for struct `bn254::ecp::ECP` in the current scope
   --> src/./mpin.rs:539:87
    |
539 |         let w = permit.map(|permit| ecp::ECP::from_bytes(permit)).unwrap_or(ecp::ECP::infinity());
    |                                                                                       ^^^^^^^^
    |                                                                                       |
    |                                                                                       function or associated item not found in `ECP`
    |                                                                                       help: there is a method with a similar name: `is_infinity`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- function or associated item `infinity` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `infinity`, perhaps you need to implement one of them:
            candidate #1: `num_traits::float::FloatCore`
            candidate #2: `num_traits::Float`

Some errors have detailed explanations: E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 26 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 26 previous errors

