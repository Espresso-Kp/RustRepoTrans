Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/spec/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find function `visit` in this scope
   --> crates/iceberg/src/spec/schema.rs:744:18
    |
744 |     let result = visit(schema.as_struct(), _PruneColumnsVisitor::new(selected.clone(), select_full_types))?;
    |                  ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
20  + use crate::avro::visit;
    |
20  + use crate::expr::visitors::bound_predicate_visitor::visit;
    |

error[E0433]: failed to resolve: use of undeclared crate or module `_PruneColumnsVisitor`
   --> crates/iceberg/src/spec/schema.rs:744:44
    |
744 |     let result = visit(schema.as_struct(), _PruneColumnsVisitor::new(selected.clone(), select_full_types))?;
    |                                            ^^^^^^^^^^^^^^^^^^^^ use of undeclared crate or module `_PruneColumnsVisitor`

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/spec/schema.rs:745:50
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType::new());
    |                                                  ^^^^^^^^^^^^^^^-- an argument of type `Vec<Arc<datatypes::NestedField>>` is missing
    |
note: associated function defined here
   --> crates/iceberg/src/spec/datatypes.rs:424:12
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |            ^^^ ---------------------------
help: provide the argument
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType::new(/* Vec<Arc<datatypes::NestedField>> */));
    |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0560]: struct `spec::schema::Schema` has no field named `fields`
   --> crates/iceberg/src/spec/schema.rs:750:9
    |
750 |         fields: result_struct.fields,
    |         ^^^^^^ `spec::schema::Schema` does not have this field
    |
    = note: available fields are: `struct`, `highest_field_id`, `alias_to_id`, `id_to_field`, `name_to_id` ... and 3 others

error[E0308]: mismatched types
   --> crates/iceberg/src/spec/schema.rs:749:8
    |
749 |       Ok(Schema {
    |  _____--_^
    | |     |
    | |     arguments to this enum variant are incorrect
750 | |         fields: result_struct.fields,
751 | |         schema_id: schema.schema_id,
752 | |         identifier_field_ids,
753 | |     })
    | |_____^ expected `Type`, found `Schema`
    |
help: the type constructed contains `spec::schema::Schema` due to the type of the argument passed
   --> crates/iceberg/src/spec/schema.rs:749:5
    |
749 |        Ok(Schema {
    |  ______^__-
    | | _____|
    | ||
750 | ||         fields: result_struct.fields,
751 | ||         schema_id: schema.schema_id,
752 | ||         identifier_field_ids,
753 | ||     })
    | ||_____-^
    | |______|
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5

Some errors have detailed explanations: E0061, E0308, E0425, E0433, E0560.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 5 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0425]: cannot find function `visit` in this scope
   --> crates/iceberg/src/spec/schema.rs:744:18
    |
744 |     let result = visit(schema.as_struct(), _PruneColumnsVisitor::new(selected.clone(), select_full_types))?;
    |                  ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
20  + use crate::avro::visit;
    |
20  + use crate::expr::visitors::bound_predicate_visitor::visit;
    |

error[E0433]: failed to resolve: use of undeclared crate or module `_PruneColumnsVisitor`
   --> crates/iceberg/src/spec/schema.rs:744:44
    |
744 |     let result = visit(schema.as_struct(), _PruneColumnsVisitor::new(selected.clone(), select_full_types))?;
    |                                            ^^^^^^^^^^^^^^^^^^^^ use of undeclared crate or module `_PruneColumnsVisitor`

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/spec/schema.rs:745:50
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType::new());
    |                                                  ^^^^^^^^^^^^^^^-- an argument of type `Vec<Arc<datatypes::NestedField>>` is missing
    |
note: associated function defined here
   --> crates/iceberg/src/spec/datatypes.rs:424:12
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |            ^^^ ---------------------------
help: provide the argument
    |
745 |     let result_struct = result.unwrap_or_else(|| StructType::new(/* Vec<Arc<datatypes::NestedField>> */));
    |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0560]: struct `spec::schema::Schema` has no field named `fields`
   --> crates/iceberg/src/spec/schema.rs:750:9
    |
750 |         fields: result_struct.fields,
    |         ^^^^^^ `spec::schema::Schema` does not have this field
    |
    = note: available fields are: `struct`, `highest_field_id`, `alias_to_id`, `id_to_field`, `name_to_id` ... and 3 others

error[E0308]: mismatched types
   --> crates/iceberg/src/spec/schema.rs:749:8
    |
749 |       Ok(Schema {
    |  _____--_^
    | |     |
    | |     arguments to this enum variant are incorrect
750 | |         fields: result_struct.fields,
751 | |         schema_id: schema.schema_id,
752 | |         identifier_field_ids,
753 | |     })
    | |_____^ expected `Type`, found `Schema`
    |
help: the type constructed contains `spec::schema::Schema` due to the type of the argument passed
   --> crates/iceberg/src/spec/schema.rs:749:5
    |
749 |        Ok(Schema {
    |  ______^__-
    | | _____|
    | ||
750 | ||         fields: result_struct.fields,
751 | ||         schema_id: schema.schema_id,
752 | ||         identifier_field_ids,
753 | ||     })
    | ||_____-^
    | |______|
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5

Some errors have detailed explanations: E0061, E0308, E0425, E0433, E0560.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg` (lib) due to 5 previous errors

