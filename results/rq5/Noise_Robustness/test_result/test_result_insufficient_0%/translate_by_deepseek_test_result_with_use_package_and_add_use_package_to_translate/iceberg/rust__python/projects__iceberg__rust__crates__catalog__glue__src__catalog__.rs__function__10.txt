Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:297:25
    |
297 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
297 |     let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:299:23
    |
299 |     let glue_client = create_sdk_config();
    |                       ^^^^^^^^^^^^^^^^^-- two arguments of type `&std::collections::HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
299 |     let glue_client = create_sdk_config(/* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */);
    |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `get_tables` found for opaque type `impl std::future::Future<Output = SdkConfig>` in the current scope
   --> crates/catalog/glue/src/catalog.rs:305:33
    |
305 |             None => glue_client.get_tables().database_name(database_name.clone()).send().await?,
    |                                 ^^^^^^^^^^ method not found in `impl Future<Output = SdkConfig>`

error[E0599]: no method named `get_tables` found for opaque type `impl std::future::Future<Output = SdkConfig>` in the current scope
   --> crates/catalog/glue/src/catalog.rs:306:40
    |
306 |             Some(token) => glue_client.get_tables().database_name(database_name.clone()).next_token(token).send().await?,
    |                                        ^^^^^^^^^^ method not found in `impl Future<Output = SdkConfig>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:319:20
    |
319 |             if let Some(table_name) = table.name {
    |                    ^^^^^^^^^^^^^^^^   ---------- this expression has type `std::string::String`
    |                    |
    |                    expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:320:38
    |
320 |                 Some(TableIdent::new(database_name.clone(), table_name))
    |                      --------------- ^^^^^^^^^^^^^^^^^^^^^ expected `NamespaceIdent`, found `DatabaseInput`
    |                      |
    |                      arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:191:12
    |
191 |     pub fn new(namespace: NamespaceIdent, name: String) -> Self {
    |            ^^^

Some errors have detailed explanations: E0061, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:297:25
    |
297 |     let database_name = convert_to_database(namespace)?;
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
297 |     let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:299:23
    |
299 |     let glue_client = create_sdk_config();
    |                       ^^^^^^^^^^^^^^^^^-- two arguments of type `&HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
299 |     let glue_client = create_sdk_config(/* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */);
    |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `get_tables` found for opaque type `impl std::future::Future<Output = SdkConfig>` in the current scope
   --> crates/catalog/glue/src/catalog.rs:305:33
    |
305 |             None => glue_client.get_tables().database_name(database_name.clone()).send().await?,
    |                                 ^^^^^^^^^^ method not found in `impl Future<Output = SdkConfig>`

error[E0599]: no method named `get_tables` found for opaque type `impl std::future::Future<Output = SdkConfig>` in the current scope
   --> crates/catalog/glue/src/catalog.rs:306:40
    |
306 |             Some(token) => glue_client.get_tables().database_name(database_name.clone()).next_token(token).send().await?,
    |                                        ^^^^^^^^^^ method not found in `impl Future<Output = SdkConfig>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:319:20
    |
319 |             if let Some(table_name) = table.name {
    |                    ^^^^^^^^^^^^^^^^   ---------- this expression has type `std::string::String`
    |                    |
    |                    expected `String`, found `Option<_>`
    |
    = note: expected struct `std::string::String`
                 found enum `std::option::Option<_>`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:320:38
    |
320 |                 Some(TableIdent::new(database_name.clone(), table_name))
    |                      --------------- ^^^^^^^^^^^^^^^^^^^^^ expected `NamespaceIdent`, found `DatabaseInput`
    |                      |
    |                      arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:191:12
    |
191 |     pub fn new(namespace: NamespaceIdent, name: String) -> Self {
    |            ^^^

Some errors have detailed explanations: E0061, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

