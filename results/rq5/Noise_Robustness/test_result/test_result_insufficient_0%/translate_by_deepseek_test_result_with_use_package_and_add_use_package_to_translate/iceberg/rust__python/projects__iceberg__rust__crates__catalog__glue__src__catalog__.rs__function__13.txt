Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0599]: no method named `unwrap` found for reference `&iceberg::NamespaceIdent` in the current scope
   --> crates/catalog/glue/src/catalog.rs:462:64
    |
462 |     let database_name = convert_to_database(&table.namespace().unwrap().name())?;
    |                                                                ^^^^^^ help: there is a method with a similar name: `swap`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:462:25
    |
462 |     let database_name = convert_to_database(&table.namespace().unwrap().name())?;
    |                         ^^^^^^^^^^^^^^^^^^^------------------------------------ an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
462 |     let database_name = convert_to_database(&table.namespace().unwrap().name(), /* &std::collections::HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:465:23
    |
465 |     let glue_client = create_sdk_config().await?;
    |                       ^^^^^^^^^^^^^^^^^-- two arguments of type `&std::collections::HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
465 |     let glue_client = create_sdk_config(/* &std::collections::HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */).await?;
    |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:465:23
    |
465 |     let glue_client = create_sdk_config().await?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `SdkConfig`
    |
    = help: the trait `Try` is not implemented for `SdkConfig`

error[E0599]: no variant or associated item named `NoSuchTable` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:477:43
    |
477 |                 Err(Error::new(ErrorKind::NoSuchTable, format!("Table does not exist: {}.{}", database_name, table_name)))
    |                                           ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:477:95
    |
477 |                 Err(Error::new(ErrorKind::NoSuchTable, format!("Table does not exist: {}.{}", database_name, table_name)))
    |                                                                                               ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `unwrap` found for reference `&NamespaceIdent` in the current scope
   --> crates/catalog/glue/src/catalog.rs:462:64
    |
462 |     let database_name = convert_to_database(&table.namespace().unwrap().name())?;
    |                                                                ^^^^^^ help: there is a method with a similar name: `swap`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:462:25
    |
462 |     let database_name = convert_to_database(&table.namespace().unwrap().name())?;
    |                         ^^^^^^^^^^^^^^^^^^^------------------------------------ an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
462 |     let database_name = convert_to_database(&table.namespace().unwrap().name(), /* &HashMap<std::string::String, std::string::String> */)?;
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:465:23
    |
465 |     let glue_client = create_sdk_config().await?;
    |                       ^^^^^^^^^^^^^^^^^-- two arguments of type `&HashMap<std::string::String, std::string::String>` and `std::option::Option<&std::string::String>` are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:58:21
    |
58  | pub(crate) async fn create_sdk_config(
    |                     ^^^^^^^^^^^^^^^^^
59  |     properties: &HashMap<String, String>,
    |     ------------------------------------
60  |     endpoint_uri: Option<&String>,
    |     -----------------------------
help: provide the arguments
    |
465 |     let glue_client = create_sdk_config(/* &HashMap<std::string::String, std::string::String> */, /* std::option::Option<&std::string::String> */).await?;
    |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:465:23
    |
465 |     let glue_client = create_sdk_config().await?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `SdkConfig`
    |
    = help: the trait `Try` is not implemented for `SdkConfig`

error[E0599]: no variant or associated item named `NoSuchTable` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/glue/src/catalog.rs:477:43
    |
477 |                 Err(Error::new(ErrorKind::NoSuchTable, format!("Table does not exist: {}.{}", database_name, table_name)))
    |                                           ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0277]: `DatabaseInput` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:477:95
    |
477 |                 Err(Error::new(ErrorKind::NoSuchTable, format!("Table does not exist: {}.{}", database_name, table_name)))
    |                                                                                               ^^^^^^^^^^^^^ `DatabaseInput` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `DatabaseInput`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0061, E0277, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...

