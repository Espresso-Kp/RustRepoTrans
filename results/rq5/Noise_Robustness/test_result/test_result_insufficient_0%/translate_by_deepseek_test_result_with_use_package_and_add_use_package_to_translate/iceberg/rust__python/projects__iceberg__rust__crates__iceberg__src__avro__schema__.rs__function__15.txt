Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/avro/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no method named `is_boolean` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:451:15
    |
451 |     if schema.is_boolean() {
    |               ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `BooleanType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:452:32
    |
452 |         Ok(Some(PrimitiveType::BooleanType))
    |                                ^^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `BooleanType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_integer` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:22
    |
453 |     } else if schema.is_integer() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `bit_width` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:454:28
    |
454 |         let width = schema.bit_width().unwrap_or(0);
    |                            ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `IntegerType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:456:36
    |
456 |             Ok(Some(PrimitiveType::IntegerType))
    |                                    ^^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `IntegerType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `LongType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:458:36
    |
458 |             Ok(Some(PrimitiveType::LongType))
    |                                    ^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `LongType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:460:39
    |
460 |             Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported integer type: {}", schema)))
    |                                       ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0277]: `apache_avro::Schema` doesn't implement `std::fmt::Display`
   --> crates/iceberg/src/avro/schema.rs:460:96
    |
460 |             Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported integer type: {}", schema)))
    |                                                                                                ^^^^^^ `apache_avro::Schema` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `apache_avro::Schema`, which is required by `&apache_avro::Schema: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_float32` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:462:22
    |
462 |     } else if schema.is_float32() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `FloatType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:463:32
    |
463 |         Ok(Some(PrimitiveType::FloatType))
    |                                ^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `FloatType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_float64` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:464:22
    |
464 |     } else if schema.is_float64() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `DoubleType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:465:32
    |
465 |         Ok(Some(PrimitiveType::DoubleType))
    |                                ^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `DoubleType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `as_decimal_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:466:49
    |
466 |     } else if let Some(decimal_schema) = schema.as_decimal_schema() {
    |                                                 ^^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `DecimalType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:467:32
    |
467 |         Ok(Some(PrimitiveType::DecimalType(decimal_schema.precision, decimal_schema.scale)))
    |                                ^^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `DecimalType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_string` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:468:22
    |
468 |     } else if schema.is_string() || schema.is_large_string() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_large_string` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:468:44
    |
468 |     } else if schema.is_string() || schema.is_large_string() {
    |                                            ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `StringType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:32
    |
469 |         Ok(Some(PrimitiveType::StringType))
    |                                ^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `StringType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_date32` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:470:22
    |
470 |     } else if schema.is_date32() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `DateType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:32
    |
471 |         Ok(Some(PrimitiveType::DateType))
    |                                ^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `DateType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `as_time64_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:472:46
    |
472 |     } else if let Some(time_schema) = schema.as_time64_schema() {
    |                                              ^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `TimeType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:473:32
    |
473 |         Ok(Some(PrimitiveType::TimeType(time_schema.time_unit)))
    |                                ^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `TimeType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_timestamp` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:474:22
    |
474 |     } else if schema.is_timestamp() {
    |                      ^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `TimestampType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:475:32
    |
475 |         Ok(Some(PrimitiveType::TimestampType))
    |                                ^^^^^^^^^^^^^
    |                                |
    |                                variant or associated item not found in `PrimitiveType`
    |                                help: there is a variant with a similar name: `Timestamp`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `TimestampType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_binary` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:476:22
    |
476 |     } else if schema.is_binary() || schema.is_large_binary() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_large_binary` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:476:44
    |
476 |     } else if schema.is_binary() || schema.is_large_binary() {
    |                                            ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `BinaryType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:477:32
    |
477 |         Ok(Some(PrimitiveType::BinaryType))
    |                                ^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `BinaryType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `as_fixed_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:478:47
    |
478 |     } else if let Some(fixed_schema) = schema.as_fixed_schema() {
    |                                               ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `FixedType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:479:32
    |
479 |         Ok(Some(PrimitiveType::FixedType(fixed_schema.byte_width)))
    |                                ^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `FixedType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:481:35
    |
481 |         Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported type: {}", schema)))
    |                                   ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0277]: `apache_avro::Schema` doesn't implement `std::fmt::Display`
   --> crates/iceberg/src/avro/schema.rs:481:84
    |
481 |         Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported type: {}", schema)))
    |                                                                                    ^^^^^^ `apache_avro::Schema` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `apache_avro::Schema`, which is required by `&apache_avro::Schema: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 30 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 30 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0599]: no method named `is_boolean` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:451:15
    |
451 |     if schema.is_boolean() {
    |               ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `BooleanType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:452:32
    |
452 |         Ok(Some(PrimitiveType::BooleanType))
    |                                ^^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `BooleanType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_integer` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:453:22
    |
453 |     } else if schema.is_integer() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `bit_width` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:454:28
    |
454 |         let width = schema.bit_width().unwrap_or(0);
    |                            ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `IntegerType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:456:36
    |
456 |             Ok(Some(PrimitiveType::IntegerType))
    |                                    ^^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `IntegerType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `LongType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:458:36
    |
458 |             Ok(Some(PrimitiveType::LongType))
    |                                    ^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `LongType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:460:39
    |
460 |             Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported integer type: {}", schema)))
    |                                       ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0277]: `apache_avro::Schema` doesn't implement `std::fmt::Display`
   --> crates/iceberg/src/avro/schema.rs:460:96
    |
460 |             Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported integer type: {}", schema)))
    |                                                                                                ^^^^^^ `apache_avro::Schema` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `apache_avro::Schema`, which is required by `&apache_avro::Schema: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_float32` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:462:22
    |
462 |     } else if schema.is_float32() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `FloatType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:463:32
    |
463 |         Ok(Some(PrimitiveType::FloatType))
    |                                ^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `FloatType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_float64` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:464:22
    |
464 |     } else if schema.is_float64() {
    |                      ^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `DoubleType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:465:32
    |
465 |         Ok(Some(PrimitiveType::DoubleType))
    |                                ^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `DoubleType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `as_decimal_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:466:49
    |
466 |     } else if let Some(decimal_schema) = schema.as_decimal_schema() {
    |                                                 ^^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `DecimalType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:467:32
    |
467 |         Ok(Some(PrimitiveType::DecimalType(decimal_schema.precision, decimal_schema.scale)))
    |                                ^^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `DecimalType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_string` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:468:22
    |
468 |     } else if schema.is_string() || schema.is_large_string() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_large_string` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:468:44
    |
468 |     } else if schema.is_string() || schema.is_large_string() {
    |                                            ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `StringType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:469:32
    |
469 |         Ok(Some(PrimitiveType::StringType))
    |                                ^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `StringType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_date32` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:470:22
    |
470 |     } else if schema.is_date32() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `DateType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:471:32
    |
471 |         Ok(Some(PrimitiveType::DateType))
    |                                ^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `DateType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `as_time64_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:472:46
    |
472 |     } else if let Some(time_schema) = schema.as_time64_schema() {
    |                                              ^^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `TimeType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:473:32
    |
473 |         Ok(Some(PrimitiveType::TimeType(time_schema.time_unit)))
    |                                ^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `TimeType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_timestamp` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:474:22
    |
474 |     } else if schema.is_timestamp() {
    |                      ^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `TimestampType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:475:32
    |
475 |         Ok(Some(PrimitiveType::TimestampType))
    |                                ^^^^^^^^^^^^^
    |                                |
    |                                variant or associated item not found in `PrimitiveType`
    |                                help: there is a variant with a similar name: `Timestamp`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `TimestampType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `is_binary` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:476:22
    |
476 |     } else if schema.is_binary() || schema.is_large_binary() {
    |                      ^^^^^^^^^ method not found in `&Schema`

error[E0599]: no method named `is_large_binary` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:476:44
    |
476 |     } else if schema.is_binary() || schema.is_large_binary() {
    |                                            ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `BinaryType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:477:32
    |
477 |         Ok(Some(PrimitiveType::BinaryType))
    |                                ^^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `BinaryType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `as_fixed_schema` found for reference `&apache_avro::Schema` in the current scope
   --> crates/iceberg/src/avro/schema.rs:478:47
    |
478 |     } else if let Some(fixed_schema) = schema.as_fixed_schema() {
    |                                               ^^^^^^^^^^^^^^^ method not found in `&Schema`

error[E0599]: no variant or associated item named `FixedType` found for enum `datatypes::PrimitiveType` in the current scope
   --> crates/iceberg/src/avro/schema.rs:479:32
    |
479 |         Ok(Some(PrimitiveType::FixedType(fixed_schema.byte_width)))
    |                                ^^^^^^^^^ variant or associated item not found in `PrimitiveType`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:200:1
    |
200 | pub enum PrimitiveType {
    | ---------------------- variant or associated item `FixedType` not found for this enum
    |
note: if you're trying to build a new `datatypes::PrimitiveType`, consider using `datatypes::_::<impl datatypes::PrimitiveType>::deserialize` which returns `std::result::Result<datatypes::PrimitiveType, <__D as catalog::_::_serde::Deserializer<'de>>::Error>`
   --> crates/iceberg/src/spec/datatypes.rs:198:28
    |
198 | #[derive(Debug, Serialize, Deserialize, PartialEq, Eq, Clone, Hash)]
    |                            ^^^^^^^^^^^
    = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no variant or associated item named `UnsupportedType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/avro/schema.rs:481:35
    |
481 |         Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported type: {}", schema)))
    |                                   ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `UnsupportedType` not found for this enum

error[E0277]: `apache_avro::Schema` doesn't implement `std::fmt::Display`
   --> crates/iceberg/src/avro/schema.rs:481:84
    |
481 |         Err(Error::new(ErrorKind::UnsupportedType, format!("Unsupported type: {}", schema)))
    |                                                                                    ^^^^^^ `apache_avro::Schema` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `apache_avro::Schema`, which is required by `&apache_avro::Schema: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 30 previous errors

