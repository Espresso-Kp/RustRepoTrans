Fail
file path is :
projects/charset-normalizer/rust/src/entity.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0609]: no field `_languages` on type `&CharsetMatch`
   --> src/entity.rs:209:13
    |
209 |     if self._languages.is_empty() {
    |             ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `payload`, `encoding`, `mean_mess_ratio`, `coherence_matches`, `has_sig_or_bom` ... and 2 others

error[E0609]: no field `could_be_from_charset` on type `&CharsetMatch`
   --> src/entity.rs:212:17
    |
212 |         if self.could_be_from_charset.contains("ascii") {
    |                 ^^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `payload`, `encoding`, `mean_mess_ratio`, `coherence_matches`, `has_sig_or_bom` ... and 2 others

error[E0308]: mismatched types
   --> src/entity.rs:219:32
    |
219 |             encoding_languages(&self.encoding)
    |             ------------------ ^^^^^^^^^^^^^^ expected `String`, found `&String`
    |             |
    |             arguments to this function are incorrect
    |
note: function defined here
   --> src/cd.rs:71:15
    |
71  | pub(crate) fn encoding_languages(iana_name: String) -> Vec<&'static Language> {
    |               ^^^^^^^^^^^^^^^^^^ -----------------
help: consider removing the borrow
    |
219 -             encoding_languages(&self.encoding)
219 +             encoding_languages(self.encoding)
    |

error[E0308]: mismatched types
    --> src/entity.rs:222:55
     |
222  |         if languages.is_empty() || languages.contains(&"Latin Based") {
     |                                              -------- ^^^^^^^^^^^^^^ expected `&&Language`, found `&&str`
     |                                              |
     |                                              arguments to this method are incorrect
     |
     = note: expected reference `&&Language`
                found reference `&&'static str`
note: method defined here
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs:2250:12
     |
2250 |     pub fn contains(&self, x: &T) -> bool
     |            ^^^^^^^^

error[E0308]: mismatched types
   --> src/entity.rs:226:9
    |
208 | pub fn most_probably_language(&self) -> &'static str {
    |                                         ------------ expected `&'static str` because of return type
...
226 |         languages[0].clone()
    |         ^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&Language`
    |
    = note: expected reference `&'static str`
               found reference `&Language`

error[E0609]: no field `_languages` on type `&CharsetMatch`
   --> src/entity.rs:228:14
    |
228 |         self._languages[0][0].clone()
    |              ^^^^^^^^^^ unknown field
    |
    = note: available fields are: `payload`, `encoding`, `mean_mess_ratio`, `coherence_matches`, `has_sig_or_bom` ... and 2 others

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `charset-normalizer-rs` (lib) due to 6 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: can't compare `str` with `Language`
   --> src/tests/entity.rs:107:5
    |
107 |     assert_eq!(c_matches[0].most_probably_language(), &Language::Russian);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `str == Language`
    |
    = help: the trait `PartialEq<Language>` is not implemented for `str`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <&'a str as PartialEq<OsString>>
              <&'a str as PartialEq<std::string::String>>
              <&'b str as PartialEq<Cow<'a, str>>>
              <&str as PartialEq<Id>>
              <&str as PartialEq<clap::builder::OsStr>>
              <&str as PartialEq<clap::builder::Str>>
              <str as PartialEq<Cow<'a, str>>>
              <str as PartialEq<Id>>
            and 6 others
    = note: required for `&str` to implement `PartialEq<&Language>`
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `charset-normalizer-rs` (lib test) due to 7 previous errors

