Fail
file path is :
projects/incubator-milagro-crypto/rust/src/rsa.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0435]: attempt to use a non-constant value in a constant
   --> src/./rsa.rs:290:26
    |
282 |     let hlen = sha;
    |     -------- help: consider using `const` instead of `let`: `const hlen`
...
290 |     let mut SEED = [0u8; hlen];
    |                          ^^^^ non-constant value

error[E0435]: attempt to use a non-constant value in a constant
   --> src/./rsa.rs:291:28
    |
280 |     let olen = RFS - 1;
    |     -------- help: consider using `const` instead of `let`: `const olen`
...
291 |     let mut DBMASK = [0u8; olen - seedlen];
    |                            ^^^^ non-constant value

error[E0435]: attempt to use a non-constant value in a constant
   --> src/./rsa.rs:291:35
    |
283 |     let seedlen = hlen;
    |     ----------- help: consider using `const` instead of `let`: `const seedlen`
...
291 |     let mut DBMASK = [0u8; olen - seedlen];
    |                                   ^^^^^^^ non-constant value

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
   --> src/./rsa.rs:293:13
    |
293 |     let h = hashit(sha, p.unwrap_or(&[]), -1);
    |             ^^^^^^--------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./rsa.rs:293:25
    |
293 |     let h = hashit(sha, p.unwrap_or(&[]), -1);
    |                         ^^^^^^^^^^^^^^^^
    = note:   expected enum `std::option::Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./rsa.rs:66:4
    |
66  | fn hashit(sha: usize, a: Option<&[u8]>, n: isize, w: &mut [u8]) {
    |    ^^^^^^ ----------  ----------------  --------  ------------
help: try wrapping the expression in `Some`
    |
293 |     let h = hashit(sha, Some(p.unwrap_or(&[])), -1);
    |                         +++++                +
help: provide the argument
    |
293 |     let h = hashit(sha, /* std::option::Option<&[u8]> */, -1, /* &mut [u8] */);
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `()`
   --> src/./rsa.rs:295:16
    |
295 |         f[i] = h[i];
    |                ^^-^
    |                  |
    |                  cannot access tuple elements at a variable index
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0599]: no method named `get_byte` found for mutable reference `&mut rand::RAND` in the current scope
   --> src/./rsa.rs:308:23
    |
308 |         SEED[i] = rng.get_byte();
    |                       ^^^^^^^^ help: there is a method with a similar name: `getbyte`

error[E0425]: cannot find function, tuple struct or tuple variant `MGF1` in this scope
   --> src/./rsa.rs:310:5
    |
179 | pub fn mgf1(sha: usize, z: &[u8], olen: usize, k: &mut [u8]) {
    | ------------------------------------------------------------ similarly named function `mgf1` defined here
...
310 |     MGF1(sha, &SEED, olen - seedlen, &mut DBMASK);
    |     ^^^^ help: a function with a similar name exists: `mgf1`

error[E0425]: cannot find function, tuple struct or tuple variant `MGF1` in this scope
   --> src/./rsa.rs:315:5
    |
179 | pub fn mgf1(sha: usize, z: &[u8], olen: usize, k: &mut [u8]) {
    | ------------------------------------------------------------ similarly named function `mgf1` defined here
...
315 |     MGF1(sha, &DBMASK, seedlen, &mut f);
    |     ^^^^ help: a function with a similar name exists: `mgf1`

error[E0061]: this function takes 4 arguments but 3 arguments were supplied
   --> src/./rsa.rs:293:13
    |
293 |     let h = hashit(sha, p.unwrap_or(&[]), -1);
    |             ^^^^^^--------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./rsa.rs:293:25
    |
293 |     let h = hashit(sha, p.unwrap_or(&[]), -1);
    |                         ^^^^^^^^^^^^^^^^
    = note:   expected enum `Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./rsa.rs:66:4
    |
66  | fn hashit(sha: usize, a: Option<&[u8]>, n: isize, w: &mut [u8]) {
    |    ^^^^^^ ----------  ----------------  --------  ------------
help: try wrapping the expression in `Some`
    |
293 |     let h = hashit(sha, Some(p.unwrap_or(&[])), -1);
    |                         +++++                +
help: provide the argument
    |
293 |     let h = hashit(sha, /* Option<&[u8]> */, -1, /* &mut [u8] */);
    |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `get_byte` found for mutable reference `&mut RAND` in the current scope
   --> src/./rsa.rs:308:23
    |
308 |         SEED[i] = rng.get_byte();
    |                       ^^^^^^^^ help: there is a method with a similar name: `getbyte`

Some errors have detailed explanations: E0061, E0425, E0435, E0599, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib test) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib) due to 8 previous errors

