Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin256.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `EFS` in module `rom`
   --> src/./mpin256.rs:577:60
    |
577 |     let mut p = ECP::mapit(&hashit(sha, 0, client_id, rom::EFS));
    |                                                            ^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::anssi::ecdh::EFS;
    |
20  + use crate::bls24::mpin192::EFS;
    |
20  + use crate::bls381::mpin::EFS;
    |
20  + use crate::bls383::mpin::EFS;
    |
      and 23 other candidates
help: if you import `EFS`, refer to it directly
    |
577 -     let mut p = ECP::mapit(&hashit(sha, 0, client_id, rom::EFS));
577 +     let mut p = ECP::mapit(&hashit(sha, 0, client_id, EFS));
    |

error[E0425]: cannot find value `MAXPIN` in module `rom`
   --> src/./mpin256.rs:582:17
    |
582 |     pin %= rom::MAXPIN;
    |                 ^^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls24::mpin192::MAXPIN;
    |
20  + use crate::bls381::mpin::MAXPIN;
    |
20  + use crate::bls383::mpin::MAXPIN;
    |
20  + use crate::bls461::mpin::MAXPIN;
    |
      and 4 other candidates
help: if you import `MAXPIN`, refer to it directly
    |
582 -     pin %= rom::MAXPIN;
582 +     pin %= MAXPIN;
    |

error[E0425]: cannot find value `PBLEN` in module `rom`
   --> src/./mpin256.rs:583:36
    |
583 |     let mut w = p.pinmul(pin, rom::PBLEN);
    |                                    ^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls24::mpin192::PBLEN;
    |
20  + use crate::bls381::mpin::PBLEN;
    |
20  + use crate::bls383::mpin::PBLEN;
    |
20  + use crate::bls461::mpin::PBLEN;
    |
      and 4 other candidates
help: if you import `PBLEN`, refer to it directly
    |
583 -     let mut w = p.pinmul(pin, rom::PBLEN);
583 +     let mut w = p.pinmul(pin, PBLEN);
    |

error[E0425]: cannot find value `EFS` in module `rom`
   --> src/./mpin256.rs:591:71
    |
591 |         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
    |                                                                       ^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::anssi::ecdh::EFS;
    |
20  + use crate::bls24::mpin192::EFS;
    |
20  + use crate::bls381::mpin::EFS;
    |
20  + use crate::bls383::mpin::EFS;
    |
      and 23 other candidates
help: if you import `EFS`, refer to it directly
    |
591 -         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
591 +         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, EFS), rom::EFS);
    |

error[E0425]: cannot find value `EFS` in module `rom`
   --> src/./mpin256.rs:591:82
    |
591 |         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
    |                                                                                  ^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::anssi::ecdh::EFS;
    |
20  + use crate::bls24::mpin192::EFS;
    |
20  + use crate::bls381::mpin::EFS;
    |
20  + use crate::bls383::mpin::EFS;
    |
      and 23 other candidates
help: if you import `EFS`, refer to it directly
    |
591 -         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
591 +         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), EFS);
    |

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair256`
   --> src/./mpin256.rs:594:26
    |
594 |             p = pair256::G1mul(p, &x);
    |                          ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair256.rs:546:1
    |
546 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair256`
   --> src/./mpin256.rs:596:30
    |
596 |             let w = pair256::G1mul(w, &x);
    |                              ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair256.rs:546:1
    |
546 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair256`
   --> src/./mpin256.rs:600:26
    |
600 |             p = pair256::G1mul(p, &x);
    |                          ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair256.rs:546:1
    |
546 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair256`
   --> src/./mpin256.rs:607:26
    |
607 |             p = pair256::G1mul(p, &x);
    |                          ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair256.rs:546:1
    |
546 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin256.rs:568:17
    |
568 |     let mut r = Big::new(rom::CURVE_ORDER);
    |                 ^^^^^^^^ ----------------
    |                          |
    |                          unexpected argument of type `[i64; 10]`
    |                          help: remove the extra argument
    |
note: associated function defined here
   --> src/./big.rs:87:12
    |
87  |     pub fn new() -> Big {
    |            ^^^

error[E0061]: this function takes 1 argument but 0 arguments were supplied
   --> src/./mpin256.rs:569:17
    |
569 |     let mut x = Big::zero();
    |                 ^^^^^^^^^-- an argument of type `&mut bls48::big::Big` is missing
    |
note: method defined here
   --> src/./big.rs:161:12
    |
161 |     pub fn zero(&mut self) {
    |            ^^^^ ---------
help: provide the argument
    |
569 |     let mut x = Big::zero(/* &mut bls48::big::Big */);
    |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> src/./mpin256.rs:571:13
    |
571 |         x = Big::random(r, rng);
    |             ^^^^^^^^^^^ ---
    |                         |
    |                         unexpected argument of type `bls48::big::Big`
    |                         help: remove the extra argument
    |
note: associated function defined here
   --> src/./big.rs:798:12
    |
798 |     pub fn random(rng: &mut RAND) -> Big {
    |            ^^^^^^ --------------

error[E0308]: mismatched types
   --> src/./mpin256.rs:571:13
    |
569 |     let mut x = Big::zero();
    |                 ----------- expected due to this value
570 |     if let Some(rng) = rng {
571 |         x = Big::random(r, rng);
    |             ^^^^^^^^^^^^^^^^^^^ expected `()`, found `Big`

error[E0599]: no method named `to_bytes` found for unit type `()` in the current scope
   --> src/./mpin256.rs:573:11
    |
573 |         x.to_bytes(x);
    |           ^^^^^^^^ method not found in `()`

error[E0308]: mismatched types
   --> src/./mpin256.rs:575:29
    |
575 |         x = Big::from_bytes(x);
    |             --------------- ^ expected `&[u8]`, found `()`
    |             |
    |             arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:519:12
    |
519 |     pub fn from_bytes(b: &[u8]) -> Big {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin256.rs:575:13
    |
569 |     let mut x = Big::zero();
    |                 ----------- expected due to this value
...
575 |         x = Big::from_bytes(x);
    |             ^^^^^^^^^^^^^^^^^^ expected `()`, found `Big`

error[E0308]: mismatched types
    --> src/./mpin256.rs:577:28
     |
577  |     let mut p = ECP::mapit(&hashit(sha, 0, client_id, rom::EFS));
     |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
    --> src/./mpin256.rs:583:26
     |
583  |     let mut w = p.pinmul(pin, rom::PBLEN);
     |                   ------ ^^^ expected `i32`, found `usize`
     |                   |
     |                   arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
583  |     let mut w = p.pinmul(pin.try_into().unwrap(), rom::PBLEN);
     |                             ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin256.rs:591:39
    |
591 |         let mut h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
    |                     ------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&bool`
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                       ---------

error[E0308]: mismatched types
    --> src/./mpin256.rs:592:28
     |
592  |         let w = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

Some errors have detailed explanations: E0061, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 20 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 20 previous errors

