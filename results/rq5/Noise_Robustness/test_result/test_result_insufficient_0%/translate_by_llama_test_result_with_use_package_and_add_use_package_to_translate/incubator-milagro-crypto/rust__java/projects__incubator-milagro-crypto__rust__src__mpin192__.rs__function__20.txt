Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `EFS` in module `rom`
   --> src/./mpin192.rs:545:56
    |
545 |     let p = ECP::mapit(&hashit(sha, 0, client_id, rom::EFS));
    |                                                        ^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::anssi::ecdh::EFS;
    |
20  + use crate::bls381::mpin::EFS;
    |
20  + use crate::bls383::mpin::EFS;
    |
20  + use crate::bls461::mpin::EFS;
    |
      and 23 other candidates
help: if you import `EFS`, refer to it directly
    |
545 -     let p = ECP::mapit(&hashit(sha, 0, client_id, rom::EFS));
545 +     let p = ECP::mapit(&hashit(sha, 0, client_id, EFS));
    |

error[E0425]: cannot find value `MAXPIN` in module `rom`
   --> src/./mpin192.rs:551:17
    |
551 |     pin %= rom::MAXPIN;
    |                 ^^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls381::mpin::MAXPIN;
    |
20  + use crate::bls383::mpin::MAXPIN;
    |
20  + use crate::bls461::mpin::MAXPIN;
    |
20  + use crate::bls48::mpin256::MAXPIN;
    |
      and 4 other candidates
help: if you import `MAXPIN`, refer to it directly
    |
551 -     pin %= rom::MAXPIN;
551 +     pin %= MAXPIN;
    |

error[E0425]: cannot find value `PBLEN` in module `rom`
   --> src/./mpin192.rs:552:32
    |
552 |     let w = p.pinmul(pin, rom::PBLEN);
    |                                ^^^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::bls381::mpin::PBLEN;
    |
20  + use crate::bls383::mpin::PBLEN;
    |
20  + use crate::bls461::mpin::PBLEN;
    |
20  + use crate::bls48::mpin256::PBLEN;
    |
      and 4 other candidates
help: if you import `PBLEN`, refer to it directly
    |
552 -     let w = p.pinmul(pin, rom::PBLEN);
552 +     let w = p.pinmul(pin, PBLEN);
    |

error[E0425]: cannot find value `EFS` in module `rom`
   --> src/./mpin192.rs:560:67
    |
560 |         let h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
    |                                                                   ^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::anssi::ecdh::EFS;
    |
20  + use crate::bls381::mpin::EFS;
    |
20  + use crate::bls383::mpin::EFS;
    |
20  + use crate::bls461::mpin::EFS;
    |
      and 23 other candidates
help: if you import `EFS`, refer to it directly
    |
560 -         let h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
560 +         let h = hashit(sha, date, &hashit(sha, 0, client_id, EFS), rom::EFS);
    |

error[E0425]: cannot find value `EFS` in module `rom`
   --> src/./mpin192.rs:560:78
    |
560 |         let h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
    |                                                                              ^^^ not found in `rom`
    |
help: consider importing one of these items
    |
20  + use crate::anssi::ecdh::EFS;
    |
20  + use crate::bls381::mpin::EFS;
    |
20  + use crate::bls383::mpin::EFS;
    |
20  + use crate::bls461::mpin::EFS;
    |
      and 23 other candidates
help: if you import `EFS`, refer to it directly
    |
560 -         let h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
560 +         let h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), EFS);
    |

error[E0425]: cannot find function, tuple struct or tuple variant `G1_mul` in module `pair192`
   --> src/./mpin192.rs:563:30
    |
563 |             let p = pair192::G1_mul(p, &x);
    |                              ^^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1_mul` in module `pair192`
   --> src/./mpin192.rs:565:30
    |
565 |             let w = pair192::G1_mul(w, &x);
    |                              ^^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1_mul` in module `pair192`
   --> src/./mpin192.rs:569:30
    |
569 |             let p = pair192::G1_mul(p, &x);
    |                              ^^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1_mul` in module `pair192`
   --> src/./mpin192.rs:576:30
    |
576 |             let p = pair192::G1_mul(p, &x);
    |                              ^^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin192.rs:534:13
    |
534 |     let r = Big::new(rom::CURVE_ORDER);
    |             ^^^^^^^^ ----------------
    |                      |
    |                      unexpected argument of type `[i64; 9]`
    |                      help: remove the extra argument
    |
note: associated function defined here
   --> src/./big.rs:87:12
    |
87  |     pub fn new() -> Big {
    |            ^^^

error[E0599]: no function or associated item named `random_num` found for struct `bls24::big::Big` in the current scope
   --> src/./mpin192.rs:536:14
    |
536 |         Big::random_num(r, rng)
    |              ^^^^^^^^^^
    |              |
    |              function or associated item not found in `Big`
    |              help: there is an associated function with a similar name: `randomnum`
    |
   ::: src/./big.rs:39:1
    |
39  | pub struct Big {
    | -------------- function or associated item `random_num` not found for this struct

error[E0308]: mismatched types
    --> src/./mpin192.rs:545:24
     |
545  |     let p = ECP::mapit(&hashit(sha, 0, client_id, rom::EFS));
     |             ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |             |
     |             arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
    --> src/./mpin192.rs:552:22
     |
552  |     let w = p.pinmul(pin, rom::PBLEN);
     |               ------ ^^^ expected `i32`, found `usize`
     |               |
     |               arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
552  |     let w = p.pinmul(pin.try_into().unwrap(), rom::PBLEN);
     |                         ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin192.rs:553:11
    |
553 |     t.add(w);
    |       --- ^
    |       |   |
    |       |   expected `&ECP`, found `ECP`
    |       |   help: consider borrowing here: `&w`
    |       arguments to this method are incorrect
    |
note: method defined here
   --> src/./ecp.rs:743:12
    |
743 |     pub fn add(&mut self, Q: &ECP) {
    |            ^^^            -------

error[E0308]: mismatched types
   --> src/./mpin192.rs:559:15
    |
559 |         t.add(w);
    |           --- ^
    |           |   |
    |           |   expected `&ECP`, found `ECP`
    |           |   help: consider borrowing here: `&w`
    |           arguments to this method are incorrect
    |
note: method defined here
   --> src/./ecp.rs:743:12
    |
743 |     pub fn add(&mut self, Q: &ECP) {
    |            ^^^            -------

error[E0308]: mismatched types
   --> src/./mpin192.rs:560:35
    |
560 |         let h = hashit(sha, date, &hashit(sha, 0, client_id, rom::EFS), rom::EFS);
    |                 ------            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
    |                 |
    |                 arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
               found reference `&bool`
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                       ---------

error[E0308]: mismatched types
    --> src/./mpin192.rs:561:28
     |
561  |         let w = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:568:19
    |
568 |             p.add(w); // p.affine();
    |               --- ^
    |               |   |
    |               |   expected `&ECP`, found `ECP`
    |               |   help: consider borrowing here: `&w`
    |               arguments to this method are incorrect
    |
note: method defined here
   --> src/./ecp.rs:743:12
    |
743 |     pub fn add(&mut self, Q: &ECP) {
    |            ^^^            -------

Some errors have detailed explanations: E0061, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 18 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 18 previous errors

