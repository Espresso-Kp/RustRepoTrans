Fail
file path is :
projects/incubator-milagro-crypto/rust/src/ecdh.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0435]: attempt to use a non-constant value in a constant
   --> src/./ecdh.rs:157:23
    |
155 | pub fn kdf2(sha: usize, z: &[u8], p: Option<&[u8]>, olen: usize, k: &mut [u8]) {
    |                                                     ---- this would need to be a `const`
156 |     let hlen = sha;
157 |     let mut K = [0u8; olen];
    |                       ^^^^

error[E0061]: this function takes 6 arguments but 5 arguments were supplied
   --> src/./ecdh.rs:166:17
    |
166 |         let B = hashit(sha, z, counter, p.unwrap_or(&[]), 0);
    |                 ^^^^^^-------------------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./ecdh.rs:166:41
    |
166 |         let B = hashit(sha, z, counter, p.unwrap_or(&[]), 0);
    |                                         ^^^^^^^^^^^^^^^^
    = note:   expected enum `Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./ecdh.rs:55:4
    |
55  | fn hashit(sha: usize, a: &[u8], n: usize, b: Option<&[u8]>, pad: usize, w: &mut [u8]) {
    |    ^^^^^^ ----------  --------  --------  ----------------  ----------  ------------
help: try wrapping the expression in `Some`
    |
166 |         let B = hashit(sha, z, counter, Some(p.unwrap_or(&[])), 0);
    |                                         +++++                +
help: provide the argument
    |
166 |         let B = hashit(sha, z, counter, /* Option<&[u8]> */, 0, /* &mut [u8] */);
    |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0608]: cannot index into a value of type `()`
   --> src/./ecdh.rs:168:50
    |
168 |         K[counter * hlen - 1..].copy_from_slice(&B[..len]);
    |                                                  ^^^^^^^^
    |
    = help: to access tuple elements, use tuple indexing syntax (e.g., `tuple.0`)

error[E0061]: this function takes 6 arguments but 5 arguments were supplied
   --> src/./ecdh.rs:166:17
    |
166 |         let B = hashit(sha, z, counter, p.unwrap_or(&[]), 0);
    |                 ^^^^^^-------------------------------------- an argument of type `&mut [u8]` is missing
    |
note: expected `Option<&[u8]>`, found `&[u8]`
   --> src/./ecdh.rs:166:41
    |
166 |         let B = hashit(sha, z, counter, p.unwrap_or(&[]), 0);
    |                                         ^^^^^^^^^^^^^^^^
    = note:   expected enum `std::option::Option<&[u8]>`
            found reference `&[u8]`
note: function defined here
   --> src/./ecdh.rs:55:4
    |
55  | fn hashit(sha: usize, a: &[u8], n: usize, b: Option<&[u8]>, pad: usize, w: &mut [u8]) {
    |    ^^^^^^ ----------  --------  --------  ----------------  ----------  ------------
help: try wrapping the expression in `Some`
    |
166 |         let B = hashit(sha, z, counter, Some(p.unwrap_or(&[])), 0);
    |                                         +++++                +
help: provide the argument
    |
166 |         let B = hashit(sha, z, counter, /* std::option::Option<&[u8]> */, 0, /* &mut [u8] */);
    |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0061, E0435, E0608.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 3 previous errors

