Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `Modulus` in module `rom`
   --> src/./mpin192.rs:670:27
    |
670 |       let q = Big::new(rom::Modulus);
    |                             ^^^^^^^ help: a constant with a similar name exists: `MODULUS`
    |
   ::: src/./roms/rom_bls24_64.rs:27:1
    |
27  | / pub const MODULUS: [Chunk; NLEN] = [
28  | |     0x44C1674A06152B,
29  | |     0xFFE2E82D30DAF8,
30  | |     0x6F1C5CBDB6A642,
...   |
36  | |     0x555C0078,
37  | | ];
    | |__- similarly named constant `MODULUS` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair192`
   --> src/./mpin192.rs:707:18
    |
707 |     p = pair192::G1mul(p.unwrap(), y);
    |                  ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0425]: cannot find function, tuple struct or tuple variant `G1mul` in module `pair192`
   --> src/./mpin192.rs:733:30
    |
733 |                 p = pair192::G1mul(p.unwrap(), y);
    |                              ^^^^^ help: a function with a similar name exists: `g1mul`
    |
   ::: src/./pair192.rs:464:1
    |
464 | pub fn g1mul(P: &ECP, e: &mut Big) -> ECP {
    | ----------------------------------------- similarly named function `g1mul` defined here

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin192.rs:670:13
    |
670 |     let q = Big::new(rom::Modulus);
    |             ^^^^^^^^ ------------
    |                      |
    |                      unexpected argument
    |                      help: remove the extra argument
    |
note: associated function defined here
   --> src/./big.rs:87:12
    |
87  |     pub fn new() -> Big {
    |            ^^^

error[E0308]: mismatched types
   --> src/./mpin192.rs:682:34
    |
682 |         r = Some(ECP::from_bytes(xcid));
    |                  --------------- ^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                  |
    |                  arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0599]: no method named `is_none` found for reference `&[u8]` in the current scope
   --> src/./mpin192.rs:698:16
    |
698 |         if hid.is_none() {
    |                ^^^^^^^ method not found in `&[u8]`

error[E0599]: no method named `unwrap` found for reference `&[u8]` in the current scope
   --> src/./mpin192.rs:701:38
    |
701 |         p = Some(ECP::from_bytes(hid.unwrap()));
    |                                      ^^^^^^ help: there is a method with a similar name: `swap`

error[E0308]: mismatched types
   --> src/./mpin192.rs:708:24
    |
708 |     p = p.unwrap().add(r.unwrap());
    |                    --- ^^^^^^^^^^
    |                    |   |
    |                    |   expected `&ECP`, found `ECP`
    |                    |   help: consider borrowing here: `&r.unwrap()`
    |                    arguments to this method are incorrect
    |
note: method defined here
   --> src/./ecp.rs:743:12
    |
743 |     pub fn add(&mut self, Q: &ECP) {
    |            ^^^            -------

error[E0308]: mismatched types
   --> src/./mpin192.rs:708:9
    |
694 |     let mut p: Option<ECP> = None;
    |                ----------- expected due to this type
...
708 |     p = p.unwrap().add(r.unwrap());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<ECP>`, found `()`
    |
    = note:   expected enum `Option<bls24::ecp::ECP>`
            found unit type `()`
note: method `add` modifies its receiver in-place, it is not meant to be used in method chains.
   --> src/./mpin192.rs:708:20
    |
708 |     p = p.unwrap().add(r.unwrap());
    |                    ^^^ this call modifies its receiver in-place

error[E0308]: arguments to this function are incorrect
   --> src/./mpin192.rs:717:9
    |
717 |     g = pair192::ate2(q, r, s_q, p);
    |         ^^^^^^^^^^^^^ -  -  --- expected `&ECP4`, found `ECP`
    |                       |  |
    |                       |  expected `&ECP`, found `ECP`
    |                       expected `&ECP4`, found `ECP4`
    |
note: expected `&ECP`, found `Option<ECP>`
   --> src/./mpin192.rs:717:34
    |
717 |     g = pair192::ate2(q, r, s_q, p);
    |                                  ^
    = note: expected reference `&bls24::ecp::ECP`
                    found enum `Option<bls24::ecp::ECP>`
note: function defined here
   --> src/./pair192.rs:254:8
    |
254 | pub fn ate2(P1: &ECP4, Q1: &ECP, R1: &ECP4, S1: &ECP) -> FP24 {
    |        ^^^^ ---------  --------  ---------  --------
help: consider borrowing here
    |
717 |     g = pair192::ate2(&q, r, s_q, p);
    |                       ~~
help: consider borrowing here
    |
717 |     g = pair192::ate2(q, &r, s_q, p);
    |                          ~~

error[E0308]: mismatched types
   --> src/./mpin192.rs:718:23
    |
718 |     g = pair192::fexp(g);
    |         ------------- ^
    |         |             |
    |         |             expected `&FP24`, found `FP24`
    |         |             help: consider borrowing here: `&g`
    |         arguments to this function are incorrect
    |
note: function defined here
   --> src/./pair192.rs:314:8
    |
314 | pub fn fexp(m: &FP24) -> FP24 {
    |        ^^^^ --------

error[E0599]: no method named `isunity` found for struct `FP24` in the current scope
   --> src/./mpin192.rs:720:10
    |
720 |     if!g.isunity() {
    |          ^^^^^^^ help: there is a method with a similar name: `is_unity`
    |
   ::: src/./fp24.rs:36:1
    |
36  | pub struct FP24 {
    | --------------- method `isunity` not found for this struct

error[E0599]: no method named `is_some` found for reference `&[u8]` in the current scope
   --> src/./mpin192.rs:721:16
    |
721 |         if hid.is_some() && xid.is_some() && e.is_some() && f.is_some() {
    |                ^^^^^^^ method not found in `&[u8]`

error[E0599]: no method named `unwrap` found for reference `&[u8]` in the current scope
   --> src/./mpin192.rs:724:46
    |
724 |                 p = Some(ECP::from_bytes(hid.unwrap()));
    |                                              ^^^^^^ help: there is a method with a similar name: `swap`

error[E0308]: mismatched types
   --> src/./mpin192.rs:728:21
    |
710 |     let r = ECP::from_bytes(msec);
    |             --------------------- expected due to this value
...
728 |                 r = Some(ECP::from_bytes(xid.unwrap()));
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ECP`, found `Option<ECP>`
    |
    = note: expected struct `bls24::ecp::ECP`
                 found enum `Option<bls24::ecp::ECP>`

error[E0599]: no method named `is_none` found for struct `bls24::ecp::ECP` in the current scope
   --> src/./mpin192.rs:729:22
    |
729 |                 if r.is_none() || r.unwrap().is_infinity() {
    |                      ^^^^^^^ method not found in `ECP`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- method `is_none` not found for this struct

error[E0599]: no method named `unwrap` found for struct `bls24::ecp::ECP` in the current scope
   --> src/./mpin192.rs:729:37
    |
729 |                 if r.is_none() || r.unwrap().is_infinity() {
    |                                     ^^^^^^ method not found in `ECP`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- method `unwrap` not found for this struct

error[E0599]: no method named `unwrap` found for struct `bls24::ecp::ECP` in the current scope
   --> src/./mpin192.rs:734:38
    |
734 |                 p = p.unwrap().add(r.unwrap());
    |                                      ^^^^^^ method not found in `ECP`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- method `unwrap` not found for this struct

error[E0308]: mismatched types
   --> src/./mpin192.rs:734:21
    |
694 |     let mut p: Option<ECP> = None;
    |                ----------- expected due to this type
...
734 |                 p = p.unwrap().add(r.unwrap());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<ECP>`, found `()`
    |
    = note:   expected enum `Option<bls24::ecp::ECP>`
            found unit type `()`
note: method `add` modifies its receiver in-place, it is not meant to be used in method chains.
   --> src/./mpin192.rs:734:32
    |
734 |                 p = p.unwrap().add(r.unwrap());
    |                                ^^^ this call modifies its receiver in-place

error[E0308]: arguments to this function are incorrect
   --> src/./mpin192.rs:736:17
    |
736 |             g = pair192::ate(q, p.unwrap());
    |                 ^^^^^^^^^^^^ -  ---------- expected `&ECP`, found `ECP`
    |                              |
    |                              expected `&ECP4`, found `ECP4`
    |
note: function defined here
   --> src/./pair192.rs:208:8
    |
208 | pub fn ate(P1: &ECP4, Q1: &ECP) -> FP24 {
    |        ^^^ ---------  --------
help: consider borrowing here
    |
736 |             g = pair192::ate(&q, p.unwrap());
    |                              ~~
help: consider borrowing here
    |
736 |             g = pair192::ate(q, &p.unwrap());
    |                                 ~~~~~~~~~~~

error[E0308]: mismatched types
   --> src/./mpin192.rs:737:31
    |
737 |             g = pair192::fexp(g);
    |                 ------------- ^
    |                 |             |
    |                 |             expected `&FP24`, found `FP24`
    |                 |             help: consider borrowing here: `&g`
    |                 arguments to this function are incorrect
    |
note: function defined here
   --> src/./pair192.rs:314:8
    |
314 | pub fn fexp(m: &FP24) -> FP24 {
    |        ^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:682:34
    |
682 |         r = Some(ECP::from_bytes(xcid));
    |                  --------------- ^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                  |
    |                  arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:708:9
    |
694 |     let mut p: Option<ECP> = None;
    |                ----------- expected due to this type
...
708 |     p = p.unwrap().add(r.unwrap());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<ECP>`, found `()`
    |
    = note:   expected enum `std::option::Option<bls24::ecp::ECP>`
            found unit type `()`
note: method `add` modifies its receiver in-place, it is not meant to be used in method chains.
   --> src/./mpin192.rs:708:20
    |
708 |     p = p.unwrap().add(r.unwrap());
    |                    ^^^ this call modifies its receiver in-place

error[E0308]: arguments to this function are incorrect
   --> src/./mpin192.rs:717:9
    |
717 |     g = pair192::ate2(q, r, s_q, p);
    |         ^^^^^^^^^^^^^ -  -  --- expected `&ECP4`, found `ECP`
    |                       |  |
    |                       |  expected `&ECP`, found `ECP`
    |                       expected `&ECP4`, found `ECP4`
    |
note: expected `&ECP`, found `Option<ECP>`
   --> src/./mpin192.rs:717:34
    |
717 |     g = pair192::ate2(q, r, s_q, p);
    |                                  ^
    = note: expected reference `&bls24::ecp::ECP`
                    found enum `std::option::Option<bls24::ecp::ECP>`
note: function defined here
   --> src/./pair192.rs:254:8
    |
254 | pub fn ate2(P1: &ECP4, Q1: &ECP, R1: &ECP4, S1: &ECP) -> FP24 {
    |        ^^^^ ---------  --------  ---------  --------
help: consider borrowing here
    |
717 |     g = pair192::ate2(&q, r, s_q, p);
    |                       ~~
help: consider borrowing here
    |
717 |     g = pair192::ate2(q, &r, s_q, p);
    |                          ~~

error[E0308]: mismatched types
   --> src/./mpin192.rs:728:21
    |
710 |     let r = ECP::from_bytes(msec);
    |             --------------------- expected due to this value
...
728 |                 r = Some(ECP::from_bytes(xid.unwrap()));
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ECP`, found `Option<ECP>`
    |
    = note: expected struct `bls24::ecp::ECP`
                 found enum `std::option::Option<bls24::ecp::ECP>`

error[E0308]: mismatched types
   --> src/./mpin192.rs:734:21
    |
694 |     let mut p: Option<ECP> = None;
    |                ----------- expected due to this type
...
734 |                 p = p.unwrap().add(r.unwrap());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<ECP>`, found `()`
    |
    = note:   expected enum `std::option::Option<bls24::ecp::ECP>`
            found unit type `()`
note: method `add` modifies its receiver in-place, it is not meant to be used in method chains.
   --> src/./mpin192.rs:734:32
    |
734 |                 p = p.unwrap().add(r.unwrap());
    |                                ^^^ this call modifies its receiver in-place

Some errors have detailed explanations: E0061, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 21 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 21 previous errors

