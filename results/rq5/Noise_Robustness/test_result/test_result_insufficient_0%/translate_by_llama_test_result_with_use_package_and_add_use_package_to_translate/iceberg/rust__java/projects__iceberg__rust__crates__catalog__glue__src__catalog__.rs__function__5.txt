Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:169:9
    |
169 |         LOG.info("Created namespace: {}", namespace);
    |         ^^^ not found in this scope

warning: unused import: `aws_sdk_glue::types::DatabaseInput`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use aws_sdk_glue::types::DatabaseInput;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:155:26
    |
155 |         let catalog_id = with_catalog_id(self)?;
    |                          ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
155 |         let catalog_id = with_catalog_id!(self)?;
    |                                         +

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:156:24
    |
156 |         let metadata = convert_to_namespace(namespace, properties)?;
    |                        ^^^^^^^^^^^^^^^^^^^^ ---------  ---------- unexpected argument of type `std::collections::HashMap<std::string::String, std::string::String>`
    |                                             |
    |                                             expected `&Database`, found `&NamespaceIdent`
    |
    = note: expected reference `&aws_sdk_glue::types::Database`
               found reference `&'life1 iceberg::NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------
help: remove the extra argument
    |
156 -         let metadata = convert_to_namespace(namespace, properties)?;
156 +         let metadata = convert_to_namespace(/* &aws_sdk_glue::types::Database */)?;
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:156:24
    |
156 |         let metadata = convert_to_namespace(namespace, properties)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

error[E0599]: no method named `glue_catalog_skip_name_validation` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:157:77
    |
157 |         let database_input = convert_to_database(metadata, catalog_id, self.glue_catalog_skip_name_validation())?;
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:157:30
    |
157 |         let database_input = convert_to_database(metadata, catalog_id, self.glue_catalog_skip_name_validation())?;
    |                              ^^^^^^^^^^^^^^^^^^^                     ------------------------------------------
    |                                                                      | |
    |                                                                      | unexpected argument
    |                                                                      help: remove the extra argument
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------

error[E0433]: failed to resolve: use of undeclared type `CreateDatabaseRequest`
   --> crates/catalog/glue/src/catalog.rs:158:23
    |
158 |         let request = CreateDatabaseRequest::builder()
    |                       ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateDatabaseRequest`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:162:27
    |
162 |         let result = self.glue.create_database(request).await?;
    |                           ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no associated item named `AlreadyExists` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:164:31
    |
164 |             return Err(Error::AlreadyExists(
    |                               ^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:165:89
    |
165 |                 format!("Cannot create namespace {} because it already exists in Glue", namespace),
    |                                                                                         ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:168:25
    |
168 |         let namespace = convert_to_namespace(result, properties)?;
    |                         ^^^^^^^^^^^^^^^^^^^^       ------------
    |                                                    | |
    |                                                    | unexpected argument of type `std::collections::HashMap<std::string::String, std::string::String>`
    |                                                    help: remove the extra argument
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:168:25
    |
168 |         let namespace = convert_to_namespace(result, properties)?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

Some errors have detailed explanations: E0061, E0277, E0423, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 12 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0425]: cannot find value `LOG` in this scope
   --> crates/catalog/glue/src/catalog.rs:169:9
    |
169 |         LOG.info("Created namespace: {}", namespace);
    |         ^^^ not found in this scope

warning: unused import: `aws_sdk_glue::types::DatabaseInput`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use aws_sdk_glue::types::DatabaseInput;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0423]: expected function, found macro `with_catalog_id`
   --> crates/catalog/glue/src/catalog.rs:155:26
    |
155 |         let catalog_id = with_catalog_id(self)?;
    |                          ^^^^^^^^^^^^^^^ not a function
    |
help: use `!` to invoke the macro
    |
155 |         let catalog_id = with_catalog_id!(self)?;
    |                                         +

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:156:24
    |
156 |         let metadata = convert_to_namespace(namespace, properties)?;
    |                        ^^^^^^^^^^^^^^^^^^^^ ---------  ---------- unexpected argument of type `HashMap<std::string::String, std::string::String>`
    |                                             |
    |                                             expected `&Database`, found `&NamespaceIdent`
    |
    = note: expected reference `&Database`
               found reference `&'life1 NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------
help: remove the extra argument
    |
156 -         let metadata = convert_to_namespace(namespace, properties)?;
156 +         let metadata = convert_to_namespace(/* &Database */)?;
    |

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:156:24
    |
156 |         let metadata = convert_to_namespace(namespace, properties)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

error[E0599]: no method named `glue_catalog_skip_name_validation` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:157:77
    |
157 |         let database_input = convert_to_database(metadata, catalog_id, self.glue_catalog_skip_name_validation())?;
    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:157:30
    |
157 |         let database_input = convert_to_database(metadata, catalog_id, self.glue_catalog_skip_name_validation())?;
    |                              ^^^^^^^^^^^^^^^^^^^                     ------------------------------------------
    |                                                                      | |
    |                                                                      | unexpected argument
    |                                                                      help: remove the extra argument
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------

error[E0433]: failed to resolve: use of undeclared type `CreateDatabaseRequest`
   --> crates/catalog/glue/src/catalog.rs:158:23
    |
158 |         let request = CreateDatabaseRequest::builder()
    |                       ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CreateDatabaseRequest`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:162:27
    |
162 |         let result = self.glue.create_database(request).await?;
    |                           ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no associated item named `AlreadyExists` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:164:31
    |
164 |             return Err(Error::AlreadyExists(
    |                               ^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:165:89
    |
165 |                 format!("Cannot create namespace {} because it already exists in Glue", namespace),
    |                                                                                         ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:168:25
    |
168 |         let namespace = convert_to_namespace(result, properties)?;
    |                         ^^^^^^^^^^^^^^^^^^^^       ------------
    |                                                    | |
    |                                                    | unexpected argument of type `HashMap<std::string::String, std::string::String>`
    |                                                    help: remove the extra argument
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:168:25
    |
168 |         let namespace = convert_to_namespace(result, properties)?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

Some errors have detailed explanations: E0061, E0277, E0423, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 12 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

