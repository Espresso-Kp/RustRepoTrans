Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/io.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0050]: method `read` has 5 parameters but the declaration in trait `FileRead::read` has 2
   --> crates/iceberg/src/io.rs:234:15
    |
227 |     async fn read(&self, range: Range<u64>) -> Result<Bytes>;
    |                   ------------------------ trait requires 2 parameters
...
234 | async fn read(&self, position: u64, buffer: &mut [u8], offset: usize, length: usize) -> Result<()> {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters, found 5

error[E0599]: no method named `check_position_indexes` found for reference `&opendal::Reader` in the current scope
   --> crates/iceberg/src/io.rs:235:10
    |
235 |     self.check_position_indexes(offset, offset + length, buffer.len())?;
    |          ^^^^^^^^^^^^^^^^^^^^^^ method not found in `&Reader`

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:237:61
    |
237 |     let range = format!("bytes={}-{}", position, position + length - 1);
    |                                                             ^^^^^^ expected `u64`, found `usize`

error[E0277]: cannot add `usize` to `u64`
   --> crates/iceberg/src/io.rs:237:59
    |
237 |     let range = format!("bytes={}-{}", position, position + length - 1);
    |                                                           ^ no implementation for `u64 + usize`
    |
    = help: the trait `Add<usize>` is not implemented for `u64`
    = help: the following other types implement trait `Add<Rhs>`:
              <u64 as Add>
              <u64 as Add<num_bigint::bigint::BigInt>>
              <u64 as Add<num_complex::Complex<u64>>>
              <u64 as Add<num_bigint::biguint::BigUint>>
              <u64 as Add<&'a num_complex::Complex<u64>>>
              <u64 as Add<&num_bigint::bigint::BigInt>>
              <u64 as Add<&num_bigint::biguint::BigUint>>
              <u64 as Add<&u64>>
            and 8 others

error[E0599]: no method named `read_range` found for reference `&opendal::Reader` in the current scope
   --> crates/iceberg/src/io.rs:239:22
    |
239 |     let bytes = self.read_range(range).await?;
    |                      ^^^^^^^^^^ method not found in `&Reader`

Some errors have detailed explanations: E0050, E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0050`.
error: could not compile `iceberg` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: cannot add `usize` to `u64`
   --> crates/iceberg/src/io.rs:237:59
    |
237 |     let range = format!("bytes={}-{}", position, position + length - 1);
    |                                                           ^ no implementation for `u64 + usize`
    |
    = help: the trait `std::ops::Add<usize>` is not implemented for `u64`
    = help: the following other types implement trait `std::ops::Add<Rhs>`:
              <u64 as std::ops::Add>
              <u64 as std::ops::Add<num_bigint::bigint::BigInt>>
              <u64 as std::ops::Add<num_complex::Complex<u64>>>
              <u64 as std::ops::Add<num_bigint::biguint::BigUint>>
              <u64 as std::ops::Add<&'a num_complex::Complex<u64>>>
              <u64 as std::ops::Add<&num_bigint::bigint::BigInt>>
              <u64 as std::ops::Add<&num_bigint::biguint::BigUint>>
              <u64 as std::ops::Add<&u64>>
            and 8 others

error: could not compile `iceberg` (lib test) due to 5 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0050]: method `read` has 5 parameters but the declaration in trait `FileRead::read` has 2
   --> crates/iceberg/src/io.rs:234:15
    |
227 |     async fn read(&self, range: Range<u64>) -> Result<Bytes>;
    |                   ------------------------ trait requires 2 parameters
...
234 | async fn read(&self, position: u64, buffer: &mut [u8], offset: usize, length: usize) -> Result<()> {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters, found 5

error[E0599]: no method named `check_position_indexes` found for reference `&opendal::Reader` in the current scope
   --> crates/iceberg/src/io.rs:235:10
    |
235 |     self.check_position_indexes(offset, offset + length, buffer.len())?;
    |          ^^^^^^^^^^^^^^^^^^^^^^ method not found in `&Reader`

error[E0308]: mismatched types
   --> crates/iceberg/src/io.rs:237:61
    |
237 |     let range = format!("bytes={}-{}", position, position + length - 1);
    |                                                             ^^^^^^ expected `u64`, found `usize`

error[E0277]: cannot add `usize` to `u64`
   --> crates/iceberg/src/io.rs:237:59
    |
237 |     let range = format!("bytes={}-{}", position, position + length - 1);
    |                                                           ^ no implementation for `u64 + usize`
    |
    = help: the trait `Add<usize>` is not implemented for `u64`
    = help: the following other types implement trait `Add<Rhs>`:
              <u64 as Add>
              <u64 as Add<num_bigint::bigint::BigInt>>
              <u64 as Add<num_complex::Complex<u64>>>
              <u64 as Add<num_bigint::biguint::BigUint>>
              <u64 as Add<&'a num_complex::Complex<u64>>>
              <u64 as Add<&num_bigint::bigint::BigInt>>
              <u64 as Add<&num_bigint::biguint::BigUint>>
              <u64 as Add<&u64>>
            and 8 others

error[E0599]: no method named `read_range` found for reference `&opendal::Reader` in the current scope
   --> crates/iceberg/src/io.rs:239:22
    |
239 |     let bytes = self.read_range(range).await?;
    |                      ^^^^^^^^^^ method not found in `&Reader`

Some errors have detailed explanations: E0050, E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0050`.
error: could not compile `iceberg` (lib) due to 5 previous errors

