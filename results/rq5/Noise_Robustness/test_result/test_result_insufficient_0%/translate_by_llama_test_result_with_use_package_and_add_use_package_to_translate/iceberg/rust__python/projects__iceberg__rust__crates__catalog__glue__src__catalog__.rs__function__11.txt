Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0425]: cannot find value `location` in this scope
   --> crates/catalog/glue/src/catalog.rs:350:33
    |
350 |     let io = self._load_file_io(location=metadata_location);
    |                                 ^^^^^^^^
    |
help: you might have meant to introduce a new binding
    |
350 |     let io = self._load_file_io(let location=metadata_location);
    |                                 +++

warning: unused import: `TableCreation`
  --> crates/catalog/glue/src/catalog.rs:24:80
   |
24 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                                                ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `convert_to_glue_table`, `create_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:33:26
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                          ^^^^^^^^^^^^^^^^^^^^^                        ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0195]: lifetime parameters or bounds on method `create_table` do not match the trait declaration
   --> crates/catalog/glue/src/catalog.rs:343:10
    |
343 |   async fn create_table(
    |  __________^
344 | |     &self,
345 | |     identifier: &str,
346 | |     metadata_location: &str,
347 | | ) -> Result<Table> {
    | |_^ lifetimes do not match method in trait

error[E0599]: no method named `identifier_to_database_and_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:348:44
    |
348 |     let (database_name, table_name) = self.identifier_to_database_and_table(identifier);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `_load_file_io` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:350:19
    |
350 |     let io = self._load_file_io(location=metadata_location);
    |                   ^^^^^^^^^^^^^ help: there is a method with a similar name: `file_io`

error[E0599]: no function or associated item named `from_input_file` found for struct `TableMetadataBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:352:42
    |
352 |     let metadata = TableMetadataBuilder::from_input_file(file).build();
    |                                          ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadataBuilder`
    |
note: if you're trying to build a new `TableMetadataBuilder` consider using one of the following associated functions:
      TableMetadataBuilder::new
      TableMetadataBuilder::from_table_creation
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/spec/table_metadata.rs:286:5
    |
286 |     pub fn new(origin: TableMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
291 |     pub fn from_table_creation(table_creation: TableCreation) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `table_name` found for struct `TableInputBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:354:9
    |
353 |       let table_input = TableInput::builder()
    |  _______________________-
354 | |        .table_name(table_name)
    | |        -^^^^^^^^^^ help: there is a method with a similar name: `table_type`
    | |________|
    | 

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:355:18
    |
355 |        .location(get_default_table_location(metadata_location))
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------
    |                                            ||
    |                                            |an argument of type `&Namespace` is missing
    |                                            two arguments are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:209:15
    |
209 | pub(crate) fn get_default_table_location(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |     namespace: &Namespace,
    |     ---------------------
211 |     db_name: impl AsRef<str>,
    |     ------------------------
212 |     table_name: impl AsRef<str>,
    |     ---------------------------
213 |     warehouse: impl AsRef<str>,
    |     --------------------------
help: provide the arguments
    |
355 |        .location(get_default_table_location(/* &Namespace */, metadata_location, /* table_name */, /* warehouse */))
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `_create_glue_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:357:10
    |
357 |     self._create_glue_table(database_name, table_name, table_input).await?;
    |          ^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:358:24
    |
358 |     Ok(self.load_table(identifier).await?)
    |             ---------- ^^^^^^^^^^ expected `&TableIdent`, found `&str`
    |             |
    |             arguments to this method are incorrect
    |
    = note: expected reference `&TableIdent`
               found reference `&'life1 str`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:81:14
    |
81  |     async fn load_table(&self, table: &TableIdent) -> Result<Table>;
    |              ^^^^^^^^^^

Some errors have detailed explanations: E0061, E0195, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 9 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `location` in this scope
   --> crates/catalog/glue/src/catalog.rs:350:33
    |
350 |     let io = self._load_file_io(location=metadata_location);
    |                                 ^^^^^^^^
    |
help: you might have meant to introduce a new binding
    |
350 |     let io = self._load_file_io(let location=metadata_location);
    |                                 +++

warning: unused import: `TableCreation`
  --> crates/catalog/glue/src/catalog.rs:24:80
   |
24 |     Catalog, Error, ErrorKind, Namespace, NamespaceIdent, Result, TableCommit, TableCreation,
   |                                                                                ^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `convert_to_glue_table`, `create_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:33:26
   |
33 |     convert_to_database, convert_to_glue_table, convert_to_namespace, create_metadata_location,
   |                          ^^^^^^^^^^^^^^^^^^^^^                        ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0195]: lifetime parameters or bounds on method `create_table` do not match the trait declaration
   --> crates/catalog/glue/src/catalog.rs:343:10
    |
343 |   async fn create_table(
    |  __________^
344 | |     &self,
345 | |     identifier: &str,
346 | |     metadata_location: &str,
347 | | ) -> Result<Table> {
    | |_^ lifetimes do not match method in trait

error[E0599]: no method named `identifier_to_database_and_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:348:44
    |
348 |     let (database_name, table_name) = self.identifier_to_database_and_table(identifier);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `_load_file_io` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:350:19
    |
350 |     let io = self._load_file_io(location=metadata_location);
    |                   ^^^^^^^^^^^^^ help: there is a method with a similar name: `file_io`

error[E0599]: no function or associated item named `from_input_file` found for struct `TableMetadataBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:352:42
    |
352 |     let metadata = TableMetadataBuilder::from_input_file(file).build();
    |                                          ^^^^^^^^^^^^^^^ function or associated item not found in `TableMetadataBuilder`
    |
note: if you're trying to build a new `TableMetadataBuilder` consider using one of the following associated functions:
      TableMetadataBuilder::new
      TableMetadataBuilder::from_table_creation
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/spec/table_metadata.rs:286:5
    |
286 |     pub fn new(origin: TableMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
291 |     pub fn from_table_creation(table_creation: TableCreation) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `table_name` found for struct `TableInputBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:354:9
    |
353 |       let table_input = TableInput::builder()
    |  _______________________-
354 | |        .table_name(table_name)
    | |        -^^^^^^^^^^ help: there is a method with a similar name: `table_type`
    | |________|
    | 

error[E0061]: this function takes 4 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:355:18
    |
355 |        .location(get_default_table_location(metadata_location))
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------
    |                                            ||
    |                                            |an argument of type `&Namespace` is missing
    |                                            two arguments are missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:209:15
    |
209 | pub(crate) fn get_default_table_location(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |     namespace: &Namespace,
    |     ---------------------
211 |     db_name: impl AsRef<str>,
    |     ------------------------
212 |     table_name: impl AsRef<str>,
    |     ---------------------------
213 |     warehouse: impl AsRef<str>,
    |     --------------------------
help: provide the arguments
    |
355 |        .location(get_default_table_location(/* &Namespace */, metadata_location, /* table_name */, /* warehouse */))
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `_create_glue_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:357:10
    |
357 |     self._create_glue_table(database_name, table_name, table_input).await?;
    |          ^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:358:24
    |
358 |     Ok(self.load_table(identifier).await?)
    |             ---------- ^^^^^^^^^^ expected `&TableIdent`, found `&str`
    |             |
    |             arguments to this method are incorrect
    |
    = note: expected reference `&TableIdent`
               found reference `&'life1 str`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:81:14
    |
81  |     async fn load_table(&self, table: &TableIdent) -> Result<Table>;
    |              ^^^^^^^^^^

Some errors have detailed explanations: E0061, E0195, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 9 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

