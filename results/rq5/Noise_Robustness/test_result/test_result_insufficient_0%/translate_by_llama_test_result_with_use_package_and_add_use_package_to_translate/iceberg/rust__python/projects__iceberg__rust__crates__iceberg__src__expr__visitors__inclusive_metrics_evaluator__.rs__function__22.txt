Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Type`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:368:37
    |
368 |     if!matches!(field.field_type(), Type::Primitive(_)) {
    |                                     ^^^^ use of undeclared type `Type`
    |
help: consider importing one of these items
    |
18  + use crate::spec::Type;
    |
18  + use parquet::basic::Type;
    |
18  + use parquet::format::Type;
    |
18  + use parquet::schema::types::Type;
    |

error[E0599]: no method named `field_id` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:362:26
    |
362 |     let field_id = field.field_id();
    |                          ^^^^^^^^ method not found in `&NestedField`

error[E0599]: no method named `_may_contain_null` found for mutable reference `&mut InclusiveMetricsEvaluator<'_>` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:364:13
    |
364 |     if self._may_contain_null(field_id) {
    |             ^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `may_contain_null`

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:368:23
    |
368 |     if!matches!(field.field_type(), Type::Primitive(_)) {
    |                       ^^^^^^^^^^-- help: remove the arguments
    |                       |
    |                       field, not a method

error[E0599]: no variant or associated item named `InvalidType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:369:49
    |
369 |         return Err(crate::Error::new(ErrorKind::InvalidType, format!("Expected PrimitiveType: {:?}", field.field_type())));
    |                                                 ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidType` not found for this enum

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:369:108
    |
369 |         return Err(crate::Error::new(ErrorKind::InvalidType, format!("Expected PrimitiveType: {:?}", field.field_type())));
    |                                                                                                            ^^^^^^^^^^-- help: remove the arguments
    |                                                                                                            |
    |                                                                                                            field, not a method

error[E0599]: no method named `value` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:372:24
    |
372 |     let prefix = datum.value().to_string();
    |                        ^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `value`, perhaps you need to implement one of them:
            candidate #1: `itertools::duplicates_impl::private::KeyXorValue`
            candidate #2: `ArrayAccessor`
            candidate #3: `itertools::duplicates_impl::private::KeyXorValue`

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:375:71
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.lower_bounds.get(field_id), self.upper_bounds.get(field_id)) {
    |                                                                       ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.data_file.lower_bounds.get(field_id), self.upper_bounds.get(field_id)) {
    |                                                                       ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:375:104
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.lower_bounds.get(field_id), self.upper_bounds.get(field_id)) {
    |                                                                                                        ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.lower_bounds.get(field_id), self.data_file.upper_bounds.get(field_id)) {
    |                                                                                                        ++++++++++

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:376:44
    |
376 |         let lower_bound = from_bytes(field.field_type(), lower_bound_bytes).to_string();
    |                                            ^^^^^^^^^^-- help: remove the arguments
    |                                            |
    |                                            field, not a method

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:376:27
    |
376 |         let lower_bound = from_bytes(field.field_type(), lower_bound_bytes).to_string();
    |                           ^^^^^^^^^^ not found in this scope

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:377:44
    |
377 |         let upper_bound = from_bytes(field.field_type(), upper_bound_bytes).to_string();
    |                                            ^^^^^^^^^^-- help: remove the arguments
    |                                            |
    |                                            field, not a method

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:377:27
    |
377 |         let upper_bound = from_bytes(field.field_type(), upper_bound_bytes).to_string();
    |                           ^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 13 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0433]: failed to resolve: use of undeclared type `Type`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:368:37
    |
368 |     if!matches!(field.field_type(), Type::Primitive(_)) {
    |                                     ^^^^ use of undeclared type `Type`
    |
help: consider importing one of these items
    |
18  + use crate::spec::Type;
    |
18  + use parquet::basic::Type;
    |
18  + use parquet::format::Type;
    |
18  + use parquet::schema::types::Type;
    |

error[E0599]: no method named `field_id` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:362:26
    |
362 |     let field_id = field.field_id();
    |                          ^^^^^^^^ method not found in `&NestedField`

error[E0599]: no method named `_may_contain_null` found for mutable reference `&mut InclusiveMetricsEvaluator<'_>` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:364:13
    |
364 |     if self._may_contain_null(field_id) {
    |             ^^^^^^^^^^^^^^^^^ help: there is a method with a similar name: `may_contain_null`

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:368:23
    |
368 |     if!matches!(field.field_type(), Type::Primitive(_)) {
    |                       ^^^^^^^^^^-- help: remove the arguments
    |                       |
    |                       field, not a method

error[E0599]: no variant or associated item named `InvalidType` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:369:49
    |
369 |         return Err(crate::Error::new(ErrorKind::InvalidType, format!("Expected PrimitiveType: {:?}", field.field_type())));
    |                                                 ^^^^^^^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `InvalidType` not found for this enum

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:369:108
    |
369 |         return Err(crate::Error::new(ErrorKind::InvalidType, format!("Expected PrimitiveType: {:?}", field.field_type())));
    |                                                                                                            ^^^^^^^^^^-- help: remove the arguments
    |                                                                                                            |
    |                                                                                                            field, not a method

error[E0599]: no method named `value` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:372:24
    |
372 |     let prefix = datum.value().to_string();
    |                        ^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `value`, perhaps you need to implement one of them:
            candidate #1: `itertools::duplicates_impl::private::KeyXorValue`
            candidate #2: `ArrayAccessor`
            candidate #3: `itertools::duplicates_impl::private::KeyXorValue`

error[E0609]: no field `lower_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:375:71
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.lower_bounds.get(field_id), self.upper_bounds.get(field_id)) {
    |                                                                       ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.data_file.lower_bounds.get(field_id), self.upper_bounds.get(field_id)) {
    |                                                                       ++++++++++

error[E0609]: no field `upper_bounds` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:375:104
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.lower_bounds.get(field_id), self.upper_bounds.get(field_id)) {
    |                                                                                                        ^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
375 |     if let (Some(lower_bound_bytes), Some(upper_bound_bytes)) = (self.lower_bounds.get(field_id), self.data_file.upper_bounds.get(field_id)) {
    |                                                                                                        ++++++++++

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:376:44
    |
376 |         let lower_bound = from_bytes(field.field_type(), lower_bound_bytes).to_string();
    |                                            ^^^^^^^^^^-- help: remove the arguments
    |                                            |
    |                                            field, not a method

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:376:27
    |
376 |         let lower_bound = from_bytes(field.field_type(), lower_bound_bytes).to_string();
    |                           ^^^^^^^^^^ not found in this scope

error[E0599]: no method named `field_type` found for reference `&datatypes::NestedField` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:377:44
    |
377 |         let upper_bound = from_bytes(field.field_type(), upper_bound_bytes).to_string();
    |                                            ^^^^^^^^^^-- help: remove the arguments
    |                                            |
    |                                            field, not a method

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:377:27
    |
377 |         let upper_bound = from_bytes(field.field_type(), upper_bound_bytes).to_string();
    |                           ^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `iceberg` (lib) due to 13 previous errors

