Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0407]: method `create_database_input` is not a member of trait `Catalog`
   --> crates/catalog/glue/src/catalog.rs:161:1
    |
161 | / fn create_database_input(database_name: String, properties: HashMap<String, String>) -> TableInput {
162 | |     // Assuming TableInput is a type from aws_sdk_glue
163 | |     // You may need to adjust this based on the actual TableInput type
164 | |     TableInput {
...   |
168 | |     }
169 | | }
    | |_^ not a member of trait `Catalog`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:25
    |
152 |     let database_name = convert_to_database(namespace);
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |     let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */);
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:153:16
    |
153 |     match self.glue.create_database(create_database_input(database_name, properties)).await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0425]: cannot find function `create_database_input` in this scope
   --> crates/catalog/glue/src/catalog.rs:153:37
    |
153 |     match self.glue.create_database(create_database_input(database_name, properties)).await {
    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `aws_sdk_glue::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:34
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                  ^^^^^^^^^^^^^ variant or associated item not found in `Error`

error[E0599]: no associated item named `AlreadyExistsError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:65
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                 ^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `std::result::Result<DatabaseInput, iceberg::Error>` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:156:122
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                                                                          ^^^^^^^^^^^^^ `std::result::Result<DatabaseInput, iceberg::Error>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<DatabaseInput, iceberg::Error>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no function or associated item named `from_aws_sdk_error` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:157:29
    |
157 |             _ => Err(Error::from_aws_sdk_error(e)),
    |                             ^^^^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0639]: cannot create non-exhaustive struct using struct expression
   --> crates/catalog/glue/src/catalog.rs:164:5
    |
164 | /     TableInput {
165 | |         database_name,
166 | |         properties,
167 | |        ..Default::default()
168 | |     }
    | |_____^

error[E0560]: struct `TableInput` has no field named `database_name`
   --> crates/catalog/glue/src/catalog.rs:165:9
    |
165 |         database_name,
    |         ^^^^^^^^^^^^^ `TableInput` does not have this field
    |
    = note: available fields are: `name`, `description`, `owner`, `last_access_time`, `last_analyzed_time` ... and 9 others

error[E0560]: struct `TableInput` has no field named `properties`
   --> crates/catalog/glue/src/catalog.rs:166:9
    |
166 |         properties,
    |         ^^^^^^^^^^ `TableInput` does not have this field
    |
    = note: available fields are: `name`, `description`, `owner`, `last_access_time`, `last_analyzed_time` ... and 9 others

Some errors have detailed explanations: E0061, E0277, E0407, E0425, E0560, E0599, E0609, E0639.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0407]: method `create_database_input` is not a member of trait `Catalog`
   --> crates/catalog/glue/src/catalog.rs:161:1
    |
161 | / fn create_database_input(database_name: String, properties: HashMap<String, String>) -> TableInput {
162 | |     // Assuming TableInput is a type from aws_sdk_glue
163 | |     // You may need to adjust this based on the actual TableInput type
164 | |     TableInput {
...   |
168 | |     }
169 | | }
    | |_^ not a member of trait `Catalog`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:25
    |
152 |     let database_name = convert_to_database(namespace);
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |     let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */);
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:153:16
    |
153 |     match self.glue.create_database(create_database_input(database_name, properties)).await {
    |                ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0425]: cannot find function `create_database_input` in this scope
   --> crates/catalog/glue/src/catalog.rs:153:37
    |
153 |     match self.glue.create_database(create_database_input(database_name, properties)).await {
    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `aws_sdk_glue::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:34
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                  ^^^^^^^^^^^^^ variant or associated item not found in `Error`

error[E0599]: no associated item named `AlreadyExistsError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:65
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                 ^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `Result<DatabaseInput, iceberg::Error>` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:156:122
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                                                                          ^^^^^^^^^^^^^ `Result<DatabaseInput, iceberg::Error>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Result<DatabaseInput, iceberg::Error>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no function or associated item named `from_aws_sdk_error` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:157:29
    |
157 |             _ => Err(Error::from_aws_sdk_error(e)),
    |                             ^^^^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0639]: cannot create non-exhaustive struct using struct expression
   --> crates/catalog/glue/src/catalog.rs:164:5
    |
164 | /     TableInput {
165 | |         database_name,
166 | |         properties,
167 | |        ..Default::default()
168 | |     }
    | |_____^

error[E0560]: struct `TableInput` has no field named `database_name`
   --> crates/catalog/glue/src/catalog.rs:165:9
    |
165 |         database_name,
    |         ^^^^^^^^^^^^^ `TableInput` does not have this field
    |
    = note: available fields are: `name`, `description`, `owner`, `last_access_time`, `last_analyzed_time` ... and 9 others

error[E0560]: struct `TableInput` has no field named `properties`
   --> crates/catalog/glue/src/catalog.rs:166:9
    |
166 |         properties,
    |         ^^^^^^^^^^ `TableInput` does not have this field
    |
    = note: available fields are: `name`, `description`, `owner`, `last_access_time`, `last_analyzed_time` ... and 9 others

Some errors have detailed explanations: E0061, E0277, E0407, E0425, E0560, E0599, E0609, E0639.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 11 previous errors
warning: build failed, waiting for other jobs to finish...

