Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:462:39
    |
462 |     let (database_name, table_name) = convert_to_database(&table);
    |                                       ^^^^^^^^^^^^^^^^^^^--------
    |                                                          ||
    |                                                          |expected `&NamespaceIdent`, found `&&TableIdent`
    |                                                          an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
462 |     let (database_name, table_name) = convert_to_database(/* &iceberg::NamespaceIdent */, /* &std::collections::HashMap<std::string::String, std::string::String> */);
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:462:9
    |
462 |     let (database_name, table_name) = convert_to_database(&table);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^   --------------------------- this expression has type `std::result::Result<DatabaseInput, iceberg::Error>`
    |         |
    |         expected `Result<DatabaseInput, Error>`, found `(_, _)`
    |
    = note: expected enum `std::result::Result<DatabaseInput, iceberg::Error>`
              found tuple `(_, _)`

error[E0609]: no field `catalog` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:463:16
    |
463 |     match self.catalog.delete_table(database_name, table_name) {
    |                ^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no function or associated item named `from_aws_sdk_error` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:465:30
    |
465 |         Err(e) => Err(Error::from_aws_sdk_error(e)),
    |                              ^^^^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:462:39
    |
462 |     let (database_name, table_name) = convert_to_database(&table);
    |                                       ^^^^^^^^^^^^^^^^^^^--------
    |                                                          ||
    |                                                          |expected `&NamespaceIdent`, found `&&TableIdent`
    |                                                          an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
462 |     let (database_name, table_name) = convert_to_database(/* &NamespaceIdent */, /* &HashMap<std::string::String, std::string::String> */);
    |                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:462:9
    |
462 |     let (database_name, table_name) = convert_to_database(&table);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^   --------------------------- this expression has type `Result<DatabaseInput, iceberg::Error>`
    |         |
    |         expected `Result<DatabaseInput, Error>`, found `(_, _)`
    |
    = note: expected enum `Result<DatabaseInput, iceberg::Error>`
              found tuple `(_, _)`

error[E0609]: no field `catalog` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:463:16
    |
463 |     match self.catalog.delete_table(database_name, table_name) {
    |                ^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no function or associated item named `from_aws_sdk_error` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:465:30
    |
465 |         Err(e) => Err(Error::from_aws_sdk_error(e)),
    |                              ^^^^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...

