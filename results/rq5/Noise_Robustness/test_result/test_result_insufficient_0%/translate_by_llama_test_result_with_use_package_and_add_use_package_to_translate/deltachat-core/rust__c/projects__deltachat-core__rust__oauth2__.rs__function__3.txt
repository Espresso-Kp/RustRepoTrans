Fail
file path is :
projects/deltachat-core/rust/src/oauth2.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0428]: the name `get_oauth2_addr` is defined multiple times
   --> src/oauth2.rs:260:1
    |
233 | / pub(crate) async fn get_oauth2_addr(
234 | |     context: &Context,
235 | |     addr: &str,
236 | |     code: &str,
...   |
247 | |     Ok(addr_out)
248 | | }
    | |_- previous definition of the value `get_oauth2_addr` here
...
260 | / fn get_oauth2_addr(
261 | |     context: &Context,
262 | |     oauth2: oauth2_t,
263 | |     access_token: String,
264 | | ) -> Result<Option<String>> {
265 | |     // implementation of get_oauth2_addr function
266 | | }
    | |_^ `get_oauth2_addr` redefined here
    |
    = note: `get_oauth2_addr` must be defined only once in the value namespace of this module

error[E0425]: cannot find value `DC_REGENERATE` in this scope
   --> src/oauth2.rs:243:72
    |
243 |         access_token = dc_get_oauth2_access_token(context, addr, code, DC_REGENERATE)?;
    |                                                                        ^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `oauth2_t` in this scope
   --> src/oauth2.rs:249:35
    |
249 | fn get_info(addr: &str) -> Result<oauth2_t> {
    |                                   ^^^^^^^^ not found in this scope
    |
help: you might be missing a type parameter
    |
249 | fn get_info<oauth2_t>(addr: &str) -> Result<oauth2_t> {
    |            ++++++++++

error[E0412]: cannot find type `oauth2_t` in this scope
   --> src/oauth2.rs:262:13
    |
262 |     oauth2: oauth2_t,
    |             ^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> src/oauth2.rs:240:53
    |
240 |     let addr_out = get_oauth2_addr(context, oauth2, access_token)?;
    |                    ---------------                  ^^^^^^^^^^^^ expected `&str`, found `String`
    |                    |
    |                    arguments to this function are incorrect
    |
note: function defined here
   --> src/oauth2.rs:233:21
    |
233 | pub(crate) async fn get_oauth2_addr(
    |                     ^^^^^^^^^^^^^^^
...
236 |     code: &str,
    |     ----------
help: consider borrowing here
    |
240 |     let addr_out = get_oauth2_addr(context, oauth2, &access_token)?;
    |                                                     +

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/oauth2.rs:240:20
    |
240 |     let addr_out = get_oauth2_addr(context, oauth2, access_token)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>`
    |
    = help: the trait `Try` is not implemented for `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>`
help: consider `await`ing on the `Future`
    |
240 |     let addr_out = get_oauth2_addr(context, oauth2, access_token).await?;
    |                                                                  ++++++

error[E0308]: mismatched types
   --> src/oauth2.rs:244:53
    |
244 |         addr_out = get_oauth2_addr(context, oauth2, access_token)?;
    |                    ---------------                  ^^^^^^^^^^^^ expected `&str`, found `String`
    |                    |
    |                    arguments to this function are incorrect
    |
note: function defined here
   --> src/oauth2.rs:233:21
    |
233 | pub(crate) async fn get_oauth2_addr(
    |                     ^^^^^^^^^^^^^^^
...
236 |     code: &str,
    |     ----------
help: consider borrowing here
    |
244 |         addr_out = get_oauth2_addr(context, oauth2, &access_token)?;
    |                                                     +

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> src/oauth2.rs:244:20
    |
244 |         addr_out = get_oauth2_addr(context, oauth2, access_token)?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>`
    |
    = help: the trait `Try` is not implemented for `impl futures::Future<Output = std::result::Result<std::option::Option<std::string::String>, anyhow::Error>>`
help: consider `await`ing on the `Future`
    |
244 |         addr_out = get_oauth2_addr(context, oauth2, access_token).await?;
    |                                                                  ++++++

error[E0308]: mismatched types
   --> src/oauth2.rs:257:6
    |
252 | fn dc_get_oauth2_access_token(
    |    -------------------------- implicitly returns `()` as its body has no tail or `return` expression
...
257 | ) -> Result<String> {
    |      ^^^^^^^^^^^^^^ expected `Result<String, Error>`, found `()`
    |
    = note:   expected enum `std::result::Result<std::string::String, anyhow::Error>`
            found unit type `()`

error[E0308]: mismatched types
   --> src/oauth2.rs:264:6
    |
260 | fn get_oauth2_addr(
    |    --------------- implicitly returns `()` as its body has no tail or `return` expression
...
264 | ) -> Result<Option<String>> {
    |      ^^^^^^^^^^^^^^^^^^^^^^ expected `Result<Option<String>, Error>`, found `()`
    |
    = note:   expected enum `std::result::Result<std::option::Option<std::string::String>, anyhow::Error>`
            found unit type `()`

Some errors have detailed explanations: E0277, E0308, E0412, E0425, E0428.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 10 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

