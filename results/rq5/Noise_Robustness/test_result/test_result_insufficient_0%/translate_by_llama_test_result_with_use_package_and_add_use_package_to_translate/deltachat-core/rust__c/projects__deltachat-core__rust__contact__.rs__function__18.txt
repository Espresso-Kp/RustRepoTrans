Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `ROW` in crate `rusqlite`
   --> src/contact.rs:613:33
    |
613 |     if stmt.step()?!= rusqlite::ROW {
    |                                 ^^^ not found in `rusqlite`

error[E0425]: cannot find value `ROW` in crate `rusqlite`
   --> src/contact.rs:622:33
    |
622 |     if stmt.step()?!= rusqlite::ROW {
    |                                 ^^^ not found in `rusqlite`

error[E0609]: no field `contacts` on type `&context::Context`
   --> src/contact.rs:604:27
    |
604 |     let contact = context.contacts.get(id).ok_or_else(|| {
    |                           ^^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/contact.rs:610:28
    |
610 |     let stmt = context.sql.prepare("UPDATE contacts SET blocked=? WHERE id=?;")?;
    |                            ^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/contact.rs:618:28
    |
618 |     let stmt = context.sql.prepare("UPDATE chats SET blocked=? WHERE type=? AND id IN (SELECT chat_id FROM chats_contacts WHERE contact_i...
    |                            ^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `marknoticed_contact` found for reference `&context::Context` in the current scope
   --> src/contact.rs:628:17
    |
628 |         context.marknoticed_contact(id)?;
    |                 ^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0599]: no method named `cb` found for reference `&context::Context` in the current scope
   --> src/contact.rs:631:13
    |
631 |     context.cb(context, EventType::ContactsChanged, 0, 0)?;
    |             ^^ method not found in `&Context`

error[E0605]: non-primitive cast: `ContactId` as `i32`
   --> src/contact.rs:612:18
    |
612 |     stmt.bind(2, id as i32)?;
    |                  ^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `ContactId` as `i32`
   --> src/contact.rs:621:18
    |
621 |     stmt.bind(3, id as i32)?;
    |                  ^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:610:28
    |
610 |     let stmt = context.sql.prepare("UPDATE contacts SET blocked=? WHERE id=?;")?;
    |                            ^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:618:28
    |
618 |     let stmt = context.sql.prepare("UPDATE chats SET blocked=? WHERE type=? AND id IN (SELECT chat_id FROM chats_contacts WHERE contact_i...
    |                            ^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0605]: non-primitive cast: `contact::ContactId` as `i32`
   --> src/contact.rs:612:18
    |
612 |     stmt.bind(2, id as i32)?;
    |                  ^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0605]: non-primitive cast: `contact::ContactId` as `i32`
   --> src/contact.rs:621:18
    |
621 |     stmt.bind(3, id as i32)?;
    |                  ^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

Some errors have detailed explanations: E0425, E0599, E0605, E0609.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `deltachat` (lib) due to 9 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 9 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

