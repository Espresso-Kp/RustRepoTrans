Fail
file path is :
projects/deltachat-core/rust/src/context.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `anyhow` in this scope
   --> src/context.rs:673:20
    |
673 |         return Err(anyhow!("Invalid context"));
    |                    ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
3   + use anyhow::anyhow;
    |

error: cannot find macro `anyhow` in this scope
   --> src/context.rs:678:20
    |
678 |         return Err(anyhow!("Ongoing process already running"));
    |                    ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
3   + use anyhow::anyhow;
    |

error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
   --> src/context.rs:672:73
    |
672 |     if self.context.is_none() || self.context.as_ref().unwrap().magic!= DC_CONTEXT_MAGIC {
    |                                                                         ^^^^^^^^^^^^^^^^ not found in this scope

error[E0609]: no field `context` on type `&context::Context`
   --> src/context.rs:672:13
    |
672 |     if self.context.is_none() || self.context.as_ref().unwrap().magic!= DC_CONTEXT_MAGIC {
    |             ^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
   --> src/context.rs:672:39
    |
672 |     if self.context.is_none() || self.context.as_ref().unwrap().magic!= DC_CONTEXT_MAGIC {
    |                                       ^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
   --> src/context.rs:676:13
    |
676 |     if self.context.as_ref().unwrap().has_ongoing() {
    |             ^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
   --> src/context.rs:677:14
    |
677 |         self.context.as_ref().unwrap().log_warning(0, "There is already another ongoing process running.");
    |              ^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
   --> src/context.rs:681:10
    |
681 |     self.context.as_mut().unwrap().ongoing_running = true;
    |          ^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
   --> src/context.rs:682:10
    |
682 |     self.context.as_mut().unwrap().shall_stop_ongoing = false;
    |          ^^^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0308]: mismatched types
   --> src/context.rs:683:8
    |
683 |     Ok(channel::unbounded().0)
    |     -- ^^^^^^^^^^^^^^^^^^^^^^ expected `Receiver<()>`, found `Sender<_>`
    |     |
    |     arguments to this enum variant are incorrect
    |
    = note: expected struct `async_channel::Receiver<()>`
               found struct `async_channel::Sender<_>`
help: the type constructed contains `async_channel::Sender<_>` due to the type of the argument passed
   --> src/context.rs:683:5
    |
683 |     Ok(channel::unbounded().0)
    |     ^^^----------------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:506:5
    |
506 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^

Some errors have detailed explanations: E0308, E0425, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `deltachat` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 10 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

