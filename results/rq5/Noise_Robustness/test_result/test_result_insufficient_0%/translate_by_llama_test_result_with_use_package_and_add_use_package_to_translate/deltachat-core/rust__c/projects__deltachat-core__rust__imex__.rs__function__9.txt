Fail
file path is :
projects/deltachat-core/rust/src/imex.rs

output is:


error is :
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `File` is defined multiple times
  --> src/imex.rs:24:23
   |
9  | use tokio::fs::{File, OpenOptions};
   |                 ---- previous import of the type `File` here
...
24 | use tokio::fs::{self, File};
   |                       ^^^^ `File` reimported here
   |
   = note: `File` must be defined only once in the type namespace of this module

error[E0252]: the name `DcKey` is defined multiple times
  --> src/imex.rs:35:33
   |
12 | use crate::key::{DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                  ----- previous import of the trait `DcKey` here
...
35 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                 ^^^^^--
   |                                 |
   |                                 `DcKey` reimported here
   |                                 help: remove unnecessary import
   |
   = note: `DcKey` must be defined only once in the type namespace of this module

error[E0252]: the name `DcSecretKey` is defined multiple times
  --> src/imex.rs:35:40
   |
12 | use crate::key::{DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                         ----------- previous import of the trait `DcSecretKey` here
...
35 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                        ^^^^^^^^^^^--
   |                                        |
   |                                        `DcSecretKey` reimported here
   |                                        help: remove unnecessary import
   |
   = note: `DcSecretKey` must be defined only once in the type namespace of this module

error[E0252]: the name `SignedPublicKey` is defined multiple times
  --> src/imex.rs:35:53
   |
12 | use crate::key::{DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                                      --------------- previous import of the type `SignedPublicKey` here
...
35 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                                     ^^^^^^^^^^^^^^^--
   |                                                     |
   |                                                     `SignedPublicKey` reimported here
   |                                                     help: remove unnecessary import
   |
   = note: `SignedPublicKey` must be defined only once in the type namespace of this module

error[E0252]: the name `SignedSecretKey` is defined multiple times
  --> src/imex.rs:35:70
   |
12 | use crate::key::{DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey};
   |                                                       --------------- previous import of the type `SignedSecretKey` here
...
35 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                                                      ^^^^^^^^^^^^^^^-
   |                                                                      |
   |                                                                      `SignedSecretKey` reimported here
   |                                                                      help: remove unnecessary import
   |
   = note: `SignedSecretKey` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `crate::pgp::types`
  --> src/imex.rs:10:17
   |
10 | use crate::pgp::types::KeyTrait;
   |                 ^^^^^ could not find `types` in `pgp`

error[E0432]: unresolved import `crate::pgp::armor`
  --> src/imex.rs:11:17
   |
11 | use crate::pgp::armor::BlockType;
   |                 ^^^^^ could not find `armor` in `pgp`

error[E0425]: cannot find function `split_armored_data` in this scope
   --> src/imex.rs:368:28
    |
368 |     let (header, base64) = split_armored_data(&file_content).context("Failed to split armored data")?;
    |                            ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this function
    |
4   + use crate::pgp::split_armored_data;
    |

error[E0425]: cannot find value `HEADER_AUTOCRYPT` in this scope
   --> src/imex.rs:369:17
    |
369 |     if header!= HEADER_AUTOCRYPT {
    |                 ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `decrypt_symmetrically` in module `e2ee`
   --> src/imex.rs:380:23
    |
380 |     let plain = e2ee::decrypt_symmetrically(passphrase, &binary, binary_bytes).context("Failed to decrypt symmetrically")?;
    |                       ^^^^^^^^^^^^^^^^^^^^^ not found in `e2ee`

warning: unused import: `std::io`
 --> src/imex.rs:4:5
  |
4 | use std::io;
  |     ^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::error::Error`
 --> src/imex.rs:8:5
  |
8 | use std::error::Error;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `OpenOptions`
 --> src/imex.rs:9:23
  |
9 | use tokio::fs::{File, OpenOptions};
  |                       ^^^^^^^^^^^

warning: unused import: `File`
  --> src/imex.rs:24:23
   |
24 | use tokio::fs::{self, File};
   |                       ^^^^

warning: unused imports: `DcKey`, `DcSecretKey`, `SignedPublicKey`, `SignedSecretKey`
  --> src/imex.rs:35:33
   |
35 |     self, load_self_secret_key, DcKey, DcSecretKey, SignedPublicKey, SignedSecretKey,
   |                                 ^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

error[E0425]: cannot find value `HEADER_AUTOCRYPT` in this scope
   --> src/imex.rs:369:17
    |
369 |     if header!= HEADER_AUTOCRYPT {
    |                 ^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this constant
    |
4   + use crate::pgp::HEADER_AUTOCRYPT;
    |

error[E0277]: `std::result::Result<usize, std::io::Error>` is not a future
   --> src/imex.rs:366:44
    |
366 |     file.read_to_string(&mut file_content).await?;
    |                                           -^^^^^
    |                                           ||
    |                                           |`std::result::Result<usize, std::io::Error>` is not a future
    |                                           help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `std::result::Result<usize, std::io::Error>`, which is required by `std::result::Result<usize, std::io::Error>: std::future::IntoFuture`
    = note: std::result::Result<usize, std::io::Error> must be a future or must implement `IntoFuture` to be awaited
    = note: required for `std::result::Result<usize, std::io::Error>` to implement `std::future::IntoFuture`

Some errors have detailed explanations: E0252, E0277, E0425, E0432.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 5 warnings
error: could not compile `deltachat` (lib) due to 11 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 5 warnings (5 duplicates)
error: could not compile `deltachat` (lib test) due to 11 previous errors; 5 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

