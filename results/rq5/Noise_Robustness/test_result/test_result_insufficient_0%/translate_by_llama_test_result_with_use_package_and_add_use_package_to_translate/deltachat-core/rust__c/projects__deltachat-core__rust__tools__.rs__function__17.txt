Fail
file path is :
projects/deltachat-core/rust/src/tools.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: `super` in paths can only be used in start position
 --> src/tools.rs:7:12
  |
7 | use crate::super::*;
  |            ^^^^^ `super` in paths can only be used in start position

error: cannot find macro `anyhow` in this scope
   --> src/tools.rs:312:20
    |
312 |         return Err(anyhow!("Buffer too small"));
    |                    ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
7   + use anyhow::anyhow;
    |

error: cannot find macro `anyhow` in this scope
   --> src/tools.rs:344:9
    |
344 |     Err(anyhow!("Unsupported file format"))
    |         ^^^^^^
    |
    = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
    |
7   + use anyhow::anyhow;
    |

warning: unused import: `Cursor`
  --> src/tools.rs:10:15
   |
10 | use std::io::{Cursor, Write};
   |               ^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0308]: mismatched types
   --> src/tools.rs:323:20
    |
323 |             pos += 2 + ((buf[pos + 2] as u32) << 8 + buf[pos + 3] as u32);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `usize`, found `u32`

error[E0277]: cannot add-assign `u32` to `usize`
   --> src/tools.rs:323:17
    |
323 |             pos += 2 + ((buf[pos + 2] as u32) << 8 + buf[pos + 3] as u32);
    |                 ^^ no implementation for `usize += u32`
    |
    = help: the trait `AddAssign<u32>` is not implemented for `usize`
    = help: the following other types implement trait `AddAssign<Rhs>`:
              <usize as AddAssign>
              <usize as AddAssign<&usize>>

error[E0308]: mismatched types
   --> src/tools.rs:330:18
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == 'F' {
    |                  ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
330 |     if buf[0] == b'G' && buf[1] == 'I' && buf[2] == 'F' {
    |                  ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:330:15
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == 'F' {
    |               ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:330:35
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == 'F' {
    |                                   ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
330 |     if buf[0] == 'G' && buf[1] == b'I' && buf[2] == 'F' {
    |                                   ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:330:32
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == 'F' {
    |                                ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:330:52
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == 'F' {
    |                                                    ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == b'F' {
    |                                                    ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:330:49
    |
330 |     if buf[0] == 'G' && buf[1] == 'I' && buf[2] == 'F' {
    |                                                 ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:336:36
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] ...
    |                                    ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
336 |     if buf[0] == 0x89 && buf[1] == b'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] == 0x0A
    |                                    ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:336:33
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] ...
    |                                 ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:336:53
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] ...
    |                                                     ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == b'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] == 0x0A
    |                                                     ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:336:50
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] ...
    |                                                  ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:336:70
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] ...
    |                                                                      ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == b'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] == 0x0A
    |                                                                      ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:336:67
    |
336 |     if buf[0] == 0x89 && buf[1] == 'P' && buf[2] == 'N' && buf[3] == 'G' && buf[4] == 0x0D && buf[5] == 0x0A && buf[6] == 0x1A && buf[7] ...
    |                                                                   ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:337:23
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                       ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
337 |         && buf[12] == b'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                       ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:337:20
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                    ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:337:41
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                         ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
337 |         && buf[12] == 'I' && buf[13] == b'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                         ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:337:38
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                      ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:337:59
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                                           ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == b'D' && buf[15] == 'R'
    |                                                           ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:337:56
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                                        ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

error[E0308]: mismatched types
   --> src/tools.rs:337:77
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                                                             ^^^ expected `u8`, found `char`
    |
help: if you meant to write a byte literal, prefix with `b`
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == b'R'
    |                                                                             ~~~~

error[E0277]: can't compare `u8` with `char`
   --> src/tools.rs:337:74
    |
337 |         && buf[12] == 'I' && buf[13] == 'H' && buf[14] == 'D' && buf[15] == 'R'
    |                                                                          ^^ no implementation for `u8 == char`
    |
    = help: the trait `PartialEq<char>` is not implemented for `u8`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              <u8 as PartialEq>
              <u8 as PartialEq<serde_json::Value>>

Some errors have detailed explanations: E0277, E0308, E0433.
For more information about an error, try `rustc --explain E0277`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 25 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 25 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

