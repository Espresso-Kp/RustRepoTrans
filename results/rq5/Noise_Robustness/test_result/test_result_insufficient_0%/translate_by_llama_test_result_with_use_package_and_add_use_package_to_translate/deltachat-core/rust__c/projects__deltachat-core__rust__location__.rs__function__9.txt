Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
   --> src/location.rs:350:45
    |
350 |     if context.is_none() || context.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                                             ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:365:66
    |
365 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 6, DC_CONTACT_ID_SELF).await?;
    |                                                                  ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:371:57
    |
371 |         context.cb(context, EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await?;
    |                                                         ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_none` found for reference `&context::Context` in the current scope
   --> src/location.rs:350:16
    |
350 |     if context.is_none() || context.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                ^^^^^^^ method not found in `&Context`

error[E0609]: no field `magic` on type `&context::Context`
   --> src/location.rs:350:37
    |
350 |     if context.is_none() || context.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                                     ^^^^^ unknown field
    |
    = note: available field is: `inner`
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/location.rs:355:35
    |
355 |     stmt_chats = Some(context.sql.prepare("SELECT id FROM chats WHERE locations_send_until>?;").await?);
    |                                   ^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:356:17
    |
356 |     context.sql.bind_param(stmt_chats.as_ref().unwrap(), 1, time::now()).await?;
    |                 ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:356:61
    |
356 |     context.sql.bind_param(stmt_chats.as_ref().unwrap(), 1, time::now()).await?;
    |                                                             ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
356 |     context.sql.bind_param(stmt_chats.as_ref().unwrap(), 1, mime::now()).await?;
    |                                                             ~~~~

error[E0282]: type annotations needed for `std::option::Option<T>`
   --> src/location.rs:346:9
    |
346 |     let mut stmt_chats = None;
    |         ^^^^^^^^^^^^^^
...
357 |     while stmt_chats.as_ref().unwrap().next().await? {
    |                                        ---- type must be known at this point
    |
help: consider giving `stmt_chats` an explicit type, where the type for type parameter `T` is specified
    |
346 |     let mut stmt_chats: std::option::Option<T> = None;
    |                       ++++++++++++++++++++++++

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/location.rs:359:40
    |
359 | ...   stmt_insert = Some(context.sql.prepare("INSERT INTO locations (latitude, longitude, accuracy, timestamp, chat_id, from_id) VALUES (...
    |                                      ^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:360:21
    |
360 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 1, latitude).await?;
    |                     ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:361:21
    |
361 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 2, longitude).await?;
    |                     ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:362:21
    |
362 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 3, accuracy).await?;
    |                     ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:363:21
    |
363 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 4, time::now()).await?;
    |                     ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0433]: failed to resolve: function `time` is not a crate or module
   --> src/location.rs:363:66
    |
363 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 4, time::now()).await?;
    |                                                                  ^^^^ function `time` is not a crate or module
    |
help: there is a crate or module with a similar name
    |
363 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 4, mime::now()).await?;
    |                                                                  ~~~~

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:364:21
    |
364 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 5, chat_id).await?;
    |                     ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `Sql` in the current scope
   --> src/location.rs:365:21
    |
365 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 6, DC_CONTACT_ID_SELF).await?;
    |                     ^^^^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:366:41
    |
366 |         context.sql.execute(stmt_insert.as_ref().unwrap()).await?;
    |                                         ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:360:44
    |
360 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 1, latitude).await?;
    |                                            ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:361:44
    |
361 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 2, longitude).await?;
    |                                            ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:362:44
    |
362 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 3, accuracy).await?;
    |                                            ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:363:44
    |
363 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 4, time::now()).await?;
    |                                            ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:364:44
    |
364 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 5, chat_id).await?;
    |                                            ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:365:44
    |
365 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 6, DC_CONTACT_ID_SELF).await?;
    |                                            ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::option::Option::<T>::as_ref`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:585:6
    |
585 | impl<T> Option<T> {
    |      ^ required by this bound in `Option::<T>::as_ref`
...
680 |     pub const fn as_ref(&self) -> Option<&T> {
    |                  ------ required by a bound in this associated function

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:347:27
    |
347 |     let mut stmt_insert = None;
    |                           ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::prelude::v1::None`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:17
    |
570 | pub enum Option<T> {
    |                 ^ required by this bound in `std::prelude::v1::None`
...
574 |     None,
    |     ---- required by a bound in this unit variant

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> src/location.rs:359:28
    |
359 | ... = Some(context.sql.prepare("INSERT INTO locations (latitude, longitude, accuracy, timestamp, chat_id, from_id) VALUES (?,?,?,?,?,?);").await...
    |       ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |       |
    |       required by a bound introduced by this call
    |
    = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `std::prelude::v1::Some`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:570:17
    |
570 | pub enum Option<T> {
    |                 ^ required by this bound in `std::prelude::v1::Some`
...
578 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ---- required by a bound in this tuple variant

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> src/location.rs:366:21
    |
366 |         context.sql.execute(stmt_insert.as_ref().unwrap()).await?;
    |                     ^^^^^^^------------------------------- an argument is missing
    |
note: method defined here
   --> src/sql.rs:401:18
    |
401 |     pub async fn execute(
    |                  ^^^^^^^
402 |         &self,
403 |         query: &str,
    |         -----------
404 |         params: impl rusqlite::Params + Send,
    |         ------------------------------------
help: provide the argument
    |
366 |         context.sql.execute(stmt_insert.as_ref().unwrap(), /* params */).await?;
    |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `cb` found for reference `&context::Context` in the current scope
   --> src/location.rs:371:17
    |
371 |         context.cb(context, EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await?;
    |                 ^^ method not found in `&Context`

error[E0425]: cannot find function `schedule_MAYBE_SEND_LOCATIONS` in this scope
   --> src/location.rs:372:9
    |
372 |         schedule_MAYBE_SEND_LOCATIONS(context, 0).await?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0624]: method `close` is private
   --> src/location.rs:375:17
    |
375 |     context.sql.close(stmt_chats.as_ref().unwrap()).await?;
    |                 ^^^^^ private method
    |
   ::: src/sql.rs:129:5
    |
129 |     async fn close(&self) {
    |     --------------------- private method defined here

error[E0624]: method `close` is private
   --> src/location.rs:376:17
    |
376 |     context.sql.close(stmt_insert.as_ref().unwrap()).await?;
    |                 ^^^^^ private method
    |
   ::: src/sql.rs:129:5
    |
129 |     async fn close(&self) {
    |     --------------------- private method defined here

error[E0599]: the method `as_ref` exists for enum `Option<str>`, but its trait bounds were not satisfied
   --> src/location.rs:376:35
    |
376 |     context.sql.close(stmt_insert.as_ref().unwrap()).await?;
    |                                   ^^^^^^ method cannot be called on `Option<str>` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `str: Sized`
note: the method `as_ref` exists on the type `str`
   --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:221:5
    |
221 |     fn as_ref(&self) -> &T;
    |     ^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `str` value, panicking if the value is an `Option::None`
    |
376 |     context.sql.close(stmt_insert.expect("REASON").as_ref().unwrap()).await?;
    |                                  +++++++++++++++++

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/location.rs:355:35
    |
355 |     stmt_chats = Some(context.sql.prepare("SELECT id FROM chats WHERE locations_send_until>?;").await?);
    |                                   ^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:356:17
    |
356 |     context.sql.bind_param(stmt_chats.as_ref().unwrap(), 1, time::now()).await?;
    |                 ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/location.rs:359:40
    |
359 | ...   stmt_insert = Some(context.sql.prepare("INSERT INTO locations (latitude, longitude, accuracy, timestamp, chat_id, from_id) VALUES (...
    |                                      ^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:360:21
    |
360 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 1, latitude).await?;
    |                     ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:361:21
    |
361 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 2, longitude).await?;
    |                     ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:362:21
    |
362 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 3, accuracy).await?;
    |                     ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:363:21
    |
363 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 4, time::now()).await?;
    |                     ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:364:21
    |
364 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 5, chat_id).await?;
    |                     ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

error[E0599]: no method named `bind_param` found for struct `sql::Sql` in the current scope
   --> src/location.rs:365:21
    |
365 |         context.sql.bind_param(stmt_insert.as_ref().unwrap(), 6, DC_CONTACT_ID_SELF).await?;
    |                     ^^^^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `bind_param` not found for this struct

Some errors have detailed explanations: E0061, E0277, E0282, E0425, E0433, E0599, E0609, E0624.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 32 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 32 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

