Fail
file path is :
projects/deltachat-core/rust/src/context.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: expected one of `)`, `,`, `.`, `?`, or an operator, found `"   AND m.hidden=0"`
    --> src/context.rs:1171:17
     |
1170 |              WHERE m.state=?"
     |                              -
     |                              |
     |                              expected one of `)`, `,`, `.`, `?`, or an operator
     |                              help: missing `,`
1171 |                 "   AND m.hidden=0"
     |                 ^^^^^^^^^^^^^^^^^^^ unexpected token

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `"   AND m.chat_id>?"`
    --> src/context.rs:1172:17
     |
1171 |                 "   AND m.hidden=0"
     |                                    -
     |                                    |
     |                                    expected one of `)`, `,`, `.`, `?`, or an operator
     |                                    help: missing `,`
1172 |                 "   AND m.chat_id>?"
     |                 ^^^^^^^^^^^^^^^^^^^^ unexpected token

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `"   AND ct.blocked=0"`
    --> src/context.rs:1173:17
     |
1172 |                 "   AND m.chat_id>?"
     |                                     -
     |                                     |
     |                                     expected one of `)`, `,`, `.`, `?`, or an operator
     |                                     help: missing `,`
1173 |                 "   AND ct.blocked=0"
     |                 ^^^^^^^^^^^^^^^^^^^^^ unexpected token

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `"   AND c.blocked=0"`
    --> src/context.rs:1174:17
     |
1173 |                 "   AND ct.blocked=0"
     |                                      -
     |                                      |
     |                                      expected one of `)`, `,`, `.`, `?`, or an operator
     |                                      help: missing `,`
1174 |                 "   AND c.blocked=0"
     |                 ^^^^^^^^^^^^^^^^^^^^ unexpected token

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `"   AND NOT(c.muted_until=-1 OR c.muted_until>?)"`
    --> src/context.rs:1175:17
     |
1174 |                 "   AND c.blocked=0"
     |                                     -
     |                                     |
     |                                     expected one of `)`, `,`, `.`, `?`, or an operator
     |                                     help: missing `,`
1175 |                 "   AND NOT(c.muted_until=-1 OR c.muted_until>?)"
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unexpected token

error: expected one of `)`, `,`, `.`, `?`, or an operator, found `" ORDER BY m.timestamp DESC,m.id DESC;"`
    --> src/context.rs:1176:17
     |
1175 |                 "   AND NOT(c.muted_until=-1 OR c.muted_until>?)"
     |                                                                  -
     |                                                                  |
     |                                                                  expected one of `)`, `,`, `.`, `?`, or an operator
     |                                                                  help: missing `,`
1176 |                 " ORDER BY m.timestamp DESC,m.id DESC;",
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unexpected token

error[E0252]: the name `Mutex` is defined multiple times
  --> src/context.rs:21:19
   |
7  | use tokio::sync::{Mutex, RwLock};
   |                   ----- previous import of the type `Mutex` here
...
21 | use tokio::sync::{Mutex, Notify, OnceCell, RwLock};
   |                   ^^^^^--
   |                   |
   |                   `Mutex` reimported here
   |                   help: remove unnecessary import
   |
   = note: `Mutex` must be defined only once in the type namespace of this module

error[E0252]: the name `RwLock` is defined multiple times
  --> src/context.rs:21:44
   |
7  | use tokio::sync::{Mutex, RwLock};
   |                          ------ previous import of the type `RwLock` here
...
21 | use tokio::sync::{Mutex, Notify, OnceCell, RwLock};
   |                                            ^^^^^^ `RwLock` reimported here
   |
   = note: `RwLock` must be defined only once in the type namespace of this module

error[E0252]: the name `create_id` is defined multiple times
  --> src/context.rs:47:26
   |
5  | use crate::tools::{create_id, duration_to_str, time, time_elapsed};
   |                    --------- previous import of the value `create_id` here
...
47 | use crate::tools::{self, create_id, duration_to_str, time, time_elapsed};
   |                          ^^^^^^^^^--
   |                          |
   |                          `create_id` reimported here
   |                          help: remove unnecessary import
   |
   = note: `create_id` must be defined only once in the value namespace of this module

error[E0252]: the name `duration_to_str` is defined multiple times
  --> src/context.rs:47:37
   |
5  | use crate::tools::{create_id, duration_to_str, time, time_elapsed};
   |                               --------------- previous import of the value `duration_to_str` here
...
47 | use crate::tools::{self, create_id, duration_to_str, time, time_elapsed};
   |                                     ^^^^^^^^^^^^^^^--
   |                                     |
   |                                     `duration_to_str` reimported here
   |                                     help: remove unnecessary import
   |
   = note: `duration_to_str` must be defined only once in the value namespace of this module

error[E0252]: the name `time` is defined multiple times
  --> src/context.rs:47:54
   |
5  | use crate::tools::{create_id, duration_to_str, time, time_elapsed};
   |                                                ---- previous import of the value `time` here
...
47 | use crate::tools::{self, create_id, duration_to_str, time, time_elapsed};
   |                                                      ^^^^--
   |                                                      |
   |                                                      `time` reimported here
   |                                                      help: remove unnecessary import
   |
   = note: `time` must be defined only once in the value namespace of this module

error[E0252]: the name `time_elapsed` is defined multiple times
  --> src/context.rs:47:60
   |
5  | use crate::tools::{create_id, duration_to_str, time, time_elapsed};
   |                                                      ------------ previous import of the value `time_elapsed` here
...
47 | use crate::tools::{self, create_id, duration_to_str, time, time_elapsed};
   |                                                            ^^^^^^^^^^^^ `time_elapsed` reimported here
   |
   = note: `time_elapsed` must be defined only once in the value namespace of this module

error[E0252]: the name `Message` is defined multiple times
  --> src/context.rs:37:28
   |
4  | use crate::message::{Message, MessageState, MsgId, Viewtype};
   |                      ------- previous import of the type `Message` here
...
37 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                            ^^^^^^^--
   |                            |
   |                            `Message` reimported here
   |                            help: remove unnecessary import
   |
   = note: `Message` must be defined only once in the type namespace of this module

error[E0252]: the name `MessageState` is defined multiple times
  --> src/context.rs:37:37
   |
4  | use crate::message::{Message, MessageState, MsgId, Viewtype};
   |                               ------------ previous import of the type `MessageState` here
...
37 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                     ^^^^^^^^^^^^--
   |                                     |
   |                                     `MessageState` reimported here
   |                                     help: remove unnecessary import
   |
   = note: `MessageState` must be defined only once in the type namespace of this module

error[E0252]: the name `MsgId` is defined multiple times
  --> src/context.rs:37:51
   |
4  | use crate::message::{Message, MessageState, MsgId, Viewtype};
   |                                             ----- previous import of the type `MsgId` here
...
37 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                                   ^^^^^--
   |                                                   |
   |                                                   `MsgId` reimported here
   |                                                   help: remove unnecessary import
   |
   = note: `MsgId` must be defined only once in the type namespace of this module

error[E0252]: the name `Viewtype` is defined multiple times
  --> src/context.rs:37:58
   |
4  | use crate::message::{Message, MessageState, MsgId, Viewtype};
   |                                                    -------- previous import of the type `Viewtype` here
...
37 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                                                          ^^^^^^^^ `Viewtype` reimported here
   |
   = note: `Viewtype` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `async_trait`
 --> src/context.rs:6:5
  |
6 | use async_trait::async_trait;
  |     ^^^^^^^^^^^ use of undeclared crate or module `async_trait`

error: cannot find macro `anyhow` in this scope
    --> src/context.rs:1162:24
     |
1162 |             return Err(anyhow!("Invalid context"));
     |                        ^^^^^^
     |
     = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
     |
4    + use anyhow::anyhow;
     |

error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
    --> src/context.rs:1161:77
     |
1161 |         if self.context.is_none() || self.context.as_ref().unwrap().magic!= DC_CONTEXT_MAGIC {
     |                                                                             ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_STATE_IN_FRESH` in this scope
    --> src/context.rs:1179:40
     |
1179 |         stmt.as_mut().unwrap().bind(1, DC_STATE_IN_FRESH);
     |                                        ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CHAT_ID_LAST_SPECIAL` in this scope
    --> src/context.rs:1180:40
     |
1180 |         stmt.as_mut().unwrap().bind(2, DC_CHAT_ID_LAST_SPECIAL);
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
     |
help: consider importing this constant
     |
4    + use crate::constants::DC_CHAT_ID_LAST_SPECIAL;
     |

warning: unused import: `MessageState`
 --> src/context.rs:4:31
  |
4 | use crate::message::{Message, MessageState, MsgId, Viewtype};
  |                               ^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused imports: `Mutex`, `RwLock`
  --> src/context.rs:21:19
   |
21 | use tokio::sync::{Mutex, Notify, OnceCell, RwLock};
   |                   ^^^^^                    ^^^^^^

warning: unused imports: `MessageState`, `Message`, `MsgId`, `Viewtype`
  --> src/context.rs:37:28
   |
37 | use crate::message::{self, Message, MessageState, MsgId, Viewtype};
   |                            ^^^^^^^  ^^^^^^^^^^^^  ^^^^^  ^^^^^^^^

warning: unused imports: `create_id`, `duration_to_str`, `time_elapsed`, `time`
  --> src/context.rs:47:26
   |
47 | use crate::tools::{self, create_id, duration_to_str, time, time_elapsed};
   |                          ^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^  ^^^^^^^^^^^^

error[E0609]: no field `context` on type `&context::Context`
    --> src/context.rs:1161:17
     |
1161 |         if self.context.is_none() || self.context.as_ref().unwrap().magic!= DC_CONTEXT_MAGIC {
     |                 ^^^^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
    --> src/context.rs:1161:43
     |
1161 |         if self.context.is_none() || self.context.as_ref().unwrap().magic!= DC_CONTEXT_MAGIC {
     |                                           ^^^^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

error[E0609]: no field `context` on type `&context::Context`
    --> src/context.rs:1165:26
     |
1165 |         stmt = Some(self.context.as_ref().unwrap().sql.prepare(
     |                          ^^^^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `running_state`, `generating_key_mutex` ... and 19 others

Some errors have detailed explanations: E0252, E0425, E0432, E0609.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 4 warnings
error: could not compile `deltachat` (lib) due to 24 previous errors; 4 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:5813:22
     |
5813 |         assert_eq!(t.get_fresh_msgs().await?.len(), 0);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:5820:22
     |
5820 |         assert_eq!(t.get_fresh_msgs().await?.len(), 1);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:5828:22
     |
5828 |         assert_eq!(t.get_fresh_msgs().await?.len(), 1);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:6241:22
     |
6241 |         assert_eq!(t.get_fresh_msgs().await?.len(), 1);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:6259:22
     |
6259 |         assert_eq!(t.get_fresh_msgs().await?.len(), 0);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:6303:22
     |
6303 |         assert_eq!(t.get_fresh_msgs().await?.len(), 0);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/chat.rs:6309:22
     |
6309 |         assert_eq!(t.get_fresh_msgs().await?.len(), 0);
     |                      ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/message.rs:2372:24
     |
2372 |         assert_eq!(bob.get_fresh_msgs().await?.len(), 0);
     |                        ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/message.rs:2399:26
     |
2399 |         assert_eq!(alice.get_fresh_msgs().await?.len(), 2);
     |                          ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/message.rs:2408:26
     |
2408 |         assert_eq!(alice.get_fresh_msgs().await?.len(), 2);
     |                          ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/message.rs:2414:26
     |
2414 |         assert_eq!(alice.get_fresh_msgs().await?.len(), 1);
     |                          ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/message.rs:2420:26
     |
2420 |         assert_eq!(alice.get_fresh_msgs().await?.len(), 0);
     |                          ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

error[E0624]: method `get_fresh_msgs` is private
    --> src/receive_imf/tests.rs:1504:18
     |
1504 |     assert_eq!(t.get_fresh_msgs().await.unwrap().len(), 1);
     |                  ^^^^^^^^^^^^^^ private method
     |
    ::: src/context.rs:1156:1
     |
1156 | async fn get_fresh_msgs(&self) -> Result<Vec<MsgId>> {
     | ---------------------------------------------------- private method defined here

Some errors have detailed explanations: E0252, E0425, E0432, E0609, E0624.
warning: `deltachat` (lib test) generated 4 warnings (4 duplicates)
error: could not compile `deltachat` (lib test) due to 37 previous errors; 4 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

