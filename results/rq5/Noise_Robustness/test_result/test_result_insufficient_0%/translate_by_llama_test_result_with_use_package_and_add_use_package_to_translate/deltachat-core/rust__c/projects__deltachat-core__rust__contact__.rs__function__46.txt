Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error: cannot find macro `anyhow` in this scope
    --> src/contact.rs:1432:24
     |
1432 |             return Err(anyhow!("Failed to load peerstate"));
     |                        ^^^^^^
     |
     = note: `anyhow` is in scope, but it is a crate, not a macro
help: consider importing this macro
     |
3    + use anyhow::anyhow;
     |

error[E0599]: no method named `peerstate` found for reference `&Contact` in the current scope
    --> src/contact.rs:1427:54
     |
1427 |     let peerstate = if let Some(peerstate) = contact.peerstate() {
     |                                                      ^^^^^^^^^ method not found in `&Contact`

error[E0599]: no function or associated item named `new` found for struct `Peerstate` in the current scope
    --> src/contact.rs:1430:36
     |
1430 |         let peerstate = Peerstate::new(context)?;
     |                                    ^^^ function or associated item not found in `Peerstate`
     |
    ::: src/peerstate.rs:35:1
     |
35   | pub struct Peerstate {
     | -------------------- function or associated item `new` not found for this struct
     |
note: if you're trying to build a new `Peerstate` consider using one of the following associated functions:
      Peerstate::from_header
      Peerstate::from_public_key
      Peerstate::from_gossip
    --> src/peerstate.rs:102:5
     |
102  |       pub fn from_header(header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112  | /     pub fn from_public_key(
113  | |         addr: &str,
114  | |         last_seen: i64,
115  | |         prefer_encrypt: EncryptPreference,
116  | |         public_key: &SignedPublicKey,
117  | |     ) -> Self {
     | |_____________^
...
140  |       pub fn from_gossip(gossip_header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `iroh_metrics::core::Metric`
             candidate #20: `bitvec::store::BitStore`
             candidate #21: `radium::Radium`
             candidate #22: `netlink_sys::async_socket::AsyncSocket`
             candidate #23: `nonzero_ext::NonZero`
             candidate #24: `Allocable`
             candidate #25: `AnyBoxConstructor`
             candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0599]: no method named `sql` found for reference `&context::Context` in the current scope
    --> src/contact.rs:1431:43
     |
1431 |         if!peerstate.load_by_addr(context.sql(), contact.addr())? {
     |                                           ^^^-- help: remove the arguments
     |                                           |
     |                                           field, not a method

error[E0599]: no method named `addr` found for reference `&Contact` in the current scope
    --> src/contact.rs:1431:58
     |
1431 |         if!peerstate.load_by_addr(context.sql(), contact.addr())? {
     |                                                          ^^^^ field, not a method
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `addr`, perhaps you need to implement it:
             candidate #1: `object::read::macho::Section`
help: remove the arguments
     |
1431 -         if!peerstate.load_by_addr(context.sql(), contact.addr())? {
1431 +         if!peerstate.load_by_addr(context.sql(), contact.addr)? {
     |
help: there is a method with a similar name
     |
1431 |         if!peerstate.load_by_addr(context.sql(), contact.get_addr())? {
     |                                                          ~~~~~~~~

error[E0599]: no method named `peerstate` found for reference `&contact::Contact` in the current scope
    --> src/contact.rs:1427:54
     |
1427 |     let peerstate = if let Some(peerstate) = contact.peerstate() {
     |                                                      ^^^^^^^^^ method not found in `&Contact`

error[E0599]: no function or associated item named `new` found for struct `peerstate::Peerstate` in the current scope
    --> src/contact.rs:1430:36
     |
1430 |         let peerstate = Peerstate::new(context)?;
     |                                    ^^^ function or associated item not found in `Peerstate`
     |
    ::: src/peerstate.rs:35:1
     |
35   | pub struct Peerstate {
     | -------------------- function or associated item `new` not found for this struct
     |
note: if you're trying to build a new `peerstate::Peerstate` consider using one of the following associated functions:
      peerstate::Peerstate::from_header
      peerstate::Peerstate::from_public_key
      peerstate::Peerstate::from_gossip
    --> src/peerstate.rs:102:5
     |
102  |       pub fn from_header(header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112  | /     pub fn from_public_key(
113  | |         addr: &str,
114  | |         last_seen: i64,
115  | |         prefer_encrypt: EncryptPreference,
116  | |         public_key: &SignedPublicKey,
117  | |     ) -> Self {
     | |_____________^
...
140  |       pub fn from_gossip(gossip_header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `sysinfo::traits::SystemExt`
             candidate #20: `gimli::read::lookup::PubStuffEntry`
             candidate #21: `iroh_metrics::core::Metric`
             candidate #22: `bitvec::store::BitStore`
             candidate #23: `radium::Radium`
             candidate #24: `netlink_sys::async_socket::AsyncSocket`
             candidate #25: `nonzero_ext::NonZero`
             candidate #26: `Allocable`
             candidate #27: `AnyBoxConstructor`
             candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
             candidate #29: `plotters::style::font::FontData`

error[E0599]: no method named `addr` found for reference `&contact::Contact` in the current scope
    --> src/contact.rs:1431:58
     |
1431 |         if!peerstate.load_by_addr(context.sql(), contact.addr())? {
     |                                                          ^^^^ field, not a method
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following trait defines an item `addr`, perhaps you need to implement it:
             candidate #1: `object::read::macho::section::Section`
help: remove the arguments
     |
1431 -         if!peerstate.load_by_addr(context.sql(), contact.addr())? {
1431 +         if!peerstate.load_by_addr(context.sql(), contact.addr)? {
     |
help: there is a method with a similar name
     |
1431 |         if!peerstate.load_by_addr(context.sql(), contact.get_addr())? {
     |                                                          ~~~~~~~~

For more information about this error, try `rustc --explain E0599`.
error: could not compile `deltachat` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 5 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

