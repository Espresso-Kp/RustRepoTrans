Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0308]: arguments to this function are incorrect
   --> src/cd.rs:146:20
    |
146 |                 if!is_suspiciously_successive_range(range, &character_range.unwrap()) {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: expected `Option<&str>`, found `&String`
   --> src/cd.rs:146:53
    |
146 |                 if!is_suspiciously_successive_range(range, &character_range.unwrap()) {
    |                                                     ^^^^^
    = note:   expected enum `std::option::Option<&'static str>`
            found reference `&std::string::String`
note: expected `Option<&str>`, found `&&str`
   --> src/cd.rs:146:60
    |
146 |                 if!is_suspiciously_successive_range(range, &character_range.unwrap()) {
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:   expected enum `std::option::Option<&'static str>`
            found reference `&&str`
note: function defined here
   --> src/utils.rs:307:15
    |
307 | pub(crate) fn is_suspiciously_successive_range(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
308 |     range_a: Option<&'static str>,
    |     -----------------------------
309 |     range_b: Option<&'static str>,
    |     -----------------------------
help: try wrapping the expression in `Some`
    |
146 |                 if!is_suspiciously_successive_range(Some(range), &character_range.unwrap()) {
    |                                                     +++++     +
help: try wrapping the expression in `Some`
    |
146 |                 if!is_suspiciously_successive_range(range, Some(&character_range.unwrap())) {
    |                                                            +++++                         +

error[E0308]: mismatched types
   --> src/cd.rs:152:29
    |
152 |            .or_else(|| Some(character_range.unwrap().clone()));
    |                        ---- ^^^^^^^^^^^^^^^^^^^^^^^^^-----^^
    |                        |    |                        |
    |                        |    |                        help: try using a conversion method: `to_string`
    |                        |    expected `String`, found `&str`
    |                        arguments to this enum variant are incorrect
    |
help: the type constructed contains `&str` due to the type of the argument passed
   --> src/cd.rs:152:24
    |
152 |            .or_else(|| Some(character_range.unwrap().clone()));
    |                        ^^^^^--------------------------------^
    |                             |
    |                             this argument influences the type of `Some`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:572:5
    |
572 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^^^

error[E0308]: mismatched types
   --> src/cd.rs:155:39
    |
155 |             layer_target_range = Some(character_range.unwrap().clone());
    |                                  ---- ^^^^^^^^^^^^^^^^^^^^^^^^^-----^^
    |                                  |    |                        |
    |                                  |    |                        help: try using a conversion method: `to_string`
    |                                  |    expected `String`, found `&str`
    |                                  arguments to this enum variant are incorrect
    |
help: the type constructed contains `&str` due to the type of the argument passed
   --> src/cd.rs:155:34
    |
155 |             layer_target_range = Some(character_range.unwrap().clone());
    |                                  ^^^^^--------------------------------^
    |                                       |
    |                                       this argument influences the type of `Some`
note: tuple variant defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:572:5
    |
572 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^^^

error[E0308]: mismatched types
    --> src/cd.rs:158:32
     |
158  |         if!layers.contains_key(layer_target_range.as_ref()) {
     |                   ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |                   |            |
     |                   |            expected `&_`, found `Option<&String>`
     |                   |            help: consider borrowing here: `&layer_target_range.as_ref()`
     |                   arguments to this method are incorrect
     |
     = note: expected reference `&_`
                     found enum `std::option::Option<&std::string::String>`
note: method defined here
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1041:12
     |
1041 |     pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool
     |            ^^^^^^^^^^^^

error[E0308]: mismatched types
    --> src/cd.rs:159:64
     |
159  |             layers.insert(layer_target_range.unwrap().clone(), character.to_lowercase());
     |                    ------                                      ^^^^^^^^^^^^^^^^^^^^^^^^- help: try using a conversion method: `.to_string()`
     |                    |                                           |
     |                    |                                           expected `String`, found `ToLowercase`
     |                    arguments to this method are incorrect
     |
help: the return type of this call is `ToLowercase` due to the type of the argument passed
    --> src/cd.rs:159:13
     |
159  |             layers.insert(layer_target_range.unwrap().clone(), character.to_lowercase());
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------^
     |                                                                |
     |                                                                this argument influences the return type of `insert`
note: method defined here
    --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:1103:12
     |
1103 |     pub fn insert(&mut self, k: K, v: V) -> Option<V> {
     |            ^^^^^^

error[E0308]: mismatched types
   --> src/cd.rs:163:71
    |
163 | ...p().clone(), layers.get(layer_target_range.unwrap()).unwrap().to_string() + &character.to_lowercase());
    |                        --- ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                        |   |
    |                        |   expected `&_`, found `String`
    |                        |   help: consider borrowing here: `&layer_target_range.unwrap()`
    |                        arguments to this method are incorrect
    |
    = note: expected reference `&_`
                  found struct `std::string::String`
note: method defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:876:12
    |
876 |     pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>
    |            ^^^

error[E0308]: mismatched types
   --> src/cd.rs:163:123
    |
163 | ...e.unwrap()).unwrap().to_string() + &character.to_lowercase());
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&ToLowercase`
    |
    = note: expected reference `&str`
               found reference `&ToLowercase`

For more information about this error, try `rustc --explain E0308`.
error: could not compile `charset-normalizer-rs` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `charset-normalizer-rs` (lib test) due to 7 previous errors

