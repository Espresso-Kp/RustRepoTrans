Fail
file path is :
projects/charset-normalizer/rust/src/cd.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0428]: the name `alphabet_languages` is defined multiple times
   --> src/cd.rs:247:1
    |
92  | / pub(crate) fn alphabet_languages(
93  | |     characters: &[char],
94  | |     ignore_non_latin: bool,
95  | | ) -> Vec<&'static Language> {
...   |
122 | |     languages.iter().map(|&lang| lang.0).collect()
123 | | }
    | |_- previous definition of the value `alphabet_languages` here
...
247 | / pub(crate) fn alphabet_languages(
248 | |     characters: &[char],
249 | |     ignore_non_latin: bool,
250 | |     include_languages: &[&str],
...   |
272 | |     languages.iter().map(|&lang| lang.0).collect()
273 | | }
    | |_^ `alphabet_languages` redefined here
    |
    = note: `alphabet_languages` must be defined only once in the value namespace of this module

error[E0428]: the name `filter_alt_coherence_matches` is defined multiple times
   --> src/cd.rs:274:1
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    | ------------------------------------------------------------------------------------------ previous definition of the value `filter_alt_coherence_matches` here
...
274 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `filter_alt_coherence_matches` redefined here
    |
    = note: `filter_alt_coherence_matches` must be defined only once in the value namespace of this module

error[E0599]: no method named `name` found for reference `&&Language` in the current scope
   --> src/cd.rs:206:58
    |
206 |         include_languages.iter().any(|language| language.name() == "Latin Based")
    |                                                          ^^^^ method not found in `&&Language`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `name`, perhaps you need to implement one of them:
            candidate #1: `MessDetectorPlugin`
            candidate #2: `Encoding`
            candidate #3: `Endian`
            candidate #4: `GBType`

error[E0599]: no method named `name` found for reference `&&&Language` in the current scope
   --> src/cd.rs:211:40
    |
211 |            .filter(|language| language.name()!= "Latin Based")
    |                                        ^^^^ method not found in `&&&Language`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `name`, perhaps you need to implement one of them:
            candidate #1: `MessDetectorPlugin`
            candidate #2: `Encoding`
            candidate #3: `Endian`
            candidate #4: `GBType`

error[E0599]: no method named `name` found for reference `&&Language` in the current scope
   --> src/cd.rs:212:37
    |
212 |            .map(|language| language.name())
    |                                     ^^^^ method not found in `&&Language`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `name`, perhaps you need to implement one of them:
            candidate #1: `MessDetectorPlugin`
            candidate #2: `Encoding`
            candidate #3: `Endian`
            candidate #4: `GBType`

error[E0308]: mismatched types
   --> src/cd.rs:217:65
    |
217 |         let sequence_frequencies: Counter<char> = Counter::from(layer.chars());
    |                                                   ------------- ^^^^^^^^^^^^^ expected `Counter<char>`, found `Chars<'_>`
    |                                                   |
    |                                                   arguments to this function are incorrect
    |
    = note: expected struct `Counter<char>`
               found struct `Chars<'_>`
note: associated function defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:548:8
    |
548 |     fn from(value: T) -> Self;
    |        ^^^^

error[E0061]: this function takes 2 arguments but 3 arguments were supplied
   --> src/cd.rs:228:25
    |
228 |         for language in alphabet_languages(&popular_character_ordered, ignore_non_latin, &lg_inclusion_list) {
    |                         ^^^^^^^^^^^^^^^^^^                                             --------------------
    |                                                                                        | |
    |                                                                                        | unexpected argument of type `&Vec<_>`
    |                                                                                        help: remove the extra argument
    |
note: function defined here
   --> src/cd.rs:92:15
    |
92  | pub(crate) fn alphabet_languages(
    |               ^^^^^^^^^^^^^^^^^^
93  |     characters: &[char],
    |     -------------------
94  |     ignore_non_latin: bool,
    |     ----------------------

error[E0308]: mismatched types
   --> src/cd.rs:229:65
    |
229 |             let ratio = characters_popularity_compare(language, &popular_character_ordered);
    |                         -----------------------------           ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `&Vec<char>`
    |                         |
    |                         arguments to this function are incorrect
    |
    = note: expected reference `&str`
               found reference `&Vec<char>`
note: function defined here
   --> src/cd.rs:150:15
    |
150 | pub(crate) fn characters_popularity_compare(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
151 |     language: &Language,
152 |     ordered_characters: &str,
    |     ------------------------

error[E0599]: no method named `get` found for reference `&OrderedFloat<f32>` in the current scope
   --> src/cd.rs:231:73
    |
231 |             if ratio < threshold.as_ref().unwrap_or(&OrderedFloat(0.1)).get() {
    |                                                                         ^^^ method not found in `&OrderedFloat<f32>`

error[E0308]: mismatched types
   --> src/cd.rs:233:32
    |
233 |             } else if ratio >= 0.8 {
    |                       -----    ^^^ expected `Result<f32, String>`, found floating-point number
    |                       |
    |                       expected because this is `Result<f32, std::string::String>`
    |
    = note: expected enum `Result<f32, std::string::String>`
               found type `{float}`
help: try wrapping the expression in `Ok`
    |
233 |             } else if ratio >= Ok(0.8) {
    |                                +++   +

error[E0308]: mismatched types
   --> src/cd.rs:234:31
    |
234 |                 results.push((language.clone(), ratio));
    |                               ^^^^^^^^^^^^^^^^ expected `Language`, found `&Language`
    |
note: `Language` does not implement `Clone`, so `&Language` was cloned instead
   --> src/cd.rs:234:31
    |
234 |                 results.push((language.clone(), ratio));
    |                               ^^^^^^^^
help: consider annotating `Language` with `#[derive(Clone)]`
   --> src/entity.rs:23:1
    |
23  + #[derive(Clone)]
24  |     if is_multi_byte_encoding(iana_name) {
    |

error[E0308]: mismatched types
   --> src/cd.rs:234:49
    |
234 |                 results.push((language.clone(), ratio));
    |                                                 ^^^^^ expected `f32`, found `Result<f32, String>`
    |
    = note: expected type `f32`
               found enum `Result<f32, std::string::String>`

error[E0308]: mismatched types
   --> src/cd.rs:243:48
    |
243 |     let results = filter_alt_coherence_matches(&results).collect::<Vec<_>>();
    |                   ---------------------------- ^^^^^^^^ expected `&Vec<CoherenceMatch>`, found `&Vec<(Language, f32)>`
    |                   |
    |                   arguments to this function are incorrect
    |
    = note: expected reference `&Vec<CoherenceMatch>`
               found reference `&Vec<(Language, f32)>`
note: function defined here
   --> src/cd.rs:160:15
    |
160 | pub(crate) fn filter_alt_coherence_matches(results: &CoherenceMatches) -> CoherenceMatches {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------

error[E0599]: `Vec<CoherenceMatch>` is not an iterator
   --> src/cd.rs:243:58
    |
243 |     let results = filter_alt_coherence_matches(&results).collect::<Vec<_>>();
    |                                                          ^^^^^^^ `Vec<CoherenceMatch>` is not an iterator; try calling `.into_iter()` or `.iter()`
    |
   ::: /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:396:1
    |
396 | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
    | ------------------------------------------------------------------------------------------------ doesn't satisfy `Vec<CoherenceMatch>: Iterator`
    |
    = note: the following trait bounds were not satisfied:
            `Vec<CoherenceMatch>: Iterator`
            which is required by `&mut Vec<CoherenceMatch>: Iterator`
            `[CoherenceMatch]: Iterator`
            which is required by `&mut [CoherenceMatch]: Iterator`

error[E0308]: mismatched types
   --> src/cd.rs:252:67
    |
252 |     let mut languages: Vec<(&Language, f32)> = Vec::with_capacity(LANGUAGE_SUPPORTED_COUNT);
    |                                                ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^ expected `usize`, found `Lazy<usize>`
    |                                                |
    |                                                arguments to this function are incorrect
    |
    = note: expected type `usize`
             found struct `once_cell::sync::Lazy<usize>`
note: associated function defined here
   --> /home/k/.rustup/toolchains/1.70.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:478:12
    |
478 |     pub fn with_capacity(capacity: usize) -> Self {
    |            ^^^^^^^^^^^^^
help: consider dereferencing the type
    |
252 |     let mut languages: Vec<(&Language, f32)> = Vec::with_capacity(*LANGUAGE_SUPPORTED_COUNT);
    |                                                                   +

error[E0599]: no method named `ordefault` found for enum `std::collections::hash_map::Entry` in the current scope
   --> src/cd.rs:277:50
    |
277 |         let score = index.entry(result.language).ordefault();
    |                                                  ^^^^^^^^^ help: there is a method with a similar name: `or_default`

Some errors have detailed explanations: E0061, E0308, E0428, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `charset-normalizer-rs` (lib) due to 16 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `charset-normalizer-rs` (lib test) due to 16 previous errors

