Fail
file path is :
projects/deltachat-core/rust/src/message.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0599]: no method named `is_dc_message` found for reference `&message::Message` in the current scope
   --> src/message.rs:811:17
    |
811 |         if self.is_dc_message() {
    |                 ^^^^^^^^^^^^^ field, not a method
    |
help: remove the arguments
    |
811 -         if self.is_dc_message() {
811 +         if self.is_dc_message {
    |
help: there is a method with a similar name
    |
811 |         if self.is_setupmessage() {
    |                 ~~~~~~~~~~~~~~~

error[E0599]: no variant or associated item named `HEIGHT` found for enum `Param` in the current scope
   --> src/message.rs:812:39
    |
812 |             self.param.get_int(Param::HEIGHT, 0)
    |                                       ^^^^^^
    |                                       |
    |                                       variant or associated item not found in `Param`
    |                                       help: there is a variant with a similar name: `Height`
    |
   ::: src/param.rs:19:1
    |
19  | pub enum Param {
    | -------------- variant or associated item `HEIGHT` not found for this enum

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> src/message.rs:812:24
    |
812 |             self.param.get_int(Param::HEIGHT, 0)
    |                        ^^^^^^^              ---
    |                                             | |
    |                                             | unexpected argument of type `{integer}`
    |                                             help: remove the extra argument
    |
note: method defined here
   --> src/param.rs:319:12
    |
319 |     pub fn get_int(&self, key: Param) -> Option<i32> {
    |            ^^^^^^^        ----------

error[E0308]: mismatched types
   --> src/message.rs:812:13
    |
810 | pub fn get_height(&self) -> i32 {
    |                             --- expected `i32` because of return type
811 |         if self.is_dc_message() {
812 |             self.param.get_int(Param::HEIGHT, 0)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found `Option<i32>`
    |
    = note: expected type `i32`
               found enum `std::option::Option<i32>`
help: consider using `Option::expect` to unwrap the `std::option::Option<i32>` value, panicking if the value is an `Option::None`
    |
812 |             self.param.get_int(Param::HEIGHT, 0).expect("REASON")
    |                                                 +++++++++++++++++

Some errors have detailed explanations: E0061, E0308, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no variant or associated item named `HEIGHT` found for enum `param::Param` in the current scope
   --> src/message.rs:812:39
    |
812 |             self.param.get_int(Param::HEIGHT, 0)
    |                                       ^^^^^^
    |                                       |
    |                                       variant or associated item not found in `Param`
    |                                       help: there is a variant with a similar name: `Height`
    |
   ::: src/param.rs:19:1
    |
19  | pub enum Param {
    | -------------- variant or associated item `HEIGHT` not found for this enum

error: could not compile `deltachat` (lib test) due to 4 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

