Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
   --> src/location.rs:346:61
    |
346 |     if context.inner.sql.is_none() || context.inner.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                                                             ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:367:17
    |
367 |                 DC_CONTACT_ID_SELF,
    |                 ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:375:56
    |
375 |         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
    |                                                        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `is_none` found for struct `Sql` in the current scope
   --> src/location.rs:346:26
    |
346 |     if context.inner.sql.is_none() || context.inner.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                          ^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `is_none` not found for this struct

error[E0609]: no field `magic` on type `Arc<InnerContext>`
   --> src/location.rs:346:53
    |
346 |     if context.inner.sql.is_none() || context.inner.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                                                     ^^^^^ unknown field
    |
    = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `as_ref` found for struct `Sql` in the current scope
   --> src/location.rs:350:40
    |
350 |     let stmt_chats = context.inner.sql.as_ref().unwrap().execute(
    |                                        ^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `as_ref` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `as_ref`, perhaps you need to implement it:
            candidate #1: `AsRef`

error[E0599]: no method named `as_ref` found for struct `Sql` in the current scope
   --> src/location.rs:359:45
    |
359 |         let stmt_insert = context.inner.sql.as_ref().unwrap().execute(
    |                                             ^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `as_ref` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `as_ref`, perhaps you need to implement it:
            candidate #1: `AsRef`

error[E0308]: mismatched types
   --> src/location.rs:365:17
    |
365 |                 time(),
    |                 ^^^^^^ expected `f64`, found `i64`
    |
help: you can convert an `i64` to an `f64`, producing the floating point representation of the integer, rounded if necessary
    |
365 |                 time() as f64,
    |                        ++++++

error[E0061]: this method takes 1 argument but 3 arguments were supplied
   --> src/location.rs:375:17
    |
375 |         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
    |                 ^^^^^^^^^^                             ------------------  - unexpected argument of type `{integer}`
    |                                                        |
    |                                                        unexpected argument
    |
   ::: src/events/payload.rs:195:5
    |
195 |     LocationChanged(Option<ContactId>),
    |     --------------- `LocationChanged` defines an enum variant constructor here, which should be called
    |
note: expected `EventType`, found enum constructor
   --> src/location.rs:375:28
    |
375 |         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:          expected enum `payload::EventType`
            found enum constructor `fn(std::option::Option<ContactId>) -> payload::EventType {payload::EventType::LocationChanged}`
note: method defined here
   --> src/context.rs:595:12
    |
595 |     pub fn emit_event(&self, event: EventType) {
    |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
    |
375 |         context.emit_event(EventType::LocationChanged(/* std::option::Option<ContactId> */), DC_CONTACT_ID_SELF, 0);
    |                                                      ++++++++++++++++++++++++++++++++++++++
help: remove the extra arguments
    |
375 -         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
375 +         context.emit_event(/* payload::EventType */);
    |

error[E0425]: cannot find function `schedule_MAYBE_SEND_LOCATIONS` in this scope
   --> src/location.rs:376:9
    |
376 |         schedule_MAYBE_SEND_LOCATIONS(context, 0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0061, E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `is_none` found for struct `sql::Sql` in the current scope
   --> src/location.rs:346:26
    |
346 |     if context.inner.sql.is_none() || context.inner.magic!= DC_CONTEXT_MAGIC || (latitude == 0.0 && longitude == 0.0) {
    |                          ^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `is_none` not found for this struct

error[E0599]: no method named `as_ref` found for struct `sql::Sql` in the current scope
   --> src/location.rs:350:40
    |
350 |     let stmt_chats = context.inner.sql.as_ref().unwrap().execute(
    |                                        ^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `as_ref` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `as_ref`, perhaps you need to implement it:
            candidate #1: `AsRef`

error[E0599]: no method named `as_ref` found for struct `sql::Sql` in the current scope
   --> src/location.rs:359:45
    |
359 |         let stmt_insert = context.inner.sql.as_ref().unwrap().execute(
    |                                             ^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `as_ref` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `as_ref`, perhaps you need to implement it:
            candidate #1: `AsRef`

error[E0061]: this method takes 1 argument but 3 arguments were supplied
   --> src/location.rs:375:17
    |
375 |         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
    |                 ^^^^^^^^^^                             ------------------  - unexpected argument of type `{integer}`
    |                                                        |
    |                                                        unexpected argument
    |
   ::: src/events/payload.rs:195:5
    |
195 |     LocationChanged(Option<ContactId>),
    |     --------------- `LocationChanged` defines an enum variant constructor here, which should be called
    |
note: expected `EventType`, found enum constructor
   --> src/location.rs:375:28
    |
375 |         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:          expected enum `payload::EventType`
            found enum constructor `fn(std::option::Option<contact::ContactId>) -> payload::EventType {payload::EventType::LocationChanged}`
note: method defined here
   --> src/context.rs:595:12
    |
595 |     pub fn emit_event(&self, event: EventType) {
    |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
    |
375 |         context.emit_event(EventType::LocationChanged(/* std::option::Option<contact::ContactId> */), DC_CONTACT_ID_SELF, 0);
    |                                                      +++++++++++++++++++++++++++++++++++++++++++++++
help: remove the extra arguments
    |
375 -         context.emit_event(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0);
375 +         context.emit_event(/* payload::EventType */);
    |

error: could not compile `deltachat` (lib test) due to 10 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

