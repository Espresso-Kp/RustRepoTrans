Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0425]: cannot find value `NAMESPACE_SEPARATOR` in this scope
   --> crates/catalog/rest/src/catalog.rs:385:21
    |
385 |     let namespace = NAMESPACE_SEPARATOR.join(namespace_tuple);
    |                     ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:384:32
    |
384 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace);
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&catalog::RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:386:25
    |
386 |     let response = self._session.delete(self.url(Endpoints::drop_namespace, namespace));
    |                         ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `url` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:386:46
    |
386 |     let response = self._session.delete(self.url(Endpoints::drop_namespace, namespace));
    |                                              ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:386:50
    |
386 |     let response = self._session.delete(self.url(Endpoints::drop_namespace, namespace));
    |                                                  ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:13
    |
390 |         let text = response.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:20
    |
390 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:20
    |
390 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:42
    |
390 |         let text = response.bytes().await?;
    |                                          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:400:9
    |
388 | /     if response.status().as_u16()!= NO_CONTENT {
389 | |         let code = response.status();
390 | |         let text = response.bytes().await?;
391 | |         let e = serde_json::from_slice::<ErrorResponse>(&text).map_err(|e| {
...   |
400 | |         Err(e.into())
    | |         ^^^^^^^^^^^^^ expected `()`, found `Result<_, _>`
401 | |     }
    | |_____- expected this to be `()`
    |
    = note: expected unit type `()`
                    found enum `Result<_, _>`
note: return type inferred to be `()` here
   --> crates/catalog/rest/src/catalog.rs:286:1
    |
286 | #[async_trait]
    | ^^^^^^^^^^^^^^
    = note: this error originates in the attribute macro `async_trait` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider using a semicolon here
    |
400 |         Err(e.into());
    |                      +
help: consider using a semicolon here
    |
401 |     };
    |      +

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `NAMESPACE_SEPARATOR` in this scope
   --> crates/catalog/rest/src/catalog.rs:385:21
    |
385 |     let namespace = NAMESPACE_SEPARATOR.join(namespace_tuple);
    |                     ^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:384:32
    |
384 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace);
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0609]: no field `_session` on type `&RestCatalog`
   --> crates/catalog/rest/src/catalog.rs:386:25
    |
386 |     let response = self._session.delete(self.url(Endpoints::drop_namespace, namespace));
    |                         ^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`

error[E0599]: no method named `url` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:386:46
    |
386 |     let response = self._session.delete(self.url(Endpoints::drop_namespace, namespace));
    |                                              ^^^ method not found in `&RestCatalog`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `url`, perhaps you need to implement it:
            candidate #1: `ResponseBuilderExt`

error[E0433]: failed to resolve: use of undeclared type `Endpoints`
   --> crates/catalog/rest/src/catalog.rs:386:50
    |
386 |     let response = self._session.delete(self.url(Endpoints::drop_namespace, namespace));
    |                                                  ^^^^^^^^^ use of undeclared type `Endpoints`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:13
    |
390 |         let text = response.bytes().await?;
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:20
    |
390 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:20
    |
390 |         let text = response.bytes().await?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:390:42
    |
390 |         let text = response.bytes().await?;
    |                                          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:400:9
    |
388 | /     if response.status().as_u16()!= NO_CONTENT {
389 | |         let code = response.status();
390 | |         let text = response.bytes().await?;
391 | |         let e = serde_json::from_slice::<ErrorResponse>(&text).map_err(|e| {
...   |
400 | |         Err(e.into())
    | |         ^^^^^^^^^^^^^ expected `()`, found `Result<_, _>`
401 | |     }
    | |_____- expected this to be `()`
    |
    = note: expected unit type `()`
                    found enum `Result<_, _>`
note: return type inferred to be `()` here
   --> crates/catalog/rest/src/catalog.rs:286:1
    |
286 | #[async_trait]
    | ^^^^^^^^^^^^^^
    = note: this error originates in the attribute macro `async_trait` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider using a semicolon here
    |
400 |         Err(e.into());
    |                      +
help: consider using a semicolon here
    |
401 |     };
    |      +

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 10 previous errors

