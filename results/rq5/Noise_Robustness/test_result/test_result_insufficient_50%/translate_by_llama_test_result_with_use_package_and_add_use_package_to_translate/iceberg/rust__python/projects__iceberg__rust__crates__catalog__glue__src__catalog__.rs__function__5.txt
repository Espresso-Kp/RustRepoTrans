Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:25
    |
152 |     let database_name = convert_to_database(namespace);
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&std::collections::HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |     let database_name = convert_to_database(namespace, /* &std::collections::HashMap<std::string::String, std::string::String> */);
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `create_database` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:153:23
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_database` not found for this struct
...
153 |     match self.client.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                       ^^^^^^^^^^^^^^^ method not found in `GlueClient`
    |
help: one of the expressions' fields has a method of the same name
    |
153 |     match self.client.0.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                       ++

error[E0599]: the method `clone` exists for enum `Result<DatabaseInput, Error>`, but its trait bounds were not satisfied
   --> crates/catalog/glue/src/catalog.rs:153:69
    |
153 |     match self.client.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                                                                     ^^^^^ method cannot be called on `Result<DatabaseInput, Error>` due to unsatisfied trait bounds
    |
   ::: /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- doesn't satisfy `iceberg::Error: Clone`
    |
    = note: the following trait bounds were not satisfied:
            `iceberg::Error: Clone`
            which is required by `std::result::Result<DatabaseInput, iceberg::Error>: Clone`
note: the method `clone` exists on the type `DatabaseInput`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/clone.rs:160:5
help: use the `?` operator to extract the `DatabaseInput` value, propagating a `Result::Err` value to the caller
    |
153 |     match self.client.create_database(with_properties(database_name?.clone(), properties.clone())) {
    |                                                                    +

error[E0425]: cannot find function `with_properties` in this scope
   --> crates/catalog/glue/src/catalog.rs:153:39
    |
153 |     match self.client.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                                       ^^^^^^^^^^^^^^^ help: a local variable with a similar name exists: `properties`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `aws_sdk_glue::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:34
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                  ^^^^^^^^^^^^^ variant or associated item not found in `Error`

error[E0599]: no associated item named `AlreadyExistsError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:65
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                 ^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `std::result::Result<DatabaseInput, iceberg::Error>` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:156:122
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                                                                          ^^^^^^^^^^^^^ `std::result::Result<DatabaseInput, iceberg::Error>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<DatabaseInput, iceberg::Error>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no function or associated item named `from_aws_build_error` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:157:29
    |
157 |             _ => Err(Error::from_aws_build_error(e)),
    |                             ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:152:25
    |
152 |     let database_name = convert_to_database(namespace);
    |                         ^^^^^^^^^^^^^^^^^^^----------- an argument of type `&HashMap<std::string::String, std::string::String>` is missing
    |
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------
98  |     properties: &HashMap<String, String>,
    |     ------------------------------------
help: provide the argument
    |
152 |     let database_name = convert_to_database(namespace, /* &HashMap<std::string::String, std::string::String> */);
    |                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `create_database` found for struct `GlueClient` in the current scope
   --> crates/catalog/glue/src/catalog.rs:153:23
    |
50  | struct GlueClient(aws_sdk_glue::Client);
    | ----------------- method `create_database` not found for this struct
...
153 |     match self.client.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                       ^^^^^^^^^^^^^^^ method not found in `GlueClient`
    |
help: one of the expressions' fields has a method of the same name
    |
153 |     match self.client.0.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                       ++

error[E0599]: the method `clone` exists for enum `Result<DatabaseInput, Error>`, but its trait bounds were not satisfied
   --> crates/catalog/glue/src/catalog.rs:153:69
    |
153 |     match self.client.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                                                                     ^^^^^ method cannot be called on `Result<DatabaseInput, Error>` due to unsatisfied trait bounds
    |
   ::: /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:108:1
    |
108 | pub struct Error {
    | ---------------- doesn't satisfy `iceberg::Error: Clone`
    |
    = note: the following trait bounds were not satisfied:
            `iceberg::Error: Clone`
            which is required by `Result<DatabaseInput, iceberg::Error>: Clone`
note: the method `clone` exists on the type `DatabaseInput`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/clone.rs:160:5
help: use the `?` operator to extract the `DatabaseInput` value, propagating a `Result::Err` value to the caller
    |
153 |     match self.client.create_database(with_properties(database_name?.clone(), properties.clone())) {
    |                                                                    +

error[E0425]: cannot find function `with_properties` in this scope
   --> crates/catalog/glue/src/catalog.rs:153:39
    |
153 |     match self.client.create_database(with_properties(database_name.clone(), properties.clone())) {
    |                                       ^^^^^^^^^^^^^^^ help: a local variable with a similar name exists: `properties`

error[E0599]: no variant or associated item named `AlreadyExists` found for enum `aws_sdk_glue::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:34
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                  ^^^^^^^^^^^^^ variant or associated item not found in `Error`

error[E0599]: no associated item named `AlreadyExistsError` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:156:65
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                 ^^^^^^^^^^^^^^^^^^ associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `Result<DatabaseInput, iceberg::Error>` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:156:122
    |
156 |             aws_sdk_glue::Error::AlreadyExists(_) => Err(Error::AlreadyExistsError(format!("Database {} already exists", database_name))),
    |                                                                                                                          ^^^^^^^^^^^^^ `Result<DatabaseInput, iceberg::Error>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `Result<DatabaseInput, iceberg::Error>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no function or associated item named `from_aws_build_error` found for struct `iceberg::Error` in the current scope
   --> crates/catalog/glue/src/catalog.rs:157:29
    |
157 |             _ => Err(Error::from_aws_build_error(e)),
    |                             ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `Error`
    |
note: if you're trying to build a new `iceberg::Error`, consider using `iceberg::Error::new` which returns `iceberg::Error`
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/error.rs:197:5
    |
197 |     pub fn new(kind: ErrorKind, message: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `iceberg-catalog-glue` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...

