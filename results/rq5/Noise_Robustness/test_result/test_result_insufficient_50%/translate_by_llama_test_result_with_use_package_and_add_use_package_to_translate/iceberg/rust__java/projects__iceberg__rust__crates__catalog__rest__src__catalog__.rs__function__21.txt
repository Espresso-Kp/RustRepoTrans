Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `query` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:397:21
    |
397 |     let resp = self.query(
    |                -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
397 |     let resp = self.client.query(
    |                     +++++++

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:398:18
    |
398 |         Request::builder()
    |                  ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `paths`
   --> crates/catalog/rest/src/catalog.rs:400:44
    |
400 |            .uri(format!("{}?pageToken={}", paths::tables(namespace), ""))
    |                                            ^^^^^ use of undeclared crate or module `paths`

error[E0433]: failed to resolve: use of undeclared crate or module `headers`
   --> crates/catalog/rest/src/catalog.rs:401:43
    |
401 |            .header(header::AUTHORIZATION, headers::auth_header(self.config))
    |                                           ^^^^^^^ use of undeclared crate or module `headers`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:397:9
    |
397 |     let resp = self.query(
    |         ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:397:16
    |
397 |       let resp = self.query(
    |  ________________^
398 | |         Request::builder()
399 | |            .method("GET")
400 | |            .uri(format!("{}?pageToken={}", paths::tables(namespace), ""))
...   |
403 | |     )
404 | |    .await?;
    | |__________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:397:16
    |
397 |       let resp = self.query(
    |  ________________^
398 | |         Request::builder()
399 | |            .method("GET")
400 | |            .uri(format!("{}?pageToken={}", paths::tables(namespace), ""))
...   |
403 | |     )
404 | |    .await?;
    | |__________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:404:10
    |
404 |    .await?;
    |          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0599]: no method named `query` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:419:25
    |
419 |         let resp = self.query(
    |                    -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
419 |         let resp = self.client.query(
    |                         +++++++

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:420:22
    |
420 |             Request::builder()
    |                      ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `paths`
   --> crates/catalog/rest/src/catalog.rs:422:48
    |
422 |                .uri(format!("{}?pageToken={}", paths::tables(namespace), page_token))
    |                                                ^^^^^ use of undeclared crate or module `paths`

error[E0433]: failed to resolve: use of undeclared crate or module `headers`
   --> crates/catalog/rest/src/catalog.rs:423:47
    |
423 |                .header(header::AUTHORIZATION, headers::auth_header(self.config))
    |                                               ^^^^^^^ use of undeclared crate or module `headers`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:419:13
    |
419 |         let resp = self.query(
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:419:20
    |
419 |           let resp = self.query(
    |  ____________________^
420 | |             Request::builder()
421 | |                .method("GET")
422 | |                .uri(format!("{}?pageToken={}", paths::tables(namespace), page_token))
...   |
425 | |         )
426 | |        .await?;
    | |______________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:419:20
    |
419 |           let resp = self.query(
    |  ____________________^
420 | |             Request::builder()
421 | |                .method("GET")
422 | |                .uri(format!("{}?pageToken={}", paths::tables(namespace), page_token))
...   |
425 | |         )
426 | |        .await?;
    | |______________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:426:14
    |
426 |        .await?;
    |              ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0609]: no field `next_page_token` on type `ListTableResponse`
   --> crates/catalog/rest/src/catalog.rs:439:42
    |
439 |         page_token = list_table_response.next_page_token.clone();
    |                                          ^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `identifiers`

Some errors have detailed explanations: E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 17 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0599]: no method named `query` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:397:21
    |
397 |     let resp = self.query(
    |                -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
397 |     let resp = self.client.query(
    |                     +++++++

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:398:18
    |
398 |         Request::builder()
    |                  ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `paths`
   --> crates/catalog/rest/src/catalog.rs:400:44
    |
400 |            .uri(format!("{}?pageToken={}", paths::tables(namespace), ""))
    |                                            ^^^^^ use of undeclared crate or module `paths`

error[E0433]: failed to resolve: use of undeclared crate or module `headers`
   --> crates/catalog/rest/src/catalog.rs:401:43
    |
401 |            .header(header::AUTHORIZATION, headers::auth_header(self.config))
    |                                           ^^^^^^^ use of undeclared crate or module `headers`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:397:9
    |
397 |     let resp = self.query(
    |         ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:397:16
    |
397 |       let resp = self.query(
    |  ________________^
398 | |         Request::builder()
399 | |            .method("GET")
400 | |            .uri(format!("{}?pageToken={}", paths::tables(namespace), ""))
...   |
403 | |     )
404 | |    .await?;
    | |__________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:397:16
    |
397 |       let resp = self.query(
    |  ________________^
398 | |         Request::builder()
399 | |            .method("GET")
400 | |            .uri(format!("{}?pageToken={}", paths::tables(namespace), ""))
...   |
403 | |     )
404 | |    .await?;
    | |__________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:404:10
    |
404 |    .await?;
    |          ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0599]: no method named `query` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:419:25
    |
419 |         let resp = self.query(
    |                    -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
419 |         let resp = self.client.query(
    |                         +++++++

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:420:22
    |
420 |             Request::builder()
    |                      ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared crate or module `paths`
   --> crates/catalog/rest/src/catalog.rs:422:48
    |
422 |                .uri(format!("{}?pageToken={}", paths::tables(namespace), page_token))
    |                                                ^^^^^ use of undeclared crate or module `paths`

error[E0433]: failed to resolve: use of undeclared crate or module `headers`
   --> crates/catalog/rest/src/catalog.rs:423:47
    |
423 |                .header(header::AUTHORIZATION, headers::auth_header(self.config))
    |                                               ^^^^^^^ use of undeclared crate or module `headers`

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:419:13
    |
419 |         let resp = self.query(
    |             ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:419:20
    |
419 |           let resp = self.query(
    |  ____________________^
420 | |             Request::builder()
421 | |                .method("GET")
422 | |                .uri(format!("{}?pageToken={}", paths::tables(namespace), page_token))
...   |
425 | |         )
426 | |        .await?;
    | |______________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:419:20
    |
419 |           let resp = self.query(
    |  ____________________^
420 | |             Request::builder()
421 | |                .method("GET")
422 | |                .uri(format!("{}?pageToken={}", paths::tables(namespace), page_token))
...   |
425 | |         )
426 | |        .await?;
    | |______________^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `ControlFlow`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:85:1

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
   --> crates/catalog/rest/src/catalog.rs:426:14
    |
426 |        .await?;
    |              ^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `Break`
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/ops/control_flow.rs:93:5

error[E0609]: no field `next_page_token` on type `ListTableResponse`
   --> crates/catalog/rest/src/catalog.rs:439:42
    |
439 |         page_token = list_table_response.next_page_token.clone();
    |                                          ^^^^^^^^^^^^^^^ unknown field
    |
    = note: available field is: `identifiers`

Some errors have detailed explanations: E0277, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-rest` (lib) due to 17 previous errors

