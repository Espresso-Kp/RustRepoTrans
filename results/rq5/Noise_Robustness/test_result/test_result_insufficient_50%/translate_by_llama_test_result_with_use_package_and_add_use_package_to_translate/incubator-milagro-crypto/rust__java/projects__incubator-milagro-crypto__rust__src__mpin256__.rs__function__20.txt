Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin256.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found keyword `false`
   --> src/./mpin256.rs:599:29
    |
599 |             P.to_bytes(xcid false);
    |                            -^^^^^ expected one of 8 possible tokens
    |                            |
    |                            help: missing `,`

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found keyword `false`
   --> src/./mpin256.rs:604:28
    |
604 |             P.to_bytes(xid false);
    |                           -^^^^^ expected one of 8 possible tokens
    |                           |
    |                           help: missing `,`

error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found keyword `false`
   --> src/./mpin256.rs:607:20
    |
607 |     T.to_bytes(sec false);
    |                   -^^^^^ expected one of 8 possible tokens
    |                   |
    |                   help: missing `,`

error[E0308]: mismatched types
   --> src/./mpin256.rs:570:24
    |
570 |         Big::randomnum(r, rng)
    |         -------------- ^
    |         |              |
    |         |              expected `&Big`, found `Big`
    |         |              help: consider borrowing here: `&r`
    |         arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:824:12
    |
824 |     pub fn randomnum(q: &Big, rng: &mut RAND) -> Big {
    |            ^^^^^^^^^ -------

error[E0308]: mismatched types
   --> src/./mpin256.rs:575:43
    |
575 |     let mut h = hashit(sha, 0, client_id, EFS);
    |                 ------                    ^^^ expected `&mut [u8]`, found `usize`
    |                 |
    |                 arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin256.rs:576:24
     |
576  |     let P = ECP::mapit(&h);
     |             ---------- ^^ expected `&[u8]`, found `&bool`
     |             |
     |             arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin256.rs:581:12
    |
581 |     pin %= MAXPIN;
    |            ^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot calculate and assign the remainder of `usize` divided by `i32`
   --> src/./mpin256.rs:581:9
    |
581 |     pin %= MAXPIN;
    |         ^^ no implementation for `usize %= i32`
    |
    = help: the trait `RemAssign<i32>` is not implemented for `usize`
    = help: the following other types implement trait `RemAssign<Rhs>`:
              <usize as RemAssign<&usize>>
              <usize as RemAssign>

error[E0308]: mismatched types
    --> src/./mpin256.rs:582:22
     |
582  |     let W = P.pinmul(pin, PBLEN);
     |               ------ ^^^ expected `i32`, found `usize`
     |               |
     |               arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
582  |     let W = P.pinmul(pin.try_into().unwrap(), PBLEN);
     |                         ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin256.rs:585:37
    |
585 |         let mut W = ECP::from_bytes(permit);
    |                     --------------- ^^^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: arguments to this function are incorrect
   --> src/./mpin256.rs:590:13
    |
590 |         h = hashit(sha, date, h, EFS);
    |             ^^^^^^            -  --- expected `&mut [u8]`, found `usize`
    |                               |
    |                               expected `&[u8]`, found `bool`
    |
note: function defined here
   --> src/./mpin256.rs:167:4
    |
167 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^ ----------  --------  ---------  ------------

error[E0308]: mismatched types
    --> src/./mpin256.rs:591:28
     |
591  |         let W = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0599]: no method named `g1mul` found for struct `bls48::ecp::ECP` in the current scope
   --> src/./mpin256.rs:593:19
    |
593 |             P = P.g1mul(&P, &x);
    |                   ^^^^^ help: there is a method with a similar name: `mul`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- method `g1mul` not found for this struct

error[E0599]: no method named `g1mul` found for struct `bls48::ecp::ECP` in the current scope
   --> src/./mpin256.rs:596:19
    |
596 |             P = P.g1mul(&P, &x);
    |                   ^^^^^ help: there is a method with a similar name: `mul`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- method `g1mul` not found for this struct

error[E0599]: no method named `g1mul` found for struct `bls48::ecp::ECP` in the current scope
   --> src/./mpin256.rs:603:19
    |
603 |             P = P.g1mul(&P, &x);
    |                   ^^^^^ help: there is a method with a similar name: `mul`
    |
   ::: src/./ecp.rs:32:1
    |
32  | pub struct ECP {
    | -------------- method `g1mul` not found for this struct

error[E0308]: mismatched types
   --> src/./mpin256.rs:585:37
    |
585 |         let mut W = ECP::from_bytes(permit);
    |                     --------------- ^^^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `amcl` (lib) due to 15 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 15 previous errors

