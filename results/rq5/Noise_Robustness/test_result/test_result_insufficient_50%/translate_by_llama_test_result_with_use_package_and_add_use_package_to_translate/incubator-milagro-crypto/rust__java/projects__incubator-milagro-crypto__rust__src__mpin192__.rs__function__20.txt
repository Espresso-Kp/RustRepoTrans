Fail
file path is :
projects/incubator-milagro-crypto/rust/src/mpin192.rs

output is:


error is :
   Compiling amcl v0.3.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/incubator-milagro-crypto/rust)
error[E0425]: cannot find value `CURVE_Order` in module `rom`
   --> src/./mpin192.rs:534:31
    |
534 |       let mut r = Big::new(rom::CURVE_Order);
    |                                 ^^^^^^^^^^^ help: a constant with a similar name exists: `CURVE_ORDER`
    |
   ::: src/./roms/rom_bls24_64.rs:77:1
    |
77  | / pub const CURVE_ORDER: [Chunk; NLEN] = [
78  | |     0x1A08FFF0000001,
79  | |     0x1E7033FF551190,
80  | |     0x6ADE7EE322DDAF,
...   |
86  | |     0x0,
87  | | ];
    | |__- similarly named constant `CURVE_ORDER` defined here

error[E0425]: cannot find value `h` in this scope
   --> src/./mpin192.rs:559:35
    |
559 |         let h = hashit(sha, date, h, EFS);
    |                                   ^ help: a local variable with a similar name exists: `P`

error[E0061]: this function takes 0 arguments but 1 argument was supplied
   --> src/./mpin192.rs:534:17
    |
534 |     let mut r = Big::new(rom::CURVE_Order);
    |                 ^^^^^^^^ ----------------
    |                          |
    |                          unexpected argument
    |                          help: remove the extra argument
    |
note: associated function defined here
   --> src/./big.rs:87:12
    |
87  |     pub fn new() -> Big {
    |            ^^^

error[E0308]: mismatched types
   --> src/./mpin192.rs:537:28
    |
537 |         x = Big::randomnum(r, rng);
    |             -------------- ^
    |             |              |
    |             |              expected `&Big`, found `Big`
    |             |              help: consider borrowing here: `&r`
    |             arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:824:12
    |
824 |     pub fn randomnum(q: &Big, rng: &mut RAND) -> Big {
    |            ^^^^^^^^^ -------

error[E0308]: mismatched types
   --> src/./mpin192.rs:541:20
    |
541 |         x.to_bytes(x);
    |           -------- ^ expected `&mut [u8]`, found `Big`
    |           |
    |           arguments to this method are incorrect
    |
note: method defined here
   --> src/./big.rs:510:12
    |
510 |     pub fn to_bytes(&self, b: &mut [u8]) {
    |            ^^^^^^^^        ------------

error[E0308]: mismatched types
   --> src/./mpin192.rs:543:29
    |
543 |         x = Big::from_bytes(x);
    |             --------------- ^ expected `&[u8]`, found `Big`
    |             |
    |             arguments to this function are incorrect
    |
note: associated function defined here
   --> src/./big.rs:519:12
    |
519 |     pub fn from_bytes(b: &[u8]) -> Big {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:545:55
    |
545 |     let mut P = ECP::mapit(&hashit(sha, 0, client_id, EFS));
    |                             ------                    ^^^ expected `&mut [u8]`, found `usize`
    |                             |
    |                             arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin192.rs:545:28
     |
545  |     let mut P = ECP::mapit(&hashit(sha, 0, client_id, EFS));
     |                 ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:550:12
    |
550 |     pin %= MAXPIN;
    |            ^^^^^^ expected `usize`, found `i32`

error[E0277]: cannot calculate and assign the remainder of `usize` divided by `i32`
   --> src/./mpin192.rs:550:9
    |
550 |     pin %= MAXPIN;
    |         ^^ no implementation for `usize %= i32`
    |
    = help: the trait `RemAssign<i32>` is not implemented for `usize`
    = help: the following other types implement trait `RemAssign<Rhs>`:
              <usize as RemAssign<&usize>>
              <usize as RemAssign>

error[E0308]: mismatched types
    --> src/./mpin192.rs:551:26
     |
551  |     let mut W = P.pinmul(pin, PBLEN);
     |                   ------ ^^^ expected `i32`, found `usize`
     |                   |
     |                   arguments to this method are incorrect
     |
note: method defined here
    --> src/./ecp.rs:1048:12
     |
1048 |     pub fn pinmul(&self, e: i32, bts: i32) -> ECP {
     |            ^^^^^^        ------
help: you can convert a `usize` to an `i32` and panic if the converted value doesn't fit
     |
551  |     let mut W = P.pinmul(pin.try_into().unwrap(), PBLEN);
     |                             ++++++++++++++++++++

error[E0308]: mismatched types
   --> src/./mpin192.rs:554:37
    |
554 |         let mut W = ECP::from_bytes(permit);
    |                     --------------- ^^^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

error[E0308]: mismatched types
   --> src/./mpin192.rs:559:38
    |
559 |         let h = hashit(sha, date, h, EFS);
    |                 ------               ^^^ expected `&mut [u8]`, found `usize`
    |                 |
    |                 arguments to this function are incorrect
    |
note: function defined here
   --> src/./mpin192.rs:134:4
    |
134 | fn hashit(sha: usize, n: usize, id: &[u8], w: &mut [u8]) -> bool {
    |    ^^^^^^                                  ------------

error[E0308]: mismatched types
    --> src/./mpin192.rs:560:28
     |
560  |         let W = ECP::mapit(&h);
     |                 ---------- ^^ expected `&[u8]`, found `&bool`
     |                 |
     |                 arguments to this function are incorrect
     |
     = note: expected reference `&[u8]`
                found reference `&bool`
note: associated function defined here
    --> src/./ecp.rs:1297:12
     |
1297 |     pub fn mapit(h: &[u8]) -> ECP {
     |            ^^^^^ --------

error[E0433]: failed to resolve: use of undeclared type `PAIR192`
   --> src/./mpin192.rs:562:17
    |
562 |             P = PAIR192::G1mul(P, x);
    |                 ^^^^^^^ use of undeclared type `PAIR192`

error[E0433]: failed to resolve: use of undeclared type `PAIR192`
   --> src/./mpin192.rs:564:17
    |
564 |             W = PAIR192::G1mul(W, x);
    |                 ^^^^^^^ use of undeclared type `PAIR192`

error[E0433]: failed to resolve: use of undeclared type `PAIR192`
   --> src/./mpin192.rs:568:17
    |
568 |             P = PAIR192::G1mul(P, x);
    |                 ^^^^^^^ use of undeclared type `PAIR192`

error[E0433]: failed to resolve: use of undeclared type `PAIR`
   --> src/./mpin192.rs:575:17
    |
575 |             P = PAIR::G1mul(P, x);
    |                 ^^^^ use of undeclared type `PAIR`

error[E0308]: mismatched types
   --> src/./mpin192.rs:554:37
    |
554 |         let mut W = ECP::from_bytes(permit);
    |                     --------------- ^^^^^^ expected `&[u8]`, found `Option<&[u8]>`
    |                     |
    |                     arguments to this function are incorrect
    |
    = note: expected reference `&[u8]`
                    found enum `std::option::Option<&[u8]>`
note: associated function defined here
   --> src/./ecp.rs:469:12
    |
469 |     pub fn from_bytes(b: &[u8]) -> ECP {
    |            ^^^^^^^^^^ --------

Some errors have detailed explanations: E0061, E0277, E0308, E0425, E0433.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `amcl` (lib) due to 18 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `amcl` (lib test) due to 18 previous errors

