Fail
file path is :
projects/deltachat-core/rust/src/pgp.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0433]: failed to resolve: could not find `memory` in `pgp`
   --> src/pgp.rs:156:23
    |
156 |     let pubmem = pgp::memory::Memory::new();
    |                       ^^^^^^ could not find `memory` in `pgp`

error[E0433]: failed to resolve: could not find `memory` in `pgp`
   --> src/pgp.rs:157:23
    |
157 |     let secmem = pgp::memory::Memory::new();
    |                       ^^^^^^ could not find `memory` in `pgp`

error[E0433]: failed to resolve: could not find `rsa` in `pgp`
   --> src/pgp.rs:169:14
    |
169 |     if !pgp::rsa::generate_keypair(&seckey, DC_KEYGEN_BITS, DC_KEYGEN_E, None, None, None, 0).context("Failed to generate secret key")?
    |              ^^^ could not find `rsa` in `pgp`

error[E0433]: failed to resolve: could not find `rsa` in `pgp`
   --> src/pgp.rs:170:18
    |
170 |         || !pgp::rsa::generate_keypair(&subkey, DC_KEYGEN_BITS, DC_KEYGEN_E, None, None, None, 0).context("Failed to generate subkey")? {
    |                  ^^^ could not find `rsa` in `pgp`

error[E0433]: failed to resolve: could not find `Key` in `key`
   --> src/pgp.rs:151:32
    |
151 |     let mut seckey = pgp::key::Key::default();
    |                                ^^^ could not find `Key` in `key`

error[E0433]: failed to resolve: could not find `Key` in `key`
   --> src/pgp.rs:152:32
    |
152 |     let mut pubkey = pgp::key::Key::default();
    |                                ^^^ could not find `Key` in `key`

error[E0433]: failed to resolve: could not find `Key` in `key`
   --> src/pgp.rs:153:32
    |
153 |     let mut subkey = pgp::key::Key::default();
    |                                ^^^ could not find `Key` in `key`

error[E0425]: cannot find value `PGP_KEY_ID_SIZE` in this scope
   --> src/pgp.rs:154:30
    |
154 |     let subkeyid = vec![0u8; PGP_KEY_ID_SIZE];
    |                              ^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: could not find `output` in `pgp`
   --> src/pgp.rs:158:23
    |
158 |     let pubout = pgp::output::Output::new();
    |                       ^^^^^^ could not find `output` in `pgp`
    |
help: consider importing this struct
    |
4   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
158 -     let pubout = pgp::output::Output::new();
158 +     let pubout = Output::new();
    |

error[E0433]: failed to resolve: could not find `output` in `pgp`
   --> src/pgp.rs:159:23
    |
159 |     let secout = pgp::output::Output::new();
    |                       ^^^^^^ could not find `output` in `pgp`
    |
help: consider importing this struct
    |
4   + use std::process::Output;
    |
help: if you import `Output`, refer to it directly
    |
159 -     let secout = pgp::output::Output::new();
159 +     let secout = Output::new();
    |

error[E0425]: cannot find value `DC_KEYGEN_BITS` in this scope
   --> src/pgp.rs:169:45
    |
169 |     if !pgp::rsa::generate_keypair(&seckey, DC_KEYGEN_BITS, DC_KEYGEN_E, None, None, None, 0).context("Failed to generate secret key")?
    |                                             ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_KEYGEN_E` in this scope
   --> src/pgp.rs:169:61
    |
169 |     if !pgp::rsa::generate_keypair(&seckey, DC_KEYGEN_BITS, DC_KEYGEN_E, None, None, None, 0).context("Failed to generate secret key")?
    |                                                             ^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_KEYGEN_BITS` in this scope
   --> src/pgp.rs:170:49
    |
170 |         || !pgp::rsa::generate_keypair(&subkey, DC_KEYGEN_BITS, DC_KEYGEN_E, None, None, None, 0).context("Failed to generate subkey")? {
    |                                                 ^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_KEYGEN_E` in this scope
   --> src/pgp.rs:170:65
    |
170 |         || !pgp::rsa::generate_keypair(&subkey, DC_KEYGEN_BITS, DC_KEYGEN_E, None, None, None, 0).context("Failed to generate subkey")? {
    |                                                                 ^^^^^^^^^^^ not found in this scope

warning: unused `#[macro_use]` import
  --> src/lib.rs:31:1
   |
31 | #[macro_use]
   | ^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `once_cell::sync::OnceCell`
 --> src/pgp.rs:4:5
  |
4 | use once_cell::sync::OnceCell;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SecretKeyParamsBuilder`, `SubkeyParamsBuilder`
  --> src/pgp.rs:14:53
   |
14 |     Deserializable, KeyType as PgpKeyType, Message, SecretKeyParamsBuilder, SignedPublicKey,
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^
15 |     SignedPublicSubKey, SignedSecretKey, StandaloneSignature, SubkeyParamsBuilder,
   |                                                               ^^^^^^^^^^^^^^^^^^^

warning: unused import: `SecretKeyTrait`
  --> src/pgp.rs:20:58
   |
20 |     CompressionAlgorithm, KeyTrait, Mpi, PublicKeyTrait, SecretKeyTrait, StringToKey,
   |                                                          ^^^^^^^^^^^^^^

error[E0599]: no method named `is_empty` found for struct `deltachat_contact_tools::EmailAddress` in the current scope
   --> src/pgp.rs:161:13
    |
161 |     if addr.is_empty() || pubmem.is_none() || secmem.is_none() || pubout.is_none() || secout.is_none() {
    |             ^^^^^^^^ method not found in `EmailAddress`
    |
help: some of the expressions' fields have a method of the same name
    |
161 |     if addr.domain.is_empty() || pubmem.is_none() || secmem.is_none() || pubout.is_none() || secout.is_none() {
    |             +++++++
161 |     if addr.local.is_empty() || pubmem.is_none() || secmem.is_none() || pubout.is_none() || secout.is_none() {
    |             ++++++

error[E0599]: no function or associated item named `default` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:162:60
    |
162 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `SignedSecretKey` in the current scope
   --> src/pgp.rs:162:96
    |
162 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `SignedSecretKey`, consider using `SignedSecretKey::new` which returns `SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:171:60
    |
171 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `SignedSecretKey` in the current scope
   --> src/pgp.rs:171:96
    |
171 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `SignedSecretKey`, consider using `SignedSecretKey::new` which returns `SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no variant or associated item named `PublicKey` found for enum `KeyType` in the current scope
   --> src/pgp.rs:175:35
    |
175 |     pubkey.key_type = PgpKeyType::PublicKey;
    |                                   ^^^^^^^^^ variant or associated item not found in `KeyType`

error[E0425]: cannot find function `pgp_fingerprint` in this scope
   --> src/pgp.rs:178:24
    |
178 |     pubkey.pubkeyfpr = pgp_fingerprint(&seckey.key);
    |                        ^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `add_selfsigned_userid` in this scope
   --> src/pgp.rs:179:5
    |
179 |     add_selfsigned_userid(&seckey, &pubkey, user_id.as_ref().unwrap(), 0);
    |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0560]: struct `SignedPublicSubKey` has no field named `id`
   --> src/pgp.rs:183:9
    |
183 |         id: subkeyid.clone(),
    |         ^^ `SignedPublicSubKey` does not have this field
    |
    = note: available fields are: `signatures`

error[E0599]: no function or associated item named `default` found for struct `StandaloneSignature` in the current scope
   --> src/pgp.rs:186:49
    |
186 |     pubkey.subkeysigs.push(StandaloneSignature::default());
    |                                                 ^^^^^^^ function or associated item not found in `StandaloneSignature`
    |
note: if you're trying to build a new `StandaloneSignature`, consider using `StandaloneSignature::new` which returns `StandaloneSignature`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signature.rs:20:5
    |
20  |     pub fn new(signature: Signature) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `add_subkey_binding_signature` in this scope
   --> src/pgp.rs:187:5
    |
187 |     add_subkey_binding_signature(&pubkey.subkeysigs.last_mut().unwrap(), &pubkey, &subkey, &seckey);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0560]: struct `SignedPublicSubKey` has no field named `id`
   --> src/pgp.rs:192:9
    |
192 |         id: subkeyid.clone(),
    |         ^^ `SignedPublicSubKey` does not have this field
    |
    = note: available fields are: `signatures`

error[E0599]: no function or associated item named `default` found for struct `StandaloneSignature` in the current scope
   --> src/pgp.rs:195:49
    |
195 |     seckey.subkeysigs.push(StandaloneSignature::default());
    |                                                 ^^^^^^^ function or associated item not found in `StandaloneSignature`
    |
note: if you're trying to build a new `StandaloneSignature`, consider using `StandaloneSignature::new` which returns `StandaloneSignature`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signature.rs:20:5
    |
20  |     pub fn new(signature: Signature) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `add_subkey_binding_signature` in this scope
   --> src/pgp.rs:196:5
    |
196 |     add_subkey_binding_signature(&seckey.subkeysigs.last_mut().unwrap(), &seckey, &subkey, &seckey);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `pgp_writer_set_memory` in this scope
   --> src/pgp.rs:199:5
    |
199 |     pgp_writer_set_memory(pubout.as_mut().unwrap(), pubmem.as_mut().unwrap());
    |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `pgp_write_xfer_key` in this scope
   --> src/pgp.rs:200:9
    |
200 |     if !pgp_write_xfer_key(pubout.as_mut().unwrap(), &pubkey, 0).context("Failed to write public key")?
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `default` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:202:60
    |
202 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `SignedSecretKey` in the current scope
   --> src/pgp.rs:202:96
    |
202 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `SignedSecretKey`, consider using `SignedSecretKey::new` which returns `SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0425]: cannot find function `pgp_writer_set_memory` in this scope
   --> src/pgp.rs:205:5
    |
205 |     pgp_writer_set_memory(secout.as_mut().unwrap(), secmem.as_mut().unwrap());
    |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `pgp_write_xfer_key` in this scope
   --> src/pgp.rs:206:9
    |
206 |     if !pgp_write_xfer_key(secout.as_mut().unwrap(), &seckey, 0).context("Failed to write secret key")?
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `default` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:208:60
    |
208 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `SignedSecretKey` in the current scope
   --> src/pgp.rs:208:96
    |
208 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `SignedSecretKey`, consider using `SignedSecretKey::new` which returns `SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `from_binary` found for struct `SignedPublicKey` in the current scope
   --> src/pgp.rs:216:49
    |
216 |     Ok(KeyPair { addr, public: SignedPublicKey::from_binary(public_key_binary)?, secret: SignedSecretKey::from_binary(secret_key_binary)? })
    |                                                 ^^^^^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `SignedPublicKey`, consider using `SignedPublicKey::new` which returns `SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `from_binary` found for struct `SignedSecretKey` in the current scope
   --> src/pgp.rs:216:107
    |
216 |     Ok(KeyPair { addr, public: SignedPublicKey::from_binary(public_key_binary)?, secret: SignedSecretKey::from_binary(secret_key_binary)? })
    |                                                                                                           ^^^^^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `SignedSecretKey`, consider using `SignedSecretKey::new` which returns `SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

Some errors have detailed explanations: E0425, E0433, E0560, E0599.
For more information about an error, try `rustc --explain E0425`.
warning: `deltachat` (lib) generated 4 warnings
error: could not compile `deltachat` (lib) due to 38 previous errors; 4 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no function or associated item named `default` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:162:60
    |
162 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedSecretKey` in the current scope
   --> src/pgp.rs:162:96
    |
162 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `pgp::SignedSecretKey`, consider using `pgp::SignedSecretKey::new` which returns `pgp::SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:171:60
    |
171 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedSecretKey` in the current scope
   --> src/pgp.rs:171:96
    |
171 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `pgp::SignedSecretKey`, consider using `pgp::SignedSecretKey::new` which returns `pgp::SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:202:60
    |
202 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedSecretKey` in the current scope
   --> src/pgp.rs:202:96
    |
202 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `pgp::SignedSecretKey`, consider using `pgp::SignedSecretKey::new` which returns `pgp::SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:208:60
    |
208 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                            ^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `default` found for struct `pgp::SignedSecretKey` in the current scope
   --> src/pgp.rs:208:96
    |
208 |         return Ok(KeyPair { addr, public: SignedPublicKey::default(), secret: SignedSecretKey::default() });
    |                                                                                                ^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `pgp::SignedSecretKey`, consider using `pgp::SignedSecretKey::new` which returns `pgp::SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `from_binary` found for struct `pgp::SignedPublicKey` in the current scope
   --> src/pgp.rs:216:49
    |
216 |     Ok(KeyPair { addr, public: SignedPublicKey::from_binary(public_key_binary)?, secret: SignedSecretKey::from_binary(secret_key_binary)? })
    |                                                 ^^^^^^^^^^^ function or associated item not found in `SignedPublicKey`
    |
note: if you're trying to build a new `pgp::SignedPublicKey`, consider using `pgp::SignedPublicKey::new` which returns `pgp::SignedPublicKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/public.rs:39:5
    |
39  | /     pub fn new(
40  | |         primary_key: packet::PublicKey,
41  | |         details: SignedKeyDetails,
42  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
43  | |     ) -> Self {
    | |_____________^

error[E0599]: no function or associated item named `from_binary` found for struct `pgp::SignedSecretKey` in the current scope
   --> src/pgp.rs:216:107
    |
216 |     Ok(KeyPair { addr, public: SignedPublicKey::from_binary(public_key_binary)?, secret: SignedSecretKey::from_binary(secret_key_binary)? })
    |                                                                                                           ^^^^^^^^^^^ function or associated item not found in `SignedSecretKey`
    |
note: if you're trying to build a new `pgp::SignedSecretKey`, consider using `pgp::SignedSecretKey::new` which returns `pgp::SignedSecretKey`
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pgp-0.11.0/src/composed/signed_key/secret.rs:47:5
    |
47  | /     pub fn new(
48  | |         primary_key: packet::SecretKey,
49  | |         details: SignedKeyDetails,
50  | |         mut public_subkeys: Vec<SignedPublicSubKey>,
51  | |         mut secret_subkeys: Vec<SignedSecretSubKey>,
52  | |     ) -> Self {
    | |_____________^

warning: `deltachat` (lib test) generated 4 warnings (4 duplicates)
error: could not compile `deltachat` (lib test) due to 38 previous errors; 4 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

