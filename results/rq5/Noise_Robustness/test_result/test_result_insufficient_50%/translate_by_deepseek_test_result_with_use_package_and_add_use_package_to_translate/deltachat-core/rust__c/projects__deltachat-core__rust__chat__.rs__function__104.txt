Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTEXT_MAGIC` in this scope
    --> src/chat.rs:2796:25
     |
2796 |     if context.magic != DC_CONTEXT_MAGIC || msg.is_null() {
     |                         ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_PREP_FORWARDS` in this scope
    --> src/chat.rs:2802:47
     |
2802 |         if let Some(forwards) = msg.param.get(DC_PARAM_PREP_FORWARDS) {
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `copy` in this scope
    --> src/chat.rs:2810:34
     |
2810 |                     dc_msg_unref(copy);
     |                                  ^^^^ not found in this scope
     |
help: consider importing one of these items
     |
3    + use core::mem::copy;
     |
3    + use core::ptr::copy;
     |
3    + use futures::io::copy;
     |
3    + use futures_lite::io::copy;
     |
       and 6 other candidates

error[E0425]: cannot find value `DC_PARAM_PREP_FORWARDS` in this scope
    --> src/chat.rs:2814:27
     |
2814 |             msg.param.set(DC_PARAM_PREP_FORWARDS, None);
     |                           ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_GUARANTEE_E2EE` in this scope
    --> src/chat.rs:2822:23
     |
2822 |         msg.param.set(DC_PARAM_GUARANTEE_E2EE, None);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_PARAM_FORCE_PLAINTEXT` in this scope
    --> src/chat.rs:2823:23
     |
2823 |         msg.param.set(DC_PARAM_FORCE_PLAINTEXT, None);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0609]: no field `magic` on type `&context::Context`
    --> src/chat.rs:2796:16
     |
2796 |     if context.magic != DC_CONTEXT_MAGIC || msg.is_null() {
     |                ^^^^^ unknown field
     |
     = note: available field is: `inner`
     = note: available fields are: `blobdir`, `sql`, `smeared_timestamp`, `generating_key_mutex`, `oauth2_mutex` ... and 17 others

error[E0599]: no method named `is_null` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2796:49
     |
2796 |     if context.magic != DC_CONTEXT_MAGIC || msg.is_null() {
     |                                                 ^^^^^^^ method not found in `&mut Message`

error[E0425]: cannot find function `dc_get_msg` in this scope
    --> src/chat.rs:2807:41
     |
2807 |                     if let Some(copy) = dc_get_msg(context, id).await? {
     |                                         ^^^^^^^^^^ not found in this scope

error[E0425]: cannot find function `dc_msg_unref` in this scope
    --> src/chat.rs:2810:21
     |
2810 |                     dc_msg_unref(copy);
     |                     ^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `split_off` found for reference `&str` in the current scope
    --> src/chat.rs:2812:23
     |
2812 |                 p = p.split_off(p.find(',').unwrap_or(p.len()));
     |                       ^^^^^^^^^ help: there is a method with a similar name: `split`

error[E0277]: `std::option::Option<_>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:2814:51
     |
2814 |             msg.param.set(DC_PARAM_PREP_FORWARDS, None);
     |                       ---                         ^^^^ `std::option::Option<_>` cannot be formatted with the default formatter
     |                       |
     |                       required by a bound introduced by this call
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<_>`, which is required by `std::option::Option<_>: ToString`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: required for `std::option::Option<_>` to implement `ToString`
note: required by a bound in `param::Params::set`
    --> src/param.rs:287:51
     |
287  |     pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {
     |                                                   ^^^^^^^^ required by this bound in `Params::set`

error[E0599]: no method named `save_param_to_disk` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2815:17
     |
2815 |             msg.save_param_to_disk().await?;
     |                 ^^^^^^^^^^^^^^^^^^ method not found in `&mut Message`

error[E0308]: mismatched types
    --> src/chat.rs:2817:9
     |
2817 |         send_msg_inner(context, chat_id, msg).await
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<MsgId, Error>`
     |
     = note: expected unit type `()`
                     found enum `std::result::Result<MsgId, anyhow::Error>`

error[E0277]: `std::option::Option<_>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:2822:48
     |
2822 |         msg.param.set(DC_PARAM_GUARANTEE_E2EE, None);
     |                   ---                          ^^^^ `std::option::Option<_>` cannot be formatted with the default formatter
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<_>`, which is required by `std::option::Option<_>: ToString`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: required for `std::option::Option<_>` to implement `ToString`
note: required by a bound in `param::Params::set`
    --> src/param.rs:287:51
     |
287  |     pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {
     |                                                   ^^^^^^^^ required by this bound in `Params::set`

error[E0277]: `std::option::Option<_>` doesn't implement `std::fmt::Display`
    --> src/chat.rs:2823:49
     |
2823 |         msg.param.set(DC_PARAM_FORCE_PLAINTEXT, None);
     |                   ---                           ^^^^ `std::option::Option<_>` cannot be formatted with the default formatter
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: the trait `std::fmt::Display` is not implemented for `std::option::Option<_>`, which is required by `std::option::Option<_>: ToString`
     = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
     = note: required for `std::option::Option<_>` to implement `ToString`
note: required by a bound in `param::Params::set`
    --> src/param.rs:287:51
     |
287  |     pub fn set(&mut self, key: Param, value: impl ToString) -> &mut Self {
     |                                                   ^^^^^^^^ required by this bound in `Params::set`

error[E0599]: no method named `save_param_to_disk` found for mutable reference `&mut message::Message` in the current scope
    --> src/chat.rs:2824:13
     |
2824 |         msg.save_param_to_disk().await?;
     |             ^^^^^^^^^^^^^^^^^^ method not found in `&mut Message`

error[E0308]: mismatched types
    --> src/chat.rs:2817:9
     |
2817 |         send_msg_inner(context, chat_id, msg).await
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<MsgId, Error>`
     |
     = note: expected unit type `()`
                     found enum `std::result::Result<message::MsgId, anyhow::Error>`

Some errors have detailed explanations: E0277, E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 17 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 17 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

