Fail
file path is :
projects/deltachat-core/rust/src/location.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:378:18
    |
378 |                 &DC_CONTACT_ID_SELF as &dyn rusqlite::ToSql,
    |                  ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
   --> src/location.rs:383:67
    |
383 |             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
    |                                                                   ^^^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `std::sync::Arc`
  --> src/location.rs:14:5
   |
14 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::time::SystemTime`
  --> src/location.rs:15:5
   |
15 | use std::time::SystemTime;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Mutex`, `RwLock`
  --> src/location.rs:16:19
   |
16 | use tokio::sync::{Mutex, RwLock};
   |                   ^^^^^  ^^^^^^

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/location.rs:353:9
    |
351 |     let continue_streaming = if context.inner.sql.execute(
    |                                                   ------- required by a bound introduced by this call
352 |         "SELECT id FROM chats WHERE locations_send_until>?;",
353 |         &[&time() as &dyn rusqlite::ToSql],
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql; 1]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql; 1]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql; 1]`
    = note: required for `&[&dyn rusqlite::ToSql; 1]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/location.rs:360:40
    |
360 |     let stmt_chats = context.inner.sql.prepare(
    |                      ------------------^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/location.rs:368:45
    |
368 |         let stmt_insert = context.inner.sql.prepare(
    |                           ------------------^^^^^^^ method not found in `Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0061]: this method takes 1 argument but 3 arguments were supplied
   --> src/location.rs:383:34
    |
383 |             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
    |                                  ^^^^                             ------------------  - unexpected argument of type `{integer}`
    |                                                                   |
    |                                                                   unexpected argument
    |
note: expected `Event`, found enum constructor
   --> src/location.rs:383:39
    |
383 |             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:        expected struct `events::Event`
            found enum constructor `fn(std::option::Option<ContactId>) -> payload::EventType {payload::EventType::LocationChanged}`
note: method defined here
   --> src/events.rs:47:12
    |
47  |     pub fn emit(&self, event: Event) {
    |            ^^^^        ------------
help: remove the extra arguments
    |
383 -             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
383 +             context.inner.events.emit(/* events::Event */).await;
    |

error[E0277]: `()` is not a future
   --> src/location.rs:383:90
    |
383 |             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
    |                                                                                         -^^^^^
    |                                                                                         ||
    |                                                                                         |`()` is not a future
    |                                                                                         help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `()`, which is required by `(): std::future::IntoFuture`
    = note: () must be a future or must implement `IntoFuture` to be awaited
    = note: required for `()` to implement `std::future::IntoFuture`

error[E0425]: cannot find function `schedule_MAYBE_SEND_LOCATIONS` in this scope
   --> src/location.rs:384:13
    |
384 |             schedule_MAYBE_SEND_LOCATIONS(context, 0).await;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

Some errors have detailed explanations: E0061, E0277, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `deltachat` (lib) generated 3 warnings
error: could not compile `deltachat` (lib) due to 8 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/location.rs:353:9
    |
351 |     let continue_streaming = if context.inner.sql.execute(
    |                                                   ------- required by a bound introduced by this call
352 |         "SELECT id FROM chats WHERE locations_send_until>?;",
353 |         &[&time() as &dyn rusqlite::ToSql],
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql; 1]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql; 1]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql; 1]`
    = note: required for `&[&dyn rusqlite::ToSql; 1]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/location.rs:360:40
    |
360 |     let stmt_chats = context.inner.sql.prepare(
    |                      ------------------^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/location.rs:368:45
    |
368 |         let stmt_insert = context.inner.sql.prepare(
    |                           ------------------^^^^^^^ method not found in `sql::Sql`
    |
   ::: src/sql.rs:57:1
    |
57  | pub struct Sql {
    | -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0061]: this method takes 1 argument but 3 arguments were supplied
   --> src/location.rs:383:34
    |
383 |             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
    |                                  ^^^^                             ------------------  - unexpected argument of type `{integer}`
    |                                                                   |
    |                                                                   unexpected argument
    |
note: expected `Event`, found enum constructor
   --> src/location.rs:383:39
    |
383 |             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note:        expected struct `events::Event`
            found enum constructor `fn(std::option::Option<contact::ContactId>) -> payload::EventType {payload::EventType::LocationChanged}`
note: method defined here
   --> src/events.rs:47:12
    |
47  |     pub fn emit(&self, event: Event) {
    |            ^^^^        ------------
help: remove the extra arguments
    |
383 -             context.inner.events.emit(EventType::LocationChanged, DC_CONTACT_ID_SELF, 0).await;
383 +             context.inner.events.emit(/* events::Event */).await;
    |

warning: `deltachat` (lib test) generated 3 warnings (3 duplicates)
error: could not compile `deltachat` (lib test) due to 8 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

