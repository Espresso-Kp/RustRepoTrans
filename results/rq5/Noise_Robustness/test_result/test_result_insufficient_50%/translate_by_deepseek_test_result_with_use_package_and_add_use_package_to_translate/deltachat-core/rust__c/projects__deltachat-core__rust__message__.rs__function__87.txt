Fail
file path is :
projects/deltachat-core/rust/src/message.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `Path` is defined multiple times
  --> src/message.rs:14:17
   |
4  | use std::path::Path;
   |     --------------- previous import of the type `Path` here
...
14 | use std::path::{Path, PathBuf};
   |                 ^^^^--
   |                 |
   |                 `Path` reimported here
   |                 help: remove unnecessary import
   |
   = note: `Path` must be defined only once in the type namespace of this module

error[E0412]: cannot find type `c_int` in this scope
    --> src/message.rs:1434:70
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                                                                      ^^^^^ not found in this scope
     |
help: consider importing one of these items
     |
4    + use core::ffi::c_int;
     |
4    + use libc::c_int;
     |
4    + use std::ffi::c_int;
     |
4    + use std::os::raw::c_int;
     |

warning: unused import: `std::ptr`
 --> src/message.rs:7:5
  |
7 | use std::ptr;
  |     ^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::ffi::CString`
  --> src/message.rs:10:5
   |
10 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
  --> src/message.rs:11:5
   |
11 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `Path`
  --> src/message.rs:14:17
   |
14 | use std::path::{Path, PathBuf};
   |                 ^^^^

error: usage of an `unsafe` block
    --> src/message.rs:1395:17
     |
1395 |     let c_str = unsafe { CStr::from_ptr(path.as_ptr()) };
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: the lint level is defined here
    --> src/lib.rs:4:11
     |
4    | #![forbid(unsafe_code)]
     |           ^^^^^^^^^^^

error: declaration of an `unsafe` function
    --> src/message.rs:1434:1
     |
1434 | / unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
1435 | |     let c_str1 = CStr::from_ptr(s1);
1436 | |     let c_str2 = CStr::from_ptr(s2);
1437 | |     c_str1.cmp(c_str2)
1438 | | }
     | |_^

error: declaration of an `unsafe` function
    --> src/message.rs:1439:1
     |
1439 | / unsafe extern "C" fn dc_get_filesuffix_lc(path: &str) -> Option<&str> {
1440 | |     if let Some(pos) = path.rfind('.') {
1441 | |         Some(&path[pos + 1..])
1442 | |     } else {
1443 | |         None
1444 | |     }
1445 | | }
     | |_^

warning: unused import: `std::str::FromStr`
 --> src/message.rs:6:5
  |
6 | use std::str::FromStr;
  |     ^^^^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `std::ptr`
 --> src/message.rs:7:5
  |
7 | use std::ptr;
  |     ^^^^^^^^

error[E0599]: no method named `is_null` found for reference `&Path` in the current scope
    --> src/message.rs:1391:13
     |
1391 |     if path.is_null() {
     |             ^^^^^^^ method not found in `&Path`

error[E0599]: no method named `as_ptr` found for reference `&Path` in the current scope
    --> src/message.rs:1395:46
     |
1395 |     let c_str = unsafe { CStr::from_ptr(path.as_ptr()) };
     |                                              ^^^^^^ method not found in `&Path`

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1404:8
     |
1404 |     if strcmp(suffix, "mp3") == 0 {
     |        ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1404:15
     |
1404 |     if strcmp(suffix, "mp3") == 0 {
     |               ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1404:23
     |
1404 |     if strcmp(suffix, "mp3") == 0 {
     |                       ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1407:15
     |
1407 |     } else if strcmp(suffix, "aac") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1407:22
     |
1407 |     } else if strcmp(suffix, "aac") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1407:30
     |
1407 |     } else if strcmp(suffix, "aac") == 0 {
     |                              ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1410:15
     |
1410 |     } else if strcmp(suffix, "mp4") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1410:22
     |
1410 |     } else if strcmp(suffix, "mp4") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1410:30
     |
1410 |     } else if strcmp(suffix, "mp4") == 0 {
     |                              ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1413:15
     |
1413 |     } else if strcmp(suffix, "jpg") == 0 || strcmp(suffix, "jpeg") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1413:22
     |
1413 |     } else if strcmp(suffix, "jpg") == 0 || strcmp(suffix, "jpeg") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1413:30
     |
1413 |     } else if strcmp(suffix, "jpg") == 0 || strcmp(suffix, "jpeg") == 0 {
     |                              ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1413:45
     |
1413 |     } else if strcmp(suffix, "jpg") == 0 || strcmp(suffix, "jpeg") == 0 {
     |                                             ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1413:52
     |
1413 |     } else if strcmp(suffix, "jpg") == 0 || strcmp(suffix, "jpeg") == 0 {
     |                                                    ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1413:60
     |
1413 |     } else if strcmp(suffix, "jpg") == 0 || strcmp(suffix, "jpeg") == 0 {
     |                                                            ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1416:15
     |
1416 |     } else if strcmp(suffix, "png") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1416:22
     |
1416 |     } else if strcmp(suffix, "png") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1416:30
     |
1416 |     } else if strcmp(suffix, "png") == 0 {
     |                              ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1419:15
     |
1419 |     } else if strcmp(suffix, "webp") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1419:22
     |
1419 |     } else if strcmp(suffix, "webp") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1419:30
     |
1419 |     } else if strcmp(suffix, "webp") == 0 {
     |                              ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1422:15
     |
1422 |     } else if strcmp(suffix, "gif") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1422:22
     |
1422 |     } else if strcmp(suffix, "gif") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1422:30
     |
1422 |     } else if strcmp(suffix, "gif") == 0 {
     |                              ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1425:15
     |
1425 |     } else if strcmp(suffix, "vcf") == 0 || strcmp(suffix, "vcard") == 0 {
     |               ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1425:22
     |
1425 |     } else if strcmp(suffix, "vcf") == 0 || strcmp(suffix, "vcard") == 0 {
     |                      ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1425:30
     |
1425 |     } else if strcmp(suffix, "vcf") == 0 || strcmp(suffix, "vcard") == 0 {
     |                              ^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

error[E0308]: arguments to this function are incorrect
    --> src/message.rs:1425:45
     |
1425 |     } else if strcmp(suffix, "vcf") == 0 || strcmp(suffix, "vcard") == 0 {
     |                                             ^^^^^^
     |
note: expected `*const i8`, found `&str`
    --> src/message.rs:1425:52
     |
1425 |     } else if strcmp(suffix, "vcf") == 0 || strcmp(suffix, "vcard") == 0 {
     |                                                    ^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&str`
note: expected `*const i8`, found `&str`
    --> src/message.rs:1425:60
     |
1425 |     } else if strcmp(suffix, "vcf") == 0 || strcmp(suffix, "vcard") == 0 {
     |                                                            ^^^^^^^
     = note: expected raw pointer `*const i8`
                  found reference `&'static str`
note: function defined here
    --> src/message.rs:1434:22
     |
1434 | unsafe extern "C" fn strcmp(s1: *const c_char, s2: *const c_char) -> c_int {
     |                      ^^^^^^ -----------------  -----------------

warning: unused import: `std::str::FromStr`
 --> src/message.rs:6:5
  |
6 | use std::str::FromStr;
  |     ^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0252, E0308, E0412, E0599.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 5 warnings
error: could not compile `deltachat` (lib) due to 17 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `is_null` found for reference `&std::path::Path` in the current scope
    --> src/message.rs:1391:13
     |
1391 |     if path.is_null() {
     |             ^^^^^^^ method not found in `&Path`

error[E0599]: no method named `as_ptr` found for reference `&std::path::Path` in the current scope
    --> src/message.rs:1395:46
     |
1395 |     let c_str = unsafe { CStr::from_ptr(path.as_ptr()) };
     |                                              ^^^^^^ method not found in `&Path`

warning: `deltachat` (lib test) generated 5 warnings (3 duplicates)
error: could not compile `deltachat` (lib test) due to 17 previous errors; 5 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

