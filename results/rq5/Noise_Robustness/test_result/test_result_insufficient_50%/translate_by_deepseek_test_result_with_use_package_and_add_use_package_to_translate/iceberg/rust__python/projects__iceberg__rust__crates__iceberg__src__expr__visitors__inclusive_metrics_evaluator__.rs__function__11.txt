Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0609]: no field `null_counts` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:165:13
    |
165 |     if self.null_counts.get(&field_id).unwrap_or(&0) == &0 {
    |             ^^^^^^^^^^^ unknown field
    |
    = note: available field is: `data_file`

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:166:12
    |
166 |         Ok(ROWS_CANNOT_MATCH)
    |         -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |         |
    |         arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:166:9
    |
166 |         Ok(ROWS_CANNOT_MATCH)
    |         ^^^-----------------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
166 |         Ok(ROWS_CANNOT_MATCH?)
    |                             +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:168:12
    |
168 |         Ok(ROWS_MIGHT_MATCH)
    |         -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |         |
    |         arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:168:9
    |
168 |         Ok(ROWS_MIGHT_MATCH)
    |         ^^^----------------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
168 |         Ok(ROWS_MIGHT_MATCH?)
    |                            +

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 3 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0609]: no field `null_counts` on type `&mut InclusiveMetricsEvaluator<'_>`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:165:13
    |
165 |     if self.null_counts.get(&field_id).unwrap_or(&0) == &0 {
    |             ^^^^^^^^^^^ unknown field
    |
    = note: available field is: `data_file`

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:166:12
    |
166 |         Ok(ROWS_CANNOT_MATCH)
    |         -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |         |
    |         arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:166:9
    |
166 |         Ok(ROWS_CANNOT_MATCH)
    |         ^^^-----------------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
166 |         Ok(ROWS_CANNOT_MATCH?)
    |                             +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:168:12
    |
168 |         Ok(ROWS_MIGHT_MATCH)
    |         -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |         |
    |         arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:168:9
    |
168 |         Ok(ROWS_MIGHT_MATCH)
    |         ^^^----------------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
168 |         Ok(ROWS_MIGHT_MATCH?)
    |                            +

Some errors have detailed explanations: E0308, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 3 previous errors

