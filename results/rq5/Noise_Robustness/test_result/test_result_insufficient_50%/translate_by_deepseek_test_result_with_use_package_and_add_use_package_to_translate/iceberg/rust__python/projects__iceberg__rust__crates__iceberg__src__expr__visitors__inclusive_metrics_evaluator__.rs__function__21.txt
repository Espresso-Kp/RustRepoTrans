Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0616]: field `field` of struct `term::BoundReference` is private
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:303:28
    |
303 |     let field = &reference.field;
    |                            ^^^^^ private field
    |
help: a method `field` also exists, call it with parentheses
    |
303 |     let field = &reference.field();
    |                                 ++

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:307:19
    |
307 |         return Ok(ROWS_CANNOT_MATCH);
    |                -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                |
    |                arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:307:16
    |
307 |         return Ok(ROWS_CANNOT_MATCH);
    |                ^^^-----------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
307 |         return Ok(ROWS_CANNOT_MATCH?);
    |                                    +

error[E0599]: no method named `as_str` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:314:24
    |
314 |     let prefix = datum.as_str().unwrap();
    |                        ^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_str`, perhaps you need to implement one of them:
            candidate #1: `header::map::as_header_name::Sealed`
            candidate #2: `reqwest::into_url::IntoUrlSealed`

error[E0599]: no method named `as_bytes` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:74
    |
318 |         let lower_bound = from_bytes(field.field_type, lower_bound_bytes.as_bytes()).unwrap();
    |                                                                          ^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_bytes`, perhaps you need to implement one of them:
            candidate #1: `OsStrExt`
            candidate #2: `zerocopy::AsBytes`
            candidate #3: `AsArray`
            candidate #4: `AsBytes`

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:27
    |
318 |         let lower_bound = from_bytes(field.field_type, lower_bound_bytes.as_bytes()).unwrap();
    |                           ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:320:23
    |
320 |             return Ok(ROWS_CANNOT_MATCH);
    |                    -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:320:20
    |
320 |             return Ok(ROWS_CANNOT_MATCH);
    |                    ^^^-----------------^
    |                       |
    |                       this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
320 |             return Ok(ROWS_CANNOT_MATCH?);
    |                                        +

error[E0599]: no method named `as_bytes` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:74
    |
325 |         let upper_bound = from_bytes(field.field_type, upper_bound_bytes.as_bytes()).unwrap();
    |                                                                          ^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_bytes`, perhaps you need to implement one of them:
            candidate #1: `OsStrExt`
            candidate #2: `zerocopy::AsBytes`
            candidate #3: `AsArray`
            candidate #4: `AsBytes`

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:27
    |
325 |         let upper_bound = from_bytes(field.field_type, upper_bound_bytes.as_bytes()).unwrap();
    |                           ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:327:23
    |
327 |             return Ok(ROWS_CANNOT_MATCH);
    |                    -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:327:20
    |
327 |             return Ok(ROWS_CANNOT_MATCH);
    |                    ^^^-----------------^
    |                       |
    |                       this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
327 |             return Ok(ROWS_CANNOT_MATCH?);
    |                                        +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:331:8
    |
331 |     Ok(ROWS_MIGHT_MATCH)
    |     -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |     |
    |     arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:331:5
    |
331 |     Ok(ROWS_MIGHT_MATCH)
    |     ^^^----------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
331 |     Ok(ROWS_MIGHT_MATCH?)
    |                        +

Some errors have detailed explanations: E0308, E0425, E0599, E0616.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `as_str` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:314:24
    |
314 |     let prefix = datum.as_str().unwrap();
    |                        ^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_str`, perhaps you need to implement one of them:
            candidate #1: `header::map::as_header_name::Sealed`
            candidate #2: `reqwest::into_url::IntoUrlSealed`
            candidate #3: `rustix::path::arg::Arg`

error[E0599]: no method named `as_bytes` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:74
    |
318 |         let lower_bound = from_bytes(field.field_type, lower_bound_bytes.as_bytes()).unwrap();
    |                                                                          ^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_bytes`, perhaps you need to implement one of them:
            candidate #1: `OsStrExt`
            candidate #2: `zerocopy::AsBytes`
            candidate #3: `AsArray`
            candidate #4: `AsBytes`
            candidate #5: `bstr::ext_slice::ByteSlice`

error[E0599]: no method named `as_bytes` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:74
    |
325 |         let upper_bound = from_bytes(field.field_type, upper_bound_bytes.as_bytes()).unwrap();
    |                                                                          ^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_bytes`, perhaps you need to implement one of them:
            candidate #1: `OsStrExt`
            candidate #2: `zerocopy::AsBytes`
            candidate #3: `AsArray`
            candidate #4: `AsBytes`
            candidate #5: `bstr::ext_slice::ByteSlice`

error: could not compile `iceberg` (lib test) due to 10 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0616]: field `field` of struct `term::BoundReference` is private
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:303:28
    |
303 |     let field = &reference.field;
    |                            ^^^^^ private field
    |
help: a method `field` also exists, call it with parentheses
    |
303 |     let field = &reference.field();
    |                                 ++

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:307:19
    |
307 |         return Ok(ROWS_CANNOT_MATCH);
    |                -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                |
    |                arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:307:16
    |
307 |         return Ok(ROWS_CANNOT_MATCH);
    |                ^^^-----------------^
    |                   |
    |                   this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
307 |         return Ok(ROWS_CANNOT_MATCH?);
    |                                    +

error[E0599]: no method named `as_str` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:314:24
    |
314 |     let prefix = datum.as_str().unwrap();
    |                        ^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_str`, perhaps you need to implement one of them:
            candidate #1: `header::map::as_header_name::Sealed`
            candidate #2: `reqwest::into_url::IntoUrlSealed`

error[E0599]: no method named `as_bytes` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:74
    |
318 |         let lower_bound = from_bytes(field.field_type, lower_bound_bytes.as_bytes()).unwrap();
    |                                                                          ^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_bytes`, perhaps you need to implement one of them:
            candidate #1: `OsStrExt`
            candidate #2: `zerocopy::AsBytes`
            candidate #3: `AsArray`
            candidate #4: `AsBytes`

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:318:27
    |
318 |         let lower_bound = from_bytes(field.field_type, lower_bound_bytes.as_bytes()).unwrap();
    |                           ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:320:23
    |
320 |             return Ok(ROWS_CANNOT_MATCH);
    |                    -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:320:20
    |
320 |             return Ok(ROWS_CANNOT_MATCH);
    |                    ^^^-----------------^
    |                       |
    |                       this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
320 |             return Ok(ROWS_CANNOT_MATCH?);
    |                                        +

error[E0599]: no method named `as_bytes` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:74
    |
325 |         let upper_bound = from_bytes(field.field_type, upper_bound_bytes.as_bytes()).unwrap();
    |                                                                          ^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `as_bytes`, perhaps you need to implement one of them:
            candidate #1: `OsStrExt`
            candidate #2: `zerocopy::AsBytes`
            candidate #3: `AsArray`
            candidate #4: `AsBytes`

error[E0425]: cannot find function `from_bytes` in this scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:325:27
    |
325 |         let upper_bound = from_bytes(field.field_type, upper_bound_bytes.as_bytes()).unwrap();
    |                           ^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:327:23
    |
327 |             return Ok(ROWS_CANNOT_MATCH);
    |                    -- ^^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |                    |
    |                    arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:327:20
    |
327 |             return Ok(ROWS_CANNOT_MATCH);
    |                    ^^^-----------------^
    |                       |
    |                       this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
327 |             return Ok(ROWS_CANNOT_MATCH?);
    |                                        +

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:331:8
    |
331 |     Ok(ROWS_MIGHT_MATCH)
    |     -- ^^^^^^^^^^^^^^^^ expected `bool`, found `Result<bool, Error>`
    |     |
    |     arguments to this enum variant are incorrect
    |
    = note: expected type `bool`
               found enum `std::result::Result<bool, error::Error>`
help: the type constructed contains `std::result::Result<bool, error::Error>` due to the type of the argument passed
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:331:5
    |
331 |     Ok(ROWS_MIGHT_MATCH)
    |     ^^^----------------^
    |        |
    |        this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/core/src/result.rs:506:5
help: use the `?` operator to extract the `std::result::Result<bool, error::Error>` value, propagating a `Result::Err` value to the caller
    |
331 |     Ok(ROWS_MIGHT_MATCH?)
    |                        +

Some errors have detailed explanations: E0308, E0425, E0599, E0616.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 10 previous errors

