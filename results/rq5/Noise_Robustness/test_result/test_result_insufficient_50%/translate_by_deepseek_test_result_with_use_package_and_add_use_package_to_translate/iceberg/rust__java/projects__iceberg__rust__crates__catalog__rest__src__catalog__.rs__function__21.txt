Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0599]: no method named `query` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:403:29
    |
403 |         let response = self.query::<ListTableResponse, ErrorResponse, OK>(Request {
    |                        -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
403 |         let response = self.client.query::<ListTableResponse, ErrorResponse, OK>(Request {
    |                             +++++++

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:404:21
    |
404 |             method: "GET".to_string(),
    |                     ^^^^^^^^^^^^^^^^^ expected `Method`, found `String`

error[E0609]: no field `base_url` on type `catalog::RestCatalogConfig`
   --> crates/catalog/rest/src/catalog.rs:405:30
    |
405 |             url: self.config.base_url.join(&format!("tables/{}", namespace.name)).unwrap().to_string(),
    |                              ^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `warehouse`, `props`

error[E0609]: no field `name` on type `&'life1 iceberg::NamespaceIdent`
   --> crates/catalog/rest/src/catalog.rs:405:76
    |
405 |             url: self.config.base_url.join(&format!("tables/{}", namespace.name)).unwrap().to_string(),
    |                                                                            ^^^^ unknown field

error: cannot construct `reqwest::Request` with struct literal syntax due to private fields
   --> crates/catalog/rest/src/catalog.rs:403:75
    |
403 |         let response = self.query::<ListTableResponse, ErrorResponse, OK>(Request {
    |                                                                           ^^^^^^^
404 |             method: "GET".to_string(),
    |             ------------------------- private field
405 |             url: self.config.base_url.join(&format!("tables/{}", namespace.name)).unwrap().to_string(),
    |             ------------------------------------------------------------------------------------------ private field
406 |             headers: HeaderMap::new(),
    |             ------------------------- private field
407 |             body: None,
    |             ---------- private field
    |
    = note: ...and other private fields `timeout` and `version` that were not provided
help: you might have meant to use the `new` associated function
    |
403 |         let response = self.query::<ListTableResponse, ErrorResponse, OK>(Request::new(_, _)).await?;
    |                                                                                  ~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0599]: no method named `query` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:403:29
    |
403 |         let response = self.query::<ListTableResponse, ErrorResponse, OK>(Request {
    |                        -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
403 |         let response = self.client.query::<ListTableResponse, ErrorResponse, OK>(Request {
    |                             +++++++

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:404:21
    |
404 |             method: "GET".to_string(),
    |                     ^^^^^^^^^^^^^^^^^ expected `Method`, found `String`

error[E0609]: no field `base_url` on type `RestCatalogConfig`
   --> crates/catalog/rest/src/catalog.rs:405:30
    |
405 |             url: self.config.base_url.join(&format!("tables/{}", namespace.name)).unwrap().to_string(),
    |                              ^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `warehouse`, `props`

error[E0609]: no field `name` on type `&'life1 NamespaceIdent`
   --> crates/catalog/rest/src/catalog.rs:405:76
    |
405 |             url: self.config.base_url.join(&format!("tables/{}", namespace.name)).unwrap().to_string(),
    |                                                                            ^^^^ unknown field

error: cannot construct `reqwest::Request` with struct literal syntax due to private fields
   --> crates/catalog/rest/src/catalog.rs:403:75
    |
403 |         let response = self.query::<ListTableResponse, ErrorResponse, OK>(Request {
    |                                                                           ^^^^^^^
404 |             method: "GET".to_string(),
    |             ------------------------- private field
405 |             url: self.config.base_url.join(&format!("tables/{}", namespace.name)).unwrap().to_string(),
    |             ------------------------------------------------------------------------------------------ private field
406 |             headers: HeaderMap::new(),
    |             ------------------------- private field
407 |             body: None,
    |             ---------- private field
    |
    = note: ...and other private fields `timeout` and `version` that were not provided
help: you might have meant to use the `new` associated function
    |
403 |         let response = self.query::<ListTableResponse, ErrorResponse, OK>(Request::new(_, _)).await?;
    |                                                                                  ~~~~~~~~~~~

Some errors have detailed explanations: E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg-catalog-rest` (lib) due to 5 previous errors
warning: build failed, waiting for other jobs to finish...

