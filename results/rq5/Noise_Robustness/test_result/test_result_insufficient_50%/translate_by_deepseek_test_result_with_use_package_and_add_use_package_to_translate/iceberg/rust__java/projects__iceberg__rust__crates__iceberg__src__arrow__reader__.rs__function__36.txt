Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0201]: duplicate definitions with name `always_true`:
   --> crates/iceberg/src/arrow/reader.rs:590:1
    |
531 | /     fn always_true(&mut self) -> Result<Box<PredicateResult>> {
532 | |         self.build_always_true()
533 | |     }
    | |_____- previous definition here
...
590 | / fn always_true() -> Box<PredicateResult> {
591 | |     Box::new(|_| Ok(BooleanArray::from(vec![true])))
592 | | }
    | |_^ duplicate definition
    |
   ::: crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:29:5
    |
29  |       fn always_true(&mut self) -> Result<Self::T>;
    |       --------------------------------------------- item in trait

error[E0201]: duplicate definitions with name `always_false`:
   --> crates/iceberg/src/arrow/reader.rs:593:1
    |
535 | /     fn always_false(&mut self) -> Result<Box<PredicateResult>> {
536 | |         self.build_always_false()
537 | |     }
    | |_____- previous definition here
...
593 | / fn always_false() -> Box<PredicateResult> {
594 | |     Box::new(|_| Ok(BooleanArray::from(vec![false])))
595 | | }
    | |_^ duplicate definition
    |
   ::: crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:32:5
    |
32  |       fn always_false(&mut self) -> Result<Self::T>;
    |       ---------------------------------------------- item in trait

warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:12
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:29
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:559:32
    |
559 |         return Err(ArrowError::General("PredicateResult is null".to_string()).into());
    |                                ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `always_true` in this scope
   --> crates/iceberg/src/arrow/reader.rs:562:15
    |
562 |     if lhs == always_true() || rhs == always_true() {
    |               ^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
562 |     if lhs == self.always_true() || rhs == always_true() {
    |               +++++

error[E0425]: cannot find function `always_true` in this scope
   --> crates/iceberg/src/arrow/reader.rs:562:39
    |
562 |     if lhs == always_true() || rhs == always_true() {
    |                                       ^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
562 |     if lhs == always_true() || rhs == self.always_true() {
    |                                       +++++

error[E0425]: cannot find function `always_true` in this scope
   --> crates/iceberg/src/arrow/reader.rs:563:19
    |
563 |         return Ok(always_true());
    |                   ^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
563 |         return Ok(self.always_true());
    |                   +++++

error[E0425]: cannot find function `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:564:22
    |
564 |     } else if lhs == always_false() {
    |                      ^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
564 |     } else if lhs == self.always_false() {
    |                      +++++

error[E0425]: cannot find function `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:566:22
    |
566 |     } else if rhs == always_false() {
    |                      ^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
566 |     } else if rhs == self.always_false() {
    |                      +++++

error[E0608]: cannot index into a value of type `&arrow_buffer::buffer::boolean::BooleanBuffer`
   --> crates/iceberg/src/arrow/reader.rs:581:46
    |
581 |                     result_data.push(lhs_data[i] || rhs_data[i]);
    |                                              ^^^

error[E0608]: cannot index into a value of type `&arrow_buffer::buffer::boolean::BooleanBuffer`
   --> crates/iceberg/src/arrow/reader.rs:581:61
    |
581 |                     result_data.push(lhs_data[i] || rhs_data[i]);
    |                                                             ^^^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:586:34
    |
586 |             _ => Err(ArrowError::General("Mismatched array lengths".to_string())),
    |                                  ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0201, E0425, E0599, E0608.
For more information about an error, try `rustc --explain E0201`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 13 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 13 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0201]: duplicate definitions with name `always_true`:
   --> crates/iceberg/src/arrow/reader.rs:590:1
    |
531 | /     fn always_true(&mut self) -> Result<Box<PredicateResult>> {
532 | |         self.build_always_true()
533 | |     }
    | |_____- previous definition here
...
590 | / fn always_true() -> Box<PredicateResult> {
591 | |     Box::new(|_| Ok(BooleanArray::from(vec![true])))
592 | | }
    | |_^ duplicate definition
    |
   ::: crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:29:5
    |
29  |       fn always_true(&mut self) -> Result<Self::T>;
    |       --------------------------------------------- item in trait

error[E0201]: duplicate definitions with name `always_false`:
   --> crates/iceberg/src/arrow/reader.rs:593:1
    |
535 | /     fn always_false(&mut self) -> Result<Box<PredicateResult>> {
536 | |         self.build_always_false()
537 | |     }
    | |_____- previous definition here
...
593 | / fn always_false() -> Box<PredicateResult> {
594 | |     Box::new(|_| Ok(BooleanArray::from(vec![false])))
595 | | }
    | |_^ duplicate definition
    |
   ::: crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:32:5
    |
32  |       fn always_false(&mut self) -> Result<Self::T>;
    |       ---------------------------------------------- item in trait

warning: unused import: `or`
  --> crates/iceberg/src/arrow/reader.rs:21:60
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                                                            ^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:12
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `is_null` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:558:29
    |
558 |     if lhs.is_null() || rhs.is_null() {
    |                             ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `is_null`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:559:32
    |
559 |         return Err(ArrowError::General("PredicateResult is null".to_string()).into());
    |                                ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find function `always_true` in this scope
   --> crates/iceberg/src/arrow/reader.rs:562:15
    |
562 |     if lhs == always_true() || rhs == always_true() {
    |               ^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
562 |     if lhs == self.always_true() || rhs == always_true() {
    |               +++++

error[E0425]: cannot find function `always_true` in this scope
   --> crates/iceberg/src/arrow/reader.rs:562:39
    |
562 |     if lhs == always_true() || rhs == always_true() {
    |                                       ^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
562 |     if lhs == always_true() || rhs == self.always_true() {
    |                                       +++++

error[E0425]: cannot find function `always_true` in this scope
   --> crates/iceberg/src/arrow/reader.rs:563:19
    |
563 |         return Ok(always_true());
    |                   ^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
563 |         return Ok(self.always_true());
    |                   +++++

error[E0425]: cannot find function `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:564:22
    |
564 |     } else if lhs == always_false() {
    |                      ^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
564 |     } else if lhs == self.always_false() {
    |                      +++++

error[E0425]: cannot find function `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:566:22
    |
566 |     } else if rhs == always_false() {
    |                      ^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
566 |     } else if rhs == self.always_false() {
    |                      +++++

error[E0608]: cannot index into a value of type `&arrow_buffer::buffer::boolean::BooleanBuffer`
   --> crates/iceberg/src/arrow/reader.rs:581:46
    |
581 |                     result_data.push(lhs_data[i] || rhs_data[i]);
    |                                              ^^^

error[E0608]: cannot index into a value of type `&arrow_buffer::buffer::boolean::BooleanBuffer`
   --> crates/iceberg/src/arrow/reader.rs:581:61
    |
581 |                     result_data.push(lhs_data[i] || rhs_data[i]);
    |                                                             ^^^

error[E0599]: no variant or associated item named `General` found for enum `arrow_schema::ArrowError` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:586:34
    |
586 |             _ => Err(ArrowError::General("Mismatched array lengths".to_string())),
    |                                  ^^^^^^^ variant or associated item not found in `ArrowError`
    |
note: if you're trying to build a new `arrow_schema::ArrowError`, consider using `arrow_schema::ArrowError::from_external_error` which returns `arrow_schema::ArrowError`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/arrow-schema-52.1.0/src/error.rs:50:5
    |
50  |     pub fn from_external_error(error: Box<dyn Error + Send + Sync>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0201, E0425, E0599, E0608.
For more information about an error, try `rustc --explain E0201`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 13 previous errors; 1 warning emitted

