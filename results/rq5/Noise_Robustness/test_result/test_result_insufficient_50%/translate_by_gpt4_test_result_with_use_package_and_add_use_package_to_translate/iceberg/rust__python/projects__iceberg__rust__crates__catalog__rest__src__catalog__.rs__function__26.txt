Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/rest/src/catalog.rs:519:1
    |
519 | pub async fn rename_table(&self, src: &TableIdent, dest: &TableIdent) -> iceberg::Result<()> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0599]: no method named `send_request` found for struct `HttpClient` in the current scope
   --> crates/catalog/rest/src/catalog.rs:527:14
    |
189 |   struct HttpClient(Client);
    |   ----------------- method `send_request` not found for this struct
...
525 |           let response = self
    |  ________________________-
526 | |             .client
527 | |             .send_request(
    | |             -^^^^^^^^^^^^ method not found in `HttpClient`
    | |_____________|
    | 

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:528:26
    |
528 |                 Request::builder()
    |                          ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `rename_table_endpoint` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:530:31
    |
530 |                     .uri(self.rename_table_endpoint())
    |                               ^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
530 |                     .uri(self.config.rename_table_endpoint())
    |                               +++++++

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:534:27
    |
534 |             .map_err(|_e| Error::UnknownError {
    |                           ^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `UnknownError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
534 |             .map_err(|_e| <iceberg::Error as Example>::UnknownError {
    |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:540:42
    |
540 |             StatusCode::NOT_FOUND => Err(Error::NoSuchTableError {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `NoSuchTableError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
540 |             StatusCode::NOT_FOUND => Err(<iceberg::Error as Example>::NoSuchTableError {
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `iceberg::TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/rest/src/catalog.rs:541:38
    |
541 |                 table: format!("{}", src),
    |                                      ^^^ `iceberg::TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::TableIdent`, which is required by `&iceberg::TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:543:41
    |
543 |             StatusCode::CONFLICT => Err(Error::TableAlreadyExistsError {
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `TableAlreadyExistsError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
543 |             StatusCode::CONFLICT => Err(<iceberg::Error as Example>::TableAlreadyExistsError {
    |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `iceberg::TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/rest/src/catalog.rs:544:38
    |
544 |                 table: format!("{}", dest),
    |                                      ^^^^ `iceberg::TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::TableIdent`, which is required by `&iceberg::TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:546:22
    |
546 |             _ => Err(Error::UnknownError {
    |                      ^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `UnknownError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
546 |             _ => Err(<iceberg::Error as Example>::UnknownError {
    |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0223, E0277, E0449, E0599.
For more information about an error, try `rustc --explain E0223`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0449]: visibility qualifiers are not permitted here
   --> crates/catalog/rest/src/catalog.rs:519:1
    |
519 | pub async fn rename_table(&self, src: &TableIdent, dest: &TableIdent) -> iceberg::Result<()> {
    | ^^^
    |
    = note: trait items always share the visibility of their trait

error[E0599]: no method named `send_request` found for struct `HttpClient` in the current scope
   --> crates/catalog/rest/src/catalog.rs:527:14
    |
189 |   struct HttpClient(Client);
    |   ----------------- method `send_request` not found for this struct
...
525 |           let response = self
    |  ________________________-
526 | |             .client
527 | |             .send_request(
    | |             -^^^^^^^^^^^^ method not found in `HttpClient`
    | |_____________|
    | 

error[E0599]: no function or associated item named `builder` found for struct `reqwest::Request` in the current scope
   --> crates/catalog/rest/src/catalog.rs:528:26
    |
528 |                 Request::builder()
    |                          ^^^^^^^ function or associated item not found in `Request`
    |
note: if you're trying to build a new `reqwest::Request`, consider using `reqwest::Request::new` which returns `reqwest::Request`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:5
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `rename_table_endpoint` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:530:31
    |
530 |                     .uri(self.rename_table_endpoint())
    |                               ^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
530 |                     .uri(self.config.rename_table_endpoint())
    |                               +++++++

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:534:27
    |
534 |             .map_err(|_e| Error::UnknownError {
    |                           ^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `UnknownError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
534 |             .map_err(|_e| <iceberg::Error as Example>::UnknownError {
    |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:540:42
    |
540 |             StatusCode::NOT_FOUND => Err(Error::NoSuchTableError {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `NoSuchTableError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
540 |             StatusCode::NOT_FOUND => Err(<iceberg::Error as Example>::NoSuchTableError {
    |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/rest/src/catalog.rs:541:38
    |
541 |                 table: format!("{}", src),
    |                                      ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:543:41
    |
543 |             StatusCode::CONFLICT => Err(Error::TableAlreadyExistsError {
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `TableAlreadyExistsError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
543 |             StatusCode::CONFLICT => Err(<iceberg::Error as Example>::TableAlreadyExistsError {
    |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/rest/src/catalog.rs:544:38
    |
544 |                 table: format!("{}", dest),
    |                                      ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0223]: ambiguous associated type
   --> crates/catalog/rest/src/catalog.rs:546:22
    |
546 |             _ => Err(Error::UnknownError {
    |                      ^^^^^^^^^^^^^^^^^^^
    |
help: if there were a trait named `Example` with associated type `UnknownError` implemented for `iceberg::Error`, you could use the fully-qualified path
    |
546 |             _ => Err(<iceberg::Error as Example>::UnknownError {
    |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some errors have detailed explanations: E0223, E0277, E0449, E0599.
For more information about an error, try `rustc --explain E0223`.
error: could not compile `iceberg-catalog-rest` (lib) due to 10 previous errors
warning: build failed, waiting for other jobs to finish...

