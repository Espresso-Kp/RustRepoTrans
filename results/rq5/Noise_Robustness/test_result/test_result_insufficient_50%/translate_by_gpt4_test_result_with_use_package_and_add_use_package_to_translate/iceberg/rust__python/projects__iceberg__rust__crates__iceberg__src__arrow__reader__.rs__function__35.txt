Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `and`
  --> crates/iceberg/src/arrow/reader.rs:21:28
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                            ^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:545:6
    |
545 | ) -> Result<Box<PredicateResult>, ArrowError> {
    |      ^^^^^^                       ---------- help: remove this generic argument
    |      |
    |      expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:546:8
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
546 |     if lhs(/* RecordBatch */) == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:546:14
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |        ----- ^^ -------------------------------- &BooleanArray
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:546:53
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |                                                     ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs(/* RecordBatch */) == &BooleanArray::from(vec![false]) {
    |                                                        ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:546:59
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |                                                     ----- ^^ -------------------------------- &BooleanArray
    |                                                     |
    |                                                     std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0277]: expected a `FnMut(RecordBatch)` closure, found `BooleanArray`
   --> crates/iceberg/src/arrow/reader.rs:547:19
    |
547 |         return Ok(Box::new(BooleanArray::from(vec![false])));
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `FnMut(RecordBatch)` closure, found `BooleanArray`
    |
    = help: the trait `FnMut<(RecordBatch,)>` is not implemented for `BooleanArray`
    = note: required for the cast from `Box<BooleanArray>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:549:13
    |
549 |     else if lhs() == &BooleanArray::from(vec![true]) {
    |             ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
549 |     else if lhs(/* RecordBatch */) == &BooleanArray::from(vec![true]) {
    |                ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:549:19
    |
549 |     else if lhs() == &BooleanArray::from(vec![true]) {
    |             ----- ^^ ------------------------------- &BooleanArray
    |             |
    |             std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:552:13
    |
552 |     else if rhs() == &BooleanArray::from(vec![true]) {
    |             ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
552 |     else if rhs(/* RecordBatch */) == &BooleanArray::from(vec![true]) {
    |                ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:552:19
    |
552 |     else if rhs() == &BooleanArray::from(vec![true]) {
    |             ----- ^^ ------------------------------- &BooleanArray
    |             |
    |             std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0271]: expected `{closure@reader.rs:557:34}` to be a closure that returns `Result<BooleanArray, ArrowError>`, but it returns `()`
   --> crates/iceberg/src/arrow/reader.rs:561:19
    |
561 |         return Ok(predicate);
    |                   ^^^^^^^^^ expected `Result<BooleanArray, ArrowError>`, found `()`
    |
    = note:   expected enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
            found unit type `()`
    = note: required for the cast from `Box<{closure@crates/iceberg/src/arrow/reader.rs:557:34: 557:66}>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

Some errors have detailed explanations: E0057, E0107, E0271, E0277, E0369.
For more information about an error, try `rustc --explain E0057`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 11 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `iceberg` (lib test) generated 1 warning (1 duplicate)
error: could not compile `iceberg` (lib test) due to 11 previous errors; 1 warning emitted

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
warning: unused import: `and`
  --> crates/iceberg/src/arrow/reader.rs:21:28
   |
21 | use arrow_arith::boolean::{and, is_not_null, is_null, not, or};
   |                            ^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:545:6
    |
545 | ) -> Result<Box<PredicateResult>, ArrowError> {
    |      ^^^^^^                       ---------- help: remove this generic argument
    |      |
    |      expected 1 generic argument
    |
note: type alias defined here, with 1 generic parameter: `T`
   --> crates/iceberg/src/error.rs:25:10
    |
25  | pub type Result<T> = std::result::Result<T, Error>;
    |          ^^^^^^ -

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:546:8
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |        ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
546 |     if lhs(/* RecordBatch */) == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |           ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:546:14
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |        ----- ^^ -------------------------------- &BooleanArray
    |        |
    |        std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:546:53
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |                                                     ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs(/* RecordBatch */) == &BooleanArray::from(vec![false]) {
    |                                                        ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:546:59
    |
546 |     if lhs() == &BooleanArray::from(vec![false]) || rhs() == &BooleanArray::from(vec![false]) {
    |                                                     ----- ^^ -------------------------------- &BooleanArray
    |                                                     |
    |                                                     std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0277]: expected a `FnMut(RecordBatch)` closure, found `BooleanArray`
   --> crates/iceberg/src/arrow/reader.rs:547:19
    |
547 |         return Ok(Box::new(BooleanArray::from(vec![false])));
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `FnMut(RecordBatch)` closure, found `BooleanArray`
    |
    = help: the trait `FnMut<(RecordBatch,)>` is not implemented for `BooleanArray`
    = note: required for the cast from `Box<BooleanArray>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:549:13
    |
549 |     else if lhs() == &BooleanArray::from(vec![true]) {
    |             ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
549 |     else if lhs(/* RecordBatch */) == &BooleanArray::from(vec![true]) {
    |                ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:549:19
    |
549 |     else if lhs() == &BooleanArray::from(vec![true]) {
    |             ----- ^^ ------------------------------- &BooleanArray
    |             |
    |             std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0057]: this function takes 1 argument but 0 arguments were supplied
   --> crates/iceberg/src/arrow/reader.rs:552:13
    |
552 |     else if rhs() == &BooleanArray::from(vec![true]) {
    |             ^^^-- an argument of type `RecordBatch` is missing
    |
note: implementation defined here
   --> /rustc/7cf61ebde7b22796c69757901dd346d0fe70bd97/library/alloc/src/boxed.rs:2020:1
help: provide the argument
    |
552 |     else if rhs(/* RecordBatch */) == &BooleanArray::from(vec![true]) {
    |                ~~~~~~~~~~~~~~~~~~~

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
   --> crates/iceberg/src/arrow/reader.rs:552:19
    |
552 |     else if rhs() == &BooleanArray::from(vec![true]) {
    |             ----- ^^ ------------------------------- &BooleanArray
    |             |
    |             std::result::Result<BooleanArray, arrow_schema::ArrowError>

error[E0271]: expected `{closure@reader.rs:557:34}` to be a closure that returns `Result<BooleanArray, ArrowError>`, but it returns `()`
   --> crates/iceberg/src/arrow/reader.rs:561:19
    |
561 |         return Ok(predicate);
    |                   ^^^^^^^^^ expected `Result<BooleanArray, ArrowError>`, found `()`
    |
    = note:   expected enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
            found unit type `()`
    = note: required for the cast from `Box<{closure@crates/iceberg/src/arrow/reader.rs:557:34: 557:66}>` to `Box<dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send>`

Some errors have detailed explanations: E0057, E0107, E0271, E0277, E0369.
For more information about an error, try `rustc --explain E0057`.
warning: `iceberg` (lib) generated 1 warning
error: could not compile `iceberg` (lib) due to 11 previous errors; 1 warning emitted

