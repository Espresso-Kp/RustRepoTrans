Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0425]: cannot find value `namespace_vec` in this scope
   --> crates/catalog/rest/src/catalog.rs:319:20
    |
319 |         namespace: namespace_vec,
    |                    ^^^^^^^^^^^^^ help: a local variable with a similar name exists: `namespace`

error[E0433]: failed to resolve: use of undeclared type `Method`
   --> crates/catalog/rest/src/catalog.rs:332:25
    |
332 |                 .method(Method::POST)
    |                         ^^^^^^ use of undeclared type `Method`
    |
help: consider importing this struct
    |
20  + use reqwest::Method;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace)?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0560]: struct `CommitTableRequest` has no field named `namespace`
   --> crates/catalog/rest/src/catalog.rs:319:9
    |
319 |         namespace: namespace_vec,
    |         ^^^^^^^^^ `CommitTableRequest` does not have this field
    |
    = note: available fields are: `identifier`, `requirements`, `updates`

error[E0560]: struct `CommitTableRequest` has no field named `properties`
   --> crates/catalog/rest/src/catalog.rs:320:9
    |
320 |         properties: properties,
    |         ^^^^^^^^^^ `CommitTableRequest` does not have this field
    |
    = note: available fields are: `identifier`, `requirements`, `updates`

error[E0599]: no method named `request` found for struct `HttpClient` in the current scope
   --> crates/catalog/rest/src/catalog.rs:325:10
    |
189 |   struct HttpClient(Client);
    |   ----------------- method `request` not found for this struct
...
323 |       let response = self
    |  ____________________-
324 | |         .client
325 | |         .request(
    | |         -^^^^^^^ method not found in `HttpClient`
    | |_________|
    | 
    |
help: one of the expressions' fields has a method of the same name
    |
325 |         .0.request(
    |          ++

error[E0609]: no field `server` on type `catalog::RestCatalogConfig`
   --> crates/catalog/rest/src/catalog.rs:326:25
    |
326 |             self.config.server
    |                         ^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `warehouse`, `props`

error[E0599]: no method named `iter` found for tuple `(&'static str, &Cow<'_, str>, &'static str)` in the current scope
   --> crates/catalog/rest/src/catalog.rs:329:22
    |
328 |                   .join(&("/", &encode(&namespace_tuple), "/commit/")
    |  ________________________-
329 | |                     .iter()
    | |                     -^^^^ method not found in `(&str, &Cow<'_, str>, &str)`
    | |_____________________|
    | 

error[E0599]: no method named `headers` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:333:31
    |
333 |                 .headers(self.headers()?)
    |                               ^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no variant or associated item named `InvalidResponse` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:341:39
    |
341 |                 Error::new(ErrorKind::InvalidResponse, "Invalid namespace response")
    |                                       ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0026]: struct `NamespaceSerde` does not have a field named `name`
   --> crates/catalog/rest/src/catalog.rs:340:34
    |
340 |             let NamespaceSerde { name, properties } = response.json().await.map_err(|_| {
    |                                  ^^^^
    |                                  |
    |                                  struct `NamespaceSerde` does not have this field
    |                                  help: `NamespaceSerde` has a field named `namespace`

error[E0027]: pattern does not mention field `namespace`
   --> crates/catalog/rest/src/catalog.rs:340:17
    |
340 |             let NamespaceSerde { name, properties } = response.json().await.map_err(|_| {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `namespace`
    |
help: include the missing field in the pattern
    |
340 |             let NamespaceSerde { name, properties, namespace } = response.json().await.map_err(|_| {
    |                                                  ~~~~~~~~~~~~~
help: if you don't care about this missing field, you can explicitly ignore it
    |
340 |             let NamespaceSerde { name, properties, .. } = response.json().await.map_err(|_| {
    |                                                  ~~~~~~

error[E0599]: no function or associated item named `from_str` found for struct `iceberg::NamespaceIdent` in the current scope
   --> crates/catalog/rest/src/catalog.rs:343:51
    |
343 |             let namespace_ident = NamespaceIdent::from_str(&name).map_err(|_| {
    |                                                   ^^^^^^^^
    |                                                   |
    |                                                   function or associated item not found in `NamespaceIdent`
    |                                                   help: there is an associated function with a similar name: `from_strs`
    |
note: if you're trying to build a new `iceberg::NamespaceIdent` consider using one of the following associated functions:
      iceberg::NamespaceIdent::new
      iceberg::NamespaceIdent::from_vec
      iceberg::NamespaceIdent::from_strs
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:106:5
    |
106 |     pub fn new(name: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
111 |     pub fn from_vec(names: Vec<String>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub fn from_strs(iter: impl IntoIterator<Item = impl ToString>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidResponse` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:344:39
    |
344 |                 Error::new(ErrorKind::InvalidResponse, "Invalid namespace identifier")
    |                                       ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:346:73
    |
346 |             let namespace = Namespace::with_properties(namespace_ident, properties);
    |                             --------------------------                  ^^^^^^^^^^ expected `HashMap<String, String>`, found `Option<HashMap<String, String>>`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected struct `std::collections::HashMap<_, _>`
                 found enum `std::option::Option<std::collections::HashMap<_, _>>`
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:165:12
    |
165 |     pub fn with_properties(name: NamespaceIdent, properties: HashMap<String, String>) -> Self {
    |            ^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>` value, panicking if the value is an `Option::None`
    |
346 |             let namespace = Namespace::with_properties(namespace_ident, properties.expect("REASON"));
    |                                                                                   +++++++++++++++++

error[E0599]: no variant or associated item named `NamespaceAlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:351:28
    |
351 |                 ErrorKind::NamespaceAlreadyExists,
    |                            ^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `InvalidResponse` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:356:40
    |
356 |         _ => Err(Error::new(ErrorKind::InvalidResponse, "Invalid response")),
    |                                        ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

Some errors have detailed explanations: E0026, E0027, E0308, E0425, E0433, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0026`.
error: could not compile `iceberg-catalog-rest` (lib test) due to 17 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0425]: cannot find value `namespace_vec` in this scope
   --> crates/catalog/rest/src/catalog.rs:319:20
    |
319 |         namespace: namespace_vec,
    |                    ^^^^^^^^^^^^^ help: a local variable with a similar name exists: `namespace`

error[E0433]: failed to resolve: use of undeclared type `Method`
   --> crates/catalog/rest/src/catalog.rs:332:25
    |
332 |                 .method(Method::POST)
    |                         ^^^^^^ use of undeclared type `Method`
    |
help: consider importing this struct
    |
20  + use reqwest::Method;
    |

error[E0599]: no method named `_check_valid_namespace_identifier` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:317:32
    |
317 |     let namespace_tuple = self._check_valid_namespace_identifier(namespace)?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `&RestCatalog`

error[E0560]: struct `CommitTableRequest` has no field named `namespace`
   --> crates/catalog/rest/src/catalog.rs:319:9
    |
319 |         namespace: namespace_vec,
    |         ^^^^^^^^^ `CommitTableRequest` does not have this field
    |
    = note: available fields are: `identifier`, `requirements`, `updates`

error[E0560]: struct `CommitTableRequest` has no field named `properties`
   --> crates/catalog/rest/src/catalog.rs:320:9
    |
320 |         properties: properties,
    |         ^^^^^^^^^^ `CommitTableRequest` does not have this field
    |
    = note: available fields are: `identifier`, `requirements`, `updates`

error[E0599]: no method named `request` found for struct `HttpClient` in the current scope
   --> crates/catalog/rest/src/catalog.rs:325:10
    |
189 |   struct HttpClient(Client);
    |   ----------------- method `request` not found for this struct
...
323 |       let response = self
    |  ____________________-
324 | |         .client
325 | |         .request(
    | |         -^^^^^^^ method not found in `HttpClient`
    | |_________|
    | 
    |
help: one of the expressions' fields has a method of the same name
    |
325 |         .0.request(
    |          ++

error[E0609]: no field `server` on type `RestCatalogConfig`
   --> crates/catalog/rest/src/catalog.rs:326:25
    |
326 |             self.config.server
    |                         ^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `warehouse`, `props`

error[E0599]: no method named `iter` found for tuple `(&'static str, &Cow<'_, str>, &'static str)` in the current scope
   --> crates/catalog/rest/src/catalog.rs:329:22
    |
328 |                   .join(&("/", &encode(&namespace_tuple), "/commit/")
    |  ________________________-
329 | |                     .iter()
    | |                     -^^^^ method not found in `(&str, &Cow<'_, str>, &str)`
    | |_____________________|
    | 

error[E0599]: no method named `headers` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:333:31
    |
333 |                 .headers(self.headers()?)
    |                               ^^^^^^^ method not found in `&RestCatalog`

error[E0599]: no variant or associated item named `InvalidResponse` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:341:39
    |
341 |                 Error::new(ErrorKind::InvalidResponse, "Invalid namespace response")
    |                                       ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0026]: struct `NamespaceSerde` does not have a field named `name`
   --> crates/catalog/rest/src/catalog.rs:340:34
    |
340 |             let NamespaceSerde { name, properties } = response.json().await.map_err(|_| {
    |                                  ^^^^
    |                                  |
    |                                  struct `NamespaceSerde` does not have this field
    |                                  help: `NamespaceSerde` has a field named `namespace`

error[E0027]: pattern does not mention field `namespace`
   --> crates/catalog/rest/src/catalog.rs:340:17
    |
340 |             let NamespaceSerde { name, properties } = response.json().await.map_err(|_| {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `namespace`
    |
help: include the missing field in the pattern
    |
340 |             let NamespaceSerde { name, properties, namespace } = response.json().await.map_err(|_| {
    |                                                  ~~~~~~~~~~~~~
help: if you don't care about this missing field, you can explicitly ignore it
    |
340 |             let NamespaceSerde { name, properties, .. } = response.json().await.map_err(|_| {
    |                                                  ~~~~~~

error[E0599]: no function or associated item named `from_str` found for struct `NamespaceIdent` in the current scope
   --> crates/catalog/rest/src/catalog.rs:343:51
    |
343 |             let namespace_ident = NamespaceIdent::from_str(&name).map_err(|_| {
    |                                                   ^^^^^^^^
    |                                                   |
    |                                                   function or associated item not found in `NamespaceIdent`
    |                                                   help: there is an associated function with a similar name: `from_strs`
    |
note: if you're trying to build a new `NamespaceIdent` consider using one of the following associated functions:
      NamespaceIdent::new
      NamespaceIdent::from_vec
      NamespaceIdent::from_strs
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:106:5
    |
106 |     pub fn new(name: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
111 |     pub fn from_vec(names: Vec<String>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
122 |     pub fn from_strs(iter: impl IntoIterator<Item = impl ToString>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `InvalidResponse` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:344:39
    |
344 |                 Error::new(ErrorKind::InvalidResponse, "Invalid namespace identifier")
    |                                       ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0308]: mismatched types
   --> crates/catalog/rest/src/catalog.rs:346:73
    |
346 |             let namespace = Namespace::with_properties(namespace_ident, properties);
    |                             --------------------------                  ^^^^^^^^^^ expected `HashMap<String, String>`, found `Option<HashMap<String, String>>`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected struct `HashMap<_, _>`
                 found enum `std::option::Option<HashMap<_, _>>`
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:165:12
    |
165 |     pub fn with_properties(name: NamespaceIdent, properties: HashMap<String, String>) -> Self {
    |            ^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::option::Option<HashMap<std::string::String, std::string::String>>` value, panicking if the value is an `Option::None`
    |
346 |             let namespace = Namespace::with_properties(namespace_ident, properties.expect("REASON"));
    |                                                                                   +++++++++++++++++

error[E0599]: no variant or associated item named `NamespaceAlreadyExists` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:351:28
    |
351 |                 ErrorKind::NamespaceAlreadyExists,
    |                            ^^^^^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

error[E0599]: no variant or associated item named `InvalidResponse` found for enum `iceberg::ErrorKind` in the current scope
   --> crates/catalog/rest/src/catalog.rs:356:40
    |
356 |         _ => Err(Error::new(ErrorKind::InvalidResponse, "Invalid response")),
    |                                        ^^^^^^^^^^^^^^^ variant or associated item not found in `ErrorKind`

Some errors have detailed explanations: E0026, E0027, E0308, E0425, E0433, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0026`.
error: could not compile `iceberg-catalog-rest` (lib) due to 17 previous errors
warning: build failed, waiting for other jobs to finish...

