Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:523:35
    |
523 |         if !self.namespace_exists(&to_namespace).await? {
    |                  ---------------- ^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `&String`
    |                  |
    |                  arguments to this method are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&std::string::String`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:54:14
    |
54  |     async fn namespace_exists(&self, namespace: &NamespaceIdent) -> Result<bool>;
    |              ^^^^^^^^^^^^^^^^

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:528:21
    |
528 |                     src, dest, &to_namespace
    |                     ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:528:26
    |
528 |                     src, dest, &to_namespace
    |                          ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:534:43
    |
534 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |                                           ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:534:33
    |
534 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:536:43
    |
536 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |                                           ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:536:33
    |
536 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:538:44
    |
538 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |                                            ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:538:33
    |
538 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:540:44
    |
540 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |                                            ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:540:33
    |
540 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:543:14
    |
543 |             .glue_client
    |              ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:545:31
    |
545 |             .catalog_id(&self.aws_props.glue_catalog_id())
    |                               ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:555:90
    |
555 |                     format!("Cannot rename {} because the table does not exist in Glue", src),
    |                                                                                          ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:561:14
    |
561 |             .parameters(from_table.parameters().unwrap())
    |              ^^^^^^^^^^---------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
561 |             .parameters(from_table.parameters().unwrap(), /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:565:14
    |
565 |         self.glue_client
    |              ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:567:31
    |
567 |             .catalog_id(&self.aws_props.glue_catalog_id())
    |                               ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:574:20
    |
574 |         match self.drop_table(src, false).await {
    |                    ^^^^^^^^^^    -------
    |                                  | |
    |                                  | unexpected argument of type `bool`
    |                                  help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:577:22
    |
577 |                 self.glue_client
    |                      ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:579:39
    |
579 |                     .catalog_id(&self.aws_props.glue_catalog_id())
    |                                       ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 20 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:523:35
    |
523 |         if !self.namespace_exists(&to_namespace).await? {
    |                  ---------------- ^^^^^^^^^^^^^ expected `&NamespaceIdent`, found `&String`
    |                  |
    |                  arguments to this method are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&std::string::String`
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:54:14
    |
54  |     async fn namespace_exists(&self, namespace: &NamespaceIdent) -> Result<bool>;
    |              ^^^^^^^^^^^^^^^^

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:528:21
    |
528 |                     src, dest, &to_namespace
    |                     ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:528:26
    |
528 |                     src, dest, &to_namespace
    |                          ^^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:534:43
    |
534 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |                                           ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:534:33
    |
534 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:536:43
    |
536 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |                                           ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:536:33
    |
536 |             convert_to_database(src, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:538:44
    |
538 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |                                            ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:538:33
    |
538 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:540:44
    |
540 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |                                            ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:540:33
    |
540 |             convert_to_database(dest, self.aws_props.glue_catalog_skip_name_validation());
    |             ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |             |
    |             arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:543:14
    |
543 |             .glue_client
    |              ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:545:31
    |
545 |             .catalog_id(&self.aws_props.glue_catalog_id())
    |                               ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0277]: `TableIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/glue/src/catalog.rs:555:90
    |
555 |                     format!("Cannot rename {} because the table does not exist in Glue", src),
    |                                                                                          ^^^ `TableIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `TableIdent`, which is required by `&TableIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:561:14
    |
561 |             .parameters(from_table.parameters().unwrap())
    |              ^^^^^^^^^^---------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
561 |             .parameters(from_table.parameters().unwrap(), /* v */)
    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:565:14
    |
565 |         self.glue_client
    |              ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:567:31
    |
567 |             .catalog_id(&self.aws_props.glue_catalog_id())
    |                               ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:574:20
    |
574 |         match self.drop_table(src, false).await {
    |                    ^^^^^^^^^^    -------
    |                                  | |
    |                                  | unexpected argument of type `bool`
    |                                  help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0609]: no field `glue_client` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:577:22
    |
577 |                 self.glue_client
    |                      ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_props` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:579:39
    |
579 |                     .catalog_id(&self.aws_props.glue_catalog_id())
    |                                       ^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0308, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 20 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

