Fail
file path is :
projects/iceberg/rust/crates/catalog/rest/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0432]: unresolved import `crate::ErrorHandlers`
  --> crates/catalog/rest/src/catalog.rs:22:5
   |
22 | use crate::ErrorHandlers;
   |     ^^^^^^^^^^^^^^^^^^^^ no `ErrorHandlers` in the root

error[E0433]: failed to resolve: use of undeclared type `Method`
   --> crates/catalog/rest/src/catalog.rs:415:13
    |
415 |             Method::Get,
    |             ^^^^^^ use of undeclared type `Method`
    |
help: consider importing this struct
    |
21  + use reqwest::Method;
    |

error[E0412]: cannot find type `ListTablesResponse` in this scope
   --> crates/catalog/rest/src/catalog.rs:418:23
    |
418 |         let response: ListTablesResponse = self.query::<
    |                       ^^^^^^^^^^^^^^^^^^ help: a struct with a similar name exists: `ListTableResponse`
...
834 |     pub(super) struct ListTableResponse {
    |     ----------------------------------- similarly named struct `ListTableResponse` defined here

error[E0412]: cannot find type `ListTablesResponse` in this scope
   --> crates/catalog/rest/src/catalog.rs:419:21
    |
419 |                     ListTablesResponse, 
    |                     ^^^^^^^^^^^^^^^^^^
...
834 |     pub(super) struct ListTableResponse {
    |     ----------------------------------- similarly named struct `ListTableResponse` defined here
    |
help: a struct with a similar name exists
    |
419 |                     ListTableResponse, 
    |                     ~~~~~~~~~~~~~~~~~
help: you might be missing a type parameter
    |
291 | impl<ListTablesResponse> Catalog for RestCatalog {
    |     ++++++++++++++++++++

warning: unused imports: `Deserialize`, `Serialize`
  --> crates/catalog/rest/src/catalog.rs:21:13
   |
21 | use serde::{Serialize, Deserialize};
   |             ^^^^^^^^^  ^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ListTableResponse`
  --> crates/catalog/rest/src/catalog.rs:46:58
   |
46 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                                                          ^^^^^^^^^^^^^^^^^

error[E0282]: type annotations needed for `std::option::Option<T>`
   --> crates/catalog/rest/src/catalog.rs:402:9
    |
402 |     let mut page_token = None;
    |         ^^^^^^^^^^^^^^
...
408 |             query_params.insert("pageToken", token.clone());
    |                                                    ----- type must be known at this point
    |
help: consider giving `page_token` an explicit type, where the type for type parameter `T` is specified
    |
402 |     let mut page_token: std::option::Option<T> = None;
    |                       ++++++++++++++++++++++++

error[E0277]: `iceberg::NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/rest/src/catalog.rs:412:49
    |
412 |             Url::from_str(&format!("{}/tables", namespace)),
    |                                                 ^^^^^^^^^ `iceberg::NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `iceberg::NamespaceIdent`, which is required by `&iceberg::NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 2 arguments but 4 arguments were supplied
   --> crates/catalog/rest/src/catalog.rs:411:23
    |
411 |         let request = Request::new(
    |                       ^^^^^^^^^^^^
...
414 |             query_params,
    |             ------------ unexpected argument
415 |             Method::Get,
    |             ----------- unexpected argument
    |
note: expected `Method`, found `Result<Url, ParseError>`
   --> crates/catalog/rest/src/catalog.rs:412:13
    |
412 |             Url::from_str(&format!("{}/tables", namespace)),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected struct `Method`
                 found enum `Result<Url, url::parser::ParseError>`
note: expected `Url`, found `HeaderMap`
   --> crates/catalog/rest/src/catalog.rs:413:13
    |
413 |             HeaderMap::new(),
    |             ^^^^^^^^^^^^^^^^
    = note: expected struct `Url`
               found struct `reqwest::header::HeaderMap`
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:12
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |            ^^^
help: remove the extra arguments
    |
412 ~             /* Method */,
413 ~             /* Url */,
    |

error[E0599]: no method named `query` found for reference `&catalog::RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:418:49
    |
418 |         let response: ListTablesResponse = self.query::<
    |                                            -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
418 |         let response: ListTablesResponse = self.client.query::<
    |                                                 +++++++

Some errors have detailed explanations: E0061, E0277, E0282, E0412, E0432, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-rest` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-rest` (lib test) due to 8 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0432]: unresolved import `crate::ErrorHandlers`
  --> crates/catalog/rest/src/catalog.rs:22:5
   |
22 | use crate::ErrorHandlers;
   |     ^^^^^^^^^^^^^^^^^^^^ no `ErrorHandlers` in the root

error[E0433]: failed to resolve: use of undeclared type `Method`
   --> crates/catalog/rest/src/catalog.rs:415:13
    |
415 |             Method::Get,
    |             ^^^^^^ use of undeclared type `Method`
    |
help: consider importing this struct
    |
21  + use reqwest::Method;
    |

error[E0412]: cannot find type `ListTablesResponse` in this scope
   --> crates/catalog/rest/src/catalog.rs:418:23
    |
418 |         let response: ListTablesResponse = self.query::<
    |                       ^^^^^^^^^^^^^^^^^^ help: a struct with a similar name exists: `ListTableResponse`
...
834 |     pub(super) struct ListTableResponse {
    |     ----------------------------------- similarly named struct `ListTableResponse` defined here

error[E0412]: cannot find type `ListTablesResponse` in this scope
   --> crates/catalog/rest/src/catalog.rs:419:21
    |
419 |                     ListTablesResponse, 
    |                     ^^^^^^^^^^^^^^^^^^
...
834 |     pub(super) struct ListTableResponse {
    |     ----------------------------------- similarly named struct `ListTableResponse` defined here
    |
help: a struct with a similar name exists
    |
419 |                     ListTableResponse, 
    |                     ~~~~~~~~~~~~~~~~~
help: you might be missing a type parameter
    |
291 | impl<ListTablesResponse> Catalog for RestCatalog {
    |     ++++++++++++++++++++

warning: unused imports: `Deserialize`, `Serialize`
  --> crates/catalog/rest/src/catalog.rs:21:13
   |
21 | use serde::{Serialize, Deserialize};
   |             ^^^^^^^^^  ^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ListTableResponse`
  --> crates/catalog/rest/src/catalog.rs:46:58
   |
46 |     CatalogConfig, ErrorResponse, ListNamespaceResponse, ListTableResponse, NamespaceSerde,
   |                                                          ^^^^^^^^^^^^^^^^^

error[E0282]: type annotations needed for `std::option::Option<T>`
   --> crates/catalog/rest/src/catalog.rs:402:9
    |
402 |     let mut page_token = None;
    |         ^^^^^^^^^^^^^^
...
408 |             query_params.insert("pageToken", token.clone());
    |                                                    ----- type must be known at this point
    |
help: consider giving `page_token` an explicit type, where the type for type parameter `T` is specified
    |
402 |     let mut page_token: std::option::Option<T> = None;
    |                       ++++++++++++++++++++++++

error[E0277]: `NamespaceIdent` doesn't implement `std::fmt::Display`
   --> crates/catalog/rest/src/catalog.rs:412:49
    |
412 |             Url::from_str(&format!("{}/tables", namespace)),
    |                                                 ^^^^^^^^^ `NamespaceIdent` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `NamespaceIdent`, which is required by `&NamespaceIdent: std::fmt::Display`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 2 arguments but 4 arguments were supplied
   --> crates/catalog/rest/src/catalog.rs:411:23
    |
411 |         let request = Request::new(
    |                       ^^^^^^^^^^^^
...
414 |             query_params,
    |             ------------ unexpected argument
415 |             Method::Get,
    |             ----------- unexpected argument
    |
note: expected `Method`, found `Result<Url, ParseError>`
   --> crates/catalog/rest/src/catalog.rs:412:13
    |
412 |             Url::from_str(&format!("{}/tables", namespace)),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected struct `Method`
                 found enum `Result<Url, url::parser::ParseError>`
note: expected `Url`, found `HeaderMap`
   --> crates/catalog/rest/src/catalog.rs:413:13
    |
413 |             HeaderMap::new(),
    |             ^^^^^^^^^^^^^^^^
    = note: expected struct `Url`
               found struct `HeaderMap`
note: associated function defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/reqwest-0.12.5/src/async_impl/request.rs:43:12
    |
43  |     pub fn new(method: Method, url: Url) -> Self {
    |            ^^^
help: remove the extra arguments
    |
412 ~             /* Method */,
413 ~             /* Url */,
    |

error[E0599]: no method named `query` found for reference `&RestCatalog` in the current scope
   --> crates/catalog/rest/src/catalog.rs:418:49
    |
418 |         let response: ListTablesResponse = self.query::<
    |                                            -----^^^^^ method not found in `&RestCatalog`
    |
help: one of the expressions' fields has a method of the same name
    |
418 |         let response: ListTablesResponse = self.client.query::<
    |                                                 +++++++

Some errors have detailed explanations: E0061, E0277, E0282, E0412, E0432, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-rest` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-rest` (lib) due to 8 previous errors; 2 warnings emitted

