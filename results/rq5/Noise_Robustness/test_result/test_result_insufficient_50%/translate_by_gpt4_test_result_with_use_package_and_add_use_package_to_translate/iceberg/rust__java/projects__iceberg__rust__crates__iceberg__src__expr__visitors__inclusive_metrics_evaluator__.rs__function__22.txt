Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0616]: field `field` of struct `term::BoundReference` is private
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:361:24
    |
361 |     let id = reference.field.id;
    |                        ^^^^^ private field
    |
help: a method `field` also exists, call it with parentheses
    |
361 |     let id = reference.field().id;
    |                             ++

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:368:9
    |
367 |     let prefix_as_bytes = match datum {
    |                                 ----- this expression has type `&values::Datum`
368 |         PrimitiveLiteral::String(s) => s.as_bytes(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Datum`, found `PrimitiveLiteral`

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:369:9
    |
367 |     let prefix_as_bytes = match datum {
    |                                 ----- this expression has type `&values::Datum`
368 |         PrimitiveLiteral::String(s) => s.as_bytes(),
369 |         PrimitiveLiteral::Binary(b) => b.as_slice(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Datum`, found `PrimitiveLiteral`

error[E0277]: the trait bound `error::Error: From<error::ErrorKind>` is not satisfied
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:370:25
    |
370 |         _ => return Err(Error::from(ErrorKind::DataInvalid)),
    |                         ^^^^^ the trait `From<error::ErrorKind>` is not implemented for `error::Error`
    |
    = help: the following other types implement trait `From<T>`:
              <error::Error as From<reqwest::Error>>
              <error::Error as From<serde_json::Error>>
              <error::Error as From<uuid::Error>>
              <error::Error as From<url::ParseError>>
              <error::Error as From<rust_decimal::Error>>
              <error::Error as From<opendal::Error>>
              <error::Error as From<apache_avro::Error>>
              <error::Error as From<chrono::ParseError>>
            and 5 others

error[E0599]: no method named `starts_with` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:381:19
    |
381 |         if !lower.starts_with(prefix_as_bytes) {
    |                   ^^^^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `starts_with`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0608]: cannot index into a value of type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:386:45
    |
386 |         let cmp = prefix_as_bytes.cmp(&lower[0..prefix_as_bytes.len()]);
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `starts_with` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:389:23
    |
389 |             if !upper.starts_with(prefix_as_bytes) {
    |                       ^^^^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `starts_with`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0608]: cannot index into a value of type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:394:49
    |
394 |             let cmp = prefix_as_bytes.cmp(&upper[0..prefix_as_bytes.len()]);
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0277, E0308, E0599, E0608, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 8 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error[E0616]: field `field` of struct `term::BoundReference` is private
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:361:24
    |
361 |     let id = reference.field.id;
    |                        ^^^^^ private field
    |
help: a method `field` also exists, call it with parentheses
    |
361 |     let id = reference.field().id;
    |                             ++

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:368:9
    |
367 |     let prefix_as_bytes = match datum {
    |                                 ----- this expression has type `&values::Datum`
368 |         PrimitiveLiteral::String(s) => s.as_bytes(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Datum`, found `PrimitiveLiteral`

error[E0308]: mismatched types
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:369:9
    |
367 |     let prefix_as_bytes = match datum {
    |                                 ----- this expression has type `&values::Datum`
368 |         PrimitiveLiteral::String(s) => s.as_bytes(),
369 |         PrimitiveLiteral::Binary(b) => b.as_slice(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Datum`, found `PrimitiveLiteral`

error[E0277]: the trait bound `error::Error: From<error::ErrorKind>` is not satisfied
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:370:25
    |
370 |         _ => return Err(Error::from(ErrorKind::DataInvalid)),
    |                         ^^^^^ the trait `From<error::ErrorKind>` is not implemented for `error::Error`
    |
    = help: the following other types implement trait `From<T>`:
              <error::Error as From<reqwest::Error>>
              <error::Error as From<serde_json::Error>>
              <error::Error as From<uuid::Error>>
              <error::Error as From<url::ParseError>>
              <error::Error as From<rust_decimal::Error>>
              <error::Error as From<opendal::Error>>
              <error::Error as From<apache_avro::Error>>
              <error::Error as From<chrono::ParseError>>
            and 5 others

error[E0599]: no method named `starts_with` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:381:19
    |
381 |         if !lower.starts_with(prefix_as_bytes) {
    |                   ^^^^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `starts_with`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0608]: cannot index into a value of type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:386:45
    |
386 |         let cmp = prefix_as_bytes.cmp(&lower[0..prefix_as_bytes.len()]);
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `starts_with` found for reference `&values::Datum` in the current scope
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:389:23
    |
389 |             if !upper.starts_with(prefix_as_bytes) {
    |                       ^^^^^^^^^^^ method not found in `&Datum`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
note: `BoundPredicateVisitor` defines an item `starts_with`, perhaps you need to implement it
   --> crates/iceberg/src/expr/visitors/bound_predicate_visitor.rs:24:1
    |
24  | pub trait BoundPredicateVisitor {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0608]: cannot index into a value of type `&values::Datum`
   --> crates/iceberg/src/expr/visitors/inclusive_metrics_evaluator.rs:394:49
    |
394 |             let cmp = prefix_as_bytes.cmp(&upper[0..prefix_as_bytes.len()]);
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0277, E0308, E0599, E0608, E0616.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg` (lib) due to 8 previous errors

