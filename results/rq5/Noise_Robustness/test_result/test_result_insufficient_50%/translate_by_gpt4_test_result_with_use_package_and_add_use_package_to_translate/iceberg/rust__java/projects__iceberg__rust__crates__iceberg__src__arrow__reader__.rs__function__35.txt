Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/reader.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected expression, found `let` statement
   --> crates/iceberg/src/arrow/reader.rs:550:15
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: only supported directly in conditions of `if` and `while` expressions
note: `||` operators are not supported in let chain expressions
   --> crates/iceberg/src/arrow/reader.rs:550:55
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                       ^^

error: expected expression, found `let` statement
   --> crates/iceberg/src/arrow/reader.rs:550:58
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: only supported directly in conditions of `if` and `while` expressions
note: `||` operators are not supported in let chain expressions
   --> crates/iceberg/src/arrow/reader.rs:550:55
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                       ^^

error[E0599]: no method named `is_none` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:12
    |
546 |     if lhs.is_none() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0599]: no variant or associated item named `Other` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:547:35
    |
547 |         Err(Error::new(ErrorKind::Other, "Left expression cannot be null."))
    |                                   ^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `Other` not found for this enum

error[E0599]: no method named `is_none` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:548:19
    |
548 |     } else if rhs.is_none() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0599]: no variant or associated item named `Other` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:549:35
    |
549 |         Err(Error::new(ErrorKind::Other, "Right expression cannot be null."))
    |                                   ^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `Other` not found for this enum

error[E0599]: no associated item named `AlwaysFalse` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:550:36
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                    ^^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `AlwaysFalse` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:550:79
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                                               ^^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0425]: cannot find function `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:551:12
    |
551 |         Ok(always_false())
    |            ^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
551 |         Ok(self.always_false())
    |            +++++

error[E0599]: no associated item named `AlwaysTrue` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:552:36
    |
552 |     } else if let PredicateResult::AlwaysTrue = *lhs {
    |                                    ^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `AlwaysTrue` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:554:36
    |
554 |     } else if let PredicateResult::AlwaysTrue = *rhs {
    |                                    ^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `Custom` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:558:37
    |
558 |             if let PredicateResult::Custom(ref mut left_func) = *lhs {
    |                                     ^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `Custom` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:559:41
    |
559 |                 if let PredicateResult::Custom(ref mut right_func) = *rhs {
    |                                         ^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:563:24
    |
563 |                   } else {
    |  ________________________^
564 | |                     // The same error handling as before
565 | |                 }
    | |_________________^ expected `Result<BooleanArray, ArrowError>`, found `()`
    |
    = note:   expected enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
            found unit type `()`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:566:20
    |
566 |               } else {
    |  ____________________^
567 | |                 // The same error handling as before
568 | |             }
    | |_____________^ expected `Result<BooleanArray, ArrowError>`, found `()`
    |
    = note:   expected enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
            found unit type `()`

Some errors have detailed explanations: E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 15 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `iceberg` (lib test) due to 15 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: expected expression, found `let` statement
   --> crates/iceberg/src/arrow/reader.rs:550:15
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: only supported directly in conditions of `if` and `while` expressions
note: `||` operators are not supported in let chain expressions
   --> crates/iceberg/src/arrow/reader.rs:550:55
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                       ^^

error: expected expression, found `let` statement
   --> crates/iceberg/src/arrow/reader.rs:550:58
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: only supported directly in conditions of `if` and `while` expressions
note: `||` operators are not supported in let chain expressions
   --> crates/iceberg/src/arrow/reader.rs:550:55
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                       ^^

error[E0599]: no method named `is_none` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:546:12
    |
546 |     if lhs.is_none() {
    |            ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0599]: no variant or associated item named `Other` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:547:35
    |
547 |         Err(Error::new(ErrorKind::Other, "Left expression cannot be null."))
    |                                   ^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `Other` not found for this enum

error[E0599]: no method named `is_none` found for struct `Box<(dyn FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send + 'static)>` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:548:19
    |
548 |     } else if rhs.is_none() {
    |                   ^^^^^^^ method not found in `Box<dyn FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send>`

error[E0599]: no variant or associated item named `Other` found for enum `error::ErrorKind` in the current scope
   --> crates/iceberg/src/arrow/reader.rs:549:35
    |
549 |         Err(Error::new(ErrorKind::Other, "Right expression cannot be null."))
    |                                   ^^^^^ variant or associated item not found in `ErrorKind`
    |
   ::: crates/iceberg/src/error.rs:30:1
    |
30  | pub enum ErrorKind {
    | ------------------ variant or associated item `Other` not found for this enum

error[E0599]: no associated item named `AlwaysFalse` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:550:36
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                    ^^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `AlwaysFalse` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:550:79
    |
550 |     } else if let PredicateResult::AlwaysFalse = *lhs || let PredicateResult::AlwaysFalse = *rhs {
    |                                                                               ^^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0425]: cannot find function `always_false` in this scope
   --> crates/iceberg/src/arrow/reader.rs:551:12
    |
551 |         Ok(always_false())
    |            ^^^^^^^^^^^^
    |
help: you might have meant to call the method
    |
551 |         Ok(self.always_false())
    |            +++++

error[E0599]: no associated item named `AlwaysTrue` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:552:36
    |
552 |     } else if let PredicateResult::AlwaysTrue = *lhs {
    |                                    ^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `AlwaysTrue` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:554:36
    |
554 |     } else if let PredicateResult::AlwaysTrue = *rhs {
    |                                    ^^^^^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `Custom` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:558:37
    |
558 |             if let PredicateResult::Custom(ref mut left_func) = *lhs {
    |                                     ^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0599]: no associated item named `Custom` found for trait `FnMut(RecordBatch) -> std::result::Result<BooleanArray, arrow_schema::ArrowError> + std::marker::Send`
   --> crates/iceberg/src/arrow/reader.rs:559:41
    |
559 |                 if let PredicateResult::Custom(ref mut right_func) = *rhs {
    |                                         ^^^^^^ associated item not found in `FnMut(RecordBatch) -> Result<BooleanArray, ArrowError> + Send`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:563:24
    |
563 |                   } else {
    |  ________________________^
564 | |                     // The same error handling as before
565 | |                 }
    | |_________________^ expected `Result<BooleanArray, ArrowError>`, found `()`
    |
    = note:   expected enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
            found unit type `()`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/reader.rs:566:20
    |
566 |               } else {
    |  ____________________^
567 | |                 // The same error handling as before
568 | |             }
    | |_____________^ expected `Result<BooleanArray, ArrowError>`, found `()`
    |
    = note:   expected enum `std::result::Result<BooleanArray, arrow_schema::ArrowError>`
            found unit type `()`

Some errors have detailed explanations: E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 15 previous errors

