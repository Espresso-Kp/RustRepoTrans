Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0252]: the name `HashMap` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:34:11
   |
23 | use std::collections::HashMap;
   |     ------------------------- previous import of the type `HashMap` here
...
34 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^--
   |           |
   |           `HashMap` reimported here
   |           help: remove unnecessary import
   |
   = note: `HashMap` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `iceberg::meta`
  --> crates/catalog/glue/src/catalog.rs:21:14
   |
21 | use iceberg::meta::{SchemaTable, TableMetadata, TableOper, Tables, TableSnapshot};
   |              ^^^^ could not find `meta` in `iceberg`

error[E0432]: unresolved import `iceberg::spec::TableIdent`
  --> crates/catalog/glue/src/catalog.rs:22:5
   |
22 | use iceberg::spec::TableIdent;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ no `TableIdent` in `spec`
   |
help: consider importing this struct instead
   |
22 | use iceberg::TableIdent;
   |     ~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::convert_to_table`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use crate::convert_to_table;
   |     ^^^^^^^^^^^^^^^^^^^^^^^ no `convert_to_table` in the root

error[E0432]: unresolved import `crate::subscribe_to_metadata_updates`
  --> crates/catalog/glue/src/catalog.rs:20:5
   |
20 | use crate::subscribe_to_metadata_updates;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `subscribe_to_metadata_updates` in the root

warning: unused import: `collections::HashMap`
  --> crates/catalog/glue/src/catalog.rs:34:11
   |
34 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `get_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:41:52
   |
41 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                                                    ^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `load_internal` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:419:16
    |
419 |     match self.load_internal(table).await {
    |                ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `levels` found for reference `&iceberg::NamespaceIdent` in the current scope
   --> crates/catalog/glue/src/catalog.rs:428:68
    |
428 |                 let base_ident = TableIdent::new(table.namespace().levels().to_vec());
    |                                                                    ^^^^^^ method not found in `&NamespaceIdent`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:428:34
    |
428 |                 let base_ident = TableIdent::new(table.namespace().levels().to_vec());
    |                                  ^^^^^^^^^^^^^^^------------------------------------- an argument of type `std::string::String` is missing
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:191:12
    |
191 |     pub fn new(namespace: NamespaceIdent, name: String) -> Self {
    |            ^^^
help: provide the argument
    |
428 |                 let base_ident = TableIdent::new(table.namespace().levels().to_vec(), /* std::string::String */);
    |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `load_internal` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:429:28
    |
429 |                 match self.load_internal(&base_ident).await {
    |                            ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `table_session` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:445:24
    |
445 |     let session = self.table_session(response.config());
    |                        ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0609]: no field `snapshot_mode` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:448:13
    |
448 |     if self.snapshot_mode == SnapshotMode::REFS {
    |             ^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `SnapshotMode`
   --> crates/catalog/glue/src/catalog.rs:448:30
    |
448 |     if self.snapshot_mode == SnapshotMode::REFS {
    |                              ^^^^^^^^^^^^ use of undeclared type `SnapshotMode`

error[E0599]: no method named `load_internal` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:449:29
    |
449 |         let snapshot = self.load_internal(&final_ident, SnapshotMode::ALL)
    |                             ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0433]: failed to resolve: use of undeclared type `SnapshotMode`
   --> crates/catalog/glue/src/catalog.rs:449:57
    |
449 |         let snapshot = self.load_internal(&final_ident, SnapshotMode::ALL)
    |                                                         ^^^^^^^^^^^^ use of undeclared type `SnapshotMode`

error[E0599]: no function or associated item named `build_from` found for struct `iceberg::spec::TableMetadata` in the current scope
   --> crates/catalog/glue/src/catalog.rs:453:41
    |
453 |         table_metadata = TableMetadata::build_from(response.table_metadata())
    |                                         ^^^^^^^^^^ function or associated item not found in `TableMetadata`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:463:24
    |
463 |     let file_io = self.file_io(&response.config()).await?;
    |                        ^^^^^^^ ------------------
    |                                |
    |                                unexpected argument
    |                                help: remove the extra argument
    |
note: method defined here
   --> crates/catalog/glue/src/catalog.rs:92:12
    |
92  |     pub fn file_io(&self) -> FileIO {
    |            ^^^^^^^

error[E0277]: `FileIO` is not a future
   --> crates/catalog/glue/src/catalog.rs:463:52
    |
463 |     let file_io = self.file_io(&response.config()).await?;
    |                                                   -^^^^^
    |                                                   ||
    |                                                   |`FileIO` is not a future
    |                                                   help: remove the `.await`
    |
    = help: the trait `std::future::Future` is not implemented for `FileIO`, which is required by `FileIO: IntoFuture`
    = note: FileIO must be a future or must implement `IntoFuture` to be awaited
    = note: required for `FileIO` to implement `IntoFuture`

error[E0609]: no field `paths` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:466:20
    |
466 |         path: self.paths.table(&final_ident),
    |                    ^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no method named `track_file_io` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:472:10
    |
472 |     self.track_file_io(ops.clone());
    |          ^^^^^^^^^^^^^ help: there is a method with a similar name: `file_io`

error[E0560]: struct `iceberg::table::Table` has no field named `ops`
   --> crates/catalog/glue/src/catalog.rs:475:9
    |
475 |         ops: &ops,
    |         ^^^ `iceberg::table::Table` does not have this field
    |
    = note: all struct fields are already assigned

error[E0560]: struct `iceberg::table::Table` has no field named `full_table_name`
   --> crates/catalog/glue/src/catalog.rs:476:9
    |
476 |         full_table_name: self.full_table_name(&final_ident),
    |         ^^^^^^^^^^^^^^^ `iceberg::table::Table` does not have this field
    |
    = note: all struct fields are already assigned

error[E0599]: no method named `full_table_name` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:476:31
    |
476 |         full_table_name: self.full_table_name(&final_ident),
    |                               ^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0560]: struct `iceberg::table::Table` has no field named `metrics_reporter`
   --> crates/catalog/glue/src/catalog.rs:477:9
    |
477 |         metrics_reporter: self.paths.metrics(&final_ident, session.headers()),
    |         ^^^^^^^^^^^^^^^^ `iceberg::table::Table` does not have this field
    |
    = note: all struct fields are already assigned

error[E0609]: no field `paths` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:477:32
    |
477 |         metrics_reporter: self.paths.metrics(&final_ident, session.headers()),
    |                                ^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0252, E0277, E0432, E0433, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib test) due to 24 previous errors; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0252]: the name `HashMap` is defined multiple times
  --> crates/catalog/glue/src/catalog.rs:34:11
   |
23 | use std::collections::HashMap;
   |     ------------------------- previous import of the type `HashMap` here
...
34 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^--
   |           |
   |           `HashMap` reimported here
   |           help: remove unnecessary import
   |
   = note: `HashMap` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `iceberg::meta`
  --> crates/catalog/glue/src/catalog.rs:21:14
   |
21 | use iceberg::meta::{SchemaTable, TableMetadata, TableOper, Tables, TableSnapshot};
   |              ^^^^ could not find `meta` in `iceberg`

error[E0432]: unresolved import `iceberg::spec::TableIdent`
  --> crates/catalog/glue/src/catalog.rs:22:5
   |
22 | use iceberg::spec::TableIdent;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ no `TableIdent` in `spec`
   |
help: consider importing this struct instead
   |
22 | use iceberg::TableIdent;
   |     ~~~~~~~~~~~~~~~~~~~

error[E0432]: unresolved import `crate::convert_to_table`
  --> crates/catalog/glue/src/catalog.rs:19:5
   |
19 | use crate::convert_to_table;
   |     ^^^^^^^^^^^^^^^^^^^^^^^ no `convert_to_table` in the root

error[E0432]: unresolved import `crate::subscribe_to_metadata_updates`
  --> crates/catalog/glue/src/catalog.rs:20:5
   |
20 | use crate::subscribe_to_metadata_updates;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `subscribe_to_metadata_updates` in the root

warning: unused import: `collections::HashMap`
  --> crates/catalog/glue/src/catalog.rs:34:11
   |
34 | use std::{collections::HashMap, fmt::Debug};
   |           ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `get_metadata_location`
  --> crates/catalog/glue/src/catalog.rs:41:52
   |
41 |     create_sdk_config, get_default_table_location, get_metadata_location, validate_namespace,
   |                                                    ^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `load_internal` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:419:16
    |
419 |     match self.load_internal(table).await {
    |                ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `levels` found for reference `&NamespaceIdent` in the current scope
   --> crates/catalog/glue/src/catalog.rs:428:68
    |
428 |                 let base_ident = TableIdent::new(table.namespace().levels().to_vec());
    |                                                                    ^^^^^^ method not found in `&NamespaceIdent`

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:428:34
    |
428 |                 let base_ident = TableIdent::new(table.namespace().levels().to_vec());
    |                                  ^^^^^^^^^^^^^^^------------------------------------- an argument of type `std::string::String` is missing
    |
note: associated function defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:191:12
    |
191 |     pub fn new(namespace: NamespaceIdent, name: String) -> Self {
    |            ^^^
help: provide the argument
    |
428 |                 let base_ident = TableIdent::new(table.namespace().levels().to_vec(), /* std::string::String */);
    |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0599]: no method named `load_internal` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:429:28
    |
429 |                 match self.load_internal(&base_ident).await {
    |                            ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0599]: no method named `table_session` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:445:24
    |
445 |     let session = self.table_session(response.config());
    |                        ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0609]: no field `snapshot_mode` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:448:13
    |
448 |     if self.snapshot_mode == SnapshotMode::REFS {
    |             ^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0433]: failed to resolve: use of undeclared type `SnapshotMode`
   --> crates/catalog/glue/src/catalog.rs:448:30
    |
448 |     if self.snapshot_mode == SnapshotMode::REFS {
    |                              ^^^^^^^^^^^^ use of undeclared type `SnapshotMode`

error[E0599]: no method named `load_internal` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:449:29
    |
449 |         let snapshot = self.load_internal(&final_ident, SnapshotMode::ALL)
    |                             ^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0433]: failed to resolve: use of undeclared type `SnapshotMode`
   --> crates/catalog/glue/src/catalog.rs:449:57
    |
449 |         let snapshot = self.load_internal(&final_ident, SnapshotMode::ALL)
    |                                                         ^^^^^^^^^^^^ use of undeclared type `SnapshotMode`

error[E0599]: no function or associated item named `build_from` found for struct `TableMetadata` in the current scope
   --> crates/catalog/glue/src/catalog.rs:453:41
    |
453 |         table_metadata = TableMetadata::build_from(response.table_metadata())
    |                                         ^^^^^^^^^^ function or associated item not found in `TableMetadata`

error[E0061]: this method takes 0 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:463:24
    |
463 |     let file_io = self.file_io(&response.config()).await?;
    |                        ^^^^^^^ ------------------
    |                                |
    |                                unexpected argument
    |                                help: remove the extra argument
    |
note: method defined here
   --> crates/catalog/glue/src/catalog.rs:92:12
    |
92  |     pub fn file_io(&self) -> FileIO {
    |            ^^^^^^^

error[E0277]: `FileIO` is not a future
   --> crates/catalog/glue/src/catalog.rs:463:52
    |
463 |     let file_io = self.file_io(&response.config()).await?;
    |                                                   -^^^^^
    |                                                   ||
    |                                                   |`FileIO` is not a future
    |                                                   help: remove the `.await`
    |
    = help: the trait `std::future::Future` is not implemented for `FileIO`, which is required by `FileIO: IntoFuture`
    = note: FileIO must be a future or must implement `IntoFuture` to be awaited
    = note: required for `FileIO` to implement `IntoFuture`

error[E0609]: no field `paths` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:466:20
    |
466 |         path: self.paths.table(&final_ident),
    |                    ^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0599]: no method named `track_file_io` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:472:10
    |
472 |     self.track_file_io(ops.clone());
    |          ^^^^^^^^^^^^^ help: there is a method with a similar name: `file_io`

error[E0560]: struct `iceberg::table::Table` has no field named `ops`
   --> crates/catalog/glue/src/catalog.rs:475:9
    |
475 |         ops: &ops,
    |         ^^^ `iceberg::table::Table` does not have this field
    |
    = note: all struct fields are already assigned

error[E0560]: struct `iceberg::table::Table` has no field named `full_table_name`
   --> crates/catalog/glue/src/catalog.rs:476:9
    |
476 |         full_table_name: self.full_table_name(&final_ident),
    |         ^^^^^^^^^^^^^^^ `iceberg::table::Table` does not have this field
    |
    = note: all struct fields are already assigned

error[E0599]: no method named `full_table_name` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:476:31
    |
476 |         full_table_name: self.full_table_name(&final_ident),
    |                               ^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0560]: struct `iceberg::table::Table` has no field named `metrics_reporter`
   --> crates/catalog/glue/src/catalog.rs:477:9
    |
477 |         metrics_reporter: self.paths.metrics(&final_ident, session.headers()),
    |         ^^^^^^^^^^^^^^^^ `iceberg::table::Table` does not have this field
    |
    = note: all struct fields are already assigned

error[E0609]: no field `paths` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:477:32
    |
477 |         metrics_reporter: self.paths.metrics(&final_ident, session.headers()),
    |                                ^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0252, E0277, E0432, E0433, E0560, E0599, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 2 warnings
error: could not compile `iceberg-catalog-glue` (lib) due to 24 previous errors; 2 warnings emitted

