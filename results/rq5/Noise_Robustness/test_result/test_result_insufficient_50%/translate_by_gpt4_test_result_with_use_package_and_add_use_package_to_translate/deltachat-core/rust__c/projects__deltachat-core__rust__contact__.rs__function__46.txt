Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0252]: the name `Result` is defined multiple times
  --> src/contact.rs:12:42
   |
4  | use anyhow::Result;
   |     -------------- previous import of the type `Result` here
...
12 | use anyhow::{bail, ensure, Context as _, Result};
   |                                          ^^^^^^ `Result` reimported here
   |
   = note: `Result` must be defined only once in the type namespace of this module

error[E0425]: cannot find value `DC_CONTACT_MAGIC` in this scope
    --> src/contact.rs:1431:22
     |
1431 |     if self.magic != DC_CONTACT_MAGIC {
     |                      ^^^^^^^^^^^^^^^^ not found in this scope

warning: unused import: `Result`
  --> src/contact.rs:12:42
   |
12 | use anyhow::{bail, ensure, Context as _, Result};
   |                                          ^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:6:5
   |
6  |     unused,
   |     ^^^^^^
   = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error[E0609]: no field `magic` on type `&contact::Contact`
    --> src/contact.rs:1431:13
     |
1431 |     if self.magic != DC_CONTACT_MAGIC {
     |             ^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0609]: no field `peerstate` on type `&contact::Contact`
    --> src/contact.rs:1440:33
     |
1440 |     let peerstate = match &self.peerstate {
     |                                 ^^^^^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0599]: no function or associated item named `new` found for struct `peerstate::Peerstate` in the current scope
    --> src/contact.rs:1444:50
     |
1444 |             let peerstate_to_delete = Peerstate::new(self.context);
     |                                                  ^^^ function or associated item not found in `Peerstate`
     |
    ::: src/peerstate.rs:35:1
     |
35   | pub struct Peerstate {
     | -------------------- function or associated item `new` not found for this struct
     |
note: if you're trying to build a new `peerstate::Peerstate` consider using one of the following associated functions:
      peerstate::Peerstate::from_header
      peerstate::Peerstate::from_public_key
      peerstate::Peerstate::from_gossip
    --> src/peerstate.rs:102:5
     |
102  |       pub fn from_header(header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112  | /     pub fn from_public_key(
113  | |         addr: &str,
114  | |         last_seen: i64,
115  | |         prefer_encrypt: EncryptPreference,
116  | |         public_key: &SignedPublicKey,
117  | |     ) -> Self {
     | |_____________^
...
140  |       pub fn from_gossip(gossip_header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `sysinfo::traits::SystemExt`
             candidate #20: `gimli::read::lookup::PubStuffEntry`
             candidate #21: `iroh_metrics::core::Metric`
             candidate #22: `bitvec::store::BitStore`
             candidate #23: `radium::Radium`
             candidate #24: `netlink_sys::async_socket::AsyncSocket`
             candidate #25: `nonzero_ext::NonZero`
             candidate #26: `Allocable`
             candidate #27: `AnyBoxConstructor`
             candidate #28: `criterion::stats::tuple::TupledDistributionsBuilder`
             candidate #29: `plotters::style::font::FontData`

error[E0609]: no field `context` on type `&contact::Contact`
    --> src/contact.rs:1444:59
     |
1444 |             let peerstate_to_delete = Peerstate::new(self.context);
     |                                                           ^^^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0609]: no field `context` on type `&contact::Contact`
    --> src/contact.rs:1445:45
     |
1445 |             match Peerstate::from_addr(self.context, self.addr).await {
     |                                             ^^^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0609]: no field `magic` on type `&Contact`
    --> src/contact.rs:1431:13
     |
1431 |     if self.magic != DC_CONTACT_MAGIC {
     |             ^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0609]: no field `peerstate` on type `&Contact`
    --> src/contact.rs:1440:33
     |
1440 |     let peerstate = match &self.peerstate {
     |                                 ^^^^^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0308]: mismatched types
    --> src/contact.rs:1445:54
     |
1445 |             match Peerstate::from_addr(self.context, self.addr).await {
     |                   --------------------               ^^^^^^^^^ expected `&str`, found `String`
     |                   |
     |                   arguments to this function are incorrect
     |
note: associated function defined here
    --> src/peerstate.rs:170:18
     |
170  |     pub async fn from_addr(context: &Context, addr: &str) -> Result<Option<Peerstate>> {
     |                  ^^^^^^^^^                    ----------
help: consider borrowing here
     |
1445 |             match Peerstate::from_addr(self.context, &self.addr).await {
     |                                                      +

error[E0599]: no function or associated item named `new` found for struct `Peerstate` in the current scope
    --> src/contact.rs:1444:50
     |
1444 |             let peerstate_to_delete = Peerstate::new(self.context);
     |                                                  ^^^ function or associated item not found in `Peerstate`
     |
    ::: src/peerstate.rs:35:1
     |
35   | pub struct Peerstate {
     | -------------------- function or associated item `new` not found for this struct
     |
note: if you're trying to build a new `Peerstate` consider using one of the following associated functions:
      Peerstate::from_header
      Peerstate::from_public_key
      Peerstate::from_gossip
    --> src/peerstate.rs:102:5
     |
102  |       pub fn from_header(header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
112  | /     pub fn from_public_key(
113  | |         addr: &str,
114  | |         last_seen: i64,
115  | |         prefer_encrypt: EncryptPreference,
116  | |         public_key: &SignedPublicKey,
117  | |     ) -> Self {
     | |_____________^
...
140  |       pub fn from_gossip(gossip_header: &Aheader, message_time: i64) -> Self {
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #2: `sha1::digest::typenum::Bit`
             candidate #3: `VariableOutputCore`
             candidate #4: `sha1::Digest`
             candidate #5: `sha1::digest::Mac`
             candidate #6: `VariableOutput`
             candidate #7: `KeyInit`
             candidate #8: `KeyIvInit`
             candidate #9: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #10: `UniformSampler`
             candidate #11: `ring::aead::BoundKey`
             candidate #12: `ring::aead::BoundKey`
             candidate #13: `curve25519_dalek::traits::VartimePrecomputedMultiscalarMul`
             candidate #14: `digest::digest::Digest`
             candidate #15: `digest::variable::VariableOutput`
             candidate #16: `digest::variable::VariableOutputDirty`
             candidate #17: `rand::distributions::uniform::UniformSampler`
             candidate #18: `Executor`
             candidate #19: `iroh_metrics::core::Metric`
             candidate #20: `bitvec::store::BitStore`
             candidate #21: `radium::Radium`
             candidate #22: `netlink_sys::async_socket::AsyncSocket`
             candidate #23: `nonzero_ext::NonZero`
             candidate #24: `Allocable`
             candidate #25: `AnyBoxConstructor`
             candidate #26: `gimli::read::lookup::PubStuffEntry`

error[E0609]: no field `context` on type `&Contact`
    --> src/contact.rs:1444:59
     |
1444 |             let peerstate_to_delete = Peerstate::new(self.context);
     |                                                           ^^^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

error[E0609]: no field `context` on type `&Contact`
    --> src/contact.rs:1445:45
     |
1445 |             match Peerstate::from_addr(self.context, self.addr).await {
     |                                             ^^^^^^^ unknown field
     |
     = note: available fields are: `id`, `name`, `authname`, `addr`, `blocked` ... and 5 others

Some errors have detailed explanations: E0252, E0308, E0425, E0599, E0609.
For more information about an error, try `rustc --explain E0252`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 8 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 8 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

