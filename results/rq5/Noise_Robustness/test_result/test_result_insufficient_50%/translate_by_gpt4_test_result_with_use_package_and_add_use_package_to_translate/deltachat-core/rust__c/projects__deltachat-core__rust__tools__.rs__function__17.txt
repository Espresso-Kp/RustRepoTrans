Fail
file path is :
projects/deltachat-core/rust/src/tools.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
warning: unused import: `Cursor`
 --> src/tools.rs:7:15
  |
7 | use std::io::{Cursor, Write};
  |               ^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

error: usage of an `unsafe` block
   --> src/tools.rs:314:8
    |
314 |     if unsafe { *buf_start.offset(0) } == 0xFF && unsafe { *buf_start.offset(1) } == 0xD8 && unsafe { *buf_start.offset(2) } == 0xFF
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> src/lib.rs:4:11
    |
4   | #![forbid(unsafe_code)]
    |           ^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:314:51
    |
314 |     if unsafe { *buf_start.offset(0) } == 0xFF && unsafe { *buf_start.offset(1) } == 0xD8 && unsafe { *buf_start.offset(2) } == 0xFF
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:314:94
    |
314 |     if unsafe { *buf_start.offset(0) } == 0xFF && unsafe { *buf_start.offset(1) } == 0xD8 && unsafe { *buf_start.offset(2) } == 0xFF
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:317:15
    |
317 |         while unsafe { *buf_start.offset(pos as isize) } == 0xFF {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:318:69
    |
318 |             if [0xC0, 0xC1, 0xC2, 0xC3, 0xC9, 0xCA, 0xCB].contains(&unsafe { *buf_start.offset((pos + 1) as isize) }) {
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:319:32
    |
319 | ...   let height = ((unsafe { *buf_start.offset((pos+5) as isize)} as u32) << 8) + unsafe { *buf_start.offset((pos+6) as isize)} as u32;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:319:94
    |
319 | ...   let height = ((unsafe { *buf_start.offset((pos+5) as isize)} as u32) << 8) + unsafe { *buf_start.offset((pos+6) as isize)} as u32;
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:320:31
    |
320 | ...   let width = ((unsafe { *buf_start.offset((pos+7) as isize)} as u32) << 8) + unsafe { *buf_start.offset((pos+8) as isize)} as u32;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:320:93
    |
320 | ...   let width = ((unsafe { *buf_start.offset((pos+7) as isize)} as u32) << 8) + unsafe { *buf_start.offset((pos+8) as isize)} as u32;
    |                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:323:26
    |
323 | ...   pos += 2 + ((unsafe { *buf_start.offset((pos+2) as isize)} as usize) << 8) + unsafe { *buf_start.offset((pos+3) as isize)} as usize;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:323:90
    |
323 | ...   pos += 2 + ((unsafe { *buf_start.offset((pos+2) as isize)} as usize) << 8) + unsafe { *buf_start.offset((pos+3) as isize)} as usize;
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:328:8
    |
328 |     if unsafe { *buf_start.offset(0) } == b'G' && unsafe { *buf_start.offset(1) } == b'I' && unsafe { *buf_start.offset(2) } == b'F'
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:328:51
    |
328 |     if unsafe { *buf_start.offset(0) } == b'G' && unsafe { *buf_start.offset(1) } == b'I' && unsafe { *buf_start.offset(2) } == b'F'
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:328:94
    |
328 |     if unsafe { *buf_start.offset(0) } == b'G' && unsafe { *buf_start.offset(1) } == b'I' && unsafe { *buf_start.offset(2) } == b'F'
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:330:21
    |
330 |         let width = unsafe { *buf_start.offset(6) } as u32 + ((unsafe { *buf_start.offset(7) } as u32) << 8);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:330:64
    |
330 |         let width = unsafe { *buf_start.offset(6) } as u32 + ((unsafe { *buf_start.offset(7) } as u32) << 8);
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:331:22
    |
331 |         let height = unsafe { *buf_start.offset(8) } as u32 + ((unsafe { *buf_start.offset(9) } as u32) << 8);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:331:65
    |
331 |         let height = unsafe { *buf_start.offset(8) } as u32 + ((unsafe { *buf_start.offset(9) } as u32) << 8);
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:335:8
    |
335 |     if unsafe { *buf_start.offset(0) } == 0x89 && unsafe { *buf_start.offset(1) } == b'P' && unsafe { *buf_start.offset(2) } == b'N' &&
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:335:51
    |
335 |     if unsafe { *buf_start.offset(0) } == 0x89 && unsafe { *buf_start.offset(1) } == b'P' && unsafe { *buf_start.offset(2) } == b'N' &&
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:335:94
    |
335 |     if unsafe { *buf_start.offset(0) } == 0x89 && unsafe { *buf_start.offset(1) } == b'P' && unsafe { *buf_start.offset(2) } == b'N' &&
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:336:8
    |
336 |        unsafe { *buf_start.offset(3) } == b'G' && unsafe { *buf_start.offset(4) } == 0x0D && unsafe { *buf_start.offset(5) } == 0x0A &&
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:336:51
    |
336 |        unsafe { *buf_start.offset(3) } == b'G' && unsafe { *buf_start.offset(4) } == 0x0D && unsafe { *buf_start.offset(5) } == 0x0A &&
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:336:94
    |
336 |        unsafe { *buf_start.offset(3) } == b'G' && unsafe { *buf_start.offset(4) } == 0x0D && unsafe { *buf_start.offset(5) } == 0x0A &&
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:337:8
    |
337 |        unsafe { *buf_start.offset(6) } == 0x1A && unsafe { *buf_start.offset(7) } == 0x0A && unsafe { *buf_start.offset(12) } == b'I' &&
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:337:51
    |
337 |        unsafe { *buf_start.offset(6) } == 0x1A && unsafe { *buf_start.offset(7) } == 0x0A && unsafe { *buf_start.offset(12) } == b'I' &&
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:337:94
    |
337 |        unsafe { *buf_start.offset(6) } == 0x1A && unsafe { *buf_start.offset(7) } == 0x0A && unsafe { *buf_start.offset(12) } == b'I' &&
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:338:8
    |
338 |        unsafe { *buf_start.offset(13) } == b'H' && unsafe { *buf_start.offset(14) } == b'D' && unsafe { *buf_start.offset(15) } == b'R' 
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:338:52
    |
338 |        unsafe { *buf_start.offset(13) } == b'H' && unsafe { *buf_start.offset(14) } == b'D' && unsafe { *buf_start.offset(15) } == b'R' 
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:338:96
    |
338 |        unsafe { *buf_start.offset(13) } == b'H' && unsafe { *buf_start.offset(14) } == b'D' && unsafe { *buf_start.offset(15) } == b'R' 
    |                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:340:23
    |
340 |         let width = ((unsafe { *buf_start.offset(16) } as u32) << 24) + ((unsafe { *buf_start.offset(17) } as u32) << 16) +
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:340:75
    |
340 |         let width = ((unsafe { *buf_start.offset(16) } as u32) << 24) + ((unsafe { *buf_start.offset(17) } as u32) << 16) +
    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:341:23
    |
341 |                     ((unsafe { *buf_start.offset(18) } as u32) << 8) + unsafe { *buf_start.offset(19) } as u32;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:341:72
    |
341 |                     ((unsafe { *buf_start.offset(18) } as u32) << 8) + unsafe { *buf_start.offset(19) } as u32;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:342:24
    |
342 |         let height = ((unsafe { *buf_start.offset(20) } as u32) << 24) + ((unsafe { *buf_start.offset(21) } as u32) << 16) +
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:342:76
    |
342 |         let height = ((unsafe { *buf_start.offset(20) } as u32) << 24) + ((unsafe { *buf_start.offset(21) } as u32) << 16) +
    |                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:343:24
    |
343 |                      ((unsafe { *buf_start.offset(22) } as u32) << 8) + unsafe { *buf_start.offset(23) } as u32;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: usage of an `unsafe` block
   --> src/tools.rs:343:73
    |
343 |                      ((unsafe { *buf_start.offset(22) } as u32) << 8) + unsafe { *buf_start.offset(23) } as u32;
    |                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: `()` doesn't implement `std::fmt::Display`
   --> src/message.rs:658:73
    |
658 | ...                   "Failed to get width and height for {}: {err:#}.",
    |                                                               ^^^^^^^ `()` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `()`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `warn` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0277`.
warning: `deltachat` (lib) generated 1 warning
error: could not compile `deltachat` (lib) due to 39 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 1 warning (1 duplicate)
error: could not compile `deltachat` (lib test) due to 39 previous errors; 1 warning emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

