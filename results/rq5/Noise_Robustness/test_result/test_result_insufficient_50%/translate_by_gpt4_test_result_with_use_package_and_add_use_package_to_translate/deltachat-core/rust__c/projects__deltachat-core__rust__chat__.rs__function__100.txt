Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
    --> src/chat.rs:2620:28
     |
2620 |             ContactId::new(DC_CONTACT_ID_SELF),
     |                            ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `Location`
    --> src/chat.rs:2621:13
     |
2621 |             Location::empty(),
     |             ^^^^^^^^ use of undeclared type `Location`
     |
help: consider importing one of these items
     |
3    + use core::panic::Location;
     |
3    + use crate::location::Location;
     |
3    + use std::panic::Location;
     |

error[E0599]: no method named `is_null` found for reference `&context::Context` in the current scope
    --> src/chat.rs:2608:16
     |
2608 |     if context.is_null() || chat_id <= ChatId(DC_CHAT_ID_LAST_SPECIAL) {
     |                ^^^^^^^ method not found in `&Context`

error[E0308]: mismatched types
    --> src/chat.rs:2608:47
     |
2608 |     if context.is_null() || chat_id <= ChatId(DC_CHAT_ID_LAST_SPECIAL) {
     |                                        ------ ^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ChatId`
     |                                        |
     |                                        arguments to this struct are incorrect
     |
note: tuple struct defined here
    --> src/chat.rs:166:12
     |
166  | pub struct ChatId(u32);
     |            ^^^^^^

error[E0308]: mismatched types
    --> src/chat.rs:2609:20
     |
2609 |         return Err(format!("Invalid context or chat_id"));
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `String`
     |
     = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no associated item named `SetLatitude` found for struct `param::Params` in the current scope
    --> src/chat.rs:2617:33
     |
2617 |     if msg.param.exists(Params::SetLatitude) {
     |                                 ^^^^^^^^^^^ associated item not found in `Params`
     |
    ::: src/param.rs:212:1
     |
212  | pub struct Params {
     | ----------------- associated item `SetLatitude` not found for this struct
     |
note: if you're trying to build a new `param::Params`, consider using `param::Params::new` which returns `param::Params`
    --> src/param.rs:272:5
     |
272  |     pub fn new() -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^

error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied
    --> src/chat.rs:2619:28
     |
2619 |         context.emit_event(EventType::LocationChanged(
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2620 |             ContactId::new(DC_CONTACT_ID_SELF),
2621 |             Location::empty(),
     |             ----------------- unexpected argument
     |
note: expected `Option<ContactId>`, found `ContactId`
    --> src/chat.rs:2620:13
     |
2620 |             ContactId::new(DC_CONTACT_ID_SELF),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = note: expected enum `std::option::Option<ContactId>`
              found struct `ContactId`
note: tuple variant defined here
    --> src/events/payload.rs:195:5
     |
195  |     LocationChanged(Option<ContactId>),
     |     ^^^^^^^^^^^^^^^
help: try wrapping the expression in `Some`
     |
2620 |             Some(ContactId::new(DC_CONTACT_ID_SELF)),
     |             +++++                                  +
help: remove the extra argument
     |
2620 -             ContactId::new(DC_CONTACT_ID_SELF),
2620 +             /* std::option::Option<ContactId> */,
     |

error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied
    --> src/chat.rs:2619:28
     |
2619 |         context.emit_event(EventType::LocationChanged(
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2620 |             ContactId::new(DC_CONTACT_ID_SELF),
2621 |             Location::empty(),
     |             ----------------- unexpected argument
     |
note: expected `Option<ContactId>`, found `ContactId`
    --> src/chat.rs:2620:13
     |
2620 |             ContactId::new(DC_CONTACT_ID_SELF),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = note: expected enum `std::option::Option<contact::ContactId>`
              found struct `contact::ContactId`
note: tuple variant defined here
    --> src/events/payload.rs:195:5
     |
195  |     LocationChanged(Option<ContactId>),
     |     ^^^^^^^^^^^^^^^
help: try wrapping the expression in `Some`
     |
2620 |             Some(ContactId::new(DC_CONTACT_ID_SELF)),
     |             +++++                                  +
help: remove the extra argument
     |
2620 -             ContactId::new(DC_CONTACT_ID_SELF),
2620 +             /* std::option::Option<contact::ContactId> */,
     |

Some errors have detailed explanations: E0061, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `deltachat` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 7 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

