Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0432]: unresolved import `crate::contact::*`
 --> src/contact.rs:5:5
  |
5 | use crate::contact::*;
  |     ^^^^^^^^^^^^^^^^^ cannot glob-import a module into itself

error: cannot find macro `paramsv` in this scope
   --> src/contact.rs:632:18
    |
632 |         .execute(paramsv![contact.blocked, Chattype::Single, id.as_u32()])
    |                  ^^^^^^^ help: a macro with a similar name exists: `params`
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
    |
176 | macro_rules! params {
    | ------------------- similarly named macro `params` defined here

error: cannot find macro `paramsv` in this scope
   --> src/contact.rs:617:18
    |
617 |         .execute(paramsv![contact.blocked, id.as_u32()])
    |                  ^^^^^^^ help: a macro with a similar name exists: `params`
    |
   ::: /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/lib.rs:176:1
    |
176 | macro_rules! params {
    | ------------------- similarly named macro `params` defined here

warning: unused import: `crate::constants::*`
 --> src/contact.rs:4:5
  |
4 | use crate::constants::*;
  |     ^^^^^^^^^^^^^^^^^^^
  |
note: the lint level is defined here
 --> src/lib.rs:6:5
  |
6 |     unused,
  |     ^^^^^^
  = note: `#[warn(unused_imports)]` implied by `#[warn(unused)]`

warning: unused import: `crate::contact::*`
 --> src/contact.rs:5:5
  |
5 | use crate::contact::*;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::chat::*`
 --> src/contact.rs:6:5
  |
6 | use crate::chat::*;
  |     ^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `load_from_db` found for struct `Contact` in the current scope
   --> src/contact.rs:609:28
    |
363 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct
...
609 |     let contact = Contact::load_from_db(context, id).await?;
    |                            ^^^^^^^^^^^^ function or associated item not found in `Contact`

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/contact.rs:613:10
    |
611 |       let update_contacts = context
    |  ___________________________-
612 | |         .sql
613 | |         .prepare("UPDATE contacts SET blocked=? WHERE id=?;")
    | |         -^^^^^^^ method not found in `Sql`
    | |_________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `Sql` in the current scope
   --> src/contact.rs:626:10
    |
624 |       let update_chats = context
    |  ________________________-
625 | |         .sql
626 | |         .prepare(
    | |         -^^^^^^^ method not found in `Sql`
    | |_________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0308]: mismatched types
   --> src/contact.rs:638:24
    |
638 |     context.emit_event(EventType::ContactsChanged).await;
    |             ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `EventType`, found enum constructor
    |             |
    |             arguments to this method are incorrect
    |
   ::: src/events/payload.rs:188:5
    |
188 |     ContactsChanged(Option<ContactId>),
    |     --------------- `ContactsChanged` defines an enum variant constructor here, which should be called
    |
    = note:          expected enum `payload::EventType`
            found enum constructor `fn(std::option::Option<ContactId>) -> payload::EventType {payload::EventType::ContactsChanged}`
note: method defined here
   --> src/context.rs:595:12
    |
595 |     pub fn emit_event(&self, event: EventType) {
    |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
    |
638 |     context.emit_event(EventType::ContactsChanged(/* std::option::Option<ContactId> */)).await;
    |                                                  ++++++++++++++++++++++++++++++++++++++

error[E0277]: `()` is not a future
   --> src/contact.rs:638:52
    |
638 |     context.emit_event(EventType::ContactsChanged).await;
    |                                                   -^^^^^
    |                                                   ||
    |                                                   |`()` is not a future
    |                                                   help: remove the `.await`
    |
    = help: the trait `futures::Future` is not implemented for `()`, which is required by `(): std::future::IntoFuture`
    = note: () must be a future or must implement `IntoFuture` to be awaited
    = note: required for `()` to implement `std::future::IntoFuture`

error[E0308]: mismatched types
   --> src/contact.rs:608:68
    |
608 |   pub async fn block(context: &Context, id: ContactId) -> Result<()> {
    |  ____________________________________________________________________^
609 | |     let contact = Contact::load_from_db(context, id).await?;
610 | |
611 | |     let update_contacts = context
...   |
638 | |     context.emit_event(EventType::ContactsChanged).await;
    | |                                                         - help: remove this semicolon to return this value
639 | | }
    | |_^ expected `Result<(), Error>`, found `()`
    |
    = note:   expected enum `std::result::Result<(), anyhow::Error>`
            found unit type `()`

error[E0599]: no function or associated item named `load_from_db` found for struct `contact::Contact` in the current scope
   --> src/contact.rs:609:28
    |
363 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct
...
609 |     let contact = Contact::load_from_db(context, id).await?;
    |                            ^^^^^^^^^^^^ function or associated item not found in `Contact`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:613:10
    |
611 |       let update_contacts = context
    |  ___________________________-
612 | |         .sql
613 | |         .prepare("UPDATE contacts SET blocked=? WHERE id=?;")
    | |         -^^^^^^^ method not found in `sql::Sql`
    | |_________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0599]: no method named `prepare` found for struct `sql::Sql` in the current scope
   --> src/contact.rs:626:10
    |
624 |       let update_chats = context
    |  ________________________-
625 | |         .sql
626 | |         .prepare(
    | |         -^^^^^^^ method not found in `sql::Sql`
    | |_________|
    | 
    |
   ::: src/sql.rs:57:1
    |
57  |   pub struct Sql {
    |   -------------- method `prepare` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `prepare`, perhaps you need to implement one of them:
            candidate #1: `precis_core::profile::Profile`
            candidate #2: `precis_core::profile::PrecisFastInvocation`

error[E0308]: mismatched types
   --> src/contact.rs:638:24
    |
638 |     context.emit_event(EventType::ContactsChanged).await;
    |             ---------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `EventType`, found enum constructor
    |             |
    |             arguments to this method are incorrect
    |
   ::: src/events/payload.rs:188:5
    |
188 |     ContactsChanged(Option<ContactId>),
    |     --------------- `ContactsChanged` defines an enum variant constructor here, which should be called
    |
    = note:          expected enum `payload::EventType`
            found enum constructor `fn(std::option::Option<contact::ContactId>) -> payload::EventType {payload::EventType::ContactsChanged}`
note: method defined here
   --> src/context.rs:595:12
    |
595 |     pub fn emit_event(&self, event: EventType) {
    |            ^^^^^^^^^^        ----------------
help: use parentheses to construct this tuple variant
    |
638 |     context.emit_event(EventType::ContactsChanged(/* std::option::Option<contact::ContactId> */)).await;
    |                                                  +++++++++++++++++++++++++++++++++++++++++++++++

Some errors have detailed explanations: E0277, E0308, E0432, E0599.
For more information about an error, try `rustc --explain E0277`.
warning: `deltachat` (lib) generated 3 warnings
error: could not compile `deltachat` (lib) due to 9 previous errors; 3 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `deltachat` (lib test) generated 3 warnings (3 duplicates)
error: could not compile `deltachat` (lib test) due to 9 previous errors; 3 warnings emitted
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

