Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
    --> src/contact.rs:1016:56
     |
1016 |     let self_name2 = contact::get_name_n_addr(context, DC_CONTACT_ID_SELF).await;
     |                                                        ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `DC_CONTACT_ID_SELF` in this scope
    --> src/contact.rs:1094:33
     |
1094 |         ret.push(ContactId::new(DC_CONTACT_ID_SELF));
     |                                 ^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared crate or module `contact`
    --> src/contact.rs:1016:22
     |
1016 |     let self_name2 = contact::get_name_n_addr(context, DC_CONTACT_ID_SELF).await;
     |                      ^^^^^^^
     |                      |
     |                      use of undeclared crate or module `contact`
     |                      help: a struct with a similar name exists (notice the capitalization): `Contact`

error[E0308]: mismatched types
    --> src/contact.rs:1019:8
     |
1019 |     if listflags & DC_GCL_VERIFIED_ONLY || query.is_some() {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `u32`

error[E0308]: mismatched types
    --> src/contact.rs:1029:18
     |
1029 |             &(if listflags & DC_GCL_VERIFIED_ONLY {
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `u32`

error[E0308]: mismatched types
    --> src/contact.rs:1029:13
     |
1029 | /             &(if listflags & DC_GCL_VERIFIED_ONLY {
1030 | |                 0 as i32
1031 | |             } else {
1032 | |                 1 as i32
1033 | |             },false),
     | |____________________^ expected `(&dyn ToSql, bool)`, found `&(i32, bool)`
     |
     = note:  expected tuple `(&dyn rusqlite::ToSql, _)`
             found reference `&(i32, _)`

error[E0277]: the `?` operator can only be applied to values that implement `Try`
    --> src/contact.rs:1056:13
     |
1056 |             rows?;
     |             ^^^^^ the `?` operator cannot be applied to type `()`
     |
     = help: the trait `Try` is not implemented for `()`

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
    --> src/contact.rs:1061:26
     |
1061 |             || self_addr.contains(&s3str_like_cmd_lower)
     |                          ^^^^^^^^ method not found in `Option<String>`
     |
note: the method `contains` exists on the type `std::string::String`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs:1151:5
     |
1151 |     pub fn contains<'a, P: Pattern<'a>>(&'a self, pat: P) -> bool {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::string::String` value, panicking if the value is an `Option::None`
     |
1061 |             || self_addr.expect("REASON").contains(&s3str_like_cmd_lower)
     |                         +++++++++++++++++

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
    --> src/contact.rs:1062:26
     |
1062 |             || self_name.contains(&s3str_like_cmd_lower)
     |                          ^^^^^^^^ method not found in `Option<String>`
     |
note: the method `contains` exists on the type `std::string::String`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs:1151:5
     |
1151 |     pub fn contains<'a, P: Pattern<'a>>(&'a self, pat: P) -> bool {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::string::String` value, panicking if the value is an `Option::None`
     |
1062 |             || self_name.expect("REASON").contains(&s3str_like_cmd_lower)
     |                         +++++++++++++++++

error[E0599]: no function or associated item named `get_last_non_special` found for struct `ContactId` in the current scope
    --> src/contact.rs:1070:25
     |
55   | pub struct ContactId(u32);
     | -------------------- function or associated item `get_last_non_special` not found for this struct
...
1070 |             &ContactId::get_last_non_special()
     |                         ^^^^^^^^^^^^^^^^^^^^
     |                         |
     |                         function or associated item not found in `ContactId`
     |                         help: there is a method with a similar name: `is_special`
     |
note: if you're trying to build a new `ContactId`, consider using `ContactId::new` which returns `ContactId`
    --> src/contact.rs:79:5
     |
79   |     pub const fn new(id: u32) -> ContactId {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
    --> src/contact.rs:1093:8
     |
1093 |     if listflags & DC_GCL_ADD_SELF && add_self {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `u32`

error[E0277]: the trait bound `(&dyn rusqlite::ToSql, bool): rusqlite::ToSql` is not satisfied
    --> src/sql.rs:40:12
     |
40   |         [$(&$param as &dyn $crate::sql::ToSql),+]
     |            ^^^^^^^ the trait `rusqlite::ToSql` is not implemented for `(&dyn rusqlite::ToSql, bool)`, which is required by `(&dyn rusqlite::ToSql, bool): sql::ToSql`
     |
    ::: src/contact.rs:1045:17
     |
1045 |                 params_slice![params[0], params[1], params[2], params[3]],
     |                 --------------------------------------------------------- in this macro invocation
     |
     = help: the following other types implement trait `rusqlite::ToSql`:
               bool
               isize
               i8
               i16
               i32
               i64
               usize
               u8
             and 54 others
note: required for `(&dyn rusqlite::ToSql, bool)` to implement `sql::ToSql`
    --> src/sql.rs:30:40
     |
30   | impl<T: rusqlite::ToSql + Send + Sync> ToSql for T {}
     |         ---------------                ^^^^^     ^
     |         |
     |         unsatisfied trait bound introduced here
     = note: required for the cast from `&(&dyn rusqlite::ToSql, bool)` to `&dyn sql::ToSql`
     = note: this error originates in the macro `params_slice` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
    --> src/sql.rs:40:12
     |
40   |         [$(&$param as &dyn $crate::sql::ToSql),+]
     |            ^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
     |
    ::: src/contact.rs:1045:17
     |
1045 |                 params_slice![params[0], params[1], params[2], params[3]],
     |                 --------------------------------------------------------- in this macro invocation
     |
     = help: the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `(&dyn rusqlite::ToSql, bool): sql::ToSql`
     = note: required for `&dyn rusqlite::ToSql` to implement `std::marker::Send`
     = note: required because it appears within the type `(&dyn rusqlite::ToSql, bool)`
note: required for `(&dyn rusqlite::ToSql, bool)` to implement `sql::ToSql`
    --> src/sql.rs:30:40
     |
30   | impl<T: rusqlite::ToSql + Send + Sync> ToSql for T {}
     |                           ----         ^^^^^     ^
     |                           |
     |                           unsatisfied trait bound introduced here
     = note: required for the cast from `&(&dyn rusqlite::ToSql, bool)` to `&dyn sql::ToSql`
     = note: this error originates in the macro `params_slice` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no function or associated item named `get_last_non_special` found for struct `contact::ContactId` in the current scope
    --> src/contact.rs:1070:25
     |
55   | pub struct ContactId(u32);
     | -------------------- function or associated item `get_last_non_special` not found for this struct
...
1070 |             &ContactId::get_last_non_special()
     |                         ^^^^^^^^^^^^^^^^^^^^
     |                         |
     |                         function or associated item not found in `ContactId`
     |                         help: there is a method with a similar name: `is_special`
     |
note: if you're trying to build a new `contact::ContactId`, consider using `contact::ContactId::new` which returns `contact::ContactId`
    --> src/contact.rs:79:5
     |
79   |     pub const fn new(id: u32) -> ContactId {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 13 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 13 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

