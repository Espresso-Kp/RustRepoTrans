Fail
file path is :
projects/iceberg/rust/crates/iceberg/src/arrow/schema.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:207:11
    |
207 | fn schema(&mut self, _schema: &ArrowSchema, fields: Vec<Result<NestedField>>) -> Result<Schema> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:213:10
    |
213 | fn field(&mut self, field: &Field) -> Result<NestedField> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0432]: unresolved import `crate::arrow::arrow_schema_to_schema`
  --> crates/iceberg/src/arrow/reader.rs:41:20
   |
41 | use crate::arrow::{arrow_schema_to_schema, get_arrow_datum};
   |                    ^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    no `arrow_schema_to_schema` in `arrow`
   |                    help: a similar name exists in the module: `schema_to_arrow_schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/schema.rs:210:47
    |
210 |             let struct_type = StructType::new(fields);
    |                               --------------- ^^^^^^ expected `Vec<Arc<NestedField>>`, found `Vec<NestedField>`
    |                               |
    |                               arguments to this function are incorrect
    |
    = note: expected struct `Vec<Arc<datatypes::NestedField>>`
               found struct `Vec<datatypes::NestedField>`
note: associated function defined here
   --> crates/iceberg/src/spec/datatypes.rs:424:12
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |            ^^^ ---------------------------

error[E0599]: no function or associated item named `new` found for struct `spec::schema::Schema` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:211:24
    |
211 |             Ok(Schema::new(struct_type, self.highest_field_id))
    |                        ^^^ function or associated item not found in `Schema`
    |
   ::: crates/iceberg/src/spec/schema.rs:47:1
    |
47  | pub struct Schema {
    | ----------------- function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0425]: cannot find function `convert_type` in this scope
   --> crates/iceberg/src/arrow/schema.rs:222:30
    |
222 |             let field_type = convert_type(field.data_type())?;
    |                              ^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:223:29
    |
223 |             Ok(NestedField::new(
    |                             ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0425]: cannot find function `arrow_schema_to_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:646:9
    |
616 | pub fn schema_to_arrow_schema(schema: &crate::spec::Schema) -> crate::Result<ArrowSchema> {
    | ----------------------------------------------------------------------------------------- similarly named function `schema_to_arrow_schema` defined here
...
646 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `schema_to_arrow_schema`

Some errors have detailed explanations: E0308, E0425, E0432, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0425]: cannot find function `arrow_schema_to_schema` in this scope
    --> crates/iceberg/src/arrow/schema.rs:1032:32
     |
1032 |         let converted_schema = arrow_schema_to_schema(&arrow_schema).unwrap();
     |                                ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error: could not compile `iceberg` (lib test) due to 9 previous errors

   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:207:11
    |
207 | fn schema(&mut self, _schema: &ArrowSchema, fields: Vec<Result<NestedField>>) -> Result<Schema> {
    |           ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error: `self` parameter is only allowed in associated functions
   --> crates/iceberg/src/arrow/schema.rs:213:10
    |
213 | fn field(&mut self, field: &Field) -> Result<NestedField> {
    |          ^^^^^^^^^ not semantically valid as function parameter
    |
    = note: associated functions are those in `impl` or `trait` definitions

error[E0432]: unresolved import `crate::arrow::arrow_schema_to_schema`
  --> crates/iceberg/src/arrow/reader.rs:41:20
   |
41 | use crate::arrow::{arrow_schema_to_schema, get_arrow_datum};
   |                    ^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    no `arrow_schema_to_schema` in `arrow`
   |                    help: a similar name exists in the module: `schema_to_arrow_schema`

error[E0308]: mismatched types
   --> crates/iceberg/src/arrow/schema.rs:210:47
    |
210 |             let struct_type = StructType::new(fields);
    |                               --------------- ^^^^^^ expected `Vec<Arc<NestedField>>`, found `Vec<NestedField>`
    |                               |
    |                               arguments to this function are incorrect
    |
    = note: expected struct `Vec<Arc<datatypes::NestedField>>`
               found struct `Vec<datatypes::NestedField>`
note: associated function defined here
   --> crates/iceberg/src/spec/datatypes.rs:424:12
    |
424 |     pub fn new(fields: Vec<NestedFieldRef>) -> Self {
    |            ^^^ ---------------------------

error[E0599]: no function or associated item named `new` found for struct `spec::schema::Schema` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:211:24
    |
211 |             Ok(Schema::new(struct_type, self.highest_field_id))
    |                        ^^^ function or associated item not found in `Schema`
    |
   ::: crates/iceberg/src/spec/schema.rs:47:1
    |
47  | pub struct Schema {
    | ----------------- function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0425]: cannot find function `convert_type` in this scope
   --> crates/iceberg/src/arrow/schema.rs:222:30
    |
222 |             let field_type = convert_type(field.data_type())?;
    |                              ^^^^^^^^^^^^ not found in this scope

error[E0599]: no function or associated item named `new` found for struct `datatypes::NestedField` in the current scope
   --> crates/iceberg/src/arrow/schema.rs:223:29
    |
223 |             Ok(NestedField::new(
    |                             ^^^ function or associated item not found in `NestedField`
    |
   ::: crates/iceberg/src/spec/datatypes.rs:502:1
    |
502 | pub struct NestedField {
    | ---------------------- function or associated item `new` not found for this struct
    |
note: if you're trying to build a new `datatypes::NestedField` consider using one of the following associated functions:
      datatypes::NestedField::required
      datatypes::NestedField::optional
      datatypes::NestedField::list_element
      datatypes::NestedField::map_key_element
      datatypes::NestedField::map_value_element
   --> crates/iceberg/src/spec/datatypes.rs:578:5
    |
578 |     pub fn required(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |     pub fn optional(id: i32, name: impl ToString, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
604 |     pub fn list_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
613 |     pub fn map_key_element(id: i32, field_type: Type) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
618 |     pub fn map_value_element(id: i32, field_type: Type, required: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `digest::core_api::VariableOutputCore`
            candidate #2: `digest::digest::Digest`
            candidate #3: `digest::mac::Mac`
            candidate #4: `digest::VariableOutput`
            candidate #5: `crypto_common::KeyInit`
            candidate #6: `crypto_common::KeyIvInit`
            candidate #7: `typenum::marker_traits::Bit`
            candidate #8: `rand::distributions::uniform::UniformSampler`
            candidate #9: `itertools::adaptors::coalesce::CountItem`
            candidate #10: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #11: `ahash::HashMapExt`
            candidate #12: `ahash::HashSetExt`
            candidate #13: `ring::aead::BoundKey`
            candidate #14: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet`
            candidate #15: `serde_with::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap`
            candidate #16: `serde_with::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap`
            candidate #17: `serde_with::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet`
            candidate #18: `BitStore`
            candidate #19: `radium::Radium`
            candidate #20: `parquet::column::reader::decoder::ColumnValueDecoder`
            candidate #21: `itertools::adaptors::coalesce::CountItem`
            candidate #22: `brotli::enc::backward_references::hash_to_binary_tree::Allocable`
            candidate #23: `brotli::enc::threading::AnyBoxConstructor`

error[E0425]: cannot find function `arrow_schema_to_schema` in this scope
   --> crates/iceberg/src/arrow/schema.rs:646:9
    |
616 | pub fn schema_to_arrow_schema(schema: &crate::spec::Schema) -> crate::Result<ArrowSchema> {
    | ----------------------------------------------------------------------------------------- similarly named function `schema_to_arrow_schema` defined here
...
646 |         arrow_schema_to_schema(schema)
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `schema_to_arrow_schema`

Some errors have detailed explanations: E0308, E0425, E0432, E0599.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `iceberg` (lib) due to 8 previous errors

