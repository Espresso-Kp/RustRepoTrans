Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:570:5
    |
570 |     tracing::info!("Created rename destination table {:?}", dest);
    |     ^^^^^^^ use of undeclared crate or module `tracing`

error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:575:13
    |
575 |             tracing::info!("Successfully renamed table from {:?} to {:?}", src, dest);
    |             ^^^^^^^ use of undeclared crate or module `tracing`

error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:580:13
    |
580 |             tracing::error!(
    |             ^^^^^^^ use of undeclared crate or module `tracing`

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:532:60
    |
532 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                            ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:532:50
    |
532 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                              ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:534:59
    |
534 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:534:48
    |
534 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                            ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&iceberg::NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:538:33
    |
538 |     let from_table = match self.glue.get_table()
    |                                 ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:539:26
    |
539 |         .catalog_id(self.aws_properties.glue_catalog_id())
    |                          ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:558:10
    |
558 |         .parameters(from_table.parameters().cloned())
    |          ^^^^^^^^^^---------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
558 |         .parameters(from_table.parameters().cloned(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:561:17
    |
561 |         .build()?;
    |                 ^ the trait `From<aws_sdk_glue::error::BuildError>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<(), iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_sdk_glue::error::BuildError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<(), iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_sdk_glue::error::BuildError>>`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:563:10
    |
563 |     self.glue.create_table()
    |          ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:564:26
    |
564 |         .catalog_id(self.aws_properties.glue_catalog_id())
    |                          ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:573:16
    |
573 |     match self.drop_table(src, false).await {
    |                ^^^^^^^^^^    -------
    |                              | |
    |                              | unexpected argument of type `bool`
    |                              help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:586:18
    |
586 |             self.glue.delete_table()
    |                  ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:587:34
    |
587 |                 .catalog_id(self.aws_properties.glue_catalog_id())
    |                                  ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib test) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib test) due to 16 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:570:5
    |
570 |     tracing::info!("Created rename destination table {:?}", dest);
    |     ^^^^^^^ use of undeclared crate or module `tracing`

error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:575:13
    |
575 |             tracing::info!("Successfully renamed table from {:?} to {:?}", src, dest);
    |             ^^^^^^^ use of undeclared crate or module `tracing`

error[E0433]: failed to resolve: use of undeclared crate or module `tracing`
   --> crates/catalog/glue/src/catalog.rs:580:13
    |
580 |             tracing::error!(
    |             ^^^^^^^ use of undeclared crate or module `tracing`

warning: unused import: `from_aws_build_error`
  --> crates/catalog/glue/src/catalog.rs:31:20
   |
31 | use crate::error::{from_aws_build_error, from_aws_sdk_error};
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:532:60
    |
532 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                            ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:532:50
    |
532 |     let from_table_db_name = convert_to_database(src, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                              ------------------- ^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                              |
    |                              arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life1 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:534:59
    |
534 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                                                           ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:534:48
    |
534 |     let to_table_db_name = convert_to_database(dest, self.aws_properties.glue_catalog_skip_name_validation())?;
    |                            ------------------- ^^^^ expected `&NamespaceIdent`, found `&TableIdent`
    |                            |
    |                            arguments to this function are incorrect
    |
    = note: expected reference `&NamespaceIdent`
               found reference `&'life2 TableIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:96:15
    |
96  | pub(crate) fn convert_to_database(
    |               ^^^^^^^^^^^^^^^^^^^
97  |     namespace: &NamespaceIdent,
    |     --------------------------

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:538:33
    |
538 |     let from_table = match self.glue.get_table()
    |                                 ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:539:26
    |
539 |         .catalog_id(self.aws_properties.glue_catalog_id())
    |                          ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this method takes 2 arguments but 1 argument was supplied
   --> crates/catalog/glue/src/catalog.rs:558:10
    |
558 |         .parameters(from_table.parameters().cloned())
    |          ^^^^^^^^^^---------------------------------- an argument is missing
    |
note: method defined here
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/types/_table_input.rs:375:12
    |
375 |     pub fn parameters(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>)...
    |            ^^^^^^^^^^
help: provide the argument
    |
558 |         .parameters(from_table.parameters().cloned(), /* v */)
    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:561:17
    |
561 |         .build()?;
    |                 ^ the trait `From<aws_sdk_glue::error::BuildError>` is not implemented for `iceberg::Error`, which is required by `Result<(), iceberg::Error>: FromResidual<Result<Infallible, aws_sdk_glue::error::BuildError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<(), iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_sdk_glue::error::BuildError>>`

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:563:10
    |
563 |     self.glue.create_table()
    |          ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:564:26
    |
564 |         .catalog_id(self.aws_properties.glue_catalog_id())
    |                          ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> crates/catalog/glue/src/catalog.rs:573:16
    |
573 |     match self.drop_table(src, false).await {
    |                ^^^^^^^^^^    -------
    |                              | |
    |                              | unexpected argument of type `bool`
    |                              help: remove the extra argument
    |
note: method defined here
   --> /home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg/src/catalog/mod.rs:84:14
    |
84  |     async fn drop_table(&self, table: &TableIdent) -> Result<()>;
    |              ^^^^^^^^^^

error[E0609]: no field `glue` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:586:18
    |
586 |             self.glue.delete_table()
    |                  ^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

error[E0609]: no field `aws_properties` on type `&GlueCatalog`
   --> crates/catalog/glue/src/catalog.rs:587:34
    |
587 |                 .catalog_id(self.aws_properties.glue_catalog_id())
    |                                  ^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `config`, `client`, `file_io`

Some errors have detailed explanations: E0061, E0277, E0308, E0433, E0609.
For more information about an error, try `rustc --explain E0061`.
warning: `iceberg-catalog-glue` (lib) generated 1 warning
error: could not compile `iceberg-catalog-glue` (lib) due to 16 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...

