Fail
file path is :
projects/iceberg/rust/crates/catalog/glue/src/catalog.rs

output is:



error is :
   Compiling iceberg v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/iceberg)
   Compiling iceberg-catalog-hms v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/hms)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
error[E0609]: no field `skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:303:71
    |
303 |             .database_name(convert_to_database(namespace, self.config.skip_name_validation)?);
    |                                                                       ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:303:28
    |
303 |             .database_name(convert_to_database(namespace, self.config.skip_name_validation)?);
    |              ------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesInputBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/_get_tables_input.rs:87:48
    |
87  |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesInputBuilder::database_name`

error[E0599]: no method named `set_input` found for struct `GetTablesFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:315:14
    |
311 |           let response = self
    |  ________________________-
312 | |             .client
313 | |             .0
314 | |             .get_tables()
315 | |             .set_input(Some(request.build()?))
    | |             -^^^^^^^^^ help: there is a method with a similar name: `as_input`
    | |_____________|
    | 

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:315:44
    |
315 |             .set_input(Some(request.build()?))
    |                                            ^ the trait `From<aws_sdk_glue::error::BuildError>` is not implemented for `iceberg::Error`, which is required by `std::result::Result<Vec<TableIdent>, iceberg::Error>: FromResidual<std::result::Result<Infallible, aws_sdk_glue::error::BuildError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `std::result::Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<std::result::Result<Infallible, aws_sdk_glue::error::BuildError>>`

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:326:42
    |
326 |                     .filter(|table| self.is_glue_iceberg_table(table))
    |                                          ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:328:62
    |
328 |                         let namespace = convert_to_namespace(namespace)?;
    |                                         -------------------- ^^^^^^^^^ expected `&Database`, found `&NamespaceIdent`
    |                                         |
    |                                         arguments to this function are incorrect
    |
    = note: expected reference `&aws_sdk_glue::types::Database`
               found reference `&'life1 iceberg::NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:328:41
    |
328 |                         let namespace = convert_to_namespace(namespace)?;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

Some errors have detailed explanations: E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib test) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

   Compiling iceberg-catalog-glue v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/glue)
   Compiling iceberg-datafusion v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/integrations/datafusion)
   Compiling iceberg-catalog-rest v0.2.0 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/iceberg/rust/crates/catalog/rest)
error[E0609]: no field `skip_name_validation` on type `GlueCatalogConfig`
   --> crates/catalog/glue/src/catalog.rs:303:71
    |
303 |             .database_name(convert_to_database(namespace, self.config.skip_name_validation)?);
    |                                                                       ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `uri`, `catalog_id`, `warehouse`, `props`

error[E0277]: the trait bound `std::string::String: From<DatabaseInput>` is not satisfied
   --> crates/catalog/glue/src/catalog.rs:303:28
    |
303 |             .database_name(convert_to_database(namespace, self.config.skip_name_validation)?);
    |              ------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `From<DatabaseInput>` is not implemented for `std::string::String`, which is required by `DatabaseInput: Into<std::string::String>`
    |              |
    |              required by a bound introduced by this call
    |
    = help: the following other types implement trait `From<T>`:
              <std::string::String as From<char>>
              <std::string::String as From<Box<str>>>
              <std::string::String as From<Cow<'a, str>>>
              <std::string::String as From<url::Url>>
              <std::string::String as From<uuid::Uuid>>
              <std::string::String as From<object_store::path::Path>>
              <std::string::String as From<SensitiveString>>
              <std::string::String as From<aws_smithy_runtime_api::http::headers::header_value::HeaderValue>>
            and 5 others
    = note: required for `DatabaseInput` to implement `Into<std::string::String>`
note: required by a bound in `GetTablesInputBuilder::database_name`
   --> /root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-glue-1.47.0/src/operation/get_tables/_get_tables_input.rs:87:48
    |
87  |     pub fn database_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `GetTablesInputBuilder::database_name`

error[E0599]: no method named `set_input` found for struct `GetTablesFluentBuilder` in the current scope
   --> crates/catalog/glue/src/catalog.rs:315:14
    |
311 |           let response = self
    |  ________________________-
312 | |             .client
313 | |             .0
314 | |             .get_tables()
315 | |             .set_input(Some(request.build()?))
    | |             -^^^^^^^^^ help: there is a method with a similar name: `as_input`
    | |_____________|
    | 

error[E0277]: `?` couldn't convert the error to `iceberg::Error`
   --> crates/catalog/glue/src/catalog.rs:315:44
    |
315 |             .set_input(Some(request.build()?))
    |                                            ^ the trait `From<aws_sdk_glue::error::BuildError>` is not implemented for `iceberg::Error`, which is required by `Result<Vec<TableIdent>, iceberg::Error>: FromResidual<Result<Infallible, aws_sdk_glue::error::BuildError>>`
    |
    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
    = help: the following other types implement trait `From<T>`:
              <iceberg::Error as From<reqwest::error::Error>>
              <iceberg::Error as From<serde_json::Error>>
              <iceberg::Error as From<uuid::Error>>
              <iceberg::Error as From<url::parser::ParseError>>
              <iceberg::Error as From<rust_decimal::error::Error>>
              <iceberg::Error as From<opendal::types::error::Error>>
              <iceberg::Error as From<apache_avro::error::Error>>
              <iceberg::Error as From<chrono::format::ParseError>>
            and 5 others
    = note: required for `Result<Vec<TableIdent>, iceberg::Error>` to implement `FromResidual<Result<Infallible, aws_sdk_glue::error::BuildError>>`

error[E0599]: no method named `is_glue_iceberg_table` found for reference `&GlueCatalog` in the current scope
   --> crates/catalog/glue/src/catalog.rs:326:42
    |
326 |                     .filter(|table| self.is_glue_iceberg_table(table))
    |                                          ^^^^^^^^^^^^^^^^^^^^^ method not found in `&GlueCatalog`

error[E0308]: mismatched types
   --> crates/catalog/glue/src/catalog.rs:328:62
    |
328 |                         let namespace = convert_to_namespace(namespace)?;
    |                                         -------------------- ^^^^^^^^^ expected `&Database`, found `&NamespaceIdent`
    |                                         |
    |                                         arguments to this function are incorrect
    |
    = note: expected reference `&Database`
               found reference `&'life1 NamespaceIdent`
note: function defined here
   --> crates/catalog/glue/src/utils.rs:121:15
    |
121 | pub(crate) fn convert_to_namespace(database: &Database) -> Namespace {
    |               ^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0277]: the `?` operator can only be applied to values that implement `Try`
   --> crates/catalog/glue/src/catalog.rs:328:41
    |
328 |                         let namespace = convert_to_namespace(namespace)?;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `Namespace`
    |
    = help: the trait `Try` is not implemented for `Namespace`

Some errors have detailed explanations: E0277, E0308, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `iceberg-catalog-glue` (lib) due to 7 previous errors
warning: build failed, waiting for other jobs to finish...

