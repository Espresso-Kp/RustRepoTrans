Fail
file path is :
projects/charset-normalizer/rust/src/utils.rs

output is:


error is :
   Compiling charset-normalizer-rs v1.0.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/charset-normalizer/rust)
error[E0308]: mismatched types
   --> src/utils.rs:147:32
    |
147 |     let re = regex::Regex::new(RE_POSSIBLE_ENCODING_INDICATION).unwrap();
    |              ----------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `Lazy<Regex>`
    |              |
    |              arguments to this function are incorrect
    |
    = note: expected reference `&str`
                  found struct `once_cell::sync::Lazy<regex::Regex>`
note: associated function defined here
   --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-1.9.5/src/regex/string.rs:180:12
    |
180 |     pub fn new(re: &str) -> Result<Regex, Error> {
    |            ^^^

error[E0308]: mismatched types
   --> src/utils.rs:158:13
    |
158 |         for (encoding_alias, encoding_iana) in IANA_SUPPORTED.iter() {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    --------------------- this is an iterator with items of type `&&str`
    |             |
    |             expected `str`, found `(_, _)`
    |
    = note: expected type `str`
              found tuple `(_, _)`

warning: unused import: `Encoding`
  --> src/utils.rs:12:54
   |
12 | use encoding::{CodecError, DecoderTrap, EncoderTrap, Encoding, EncodingRef, StringWriter};
   |                                                      ^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

For more information about this error, try `rustc --explain E0308`.
warning: `charset-normalizer-rs` (lib) generated 1 warning
error: could not compile `charset-normalizer-rs` (lib) due to 2 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `charset-normalizer-rs` (lib test) generated 1 warning (1 duplicate)
error: could not compile `charset-normalizer-rs` (lib test) due to 2 previous errors; 1 warning emitted

