Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0425]: cannot find function `get` in module `stock_str`
    --> src/contact.rs:1026:27
     |
1026 |             || stock_str::get(context, stock_str::SELF).contains(query_str);
     |                           ^^^ not found in `stock_str`
     |
help: consider importing one of these items
     |
3    + use num_cpus::get;
     |
3    + use reqwest::blocking::get;
     |
3    + use reqwest::get;
     |
help: if you import `get`, refer to it directly
     |
1026 -             || stock_str::get(context, stock_str::SELF).contains(query_str);
1026 +             || get(context, stock_str::SELF).contains(query_str);
     |

error[E0425]: cannot find value `SELF` in module `stock_str`
    --> src/contact.rs:1026:51
     |
1026 |             || stock_str::get(context, stock_str::SELF).contains(query_str);
     |                                                   ^^^^ not found in `stock_str`

error[E0425]: cannot find value `s3str_like_cmd` in this scope
    --> src/contact.rs:1045:9
     |
1045 |         s3str_like_cmd,
     |         ^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
    --> src/contact.rs:1021:26
     |
1021 |             || self_addr.contains(query_str)
     |                          ^^^^^^^^ method not found in `Option<String>`
     |
note: the method `contains` exists on the type `std::string::String`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs:1151:5
     |
1151 |     pub fn contains<'a, P: Pattern<'a>>(&'a self, pat: P) -> bool {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::string::String` value, panicking if the value is an `Option::None`
     |
1021 |             || self_addr.expect("REASON").contains(query_str)
     |                         +++++++++++++++++

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
    --> src/contact.rs:1025:18
     |
1022 |               || context
     |  ________________-
1023 | |                 .get_config(Config::Displayname)
1024 | |                 .await?
1025 | |                 .contains(query_str)
     | |                 -^^^^^^^^ method not found in `Option<String>`
     | |_________________|
     | 
     |
note: the method `contains` exists on the type `std::string::String`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs:1151:5
     |
1151 |     pub fn contains<'a, P: Pattern<'a>>(&'a self, pat: P) -> bool {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Option::expect` to unwrap the `std::string::String` value, panicking if the value is an `Option::None`
     |
1024 |                 .await?.expect("REASON")
     |                        +++++++++++++++++

error[E0599]: no variant or associated item named `MinContactList` found for enum `contact::Origin` in the current scope
    --> src/contact.rs:1044:17
     |
410  | pub enum Origin {
     | --------------- variant or associated item `MinContactList` not found for this enum
...
1044 |         Origin::MinContactList as i32,
     |                 ^^^^^^^^^^^^^^ variant or associated item not found in `Origin`

error[E0277]: the trait bound `impl Iterator<Item = &dyn sql::ToSql>: rusqlite::Params` is not satisfied
    --> src/contact.rs:1053:13
     |
1051 |         .query_map(
     |          --------- required by a bound introduced by this call
1052 |             sql,
1053 |             params_iter(&params),
     |             ^^^^^^^^^^^^^^^^^^^^ the trait `rusqlite::Params` is not implemented for `impl Iterator<Item = &dyn sql::ToSql>`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `Sql::query_map`
    --> src/sql.rs:428:22
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_map`

error[E0308]: mismatched types
    --> src/contact.rs:1056:17
     |
1056 |                 mapped_rows.collect::<std::result::Result<Vec<_>, _>>()
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Result<_, Error>`, found `Result<Vec<ContactId>, Error>`
     |
     = note: `rusqlite::Error` and `anyhow::Error` have similar names, but are actually distinct types
note: `rusqlite::Error` is defined in crate `rusqlite`
    --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rusqlite-0.31.0/src/error.rs:14:1
     |
14   | pub enum Error {
     | ^^^^^^^^^^^^^^
note: `anyhow::Error` is defined in crate `anyhow`
    --> /home/k/.cargo/registry/src/index.crates.io-6f17d22bba15001f/anyhow-1.0.82/src/lib.rs:387:1
     |
387  | pub struct Error {
     | ^^^^^^^^^^^^^^^^
help: try wrapping the expression in `Ok`
     |
1056 |                 Ok(mapped_rows.collect::<std::result::Result<Vec<_>, _>>())
     |                 +++                                                       +

error[E0277]: the trait bound `impl Iterator<Item = &dyn sql::ToSql>: rusqlite::Params` is not satisfied
    --> src/contact.rs:1053:13
     |
1051 |         .query_map(
     |          --------- required by a bound introduced by this call
1052 |             sql,
1053 |             params_iter(&params),
     |             ^^^^^^^^^^^^^^^^^^^^ the trait `rusqlite::Params` is not implemented for `impl Iterator<Item = &dyn sql::ToSql>`
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `sql::Sql::query_map`
    --> src/sql.rs:428:22
     |
425  |     pub async fn query_map<T, F, G, H>(
     |                  --------- required by a bound in this associated function
...
428  |         params: impl rusqlite::Params + Send,
     |                      ^^^^^^^^^^^^^^^^ required by this bound in `Sql::query_map`

Some errors have detailed explanations: E0277, E0308, E0425, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 8 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 8 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

