Fail
file path is :
projects/deltachat-core/rust/src/chat.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1004:17
     |
1004 |     let params: Vec<rusqlite::types::ToSql> = if chat_id == DC_CHAT_ID_ARCHIVED_LINK {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `Vec`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:16
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |                ^ required by this bound in `Vec`

error[E0609]: no field `id` on type `ChatId`
   --> src/chat.rs:985:24
    |
985 |     let chat_id = self.id;
    |                        ^^ unknown field
    |
    = note: available field is: `0`

error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1005:9
     |
1005 |         vec![]
     |         ^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `Vec::<T>::new`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:407:6
     |
407  | impl<T> Vec<T> {
     |      ^ required by this bound in `Vec::<T>::new`
...
422  |     pub const fn new() -> Self {
     |                  --- required by a bound in this associated function
     = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1005:9
     |
1005 |         vec![]
     |         ^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `Vec`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:16
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |                ^ required by this bound in `Vec`
     = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> src/chat.rs:1008:13
     |
1008 |             &(MessageState::InFresh as i32),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `dyn ToSql`, found `&i32`
     |
     = note: expected trait object `dyn rusqlite::ToSql`
                   found reference `&i32`
     = help: `&i32` implements `ToSql` so you could box the found value and coerce it to the trait object `Box<dyn ToSql>`, you will have to change the expected type as well

error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1007:9
     |
1007 | /         vec![
1008 | |             &(MessageState::InFresh as i32),
1009 | |             &chat_id,
1010 | |         ]
     | |         ^
     | |         |
     | |_________doesn't have a size known at compile-time
     |           required by a bound introduced by this call
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `std::slice::<impl [T]>::into_vec`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs:176:6
     |
176  | impl<T> [T] {
     |      ^ required by this bound in `std::slice::<impl [T]>::into_vec`
...
461  |     pub fn into_vec<A: Allocator>(self: Box<Self, A>) -> Vec<T, A> {
     |            -------- required by a bound in this associated function
     = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1007:9
     |
1007 | /         vec![
1008 | |             &(MessageState::InFresh as i32),
1009 | |             &chat_id,
1010 | |         ]
     | |_________^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `Vec`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:16
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |                ^ required by this bound in `Vec`
     = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Vec<dyn rusqlite::ToSql>: rusqlite::Params` is not satisfied
    --> src/chat.rs:1013:22
     |
1013 |     sql.count(query, params).await
     |         -----        ^^^^^^ the trait `rusqlite::Params` is not implemented for `Vec<dyn rusqlite::ToSql>`
     |         |
     |         required by a bound introduced by this call
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `Sql::count`
    --> src/sql.rs:446:57
     |
446  |     pub async fn count(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
     |                                                         ^^^^^^^^^^^^^^^^ required by this bound in `Sql::count`

error[E0277]: `dyn rusqlite::ToSql` cannot be sent between threads safely
    --> src/chat.rs:1013:22
     |
1013 |     sql.count(query, params).await
     |         -----        ^^^^^^ `dyn rusqlite::ToSql` cannot be sent between threads safely
     |         |
     |         required by a bound introduced by this call
     |
     = help: the trait `std::marker::Send` is not implemented for `dyn rusqlite::ToSql`, which is required by `Vec<dyn rusqlite::ToSql>: std::marker::Send`
     = note: required for `Unique<dyn rusqlite::ToSql>` to implement `std::marker::Send`
note: required because it appears within the type `smallvec::alloc::raw_vec::RawVec<dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:61:19
     |
61   | pub(crate) struct RawVec<T, A: Allocator = Global> {
     |                   ^^^^^^
note: required because it appears within the type `Vec<dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:12
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |            ^^^
note: required by a bound in `Sql::count`
    --> src/sql.rs:446:76
     |
446  |     pub async fn count(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
     |                                                                            ^^^^ required by this bound in `Sql::count`

error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1013:5
     |
1013 |     sql.count(query, params).await
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `Vec`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:16
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |                ^ required by this bound in `Vec`

error[E0277]: the size for values of type `dyn rusqlite::ToSql` cannot be known at compilation time
    --> src/chat.rs:1013:30
     |
1013 |     sql.count(query, params).await
     |                              ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `dyn rusqlite::ToSql`
note: required by a bound in `Vec`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:16
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |                ^ required by this bound in `Vec`

error[E0609]: no field `id` on type `chat::ChatId`
   --> src/chat.rs:985:24
    |
985 |     let chat_id = self.id;
    |                        ^^ unknown field
    |
    = note: available field is: `0`

error[E0277]: the trait bound `Vec<dyn rusqlite::ToSql>: rusqlite::Params` is not satisfied
    --> src/chat.rs:1013:22
     |
1013 |     sql.count(query, params).await
     |         -----        ^^^^^^ the trait `rusqlite::Params` is not implemented for `Vec<dyn rusqlite::ToSql>`
     |         |
     |         required by a bound introduced by this call
     |
     = help: the following other types implement trait `rusqlite::Params`:
               ParamsFromIter<I>
               [&dyn rusqlite::ToSql + std::marker::Send + std::marker::Sync; 0]
               [T; 1]
               [T; 2]
               [T; 3]
               [T; 4]
               [T; 5]
               [T; 6]
             and 109 others
note: required by a bound in `sql::Sql::count`
    --> src/sql.rs:446:57
     |
446  |     pub async fn count(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
     |                                                         ^^^^^^^^^^^^^^^^ required by this bound in `Sql::count`

error[E0277]: `dyn rusqlite::ToSql` cannot be sent between threads safely
    --> src/chat.rs:1013:22
     |
1013 |     sql.count(query, params).await
     |         -----        ^^^^^^ `dyn rusqlite::ToSql` cannot be sent between threads safely
     |         |
     |         required by a bound introduced by this call
     |
     = help: the trait `std::marker::Send` is not implemented for `dyn rusqlite::ToSql`, which is required by `Vec<dyn rusqlite::ToSql>: std::marker::Send`
     = note: required for `Unique<dyn rusqlite::ToSql>` to implement `std::marker::Send`
note: required because it appears within the type `smallvec::alloc::raw_vec::RawVec<dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs:61:19
     |
61   | pub(crate) struct RawVec<T, A: Allocator = Global> {
     |                   ^^^^^^
note: required because it appears within the type `Vec<dyn rusqlite::ToSql>`
    --> /home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:398:12
     |
398  | pub struct Vec<T, #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global> {
     |            ^^^
note: required by a bound in `sql::Sql::count`
    --> src/sql.rs:446:76
     |
446  |     pub async fn count(&self, query: &str, params: impl rusqlite::Params + Send) -> Result<usize> {
     |                                                                            ^^^^ required by this bound in `Sql::count`

error[E0782]: trait objects must include the `dyn` keyword
    --> src/chat.rs:1004:21
     |
1004 |     let params: Vec<rusqlite::types::ToSql> = if chat_id == DC_CHAT_ID_ARCHIVED_LINK {
     |                     ^^^^^^^^^^^^^^^^^^^^^^
     |
help: add `dyn` keyword before this trait
     |
1004 |     let params: Vec<dyn rusqlite::types::ToSql> = if chat_id == DC_CHAT_ID_ARCHIVED_LINK {
     |                     +++

Some errors have detailed explanations: E0277, E0308, E0609, E0782.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 12 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 12 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

