Fail
file path is :
projects/deltachat-core/rust/src/contact.rs

output is:


error is :
   Compiling deltachat v1.139.6 (/home/k/ogs_PHD/LLM4SE/2Rust_projects/auto_get_functionPair/projects/deltachat-core/rust)
error[E0599]: no function or associated item named `load_from_db` found for struct `Contact` in the current scope
   --> src/contact.rs:605:28
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct
...
605 |     let contact = Contact::load_from_db(&context.inner.sql, id.0).await?;
    |                            ^^^^^^^^^^^^ function or associated item not found in `Contact`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/contact.rs:614:13
    |
612 |         context.inner.sql.execute(
    |                           ------- required by a bound introduced by this call
613 |             "UPDATE contacts SET blocked=? WHERE id=?;",
614 |             params![Blocked::Yes, id.0],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/contact.rs:620:13
    |
618 |         context.inner.sql.execute(
    |                           ------- required by a bound introduced by this call
619 |             "UPDATE chats SET blocked=? WHERE type=? AND id IN (SELECT chat_id FROM chats_contacts WHERE contact_id=?);",
620 |             params![Blocked::Yes, Chattype::Single as i32, id.0],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0599]: no method named `mark_noticed_contact` found for reference `&context::Context` in the current scope
   --> src/contact.rs:624:17
    |
624 |         context.mark_noticed_contact(id).await?;
    |                 ^^^^^^^^^^^^^^^^^^^^ method not found in `&Context`

error[E0599]: no function or associated item named `load_from_db` found for struct `contact::Contact` in the current scope
   --> src/contact.rs:605:28
    |
358 | pub struct Contact {
    | ------------------ function or associated item `load_from_db` not found for this struct
...
605 |     let contact = Contact::load_from_db(&context.inner.sql, id.0).await?;
    |                            ^^^^^^^^^^^^ function or associated item not found in `Contact`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/contact.rs:614:13
    |
612 |         context.inner.sql.execute(
    |                           ------- required by a bound introduced by this call
613 |             "UPDATE contacts SET blocked=? WHERE id=?;",
614 |             params![Blocked::Yes, id.0],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

error[E0277]: `dyn rusqlite::ToSql` cannot be shared between threads safely
   --> src/contact.rs:620:13
    |
618 |         context.inner.sql.execute(
    |                           ------- required by a bound introduced by this call
619 |             "UPDATE chats SET blocked=? WHERE type=? AND id IN (SELECT chat_id FROM chats_contacts WHERE contact_id=?);",
620 |             params![Blocked::Yes, Chattype::Single as i32, id.0],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `dyn rusqlite::ToSql` cannot be shared between threads safely
    |
    = help: within `[&dyn rusqlite::ToSql]`, the trait `std::marker::Sync` is not implemented for `dyn rusqlite::ToSql`, which is required by `&[&dyn rusqlite::ToSql]: std::marker::Send`
    = note: required because it appears within the type `&dyn rusqlite::ToSql`
    = note: required because it appears within the type `[&dyn rusqlite::ToSql]`
    = note: required for `&[&dyn rusqlite::ToSql]` to implement `std::marker::Send`
note: required by a bound in `sql::Sql::execute`
   --> src/sql.rs:404:41
    |
401 |     pub async fn execute(
    |                  ------- required by a bound in this associated function
...
404 |         params: impl rusqlite::Params + Send,
    |                                         ^^^^ required by this bound in `Sql::execute`

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `deltachat` (lib) due to 4 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `deltachat` (lib test) due to 4 previous errors
error: command `/home/k/.rustup/toolchains/1.77.1-x86_64-unknown-linux-gnu/bin/cargo test --no-run --message-format json-render-diagnostics` exited with code 101

