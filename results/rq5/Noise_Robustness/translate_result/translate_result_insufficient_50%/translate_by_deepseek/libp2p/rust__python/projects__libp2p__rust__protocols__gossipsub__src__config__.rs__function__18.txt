<message>
please translate the given python function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<python function>
def message_id(self, msg: rpc_pb2.Message):
        return self._msg_id_constructor(msg)
</python function>
<rust function signature>
pub fn message_id(&self, message: &Message) -> MessageId 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub struct MessageId(pub Vec<u8>);
struct Message(RawMessage);

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>


use std::borrow::Cow;
use std::sync::Arc;
use std::time::Duration;
use crate::error::ConfigBuilderError;
use crate::protocol::{ProtocolConfig, ProtocolId, FLOODSUB_PROTOCOL};
use crate::types::{Message, MessageId, PeerKind};
use libp2p_identity::PeerId;
use libp2p_swarm::StreamProtocol;
use super::*;
use crate::topic::IdentityHash;
use crate::Topic;
use libp2p_core::UpgradeInfo;
use std::collections::hash_map::DefaultHasher;
use std::hash::{Hash, Hasher};

</rust function dependency libraries>

</message>
<function>
pub fn message_id(&self, message: &Message) -> MessageId {
        (self.message_id_fn)(message)
    }
</function>
<translated function>
 ```rust
pub fn message_id(&self, message: &Message) -> MessageId {
    self._msg_id_constructor(message)
}
```</translated function> ```rust
pub fn message_id(&self, message: &Message) -> MessageId {
    self._msg_id_constructor(message)
}
```