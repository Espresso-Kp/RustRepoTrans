<message>
please translate the given c function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<c function>
unsign32 today(void)
{
    /* return time in slots since epoch */
    unsign32 ti=(unsign32)time(NULL);
    return ti/(60*TIME_SLOT_MINUTES);
}
</c function>
<rust function signature>
pub fn today() -> usize 
</rust function signature>
<rust function realted variable, functions, and data type declarations>


</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>


use std::time::SystemTime;
use std::time::UNIX_EPOCH;
use super::big;
use super::big::Big;
use super::ecp;
use super::ecp::ECP;
use super::ecp8::ECP8;
use super::fp16::FP16;
use super::fp48::FP48;
use super::pair256;
use super::rom;
use crate::hash256::HASH256;
use crate::hash384::HASH384;
use crate::hash512::HASH512;
use crate::rand::RAND;
use super::*;
use crate::test_utils::*;

</rust function dependency libraries>

</message>
<function>
pub fn today() -> usize {
    return (SystemTime::now()
        .duration_since(UNIX_EPOCH)
        .unwrap()
        .as_secs()
        / (60 * 1440)) as usize;
}
</function>
<translated function>
 ```rust
pub fn today() -> usize {
    let start = SystemTime::now();
    let since_the_epoch = start.duration_since(UNIX_EPOCH).expect("Time went backwards");
    let seconds = since_the_epoch.as_secs();
    let time_slot_minutes = 60; // TIME_SLOT_MINUTES is assumed to be 60 minutes per slot
    (seconds / time_slot_minutes) as usize
}
```</translated function> ```rust
pub fn today() -> usize {
    let start = SystemTime::now();
    let since_the_epoch = start.duration_since(UNIX_EPOCH).expect("Time went backwards");
    let seconds = since_the_epoch.as_secs();
    let time_slot_minutes = 60; // TIME_SLOT_MINUTES is assumed to be 60 minutes per slot
    (seconds / time_slot_minutes) as usize
}
```