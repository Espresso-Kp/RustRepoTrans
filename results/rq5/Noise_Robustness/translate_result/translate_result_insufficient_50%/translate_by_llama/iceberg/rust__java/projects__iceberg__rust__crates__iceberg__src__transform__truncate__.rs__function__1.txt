<message>
please translate the given java function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<java function>
Truncate(int width) {
    this.width = width;
  }
</java function>
<rust function signature>
pub fn new(width: u32) -> Self 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub struct Truncate {
    width: u32,
}

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>


use std::sync::Arc;
use arrow_array::ArrayRef;
use arrow_schema::DataType;
use crate::{
    spec::{Datum, PrimitiveLiteral},
    Error,
};
use super::TransformFunction;
use std::sync::Arc;
use crate::spec::PrimitiveType::{
        Binary, Date, Decimal, Fixed, Int, Long, String as StringType, Time, Timestamp,
        Timestamptz, Uuid,
    };
use crate::spec::StructType;
use crate::spec::Type::{Primitive, Struct};
use crate::transform::test::TestTransformFixture;
use arrow_array::{
        builder::PrimitiveBuilder, types::Decimal128Type, Decimal128Array, Int32Array, Int64Array,
    };
use crate::{
        expr::PredicateOperator,
        spec::{Datum, NestedField, PrimitiveType, Transform, Type},
        transform::{test::TestProjectionFixture, TransformFunction},
        Result,
    };

</rust function dependency libraries>

</message>
<function>
pub fn new(width: u32) -> Self {
        Self { width }
    }
</function>
<translated function>
Here is the translated Rust function:
```rust
impl Truncate {
    pub fn new(width: u32) -> Self {
        Self { width }
    }
}
```
Note that I've assumed that the `Truncate` struct is defined as shown in the provided Rust code snippet:
```rust
pub struct Truncate {
    width: u32,
}
```</translated function>Here is the translated Rust function:
```rust
impl Truncate {
    pub fn new(width: u32) -> Self {
        Self { width }
    }
}
```
Note that I've assumed that the `Truncate` struct is defined as shown in the provided Rust code snippet:
```rust
pub struct Truncate {
    width: u32,
}
```