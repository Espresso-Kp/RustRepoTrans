<message>
please translate the given python function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<python function>
def remove_conn(self, swarm_conn: SwarmConn) -> None:
        """
        Simply remove the connection from Swarm's records, without closing
        the connection.
        """
        peer_id = swarm_conn.muxed_conn.peer_id
        if peer_id not in self.connections:
            return
        del self.connections[peer_id]
</python function>
<rust function signature>
fn remove(&mut self, k: &Key) 
</rust function signature>
<rust function realted variable, functions, and data type declarations>


</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use super::*;
use crate::kbucket;
use smallvec::SmallVec;
use std::collections::{hash_map, hash_set, HashMap, HashSet};
use std::iter;
use super::*;
use crate::SHA_256_MH;
use quickcheck::*;
use rand::Rng;

</rust function dependency libraries>

</message>
<function>
fn remove(&mut self, k: &Key) {
        self.records.remove(k);
    }
</function>
<translated function>
Here is the translated Rust function:
```rust
fn remove(&mut self, k: &Key) {
    if!self.connections.contains_key(k) {
        return;
    }
    self.connections.remove(k);
}
```
Note that I assumed `Key` is a type that can be used as a key in a `HashMap`, and `connections` is a field of the struct that this function is part of, which is a `HashMap` or similar. If that's not the case, please provide more information about the types and fields involved.</translated function>Here is the translated Rust function:
```rust
fn remove(&mut self, k: &Key) {
    if!self.connections.contains_key(k) {
        return;
    }
    self.connections.remove(k);
}
```
Note that I assumed `Key` is a type that can be used as a key in a `HashMap`, and `connections` is a field of the struct that this function is part of, which is a `HashMap` or similar. If that's not the case, please provide more information about the types and fields involved.