<message>
please translate the given java function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<java function>
public static byte[] HASH_ID(int sha,byte[] ID,int len)
	{
		return hashit(sha,0,ID,len);
	}
</java function>
<rust function signature>
pub fn hash_id(sha: usize, id: &[u8], w: &mut [u8]) -> bool 
</rust function signature>
<rust function realted variable, functions, and data type declarations>


</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use std::time::SystemTime;
use std::time::UNIX_EPOCH;
use super::big;
use super::big::Big;
use super::ecp;
use super::ecp::ECP;
use super::ecp8::ECP8;
use super::fp16::FP16;
use super::fp48::FP48;
use super::pair256;
use super::rom;
use crate::hash256::HASH256;
use crate::hash384::HASH384;
use crate::hash512::HASH512;
use crate::rand::RAND;
use super::*;
use crate::test_utils::*;

</rust function dependency libraries>

</message>
<function>
pub fn hash_id(sha: usize, id: &[u8], w: &mut [u8]) -> bool {
    return hashit(sha, 0, id, w);
}
</function>
<translated function>
Here is the translated Rust function:
```rust
pub fn hash_id(sha: usize, id: &[u8], w: &mut [u8]) -> bool {
    hashit(sha, 0, id, w.len())
}
```
Note that I assumed `w.len()` is equivalent to the `len` parameter in the Java function, as there is no explicit `len` parameter in the Rust function signature. If this is not the case, please let me know and I'll adjust the translation accordingly.</translated function>Here is the translated Rust function:
```rust
pub fn hash_id(sha: usize, id: &[u8], w: &mut [u8]) -> bool {
    hashit(sha, 0, id, w.len())
}
```
Note that I assumed `w.len()` is equivalent to the `len` parameter in the Java function, as there is no explicit `len` parameter in the Rust function signature. If this is not the case, please let me know and I'll adjust the translation accordingly.