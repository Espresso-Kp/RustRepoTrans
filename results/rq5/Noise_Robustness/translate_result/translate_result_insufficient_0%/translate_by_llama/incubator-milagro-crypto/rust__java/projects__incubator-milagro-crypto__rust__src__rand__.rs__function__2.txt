<message>
please translate the given java function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<java function>
public void clean()
	{ /* kill internal state */
		int i;
		pool_ptr=rndptr=0;
		for (i=0;i<32;i++) pool[i]=0;
		for (i=0;i<NK;i++) ira[i]=0;
		borrow=0;
	}
</java function>
<rust function signature>
pub fn clean(&mut self) 
</rust function signature>
<rust function realted variable, functions, and data type declarations>


</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use crate::hash256::HASH256;

</rust function dependency libraries>

</message>
<function>
pub fn clean(&mut self) {
        self.pool_ptr = 0;
        self.rndptr = 0;
        for i in 0..32 {
            self.pool[i] = 0
        }
        for i in 0..RAND_NK {
            self.ira[i] = 0
        }
        self.borrow = 0;
    }
</function>
<translated function>
Here is the translated Rust function:
```rust
pub fn clean(&mut self) {
    self.pool_ptr = 0;
    self.rndptr = 0;
    self.pool.fill(0);
    self.ira.fill(0);
    self.borrow = 0;
}
```
Note that I assumed the following:

* `pool` is a vector of 32 elements, so I used `self.pool.fill(0)` to set all elements to 0.
* `ira` is a vector of `NK` elements, so I used `self.ira.fill(0)` to set all elements to 0.
* `pool_ptr`, `rndptr`, and `borrow` are fields of the struct that `self` refers to.
* `NK` is a constant or a field of the struct that `self` refers to.

Please let me know if these assumptions are incorrect.</translated function>Here is the translated Rust function:
```rust
pub fn clean(&mut self) {
    self.pool_ptr = 0;
    self.rndptr = 0;
    self.pool.fill(0);
    self.ira.fill(0);
    self.borrow = 0;
}
```
Note that I assumed the following:

* `pool` is a vector of 32 elements, so I used `self.pool.fill(0)` to set all elements to 0.
* `ira` is a vector of `NK` elements, so I used `self.ira.fill(0)` to set all elements to 0.
* `pool_ptr`, `rndptr`, and `borrow` are fields of the struct that `self` refers to.
* `NK` is a constant or a field of the struct that `self` refers to.

Please let me know if these assumptions are incorrect.