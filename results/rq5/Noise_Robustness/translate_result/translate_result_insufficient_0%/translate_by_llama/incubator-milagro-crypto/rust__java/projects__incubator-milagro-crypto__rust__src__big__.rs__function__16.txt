<message>
please translate the given java function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<java function>
public void one()
	{
		w[0]=1;
		for (int i=1;i<NLEN;i++)
			w[i]=0;
	}
</java function>
<rust function signature>
pub fn one(&mut self) 
</rust function signature>
<rust function realted variable, functions, and data type declarations>


</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use super::dbig::DBig;
use crate::arch::{self, Chunk, DChunk};
use crate::rand::RAND;
use std::cmp::Ordering;
use std::fmt;
use super::rom::BASEBITS;
use super::rom::MODBYTES;
use super::*;

</rust function dependency libraries>

</message>
<function>
pub fn one(&mut self) {
        self.w[0] = 1;
        for i in 1..NLEN {
            self.w[i] = 0;
        }
    }
</function>
<translated function>
Here is the translated Rust function:
```rust
pub fn one(&mut self) {
    self.w[0] = 1;
    for i in 1..self.NLEN {
        self.w[i] = 0;
    }
}
```
Note that I assumed `w` and `NLEN` are fields of the struct that this function is part of, and that `w` is an array or vector. If that's not the case, please provide more information about the types and fields involved.</translated function>Here is the translated Rust function:
```rust
pub fn one(&mut self) {
    self.w[0] = 1;
    for i in 1..self.NLEN {
        self.w[i] = 0;
    }
}
```
Note that I assumed `w` and `NLEN` are fields of the struct that this function is part of, and that `w` is an array or vector. If that's not the case, please provide more information about the types and fields involved.