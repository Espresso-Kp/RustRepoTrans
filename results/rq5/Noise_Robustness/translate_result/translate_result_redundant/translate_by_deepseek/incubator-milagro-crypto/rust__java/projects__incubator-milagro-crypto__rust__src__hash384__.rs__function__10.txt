<message>
please translate the given java function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<java function>
public void init()
	{ /* initialise */
		int i;
		for (i=0;i<80;i++) w[i]=0L;
		length[0]=length[1]=0L;
		h[0]=H0;
		h[1]=H1;
		h[2]=H2;
		h[3]=H3;
		h[4]=H4;
		h[5]=H5;
		h[6]=H6;
		h[7]=H7;
	}
</java function>
<rust function signature>
pub fn init(&mut self) 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub struct HASH384 {
    length: [u64; 2],
    h: [u64; 8],
    w: [u64; 80],
}

const HASH384_H0: u64 = 0xcbbb9d5dc1059ed8;
const HASH384_H1: u64 = 0x629a292a367cd507;
const HASH384_H2: u64 = 0x9159015a3070dd17;
const HASH384_H3: u64 = 0x152fecd8f70e5939;
const HASH384_H4: u64 = 0x67332667ffc00b31;
const HASH384_H5: u64 = 0x8eb44a8768581511;
const HASH384_H6: u64 = 0xdb0c2e0d64f98fa7;
const HASH384_H7: u64 = 0x47b5481dbefa4fa4;



pub struct HASH384 {
    length: [u64; 2],
    h: [u64; 8],
    w: [u64; 80],
}

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>

use super::*;

</rust function dependency libraries>

</message>
<function>
pub fn init(&mut self) {
        // initialise
        for i in 0..64 {
            self.w[i] = 0
        }
        self.length[0] = 0;
        self.length[1] = 0;
        self.h[0] = HASH384_H0;
        self.h[1] = HASH384_H1;
        self.h[2] = HASH384_H2;
        self.h[3] = HASH384_H3;
        self.h[4] = HASH384_H4;
        self.h[5] = HASH384_H5;
        self.h[6] = HASH384_H6;
        self.h[7] = HASH384_H7;
    }
</function>
<translated function>
 ```rust
pub fn init(&mut self) {
    for i in 0..80 {
        self.w[i] = 0;
    }
    self.length[0] = 0;
    self.length[1] = 0;
    self.h[0] = HASH384_H0;
    self.h[1] = HASH384_H1;
    self.h[2] = HASH384_H2;
    self.h[3] = HASH384_H3;
    self.h[4] = HASH384_H4;
    self.h[5] = HASH384_H5;
    self.h[6] = HASH384_H6;
    self.h[7] = HASH384_H7;
}
```</translated function> ```rust
pub fn init(&mut self) {
    for i in 0..80 {
        self.w[i] = 0;
    }
    self.length[0] = 0;
    self.length[1] = 0;
    self.h[0] = HASH384_H0;
    self.h[1] = HASH384_H1;
    self.h[2] = HASH384_H2;
    self.h[3] = HASH384_H3;
    self.h[4] = HASH384_H4;
    self.h[5] = HASH384_H5;
    self.h[6] = HASH384_H6;
    self.h[7] = HASH384_H7;
}
```