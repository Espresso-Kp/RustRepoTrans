<message>
please translate the given python function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<python function>
def to_base58(self) -> str:
        return base58.b58encode(self._bytes).decode()
</python function>
<rust function signature>
pub fn to_base58(self) -> String 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub fn to_bytes(self) -> Vec<u8> {
        self.multihash.to_bytes()
    }

pub struct PeerId {
    multihash: Multihash,
}


pub fn to_bytes(&self) -> Vec<u8> {
        self.0.to_encoded_point(false).as_bytes().to_owned()
    }
pub struct PeerId {
    multihash: Multihash,
}

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>

use rand::Rng;
use sha2::Digest as _;
use std::{fmt, str::FromStr};
use thiserror::Error;
use serde::{Deserialize, Serialize};
use serde::de::*;
use super::*;

</rust function dependency libraries>

</message>
<function>
pub fn to_base58(self) -> String {
        bs58::encode(self.to_bytes()).into_string()
    }
</function>
<translated function>
 ```rust
use base58::{encode, Decode};
use std::vec;

pub fn to_base58(&self) -> String {
    let bytes = self.to_bytes();
    encode(&bytes)
}
```</translated function> ```rust
use base58::{encode, Decode};
use std::vec;

pub fn to_base58(&self) -> String {
    let bytes = self.to_bytes();
    encode(&bytes)
}
```