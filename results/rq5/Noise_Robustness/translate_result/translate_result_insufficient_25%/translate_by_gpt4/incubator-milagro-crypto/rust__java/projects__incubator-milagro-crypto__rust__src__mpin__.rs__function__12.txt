<message>
please translate the given java function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<java function>
public static int GET_SERVER_SECRET(byte[] S,byte[] SST)
	{
		ECP2 Q=ECP2.generator();
		BIG s=BIG.fromBytes(S);
		Q=PAIR.G2mul(Q,s);
		Q.toBytes(SST);
		return 0;
	}
</java function>
<rust function signature>
pub fn get_server_secret(s: &[u8], sst: &mut [u8]) -> isize 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub fn generator() -> ECP2 {
        return ECP2::new_fp2s(
            FP2::new_bigs(
                Big::new_ints(&rom::CURVE_PXA),
                Big::new_ints(&rom::CURVE_PXB),
            ),
            FP2::new_bigs(
                Big::new_ints(&rom::CURVE_PYA),
                Big::new_ints(&rom::CURVE_PYB),
            ),
        );
    }

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use std::time::SystemTime;
use std::time::UNIX_EPOCH;
use super::big;
use super::big::Big;
use super::ecp;
use super::ecp::ECP;
use super::ecp2::ECP2;
use super::fp12::FP12;
use super::fp4::FP4;
use super::pair;
use super::rom;
use crate::hash256::HASH256;
use crate::hash384::HASH384;
use crate::hash512::HASH512;
use crate::rand::RAND;
use super::*;
use crate::test_utils::*;

</rust function dependency libraries>

</message>
<function>
pub fn get_server_secret(s: &[u8], sst: &mut [u8]) -> isize {
    let mut Q = ECP2::generator();

    let sc = Big::from_bytes(s);
    Q = pair::g2mul(&Q, &sc);
    Q.to_bytes(sst);
    return 0;
}
</function>
<translated function>
<rust function>
pub fn get_server_secret(s: &[u8], sst: &mut [u8]) -> isize {
    let mut q = generator();
    let big_s = Big::frombytes(&s);

    q = pair::g2mul(&q, &big_s);

    q.tobytes(sst) ;

    0
}
</rust function></translated function><rust function>
pub fn get_server_secret(s: &[u8], sst: &mut [u8]) -> isize {
    let mut q = generator();
    let big_s = Big::frombytes(&s);

    q = pair::g2mul(&q, &big_s);

    q.tobytes(sst) ;

    0
}
</rust function>