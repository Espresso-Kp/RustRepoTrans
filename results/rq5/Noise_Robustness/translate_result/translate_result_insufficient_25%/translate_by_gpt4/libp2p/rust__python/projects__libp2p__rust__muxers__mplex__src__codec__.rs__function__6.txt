<message>
please translate the given python function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<python function>
def _get_next_channel_id(self):
        """
        Get next available stream id.

        """
        new_instance = self.__class__.__new__(self.__class__)
        new_instance.__dict__ = self.__dict__.copy()
        new_instance.channel_id += 1
        return new_instance
</python function>
<rust function signature>
pub(crate) fn next(self) -> Self 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub(crate) struct LocalStreamId {
    num: u64,
    role: Endpoint,
}

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use asynchronous_codec::{Decoder, Encoder};
use bytes::{BufMut, Bytes, BytesMut};
use libp2p_core::Endpoint;
use std::{
    fmt,
    hash::{Hash, Hasher},
    io, mem,
};
use unsigned_varint::{codec, encode};
use super::*;

</rust function dependency libraries>

</message>
<function>
pub(crate) fn next(self) -> Self {
        Self {
            num: self
                .num
                .checked_add(1)
                .expect("Mplex substream ID overflowed"),
            ..self
        }
    }
</function>
<translated function>
<rust function>
impl LocalStreamId {
    pub(crate) fn next(mut self) -> Self {
        self.num += 1;
        self
    }
}
</rust function></translated function><rust function>
impl LocalStreamId {
    pub(crate) fn next(mut self) -> Self {
        self.num += 1;
        self
    }
}
</rust function>