<message>
please translate the given c function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<c function>
void HASH512_init(hash512 *sh)
{
    /* re-initialise */
    for (int i=0; i<80; i++) sh->w[i]=0;
    sh->length[0]=sh->length[1]=0;
    sh->h[0]=H0_512;
    sh->h[1]=H1_512;
    sh->h[2]=H2_512;
    sh->h[3]=H3_512;
    sh->h[4]=H4_512;
    sh->h[5]=H5_512;
    sh->h[6]=H6_512;
    sh->h[7]=H7_512;

}
</c function>
<rust function signature>
pub fn init(&mut self) 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
const HASH512_H3: u64 = 0xa54ff53a5f1d36f1;
const HASH512_H4: u64 = 0x510e527fade682d1;
const HASH512_H7: u64 = 0x5be0cd19137e2179;

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>



use super::*;

</rust function dependency libraries>

</message>
<function>
pub fn init(&mut self) {
        /* initialise */
        for i in 0..64 {
            self.w[i] = 0
        }
        self.length[0] = 0;
        self.length[1] = 0;
        self.h[0] = HASH512_H0;
        self.h[1] = HASH512_H1;
        self.h[2] = HASH512_H2;
        self.h[3] = HASH512_H3;
        self.h[4] = HASH512_H4;
        self.h[5] = HASH512_H5;
        self.h[6] = HASH512_H6;
        self.h[7] = HASH512_H7;
    }
</function>
<translated function>
 ```rust
pub fn init(&mut self) {
    for i in 0..80 {
        self.w[i] = 0;
    }
    self.length[0] = 0;
    self.length[1] = 0;
    self.h[0] = HASH512_H0;
    self.h[1] = HASH512_H1;
    self.h[2] = HASH512_H2;
    self.h[3] = HASH512_H3;
    self.h[4] = HASH512_H4;
    self.h[5] = HASH512_H5;
    self.h[6] = HASH512_H6;
    self.h[7] = HASH512_H7;
}
```</translated function> ```rust
pub fn init(&mut self) {
    for i in 0..80 {
        self.w[i] = 0;
    }
    self.length[0] = 0;
    self.length[1] = 0;
    self.h[0] = HASH512_H0;
    self.h[1] = HASH512_H1;
    self.h[2] = HASH512_H2;
    self.h[3] = HASH512_H3;
    self.h[4] = HASH512_H4;
    self.h[5] = HASH512_H5;
    self.h[6] = HASH512_H6;
    self.h[7] = HASH512_H7;
}
```