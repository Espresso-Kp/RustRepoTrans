<message>
please translate the given python function to rust according to the rust function signature, rust function dependencies(including function and variable dependencies), and data type declarations and rust function dependency libraries I provide(delimited with XML tags).Please make sure to call the relevant dependencies as much as possible in the translated function Only response the translated function results.
<python function>
def get_pubkey(self) -> PublicKey:
        """
        :return: public key of the peer
        :raise PeerDataError: if public key not found
        """
        if self.pubkey is None:
            raise PeerDataError("public key not found")
        return self.pubkey
</python function>
<rust function signature>
pub fn public(&self) -> &PublicKey 
</rust function signature>
<rust function dependencies, and data type declarations>
pub struct Keypair {
    secret: SecretKey,
    public: PublicKey,
}
pub struct PublicKey(VerifyingKey);

</rust function dependencies and data type declarations>
<rust function dependency libraries>

use super::error::DecodingError;
use core::cmp;
use core::fmt;
use core::hash;
use p256::{
    ecdsa::{
        signature::{Signer, Verifier},
        Signature, SigningKey, VerifyingKey,
    },
    EncodedPoint,
};
use sec1::{DecodeEcPrivateKey, EncodeEcPrivateKey};
use void::Void;
use zeroize::Zeroize;
use super::*;

</rust function dependency libraries>

</message>
<function>
pub fn public(&self) -> &PublicKey {
        &self.public
    }
</function>
<translated function>
pub fn public(&self) -> &PublicKey {
    &self.public
}</translated function>pub fn public(&self) -> &PublicKey {
    &self.public
}