<message>
please translate the given python function to rust according to the rust function signature, rust function realted variable, functions, and data type declarations and rust function dependency libraries I provide(delimited with XML tags). Only response the translated function results.
<python function>
def __iter__(self) -> Iterator[CharsetMatch]:
        yield from self._results
</python function>
<rust function signature>
pub fn iter(&self) -> CharsetMatchesIter 
</rust function signature>
<rust function realted variable, functions, and data type declarations>
pub struct CharsetMatchesIter<'a> {
    items: std::slice::Iter<'a, CharsetMatch>,
}
pub struct CharsetMatches {
    items: Vec<CharsetMatch>,
}

</rust function realted variable, functions, and data type declarations>
<rust function dependency libraries>

use crate::cd::{encoding_languages, mb_encoding_languages};
use crate::consts::{IANA_SUPPORTED_ALIASES, TOO_BIG_SEQUENCE};
use crate::utils::{decode, iana_name, is_multi_byte_encoding, range_scan};
use clap::Parser;
use encoding::DecoderTrap;
use ordered_float::OrderedFloat;
use serde::Serialize;
use std::cmp::Ordering;
use std::fmt;
use std::fmt::{Debug, Display, Formatter};
use std::hash::Hash;
use std::ops::Index;
use std::path::PathBuf;
use std::time::Duration;

</rust function dependency libraries>

</message>
<function>
pub fn iter(&self) -> CharsetMatchesIter {
        CharsetMatchesIter {
            items: self.items.iter(),
        }
    }
</function>
<translated function>
Here is the translated Rust function:
```rust
pub fn iter(&self) -> CharsetMatchesIter {
    CharsetMatchesIter {
        items: self._results.iter(),
    }
}
```
Note that I assumed `self._results` is a `Vec<CharsetMatch>` or an iterator over `CharsetMatch` values, since it's being iterated over in the Python code. If it's a different type, you may need to adjust the code accordingly.

Also, I didn't include any error handling or additional logic that might be present in the original Python code, as it's not specified in the provided Rust function signature and related variables, functions, and data type declarations.</translated function>Here is the translated Rust function:
```rust
pub fn iter(&self) -> CharsetMatchesIter {
    CharsetMatchesIter {
        items: self._results.iter(),
    }
}
```
Note that I assumed `self._results` is a `Vec<CharsetMatch>` or an iterator over `CharsetMatch` values, since it's being iterated over in the Python code. If it's a different type, you may need to adjust the code accordingly.

Also, I didn't include any error handling or additional logic that might be present in the original Python code, as it's not specified in the provided Rust function signature and related variables, functions, and data type declarations.